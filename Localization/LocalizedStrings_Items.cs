#region S# License
/******************************************************************************************
NOTICE!!!  This program and source code is owned and licensed by
StockSharp, LLC, www.stocksharp.com
Viewing or use of this code requires your acceptance of the license
agreement found at https://github.com/StockSharp/StockSharp/blob/master/LICENSE
Removal of this comment is a violation of the license agreement.

Project: StockSharp.Localization.Localization
File: LocalizedStrings_Items.cs
Created: 2015, 11, 11, 2:32 PM

Copyright 2010 by StockSharp, LLC
*******************************************************************************************/
#endregion S# License
namespace StockSharp.Localization
{
	partial class LocalizedStrings
	{
		/// <summary>
		/// Telegram
		/// </summary>
		public const string TelegramKey = nameof(Telegram);

		/// <summary>
		/// Telegram
		/// </summary>
		public static string Telegram => GetString(TelegramKey);

		/// <summary>
		/// Track orders for securities
		/// </summary>
		public const string TrackOrdersForSecuritiesKey = nameof(TrackOrdersForSecurities);

		/// <summary>
		/// Track orders for securities
		/// </summary>
		public static string TrackOrdersForSecurities => GetString(TrackOrdersForSecuritiesKey);

		/// <summary>
		/// The Binance connector during connection/reconnection process will request order/trade status for the listed securities. Symbols, comma-separated. For example: BTC/USDT@BNB,BTCUSDT_PERPETUAL@BNB
		/// </summary>
		public const string TrackOrdersForSecuritiesDescKey = nameof(TrackOrdersForSecuritiesDesc);

		/// <summary>
		/// The Binance connector during connection/reconnection process will request order/trade status for the listed securities. Symbols, comma-separated. For example: BTC/USDT@BNB,BTCUSDT_PERPETUAL@BNB
		/// </summary>
		public static string TrackOrdersForSecuritiesDesc => GetString(TrackOrdersForSecuritiesDescKey);

		/// <summary>
		/// Show error dialog windows
		/// </summary>
		public const string ErrorsDialogsKey = nameof(ErrorsDialogs);

		/// <summary>
		/// Show error dialog windows
		/// </summary>
		public static string ErrorsDialogs => GetString(ErrorsDialogsKey);

		/// <summary>
		/// Do you want to publish the new version of {0}?
		/// </summary>
		public const string ConfirmNewVersionPublishParamsKey = nameof(ConfirmNewVersionPublishParams);

		/// <summary>
		/// Do you want to publish the new version of {0}?
		/// </summary>
		public static string ConfirmNewVersionPublishParams => GetString(ConfirmNewVersionPublishParamsKey);

		/// <summary>
		/// Product {0} does not support S#.Designer scheme publishing. You need to select or create product with corresponding content type.
		/// </summary>
		public const string InvalidProductForDesignerSchemeParamsKey = nameof(InvalidProductForDesignerSchemeParams);

		/// <summary>
		/// Product {0} does not support S#.Designer scheme publishing. You need to select or create product with corresponding content type.
		/// </summary>
		public static string InvalidProductForDesignerSchemeParams => GetString(InvalidProductForDesignerSchemeParamsKey);

		/// <summary>
		/// The request was canceled
		/// </summary>
		public const string RequestWasCanceledKey = nameof(RequestWasCanceled);

		/// <summary>
		/// The request was canceled
		/// </summary>
		public static string RequestWasCanceled => GetString(RequestWasCanceledKey);

		/// <summary>
		/// The new version {0} of the "{1}" was published successfully!
		/// </summary>
		public const string NewProductVersionPublishedParamsKey = nameof(NewProductVersionPublishedParams);

		/// <summary>
		/// The new version {0} of the "{1}" was published successfully!
		/// </summary>
		public static string NewProductVersionPublishedParams => GetString(NewProductVersionPublishedParamsKey);

		/// <summary>
		/// Create new product
		/// </summary>
		public const string CreateNewProductKey = nameof(CreateNewProduct);

		/// <summary>
		/// Create new product
		/// </summary>
		public static string CreateNewProduct => GetString(CreateNewProductKey);

		/// <summary>
		/// Select product to publish a new version
		/// </summary>
		public const string SelectProductToPublishKey = nameof(SelectProductToPublish);

		/// <summary>
		/// Select product to publish a new version
		/// </summary>
		public static string SelectProductToPublish => GetString(SelectProductToPublishKey);

		/// <summary>
		/// Templates
		/// </summary>
		public const string TemplatesKey = nameof(Templates);

		/// <summary>
		/// Templates
		/// </summary>
		public static string Templates => GetString(TemplatesKey);

		/// <summary>
		/// Unable to complete operation at this moment. Please try again later.
		/// </summary>
		public const string BusyTryAgainLaterKey = nameof(BusyTryAgainLater);

		/// <summary>
		/// Unable to complete operation at this moment. Please try again later.
		/// </summary>
		public static string BusyTryAgainLater => GetString(BusyTryAgainLaterKey);

		/// <summary>
		/// Available strategies
		/// </summary>
		public const string AvailableStrategiesKey = nameof(AvailableStrategies);

		/// <summary>
		/// Available strategies
		/// </summary>
		public static string AvailableStrategies => GetString(AvailableStrategiesKey);

		/// <summary>
		/// An error has occurred. Please check that latest version of S#.Installer is running.
		/// </summary>
		public const string InstallerMustBeRunningKey = nameof(InstallerMustBeRunning);

		/// <summary>
		/// An error has occurred. Please check that latest version of S#.Installer is running.
		/// </summary>
		public static string InstallerMustBeRunning => GetString(InstallerMustBeRunningKey);

		/// <summary>
		/// Help
		/// </summary>
		public const string Help2Key = nameof(Help2);

		/// <summary>
		/// Help
		/// </summary>
		public static string Help2 => GetString(Help2Key);

		/// <summary>
		/// Cluster separator line color
		/// </summary>
		public const string ClusterSeparatorLineColorKey = nameof(ClusterSeparatorLineColor);

		/// <summary>
		/// Cluster separator line color
		/// </summary>
		public static string ClusterSeparatorLineColor => GetString(ClusterSeparatorLineColorKey);

		/// <summary>
		/// Report a problem
		/// </summary>
		public const string ReportProblemKey = nameof(ReportProblem);

		/// <summary>
		/// Report a problem
		/// </summary>
		public static string ReportProblem => GetString(ReportProblemKey);

		/// <summary>
		/// Please explain your question in details
		/// </summary>
		public const string DescribeTheQuestionInDetailsKey = nameof(DescribeTheQuestionInDetails);

		/// <summary>
		/// Please explain your question in details
		/// </summary>
		public static string DescribeTheQuestionInDetails => GetString(DescribeTheQuestionInDetailsKey);

		/// <summary>
		/// Please explain what the prolem is and provide detailed scenario on how to reproduce the problem
		/// </summary>
		public const string DescribeTheBugInDetailsKey = nameof(DescribeTheBugInDetails);

		/// <summary>
		/// Please explain what the prolem is and provide detailed scenario on how to reproduce the problem
		/// </summary>
		public static string DescribeTheBugInDetails => GetString(DescribeTheBugInDetailsKey);

		/// <summary>
		/// {0} {0:day|days}
		/// </summary>
		public const string DaysParamSmartPluralKey = nameof(DaysParamSmartPlural);

		/// <summary>
		/// {0} {0:day|days}
		/// </summary>
		public static string DaysParamSmartPlural => GetString(DaysParamSmartPluralKey);

		/// <summary>
		/// Tunis BVMT
		/// </summary>
		public const string TunisBvmtKey = nameof(TunisBvmt);

		/// <summary>
		/// Tunis BVMT
		/// </summary>
		public static string TunisBvmt => GetString(TunisBvmtKey);

		/// <summary>
		/// Web socket addresses
		/// </summary>
		public const string WebSocketAddressesKey = nameof(WebSocketAddresses);

		/// <summary>
		/// Web socket addresses
		/// </summary>
		public static string WebSocketAddresses => GetString(WebSocketAddressesKey);

		/// <summary>
		/// Futures coin section
		/// </summary>
		public const string FuturesCoinSectionKey = nameof(FuturesCoinSection);

		/// <summary>
		/// Futures coin section
		/// </summary>
		public static string FuturesCoinSection => GetString(FuturesCoinSectionKey);

		/// <summary>
		/// Product id
		/// </summary>
		public const string ProductIdKey = nameof(ProductId);

		/// <summary>
		/// Product id
		/// </summary>
		public static string ProductId => GetString(ProductIdKey);

		/// <summary>
		/// Number of requested recent own trades
		/// </summary>
		public const string RecentTradesRequestLimitKey = nameof(RecentTradesRequestLimit);

		/// <summary>
		/// Number of requested recent own trades
		/// </summary>
		public static string RecentTradesRequestLimit => GetString(RecentTradesRequestLimitKey);

		/// <summary>
		/// Number of requested recent orders for each instrument type
		/// </summary>
		public const string RecentOrdersRequestLimitKey = nameof(RecentOrdersRequestLimit);

		/// <summary>
		/// Number of requested recent orders for each instrument type
		/// </summary>
		public static string RecentOrdersRequestLimit => GetString(RecentOrdersRequestLimitKey);

		/// <summary>
		/// Dump order books
		/// </summary>
		public const string DumpBooksKey = nameof(DumpBooks);

		/// <summary>
		/// Dump order books
		/// </summary>
		public static string DumpBooks => GetString(DumpBooksKey);

		/// <summary>
		/// Bitmart
		/// </summary>
		public const string BitmartKey = nameof(Bitmart);

		/// <summary>
		/// Bitmart
		/// </summary>
		public static string Bitmart => GetString(BitmartKey);

		/// <summary>
		/// Resume download starting from last date in storage
		/// </summary>
		public const string ResumeFromLastDateInStorageKey = nameof(ResumeFromLastDateInStorage);

		/// <summary>
		/// Resume download starting from last date in storage
		/// </summary>
		public static string ResumeFromLastDateInStorage => GetString(ResumeFromLastDateInStorageKey);

		/// <summary>
		/// Freelance
		/// </summary>
		public const string FreelanceKey = nameof(Freelance);

		/// <summary>
		/// Freelance
		/// </summary>
		public static string Freelance => GetString(FreelanceKey);

		/// <summary>
		/// How to install?
		/// </summary>
		public const string HowToInstallKey = nameof(HowToInstall);

		/// <summary>
		/// How to install?
		/// </summary>
		public static string HowToInstall => GetString(HowToInstallKey);

		/// <summary>
		/// Click to learn how to use this connector in your own projects
		/// </summary>
		public const string HowToUseConnectorKey = nameof(HowToUseConnector);

		/// <summary>
		/// Click to learn how to use this connector in your own projects
		/// </summary>
		public static string HowToUseConnector => GetString(HowToUseConnectorKey);

		/// <summary>
		/// The product was not yet approved
		/// </summary>
		public const string ProductIsNotApprovedKey = nameof(ProductIsNotApproved);

		/// <summary>
		/// The product was not yet approved
		/// </summary>
		public static string ProductIsNotApproved => GetString(ProductIsNotApprovedKey);

		/// <summary>
		/// Select content file you want to publish
		/// </summary>
		public const string PublishSelectContentFileKey = nameof(PublishSelectContentFile);

		/// <summary>
		/// Select content file you want to publish
		/// </summary>
		public static string PublishSelectContentFile => GetString(PublishSelectContentFileKey);

		/// <summary>
		/// Select project/solution folder you want to publish
		/// </summary>
		public const string PublishSelectProjectSolutionFolderKey = nameof(PublishSelectProjectSolutionFolder);

		/// <summary>
		/// Select project/solution folder you want to publish
		/// </summary>
		public static string PublishSelectProjectSolutionFolder => GetString(PublishSelectProjectSolutionFolderKey);

		/// <summary>
		/// Select folder you want to publish
		/// </summary>
		public const string PublishSelectFolderKey = nameof(PublishSelectFolder);

		/// <summary>
		/// Select folder you want to publish
		/// </summary>
		public static string PublishSelectFolder => GetString(PublishSelectFolderKey);

		/// <summary>
		/// Found {0} solutions, {1} projects
		/// </summary>
		public const string FoundProjectsSolutionsParamsKey = nameof(FoundProjectsSolutionsParams);

		/// <summary>
		/// Found {0} solutions, {1} projects
		/// </summary>
		public static string FoundProjectsSolutionsParams => GetString(FoundProjectsSolutionsParamsKey);

		/// <summary>
		/// {0} files total
		/// </summary>
		public const string TotalFilesParamsKey = nameof(TotalFilesParams);

		/// <summary>
		/// {0} files total
		/// </summary>
		public static string TotalFilesParams => GetString(TotalFilesParamsKey);

		/// <summary>
		/// Categories
		/// </summary>
		public const string CategoriesKey = nameof(Categories);

		/// <summary>
		/// Categories
		/// </summary>
		public static string Categories => GetString(CategoriesKey);

		/// <summary>
		/// Content type
		/// </summary>
		public const string ContentTypeKey = nameof(ContentType);

		/// <summary>
		/// Content type
		/// </summary>
		public static string ContentType => GetString(ContentTypeKey);

		/// <summary>
		/// Trial access was requested
		/// </summary>
		public const string RequestedTrialKey = nameof(RequestedTrial);

		/// <summary>
		/// Trial access was requested
		/// </summary>
		public static string RequestedTrial => GetString(RequestedTrialKey);

		/// <summary>
		/// Refund was requested
		/// </summary>
		public const string RequestedRefundKey = nameof(RequestedRefund);

		/// <summary>
		/// Refund was requested
		/// </summary>
		public static string RequestedRefund => GetString(RequestedRefundKey);

		/// <summary>
		/// Request trial access
		/// </summary>
		public const string RequestTrialKey = nameof(RequestTrial);

		/// <summary>
		/// Request trial access
		/// </summary>
		public static string RequestTrial => GetString(RequestTrialKey);

		/// <summary>
		/// Request refund
		/// </summary>
		public const string RequestRefundKey = nameof(RequestRefund);

		/// <summary>
		/// Request refund
		/// </summary>
		public static string RequestRefund => GetString(RequestRefundKey);

		/// <summary>
		/// Product managers
		/// </summary>
		public const string ProductManagersKey = nameof(ProductManagers);

		/// <summary>
		/// Product managers
		/// </summary>
		public static string ProductManagers => GetString(ProductManagersKey);

		/// <summary>
		/// New connection string
		/// </summary>
		public const string NewConnectionStringKey = nameof(NewConnectionString);

		/// <summary>
		/// New connection string
		/// </summary>
		public static string NewConnectionString => GetString(NewConnectionStringKey);

		/// <summary>
		/// New version must be greater than current.
		/// </summary>
		public const string NewVersionMustBeGreaterKey = nameof(NewVersionMustBeGreater);

		/// <summary>
		/// New version must be greater than current.
		/// </summary>
		public static string NewVersionMustBeGreater => GetString(NewVersionMustBeGreaterKey);

		/// <summary>
		/// Current version
		/// </summary>
		public const string CurrentVersionKey = nameof(CurrentVersion);

		/// <summary>
		/// Current version
		/// </summary>
		public static string CurrentVersion => GetString(CurrentVersionKey);

		/// <summary>
		/// New version
		/// </summary>
		public const string NewVersionKey = nameof(NewVersion);

		/// <summary>
		/// New version
		/// </summary>
		public static string NewVersion => GetString(NewVersionKey);

		/// <summary>
		/// Select .nupkg or .csproj for your product. In case of .csproj, before package publishing you have to build it in Visual Studio in Release configuration.
		/// </summary>
		public const string SelectCsprojForProductKey = nameof(SelectCsprojForProduct);

		/// <summary>
		/// Select .nupkg or .csproj for your product. In case of .csproj, before package publishing you have to build it in Visual Studio in Release configuration.
		/// </summary>
		public static string SelectCsprojForProduct => GetString(SelectCsprojForProductKey);

		/// <summary>
		/// .NET SDK v5.0+ is not installed. You can download it here: https://dotnet.microsoft.com/download/dotnet/5.0
		/// </summary>
		public const string DotNetSDKNotInstalledKey = nameof(DotNetSDKNotInstalled);

		/// <summary>
		/// .NET SDK v5.0+ is not installed. You can download it here: https://dotnet.microsoft.com/download/dotnet/5.0
		/// </summary>
		public static string DotNetSDKNotInstalled => GetString(DotNetSDKNotInstalledKey);

		/// <summary>
		/// Select image
		/// </summary>
		public const string SelectImageKey = nameof(SelectImage);

		/// <summary>
		/// Select image
		/// </summary>
		public static string SelectImage => GetString(SelectImageKey);

		/// <summary>
		/// Icon
		/// </summary>
		public const string IconKey = nameof(Icon);

		/// <summary>
		/// Icon
		/// </summary>
		public static string Icon => GetString(IconKey);

		/// <summary>
		/// You cannot create products with access level '{0}'.
		/// </summary>
		public const string InvalidProductAccessParamsKey = nameof(InvalidProductAccessParams);

		/// <summary>
		/// You cannot create products with access level '{0}'.
		/// </summary>
		public static string InvalidProductAccessParams => GetString(InvalidProductAccessParamsKey);

		/// <summary>
		/// User lookup error
		/// </summary>
		public const string UserLookupErrorKey = nameof(UserLookupError);

		/// <summary>
		/// User lookup error
		/// </summary>
		public static string UserLookupError => GetString(UserLookupErrorKey);

		/// <summary>
		/// Add user
		/// </summary>
		public const string AddUserKey = nameof(AddUser);

		/// <summary>
		/// Add user
		/// </summary>
		public static string AddUser => GetString(AddUserKey);

		/// <summary>
		/// Product type
		/// </summary>
		public const string ProductTypeKey = nameof(ProductType);

		/// <summary>
		/// Product type
		/// </summary>
		public static string ProductType => GetString(ProductTypeKey);

		/// <summary>
		/// Product access
		/// </summary>
		public const string ProductAccessControlKey = nameof(ProductAccessControl);

		/// <summary>
		/// Product access
		/// </summary>
		public static string ProductAccessControl => GetString(ProductAccessControlKey);

		/// <summary>
		/// Free access
		/// </summary>
		public const string PublicProductKey = nameof(PublicProduct);

		/// <summary>
		/// Free access
		/// </summary>
		public static string PublicProduct => GetString(PublicProductKey);

		/// <summary>
		/// Visible to everyone, available after purchase
		/// </summary>
		public const string RestrictedProductKey = nameof(RestrictedProduct);

		/// <summary>
		/// Visible to everyone, available after purchase
		/// </summary>
		public static string RestrictedProduct => GetString(RestrictedProductKey);

		/// <summary>
		/// Visible and available to selected users only
		/// </summary>
		public const string PrivateProductKey = nameof(PrivateProduct);

		/// <summary>
		/// Visible and available to selected users only
		/// </summary>
		public static string PrivateProduct => GetString(PrivateProductKey);

		/// <summary>
		/// Renew price
		/// </summary>
		public const string RenewPriceKey = nameof(RenewPrice);

		/// <summary>
		/// Renew price
		/// </summary>
		public static string RenewPrice => GetString(RenewPriceKey);

		/// <summary>
		/// Purchase period
		/// </summary>
		public const string PurchasePeriodKey = nameof(PurchasePeriod);

		/// <summary>
		/// Purchase period
		/// </summary>
		public static string PurchasePeriod => GetString(PurchasePeriodKey);

		/// <summary>
		/// Users with product access
		/// </summary>
		public const string ProductUserListKey = nameof(ProductUserList);

		/// <summary>
		/// Users with product access
		/// </summary>
		public static string ProductUserList => GetString(ProductUserListKey);

		/// <summary>
		/// Start typing
		/// </summary>
		public const string StartTypingKey = nameof(StartTyping);

		/// <summary>
		/// Start typing
		/// </summary>
		public static string StartTyping => GetString(StartTypingKey);

		/// <summary>
		/// Nuget package id
		/// </summary>
		public const string NugetPackageIdKey = nameof(NugetPackageId);

		/// <summary>
		/// Nuget package id
		/// </summary>
		public static string NugetPackageId => GetString(NugetPackageIdKey);

		/// <summary>
		/// First you need to complete previous product creation.
		/// </summary>
		public const string SaveNewProductFirstKey = nameof(SaveNewProductFirst);

		/// <summary>
		/// First you need to complete previous product creation.
		/// </summary>
		public static string SaveNewProductFirst => GetString(SaveNewProductFirstKey);

		/// <summary>
		/// not saved
		/// </summary>
		public const string NotSavedKey = nameof(NotSaved);

		/// <summary>
		/// not saved
		/// </summary>
		public static string NotSaved => GetString(NotSavedKey);

		/// <summary>
		/// Select product or add a new one
		/// </summary>
		public const string SelectOrAddProductKey = nameof(SelectOrAddProduct);

		/// <summary>
		/// Select product or add a new one
		/// </summary>
		public static string SelectOrAddProduct => GetString(SelectOrAddProductKey);

		/// <summary>
		/// My products
		/// </summary>
		public const string MyProductsKey = nameof(MyProducts);

		/// <summary>
		/// My products
		/// </summary>
		public static string MyProducts => GetString(MyProductsKey);

		/// <summary>
		/// Publishing
		/// </summary>
		public const string PublishingKey = nameof(Publishing);

		/// <summary>
		/// Publishing
		/// </summary>
		public static string Publishing => GetString(PublishingKey);

		/// <summary>
		/// Parameter '{0}' must be defined.
		/// </summary>
		public const string ParameterIsEmptyParamsKey = nameof(ParameterIsEmptyParams);

		/// <summary>
		/// Parameter '{0}' must be defined.
		/// </summary>
		public static string ParameterIsEmptyParams => GetString(ParameterIsEmptyParamsKey);

		/// <summary>
		/// Auto updates check interval
		/// </summary>
		public const string AutoUpdatesCheckIntervalKey = nameof(AutoUpdatesCheckInterval);

		/// <summary>
		/// Auto updates check interval
		/// </summary>
		public static string AutoUpdatesCheckInterval => GetString(AutoUpdatesCheckIntervalKey);

		/// <summary>
		/// Retry delay in case of update check error
		/// </summary>
		public const string AutoUpdatesRetryDelayKey = nameof(AutoUpdatesRetryDelay);

		/// <summary>
		/// Retry delay in case of update check error
		/// </summary>
		public static string AutoUpdatesRetryDelay => GetString(AutoUpdatesRetryDelayKey);

		/// <summary>
		/// The application is still running in background mode. You can access it via icon in the system tray.
		/// </summary>
		public const string ApplicationStillRunningKey = nameof(ApplicationStillRunning);

		/// <summary>
		/// The application is still running in background mode. You can access it via icon in the system tray.
		/// </summary>
		public static string ApplicationStillRunning => GetString(ApplicationStillRunningKey);

		/// <summary>
		/// Double click to open the product details.
		/// </summary>
		public const string ClickProductDetailsKey = nameof(ClickProductDetails);

		/// <summary>
		/// Double click to open the product details.
		/// </summary>
		public static string ClickProductDetails => GetString(ClickProductDetailsKey);

		/// <summary>
		/// The license has expired.
		/// </summary>
		public const string ProductLicenseExpiredKey = nameof(ProductLicenseExpired);

		/// <summary>
		/// The license has expired.
		/// </summary>
		public static string ProductLicenseExpired => GetString(ProductLicenseExpiredKey);

		/// <summary>
		/// User comments
		/// </summary>
		public const string UserFeedbacksKey = nameof(UserFeedbacks);

		/// <summary>
		/// User comments
		/// </summary>
		public static string UserFeedbacks => GetString(UserFeedbacksKey);

		/// <summary>
		/// Updating data
		/// </summary>
		public const string UpdatingDataKey = nameof(UpdatingData);

		/// <summary>
		/// Updating data
		/// </summary>
		public static string UpdatingData => GetString(UpdatingDataKey);

		/// <summary>
		/// Error updating data
		/// </summary>
		public const string ErrorUpdatingDataKey = nameof(ErrorUpdatingData);

		/// <summary>
		/// Error updating data
		/// </summary>
		public static string ErrorUpdatingData => GetString(ErrorUpdatingDataKey);

		/// <summary>
		/// Rate product
		/// </summary>
		public const string RateProductKey = nameof(RateProduct);

		/// <summary>
		/// Rate product
		/// </summary>
		public static string RateProduct => GetString(RateProductKey);

		/// <summary>
		/// You have already rated this product.
		/// </summary>
		public const string AlreadyRatedKey = nameof(AlreadyRated);

		/// <summary>
		/// You have already rated this product.
		/// </summary>
		public static string AlreadyRated => GetString(AlreadyRatedKey);

		/// <summary>
		/// Please rate the {0}.
		/// </summary>
		public const string PleaseRateProductParamsKey = nameof(PleaseRateProductParams);

		/// <summary>
		/// Please rate the {0}.
		/// </summary>
		public static string PleaseRateProductParams => GetString(PleaseRateProductParamsKey);

		/// <summary>
		/// Install prerelease versions.
		/// </summary>
		public const string InstallPrereleaseVersionsKey = nameof(InstallPrereleaseVersions);

		/// <summary>
		/// Install prerelease versions.
		/// </summary>
		public static string InstallPrereleaseVersions => GetString(InstallPrereleaseVersionsKey);

		/// <summary>
		/// WARNING! This feature is for advanced users only. Prerelease versions of applications may be unstable.
		/// </summary>
		public const string InstallPrereleaseVersionsWarningKey = nameof(InstallPrereleaseVersionsWarning);

		/// <summary>
		/// WARNING! This feature is for advanced users only. Prerelease versions of applications may be unstable.
		/// </summary>
		public static string InstallPrereleaseVersionsWarning => GetString(InstallPrereleaseVersionsWarningKey);

		/// <summary>
		/// Filter available products by type.
		/// </summary>
		public const string FilterProductsKey = nameof(FilterProducts);

		/// <summary>
		/// Filter available products by type.
		/// </summary>
		public static string FilterProducts => GetString(FilterProductsKey);

		/// <summary>
		/// User {0}
		/// </summary>
		public const string LoggedInAsParamsKey = nameof(LoggedInAsParams);

		/// <summary>
		/// User {0}
		/// </summary>
		public static string LoggedInAsParams => GetString(LoggedInAsParamsKey);

		/// <summary>
		/// Auto run the application on Windows start. The application will be available via system tray icon.
		/// </summary>
		public const string InstallerAutoRunKey = nameof(InstallerAutoRun);

		/// <summary>
		/// Auto run the application on Windows start. The application will be available via system tray icon.
		/// </summary>
		public static string InstallerAutoRun => GetString(InstallerAutoRunKey);

		/// <summary>
		/// Show notifications for installed applications updates.
		/// </summary>
		public const string InstallerShowNotificationsKey = nameof(InstallerShowNotifications);

		/// <summary>
		/// Show notifications for installed applications updates.
		/// </summary>
		public static string InstallerShowNotifications => GetString(InstallerShowNotificationsKey);

		/// <summary>
		/// Allow to use Nuget cache.
		/// </summary>
		public const string InstallerAllowNugetCacheKey = nameof(InstallerAllowNugetCache);

		/// <summary>
		/// Allow to use Nuget cache.
		/// </summary>
		public static string InstallerAllowNugetCache => GetString(InstallerAllowNugetCacheKey);

		/// <summary>
		/// Error creating folder.
		/// </summary>
		public const string InstallerErrorCreateDirKey = nameof(InstallerErrorCreateDir);

		/// <summary>
		/// Error creating folder.
		/// </summary>
		public static string InstallerErrorCreateDir => GetString(InstallerErrorCreateDirKey);

		/// <summary>
		/// I have read and accept the
		/// </summary>
		public const string IHaveReadAndAcceptTheKey = nameof(IHaveReadAndAcceptThe);

		/// <summary>
		/// I have read and accept the
		/// </summary>
		public static string IHaveReadAndAcceptThe => GetString(IHaveReadAndAcceptTheKey);

		/// <summary>
		/// license agreement
		/// </summary>
		public const string LicenseAgreementKey = nameof(LicenseAgreement);

		/// <summary>
		/// license agreement
		/// </summary>
		public static string LicenseAgreement => GetString(LicenseAgreementKey);

		/// <summary>
		/// Applications
		/// </summary>
		public const string ProductsKey = nameof(Products);

		/// <summary>
		/// Applications
		/// </summary>
		public static string Products => GetString(ProductsKey);

		/// <summary>
		/// Continue
		/// </summary>
		public const string InstallerNextKey = nameof(InstallerNext);

		/// <summary>
		/// Continue
		/// </summary>
		public static string InstallerNext => GetString(InstallerNextKey);

		/// <summary>
		/// Back
		/// </summary>
		public const string InstallerBackKey = nameof(InstallerBack);

		/// <summary>
		/// Back
		/// </summary>
		public static string InstallerBack => GetString(InstallerBackKey);

		/// <summary>
		/// Installed
		/// </summary>
		public const string InstallerInstalledAppsKey = nameof(InstallerInstalledApps);

		/// <summary>
		/// Installed
		/// </summary>
		public static string InstallerInstalledApps => GetString(InstallerInstalledAppsKey);

		/// <summary>
		/// Available
		/// </summary>
		public const string InstallerNotInstalledAppsKey = nameof(InstallerNotInstalledApps);

		/// <summary>
		/// Available
		/// </summary>
		public static string InstallerNotInstalledApps => GetString(InstallerNotInstalledAppsKey);

		/// <summary>
		/// Updates available
		/// </summary>
		public const string InstallerUpdatesAvailableKey = nameof(InstallerUpdatesAvailable);

		/// <summary>
		/// Updates available
		/// </summary>
		public static string InstallerUpdatesAvailable => GetString(InstallerUpdatesAvailableKey);

		/// <summary>
		/// Install options
		/// </summary>
		public const string InstallSettingsKey = nameof(InstallSettings);

		/// <summary>
		/// Install options
		/// </summary>
		public static string InstallSettings => GetString(InstallSettingsKey);

		/// <summary>
		/// Select folder to install the application into.
		/// </summary>
		public const string InstallErrorSelectInstallFolderKey = nameof(InstallErrorSelectInstallFolder);

		/// <summary>
		/// Select folder to install the application into.
		/// </summary>
		public static string InstallErrorSelectInstallFolder => GetString(InstallErrorSelectInstallFolderKey);

		/// <summary>
		/// This application must be installed into an empty folder.
		/// </summary>
		public const string InstallErrorFolderMustBeEmptyKey = nameof(InstallErrorFolderMustBeEmpty);

		/// <summary>
		/// This application must be installed into an empty folder.
		/// </summary>
		public static string InstallErrorFolderMustBeEmpty => GetString(InstallErrorFolderMustBeEmptyKey);

		/// <summary>
		/// You must choose different folders.
		/// </summary>
		public const string InstallErrorDuplicateFolderKey = nameof(InstallErrorDuplicateFolder);

		/// <summary>
		/// You must choose different folders.
		/// </summary>
		public static string InstallErrorDuplicateFolder => GetString(InstallErrorDuplicateFolderKey);

		/// <summary>
		/// Select main folder of {0}
		/// </summary>
		public const string InstallSelectPathParamKey = nameof(InstallSelectPathParam);

		/// <summary>
		/// Select main folder of {0}
		/// </summary>
		public static string InstallSelectPathParam => GetString(InstallSelectPathParamKey);

		/// <summary>
		/// Following actions will be executed
		/// </summary>
		public const string InstallReviewBeforeStartKey = nameof(InstallReviewBeforeStart);

		/// <summary>
		/// Following actions will be executed
		/// </summary>
		public static string InstallReviewBeforeStart => GetString(InstallReviewBeforeStartKey);

		/// <summary>
		/// Execute
		/// </summary>
		public const string InstallExecuteKey = nameof(InstallExecute);

		/// <summary>
		/// Execute
		/// </summary>
		public static string InstallExecute => GetString(InstallExecuteKey);

		/// <summary>
		/// Error retrieving package dependencies. Perhaps, the product is currently updating in the repository. Try again. If the error persists, try again in 5-10 minutes.
		/// </summary>
		public const string CacheErrorKey = nameof(CacheError);

		/// <summary>
		/// Error retrieving package dependencies. Perhaps, the product is currently updating in the repository. Try again. If the error persists, try again in 5-10 minutes.
		/// </summary>
		public static string CacheError => GetString(CacheErrorKey);

		/// <summary>
		/// Operation canceled
		/// </summary>
		public const string OperationCanceledKey = nameof(OperationCanceled);

		/// <summary>
		/// Operation canceled
		/// </summary>
		public static string OperationCanceled => GetString(OperationCanceledKey);

		/// <summary>
		/// Installing the application
		/// </summary>
		public const string ActionInstallApplicationKey = nameof(ActionInstallApplication);

		/// <summary>
		/// Installing the application
		/// </summary>
		public static string ActionInstallApplication => GetString(ActionInstallApplicationKey);

		/// <summary>
		/// Reinstalling the application
		/// </summary>
		public const string ActionRepairApplicationKey = nameof(ActionRepairApplication);

		/// <summary>
		/// Reinstalling the application
		/// </summary>
		public static string ActionRepairApplication => GetString(ActionRepairApplicationKey);

		/// <summary>
		/// Updating the application
		/// </summary>
		public const string ActionUpdateApplicationKey = nameof(ActionUpdateApplication);

		/// <summary>
		/// Updating the application
		/// </summary>
		public static string ActionUpdateApplication => GetString(ActionUpdateApplicationKey);

		/// <summary>
		/// Removing the application
		/// </summary>
		public const string ActionRemoveApplicationKey = nameof(ActionRemoveApplication);

		/// <summary>
		/// Removing the application
		/// </summary>
		public static string ActionRemoveApplication => GetString(ActionRemoveApplicationKey);

		/// <summary>
		/// Buy
		/// </summary>
		public const string BuyKey = nameof(Buy);

		/// <summary>
		/// Buy
		/// </summary>
		public static string Buy => GetString(BuyKey);

		/// <summary>
		/// The connector was purchased successfully. In order to use it, you need to update applications which support connectors.
		/// </summary>
		public const string ConnectorIsPurchasedKey = nameof(ConnectorIsPurchased);

		/// <summary>
		/// The connector was purchased successfully. In order to use it, you need to update applications which support connectors.
		/// </summary>
		public static string ConnectorIsPurchased => GetString(ConnectorIsPurchasedKey);

		/// <summary>
		/// Force check updates
		/// </summary>
		public const string ForceCheckUpdatesKey = nameof(ForceCheckUpdates);

		/// <summary>
		/// Force check updates
		/// </summary>
		public static string ForceCheckUpdates => GetString(ForceCheckUpdatesKey);

		/// <summary>
		/// Rules for conflict resolving in case same package id was found in multiple repositories.\nA rule consists of package id and nuget repository separated with colon.\nEvery rule must be on its own line. Examples:\n\nStockSharp.Terminal:nugetorg\n*:stocksharp\n'*' means other packages.\Available nuget repos: {0}
		/// </summary>
		public const string ConflictResolverTooltipParamsKey = nameof(ConflictResolverTooltipParams);

		/// <summary>
		/// Rules for conflict resolving in case same package id was found in multiple repositories.\nA rule consists of package id and nuget repository separated with colon.\nEvery rule must be on its own line. Examples:\n\nStockSharp.Terminal:nugetorg\n*:stocksharp\n'*' means other packages.\Available nuget repos: {0}
		/// </summary>
		public static string ConflictResolverTooltipParams => GetString(ConflictResolverTooltipParamsKey);

		/// <summary>
		/// Install
		/// </summary>
		public const string InstallerInstallKey = nameof(InstallerInstall);

		/// <summary>
		/// Install
		/// </summary>
		public static string InstallerInstall => GetString(InstallerInstallKey);

		/// <summary>
		/// Update
		/// </summary>
		public const string InstallerUpdateKey = nameof(InstallerUpdate);

		/// <summary>
		/// Update
		/// </summary>
		public static string InstallerUpdate => GetString(InstallerUpdateKey);

		/// <summary>
		/// Repair
		/// </summary>
		public const string InstallerRepairKey = nameof(InstallerRepair);

		/// <summary>
		/// Repair
		/// </summary>
		public static string InstallerRepair => GetString(InstallerRepairKey);

		/// <summary>
		/// Remove
		/// </summary>
		public const string InstallerRemoveKey = nameof(InstallerRemove);

		/// <summary>
		/// Remove
		/// </summary>
		public static string InstallerRemove => GetString(InstallerRemoveKey);

		/// <summary>
		/// Skip
		/// </summary>
		public const string InstallerSkipKey = nameof(InstallerSkip);

		/// <summary>
		/// Skip
		/// </summary>
		public static string InstallerSkip => GetString(InstallerSkipKey);

		/// <summary>
		/// The application is already running. Multiple instances are not supported.
		/// </summary>
		public const string ApplicationIsAlreadyRunningKey = nameof(ApplicationIsAlreadyRunning);

		/// <summary>
		/// The application is already running. Multiple instances are not supported.
		/// </summary>
		public static string ApplicationIsAlreadyRunning => GetString(ApplicationIsAlreadyRunningKey);

		/// <summary>
		/// Checking for updates
		/// </summary>
		public const string StatusCheckingUpdatesKey = nameof(StatusCheckingUpdates);

		/// <summary>
		/// Checking for updates
		/// </summary>
		public static string StatusCheckingUpdates => GetString(StatusCheckingUpdatesKey);

		/// <summary>
		/// Error checking for updates
		/// </summary>
		public const string StatusCheckUpdatesErrorKey = nameof(StatusCheckUpdatesError);

		/// <summary>
		/// Error checking for updates
		/// </summary>
		public static string StatusCheckUpdatesError => GetString(StatusCheckUpdatesErrorKey);

		/// <summary>
		/// Updates check complete
		/// </summary>
		public const string StatusCheckUpdatesCompleteKey = nameof(StatusCheckUpdatesComplete);

		/// <summary>
		/// Updates check complete
		/// </summary>
		public static string StatusCheckUpdatesComplete => GetString(StatusCheckUpdatesCompleteKey);

		/// <summary>
		/// Error saving configuration
		/// </summary>
		public const string StatusSaveErrorKey = nameof(StatusSaveError);

		/// <summary>
		/// Error saving configuration
		/// </summary>
		public static string StatusSaveError => GetString(StatusSaveErrorKey);

		/// <summary>
		/// Error loading configuration
		/// </summary>
		public const string StatusLoadErrorKey = nameof(StatusLoadError);

		/// <summary>
		/// Error loading configuration
		/// </summary>
		public static string StatusLoadError => GetString(StatusLoadErrorKey);

		/// <summary>
		/// {0}: some of the application files are locked. Perhaps, the the application is running. File: {1}
		/// </summary>
		public const string ErrorAppIsLockedParamsKey = nameof(ErrorAppIsLockedParams);

		/// <summary>
		/// {0}: some of the application files are locked. Perhaps, the the application is running. File: {1}
		/// </summary>
		public static string ErrorAppIsLockedParams => GetString(ErrorAppIsLockedParamsKey);

		/// <summary>
		/// Left click
		/// </summary>
		public const string LeftClickKey = nameof(LeftClick);

		/// <summary>
		/// Left click
		/// </summary>
		public static string LeftClick => GetString(LeftClickKey);

		/// <summary>
		/// Right click
		/// </summary>
		public const string RightClickKey = nameof(RightClick);

		/// <summary>
		/// Right click
		/// </summary>
		public static string RightClick => GetString(RightClickKey);

		/// <summary>
		/// Left double-click
		/// </summary>
		public const string LeftDoubleClickKey = nameof(LeftDoubleClick);

		/// <summary>
		/// Left double-click
		/// </summary>
		public static string LeftDoubleClick => GetString(LeftDoubleClickKey);

		/// <summary>
		/// Right double-click
		/// </summary>
		public const string RightDoubleClickKey = nameof(RightDoubleClick);

		/// <summary>
		/// Right double-click
		/// </summary>
		public static string RightDoubleClick => GetString(RightDoubleClickKey);

		/// <summary>
		/// Cancel '{0}' orders with price {1}.
		/// </summary>
		public const string CancelOrdersWithPriceParamsKey = nameof(CancelOrdersWithPriceParams);

		/// <summary>
		/// Cancel '{0}' orders with price {1}.
		/// </summary>
		public static string CancelOrdersWithPriceParams => GetString(CancelOrdersWithPriceParamsKey);

		/// <summary>
		/// Press Escape to cancel operation.
		/// </summary>
		public const string PressEscToCancelKey = nameof(PressEscToCancel);

		/// <summary>
		/// Press Escape to cancel operation.
		/// </summary>
		public static string PressEscToCancel => GetString(PressEscToCancelKey);

		/// <summary>
		/// Move '{0}' orders from price {1} to {2}.
		/// </summary>
		public const string MovingOrdersParamsKey = nameof(MovingOrdersParams);

		/// <summary>
		/// Move '{0}' orders from price {1} to {2}.
		/// </summary>
		public static string MovingOrdersParams => GetString(MovingOrdersParamsKey);

		/// <summary>
		/// Session was not selected.
		/// </summary>
		public const string SessionNotSelectedKey = nameof(SessionNotSelected);

		/// <summary>
		/// Session was not selected.
		/// </summary>
		public static string SessionNotSelected => GetString(SessionNotSelectedKey);

		/// <summary>
		/// This connection uses paid options. Click for detailed info.
		/// </summary>
		public const string PaidConnectorToolipKey = nameof(PaidConnectorToolip);

		/// <summary>
		/// This connection uses paid options. Click for detailed info.
		/// </summary>
		public static string PaidConnectorToolip => GetString(PaidConnectorToolipKey);

		/// <summary>
		/// Switch axis location
		/// </summary>
		public const string SwitchAxisLocationKey = nameof(SwitchAxisLocation);

		/// <summary>
		/// Switch axis location
		/// </summary>
		public static string SwitchAxisLocation => GetString(SwitchAxisLocationKey);

		/// <summary>
		/// {0} ({1})
		/// </summary>
		public const string ChartSeriesTitleParamsKey = nameof(ChartSeriesTitleParams);

		/// <summary>
		/// {0} ({1})
		/// </summary>
		public static string ChartSeriesTitleParams => GetString(ChartSeriesTitleParamsKey);

		/// <summary>
		/// {0} ({1})
		/// </summary>
		public const string ChartTranElementTitleParamsKey = nameof(ChartTranElementTitleParams);

		/// <summary>
		/// {0} ({1})
		/// </summary>
		public static string ChartTranElementTitleParams => GetString(ChartTranElementTitleParamsKey);

		/// <summary>
		/// Absolute
		/// </summary>
		public const string AbsoluteKey = nameof(Absolute);

		/// <summary>
		/// Absolute
		/// </summary>
		public static string Absolute => GetString(AbsoluteKey);

		/// <summary>
		/// Point
		/// </summary>
		public const string PointKey = nameof(Point);

		/// <summary>
		/// Point
		/// </summary>
		public static string Point => GetString(PointKey);

		/// <summary>
		/// Application update
		/// </summary>
		public const string ApplicationUpdateKey = nameof(ApplicationUpdate);

		/// <summary>
		/// Application update
		/// </summary>
		public static string ApplicationUpdate => GetString(ApplicationUpdateKey);

		/// <summary>
		/// Following updates are available
		/// </summary>
		public const string FollowingUpdatesAvailableKey = nameof(FollowingUpdatesAvailable);

		/// <summary>
		/// Following updates are available
		/// </summary>
		public static string FollowingUpdatesAvailable => GetString(FollowingUpdatesAvailableKey);

		/// <summary>
		/// {0} is not found
		/// </summary>
		public const string ElementNotFoundParamsKey = nameof(ElementNotFoundParams);

		/// <summary>
		/// {0} is not found
		/// </summary>
		public static string ElementNotFoundParams => GetString(ElementNotFoundParamsKey);

		/// <summary>
		/// Exiting the application
		/// </summary>
		public const string ExitingApplicationKey = nameof(ExitingApplication);

		/// <summary>
		/// Exiting the application
		/// </summary>
		public static string ExitingApplication => GetString(ExitingApplicationKey);

		/// <summary>
		/// The application will be stopped in order to run installer
		/// </summary>
		public const string ExitingAppForInstallerKey = nameof(ExitingAppForInstaller);

		/// <summary>
		/// The application will be stopped in order to run installer
		/// </summary>
		public static string ExitingAppForInstaller => GetString(ExitingAppForInstallerKey);

		/// <summary>
		/// Update is not required
		/// </summary>
		public const string UpdateIsNotRequiredKey = nameof(UpdateIsNotRequired);

		/// <summary>
		/// Update is not required
		/// </summary>
		public static string UpdateIsNotRequired => GetString(UpdateIsNotRequiredKey);

		/// <summary>
		/// The installer was not found
		/// </summary>
		public const string InstallerNotFoundKey = nameof(InstallerNotFound);

		/// <summary>
		/// The installer was not found
		/// </summary>
		public static string InstallerNotFound => GetString(InstallerNotFoundKey);

		/// <summary>
		/// The installer was not found. In order to be able to update the applications you need to download application installer at {0}.
		/// </summary>
		public const string InstallerNotFoundDetailParamsKey = nameof(InstallerNotFoundDetailParams);

		/// <summary>
		/// The installer was not found. In order to be able to update the applications you need to download application installer at {0}.
		/// </summary>
		public static string InstallerNotFoundDetailParams => GetString(InstallerNotFoundDetailParamsKey);

		/// <summary>
		/// Application install folder
		/// </summary>
		public const string AppInstallDirKey = nameof(AppInstallDir);

		/// <summary>
		/// Application install folder
		/// </summary>
		public static string AppInstallDir => GetString(AppInstallDirKey);

		/// <summary>
		/// install
		/// </summary>
		public const string InstallKey = nameof(Install);

		/// <summary>
		/// install
		/// </summary>
		public static string Install => GetString(InstallKey);

		/// <summary>
		/// reset
		/// </summary>
		public const string ResetAppKey = nameof(ResetApp);

		/// <summary>
		/// reset
		/// </summary>
		public static string ResetApp => GetString(ResetAppKey);

		/// <summary>
		/// installing
		/// </summary>
		public const string InstallingKey = nameof(Installing);

		/// <summary>
		/// installing
		/// </summary>
		public static string Installing => GetString(InstallingKey);

		/// <summary>
		/// installed
		/// </summary>
		public const string InstalledKey = nameof(Installed);

		/// <summary>
		/// installed
		/// </summary>
		public static string Installed => GetString(InstalledKey);

		/// <summary>
		/// not installed
		/// </summary>
		public const string NotInstalledKey = nameof(NotInstalled);

		/// <summary>
		/// not installed
		/// </summary>
		public static string NotInstalled => GetString(NotInstalledKey);

		/// <summary>
		/// Applications
		/// </summary>
		public const string ApplicationsKey = nameof(Applications);

		/// <summary>
		/// Applications
		/// </summary>
		public static string Applications => GetString(ApplicationsKey);

		/// <summary>
		/// Plugins
		/// </summary>
		public const string PluginsKey = nameof(Plugins);

		/// <summary>
		/// Plugins
		/// </summary>
		public static string Plugins => GetString(PluginsKey);

		/// <summary>
		/// Update information
		/// </summary>
		public const string UpdateDetailsKey = nameof(UpdateDetails);

		/// <summary>
		/// Update information
		/// </summary>
		public static string UpdateDetails => GetString(UpdateDetailsKey);

		/// <summary>
		/// Update fail details
		/// </summary>
		public const string UpdateFailDetailsKey = nameof(UpdateFailDetails);

		/// <summary>
		/// Update fail details
		/// </summary>
		public static string UpdateFailDetails => GetString(UpdateFailDetailsKey);

		/// <summary>
		/// S#.Installer
		/// </summary>
		public const string StockSharpInstallerKey = nameof(StockSharpInstaller);

		/// <summary>
		/// S#.Installer
		/// </summary>
		public static string StockSharpInstaller => GetString(StockSharpInstallerKey);

		/// <summary>
		/// Setup type
		/// </summary>
		public const string SetupTypeKey = nameof(SetupType);

		/// <summary>
		/// Setup type
		/// </summary>
		public static string SetupType => GetString(SetupTypeKey);

		/// <summary>
		/// Package version
		/// </summary>
		public const string PackageVersionKey = nameof(PackageVersion);

		/// <summary>
		/// Package version
		/// </summary>
		public static string PackageVersion => GetString(PackageVersionKey);

		/// <summary>
		/// Output directory
		/// </summary>
		public const string OutputDirectoryKey = nameof(OutputDirectory);

		/// <summary>
		/// Output directory
		/// </summary>
		public static string OutputDirectory => GetString(OutputDirectoryKey);

		/// <summary>
		/// Draw size
		/// </summary>
		public const string  DrawSizeKey = nameof(DrawSize);

		/// <summary>
		/// Draw size
		/// </summary>
		public static string DrawSize => GetString(DrawSizeKey);

		/// <summary>
		/// Orders display filter.
		/// </summary>
		public const string  OrdersDisplayFilterKey = nameof(OrdersDisplayFilter);

		/// <summary>
		/// Orders display filter.
		/// </summary>
		public static string OrdersDisplayFilter => GetString(OrdersDisplayFilterKey);

		/// <summary>
		/// All orders
		/// </summary>
		public const string  AllOrdersKey = nameof(AllOrders);

		/// <summary>
		/// All orders
		/// </summary>
		public static string AllOrders => GetString(AllOrdersKey);

		/// <summary>
		/// Orders with errors
		/// </summary>
		public const string  ErrorOrdersOnlyKey = nameof(ErrorOrdersOnly);

		/// <summary>
		/// Orders with errors
		/// </summary>
		public static string ErrorOrdersOnly => GetString(ErrorOrdersOnlyKey);

		/// <summary>
		/// Orders with no errors
		/// </summary>
		public const string  NoErrorOrdersOnlyKey = nameof(NoErrorOrdersOnly);

		/// <summary>
		/// Orders with no errors
		/// </summary>
		public static string NoErrorOrdersOnly => GetString(NoErrorOrdersOnlyKey);

		/// <summary>
		/// Order errors color
		/// </summary>
		public const string TransactionErrorColorKey = nameof(TransactionErrorColor);

		/// <summary>
		/// Order errors color
		/// </summary>
		public static string TransactionErrorColor => GetString(TransactionErrorColorKey);

		/// <summary>
		/// Use alternative icon.
		/// </summary>
		public const string UseAltIconKey = nameof(UseAltIcon);

		/// <summary>
		/// Use alternative icon.
		/// </summary>
		public static string UseAltIcon => GetString(UseAltIconKey);

		/// <summary>
		/// Days letter.
		/// </summary>
		public const string DaysLetterKey = nameof(DaysLetter);

		/// <summary>
		/// Days letter.
		/// </summary>
		public static string DaysLetter => GetString(DaysLetterKey);

		/// <summary>
		/// Hours letter.
		/// </summary>
		public const string HoursLetterKey = nameof(HoursLetter);

		/// <summary>
		/// Hours letter.
		/// </summary>
		public static string HoursLetter => GetString(HoursLetterKey);

		/// <summary>
		/// Minutes letter.
		/// </summary>
		public const string MinutesLetterKey = nameof(MinutesLetter);

		/// <summary>
		/// Minutes letter.
		/// </summary>
		public static string MinutesLetter => GetString(MinutesLetterKey);

		/// <summary>
		/// Seconds letter.
		/// </summary>
		public const string SecondsLetterKey = nameof(SecondsLetter);

		/// <summary>
		/// Seconds letter.
		/// </summary>
		public static string SecondsLetter => GetString(SecondsLetterKey);

		/// <summary>
		/// Ruler.
		/// </summary>
		public const string RulerKey = nameof(Ruler);

		/// <summary>
		/// Ruler.
		/// </summary>
		public static string Ruler => GetString(RulerKey);

		/// <summary>
		/// Unable to change group name of axis while it is attached to a chart area.
		/// </summary>
		public const string ErrorChangingGroupNameKey = nameof(ErrorChangingGroupName);

		/// <summary>
		/// Unable to change group name of axis while it is attached to a chart area.
		/// </summary>
		public static string ErrorChangingGroupName => GetString(ErrorChangingGroupNameKey);

		/// <summary>
		/// Element axis is not set.
		/// </summary>
		public const string AxisIsNotSetKey = nameof(AxisIsNotSet);

		/// <summary>
		/// Element axis is not set.
		/// </summary>
		public static string AxisIsNotSet => GetString(AxisIsNotSetKey);

		/// <summary>
		/// Unable to remove default axis.
		/// </summary>
		public const string ErrorRemovingDefaultAxisKey = nameof(ErrorRemovingDefaultAxis);

		/// <summary>
		/// Unable to remove default axis.
		/// </summary>
		public static string ErrorRemovingDefaultAxis => GetString(ErrorRemovingDefaultAxisKey);

		/// <summary>
		/// Source values.
		/// </summary>
		public const string SourceValuesKey = nameof(SourceValues);

		/// <summary>
		/// Source values.
		/// </summary>
		public static string SourceValues => GetString(SourceValuesKey);

		/// <summary>
		/// Indicator painter can only be set once.
		/// </summary>
		public const string ChartPainterAlreadySetKey = nameof(ChartPainterAlreadySet);

		/// <summary>
		/// Indicator painter can only be set once.
		/// </summary>
		public static string ChartPainterAlreadySet => GetString(ChartPainterAlreadySetKey);

		/// <summary>
		/// Annotation type cannot be changed once set.
		/// </summary>
		public const string AnnotationTypeCantBeChangedKey = nameof(AnnotationTypeCantBeChanged);

		/// <summary>
		/// Annotation type cannot be changed once set.
		/// </summary>
		public static string AnnotationTypeCantBeChanged => GetString(AnnotationTypeCantBeChangedKey);

		/// <summary>
		/// The element was already attached to chart before.
		/// </summary>
		public const string ElementAlreadyAttachedKey = nameof(ElementAlreadyAttached);

		/// <summary>
		/// The element was already attached to chart before.
		/// </summary>
		public static string ElementAlreadyAttached => GetString(ElementAlreadyAttachedKey);

		/// <summary>
		/// Axis type must be set before adding any elements.
		/// </summary>
		public const string AxisTypeCantBeSetKey = nameof(AxisTypeCantBeSet);

		/// <summary>
		/// Axis type must be set before adding any elements.
		/// </summary>
		public static string AxisTypeCantBeSet => GetString(AxisTypeCantBeSetKey);

		/// <summary>
		/// Element of type '{0}' doesn't support axes X({1}), Y({2}).
		/// </summary>
		public const string AxesTypesNotSupportedParamsKey = nameof(AxesTypesNotSupportedParams);

		/// <summary>
		/// Element of type '{0}' doesn't support axes X({1}), Y({2}).
		/// </summary>
		public static string AxesTypesNotSupportedParams => GetString(AxesTypesNotSupportedParamsKey);

		/// <summary>
		/// Invalid axis type.
		/// </summary>
		public const string InvalidAxisTypeKey = nameof(InvalidAxisType);

		/// <summary>
		/// Invalid axis type.
		/// </summary>
		public static string InvalidAxisType => GetString(InvalidAxisTypeKey);

		/// <summary>
		/// Elements on chart do not support axis type {0}.
		/// </summary>
		public const string ElementDontSupportAxisTypeParamsKey = nameof(ElementDontSupportAxisTypeParams);

		/// <summary>
		/// Elements on chart do not support axis type {0}.
		/// </summary>
		public static string ElementDontSupportAxisTypeParams => GetString(ElementDontSupportAxisTypeParamsKey);

		/// <summary>
		/// Cannot set this property on child element.
		/// </summary>
		public const string CantSetChildPropertyKey = nameof(CantSetChildProperty);

		/// <summary>
		/// Cannot set this property on child element.
		/// </summary>
		public static string CantSetChildProperty => GetString(CantSetChildPropertyKey);

		/// <summary>
		/// The element already has a parent.
		/// </summary>
		public const string ParentElementAlreadySetKey = nameof(ParentElementAlreadySet);

		/// <summary>
		/// The element already has a parent.
		/// </summary>
		public static string ParentElementAlreadySet => GetString(ParentElementAlreadySetKey);

		/// <summary>
		/// Remove is not supported. Use Clear() instead.
		/// </summary>
		public const string RemoveNotSupportedKey = nameof(RemoveNotSupported);

		/// <summary>
		/// Remove is not supported. Use Clear() instead.
		/// </summary>
		public static string RemoveNotSupported => GetString(RemoveNotSupportedKey);

		/// <summary>
		/// Got new Indicator with same ChartIndicatorElement without Reset() call.
		/// </summary>
		public const string NewIndicatorNoResetKey = nameof(NewIndicatorNoReset);

		/// <summary>
		/// Got new Indicator with same ChartIndicatorElement without Reset() call.
		/// </summary>
		public static string NewIndicatorNoReset => GetString(NewIndicatorNoResetKey);

		/// <summary>
		/// Unexpected coordinate type {0}.
		/// </summary>
		public const string UnexpectedCoordTypeParamsKey = nameof(UnexpectedCoordTypeParams);

		/// <summary>
		/// Unexpected coordinate type {0}.
		/// </summary>
		public static string UnexpectedCoordTypeParams => GetString(UnexpectedCoordTypeParamsKey);

		/// <summary>
		/// Dashed line
		/// </summary>
		public const string DashedLineKey = nameof(DashedLine);

		/// <summary>
		/// Dashed line
		/// </summary>
		public static string DashedLine => GetString(DashedLineKey);

		/// <summary>
		/// Senkou range
		/// </summary>
		public const string SenkouRangeKey = nameof(SenkouRange);

		/// <summary>
		/// Senkou range
		/// </summary>
		public static string SenkouRange => GetString(SenkouRangeKey);

		/// <summary>
		/// Show hidden axes
		/// </summary>
		public const string ShowHiddenAxesKey = nameof(ShowHiddenAxes);

		/// <summary>
		/// Show hidden axes
		/// </summary>
		public static string ShowHiddenAxes => GetString(ShowHiddenAxesKey);

		/// <summary>
		/// Reset time zone
		/// </summary>
		public const string ResetTimeZoneKey = nameof(ResetTimeZone);

		/// <summary>
		/// Reset time zone
		/// </summary>
		public static string ResetTimeZone => GetString(ResetTimeZoneKey);

		/// <summary>
		/// Area color
		/// </summary>
		public const string AreaColorKey = nameof(AreaColor);

		/// <summary>
		/// Area color
		/// </summary>
		public static string AreaColor => GetString(AreaColorKey);

		/// <summary>
		/// Buy blink color
		/// </summary>
		public const string BuyBlinkColorKey = nameof(BuyBlinkColor);

		/// <summary>
		/// Buy blink color
		/// </summary>
		public static string BuyBlinkColor => GetString(BuyBlinkColorKey);

		/// <summary>
		/// Sell blink color
		/// </summary>
		public const string SellBlinkColorKey = nameof(SellBlinkColor);

		/// <summary>
		/// Sell blink color
		/// </summary>
		public static string SellBlinkColor => GetString(SellBlinkColorKey);

		/// <summary>
		/// Blinking color of partially filled Buy order
		/// </summary>
		public const string BuyBlinkColorDescrKey = nameof(BuyBlinkColorDescr);

		/// <summary>
		/// Blinking color of partially filled Buy order
		/// </summary>
		public static string BuyBlinkColorDescr => GetString(BuyBlinkColorDescrKey);

		/// <summary>
		/// Blinking color of partially filled Sell order
		/// </summary>
		public const string SellBlinkColorDescrKey = nameof(SellBlinkColorDescr);

		/// <summary>
		/// Blinking color of partially filled Sell order
		/// </summary>
		public static string SellBlinkColorDescr => GetString(SellBlinkColorDescrKey);

		/// <summary>
		/// Animation
		/// </summary>
		public const string AnimationKey = nameof(Animation);

		/// <summary>
		/// Animation
		/// </summary>
		public static string Animation => GetString(AnimationKey);

		/// <summary>
		/// Show FPS stats
		/// </summary>
		public const string ShowFPSKey = nameof(ShowFPS);

		/// <summary>
		/// Show FPS stats
		/// </summary>
		public static string ShowFPS => GetString(ShowFPSKey);

		/// <summary>
		/// Active orders
		/// </summary>
		public const string ActiveOrdersKey = nameof(ActiveOrders);

		/// <summary>
		/// Active orders
		/// </summary>
		public static string ActiveOrders => GetString(ActiveOrdersKey);

		/// <summary>
		/// Buy pending color
		/// </summary>
		public const string BuyPendingColorKey = nameof(BuyPendingColor);

		/// <summary>
		/// Buy pending color
		/// </summary>
		public static string BuyPendingColor => GetString(BuyPendingColorKey);

		/// <summary>
		/// Buy color
		/// </summary>
		public const string BuyColorKey = nameof(BuyColor);

		/// <summary>
		/// Buy color
		/// </summary>
		public static string BuyColor => GetString(BuyColorKey);

		/// <summary>
		/// Sell pending color
		/// </summary>
		public const string SellPendingColorKey = nameof(SellPendingColor);

		/// <summary>
		/// Sell pending color
		/// </summary>
		public static string SellPendingColor => GetString(SellPendingColorKey);

		/// <summary>
		/// Sell color
		/// </summary>
		public const string SellColorKey = nameof(SellColor);

		/// <summary>
		/// Sell color
		/// </summary>
		public static string SellColor => GetString(SellColorKey);

		/// <summary>
		/// Cancel button color
		/// </summary>
		public const string CancelButtonColorKey = nameof(CancelButtonColor);

		/// <summary>
		/// Cancel button color
		/// </summary>
		public static string CancelButtonColor => GetString(CancelButtonColorKey);

		/// <summary>
		/// Cancel button background color
		/// </summary>
		public const string CancelButtonBgColorKey = nameof(CancelButtonBgColor);

		/// <summary>
		/// Cancel button background color
		/// </summary>
		public static string CancelButtonBgColor => GetString(CancelButtonBgColorKey);

		/// <summary>
		/// Line (open)
		/// </summary>
		public const string LineOpenKey = nameof(LineOpen);

		/// <summary>
		/// Line (open)
		/// </summary>
		public static string LineOpen => GetString(LineOpenKey);

		/// <summary>
		/// Line (high)
		/// </summary>
		public const string LineHighKey = nameof(LineHigh);

		/// <summary>
		/// Line (high)
		/// </summary>
		public static string LineHigh => GetString(LineHighKey);

		/// <summary>
		/// Line (low)
		/// </summary>
		public const string LineLowKey = nameof(LineLow);

		/// <summary>
		/// Line (low)
		/// </summary>
		public static string LineLow => GetString(LineLowKey);

		/// <summary>
		/// Line (close)
		/// </summary>
		public const string LineCloseKey = nameof(LineClose);

		/// <summary>
		/// Line (close)
		/// </summary>
		public static string LineClose => GetString(LineCloseKey);

		/// <summary>
		/// Timeframe and price step were not set
		/// </summary>
		public const string ErrTimeframePriceStepNotSetKey = nameof(ErrTimeframePriceStepNotSet);

		/// <summary>
		/// Timeframe and price step were not set
		/// </summary>
		public static string ErrTimeframePriceStepNotSet => GetString(ErrTimeframePriceStepNotSetKey);

		/// <summary>
		/// Box chart
		/// </summary>
		public const string BoxChartKey = nameof(BoxChart);

		/// <summary>
		/// Box chart
		/// </summary>
		public static string BoxChart => GetString(BoxChartKey);

		/// <summary>
		/// Cluster profile
		/// </summary>
		public const string ClusterProfileKey = nameof(ClusterProfile);

		/// <summary>
		/// Cluster profile
		/// </summary>
		public static string ClusterProfile => GetString(ClusterProfileKey);

		/// <summary>
		/// Volume display settings
		/// </summary>
		public const string VolumeSettingsKey = nameof(VolumeSettings);

		/// <summary>
		/// Volume display settings
		/// </summary>
		public static string VolumeSettings => GetString(VolumeSettingsKey);

		/// <summary>
		/// Cluster base line color
		/// </summary>
		public const string ClusterLineColorKey = nameof(ClusterLineColor);

		/// <summary>
		/// Cluster base line color
		/// </summary>
		public static string ClusterLineColor => GetString(ClusterLineColorKey);

		/// <summary>
		/// Cluster text color
		/// </summary>
		public const string ClusterTextColorKey = nameof(ClusterTextColor);

		/// <summary>
		/// Cluster text color
		/// </summary>
		public static string ClusterTextColor => GetString(ClusterTextColorKey);

		/// <summary>
		/// Cluster max volume color
		/// </summary>
		public const string ClusterMaxVolumeColorKey = nameof(ClusterMaxVolumeColor);

		/// <summary>
		/// Cluster max volume color
		/// </summary>
		public static string ClusterMaxVolumeColor => GetString(ClusterMaxVolumeColorKey);

		/// <summary>
		/// Local horizontal volumes
		/// </summary>
		public const string LocalHorizontalVolumesKey = nameof(LocalHorizontalVolumes);

		/// <summary>
		/// Local horizontal volumes
		/// </summary>
		public static string LocalHorizontalVolumes => GetString(LocalHorizontalVolumesKey);

		/// <summary>
		/// Show horizontal volumes
		/// </summary>
		public const string ShowHorizontalVolumesKey = nameof(ShowHorizontalVolumes);

		/// <summary>
		/// Show horizontal volumes
		/// </summary>
		public static string ShowHorizontalVolumes => GetString(ShowHorizontalVolumesKey);

		/// <summary>
		/// Horizontal volume size fraction
		/// </summary>
		public const string HorizontalVolumeWidthFractionKey = nameof(HorizontalVolumeWidthFraction);

		/// <summary>
		/// Horizontal volume size fraction
		/// </summary>
		public static string HorizontalVolumeWidthFraction => GetString(HorizontalVolumeWidthFractionKey);

		/// <summary>
		/// Horizontal volume color
		/// </summary>
		public const string HorizontalVolumeColorKey = nameof(HorizontalVolumeColor);

		/// <summary>
		/// Horizontal volume color
		/// </summary>
		public static string HorizontalVolumeColor => GetString(HorizontalVolumeColorKey);

		/// <summary>
		/// Horizontal volume font color
		/// </summary>
		public const string HorizontalVolumeFontColorKey = nameof(HorizontalVolumeFontColor);

		/// <summary>
		/// Horizontal volume font color
		/// </summary>
		public static string HorizontalVolumeFontColor => GetString(HorizontalVolumeFontColorKey);

		/// <summary>
		/// Box chart settings
		/// </summary>
		public const string BoxChartSettingsKey = nameof(BoxChartSettings);

		/// <summary>
		/// Box chart settings
		/// </summary>
		public static string BoxChartSettings => GetString(BoxChartSettingsKey);

		/// <summary>
		/// Cluster profile chart settings
		/// </summary>
		public const string ClusterProfileSettingsKey = nameof(ClusterProfileSettings);

		/// <summary>
		/// Cluster profile chart settings
		/// </summary>
		public static string ClusterProfileSettings => GetString(ClusterProfileSettingsKey);

		/// <summary>
		/// Price step for this chart element
		/// </summary>
		public const string PriceStepForChartElementKey = nameof(PriceStepForChartElement);

		/// <summary>
		/// Price step for this chart element
		/// </summary>
		public static string PriceStepForChartElement => GetString(PriceStepForChartElementKey);

		/// <summary>
		/// Timeframe for this chart element
		/// </summary>
		public const string TimeframeForChartElementKey = nameof(TimeframeForChartElement);

		/// <summary>
		/// Timeframe for this chart element
		/// </summary>
		public static string TimeframeForChartElement => GetString(TimeframeForChartElementKey);

		/// <summary>
		/// Timeframe2 multiplier
		/// </summary>
		public const string Timeframe2MultiplierKey = nameof(Timeframe2Multiplier);

		/// <summary>
		/// Timeframe2 multiplier
		/// </summary>
		public static string Timeframe2Multiplier => GetString(Timeframe2MultiplierKey);

		/// <summary>
		/// Timeframe3 multiplier
		/// </summary>
		public const string Timeframe3MultiplierKey = nameof(Timeframe3Multiplier);

		/// <summary>
		/// Timeframe3 multiplier
		/// </summary>
		public static string Timeframe3Multiplier => GetString(Timeframe3MultiplierKey);

		/// <summary>
		/// A multiplier which is applied to the first timeframe to calculate grouping timeframe
		/// </summary>
		public const string TimeframeMultiplierDescrKey = nameof(TimeframeMultiplierDescr);

		/// <summary>
		/// A multiplier which is applied to the first timeframe to calculate grouping timeframe
		/// </summary>
		public static string TimeframeMultiplierDescr => GetString(TimeframeMultiplierDescrKey);

		/// <summary>
		/// Timeframe2 grid color
		/// </summary>
		public const string Timeframe2GridColorKey = nameof(Timeframe2GridColor);

		/// <summary>
		/// Timeframe2 grid color
		/// </summary>
		public static string Timeframe2GridColor => GetString(Timeframe2GridColorKey);

		/// <summary>
		/// Timeframe3 grid color
		/// </summary>
		public const string Timeframe3GridColorKey = nameof(Timeframe3GridColor);

		/// <summary>
		/// Timeframe3 grid color
		/// </summary>
		public static string Timeframe3GridColor => GetString(Timeframe3GridColorKey);

		/// <summary>
		/// Timeframe2 frame color
		/// </summary>
		public const string Timeframe2FrameColorKey = nameof(Timeframe2FrameColor);

		/// <summary>
		/// Timeframe2 frame color
		/// </summary>
		public static string Timeframe2FrameColor => GetString(Timeframe2FrameColorKey);

		/// <summary>
		/// Max volume color
		/// </summary>
		public const string MaxVolumeColorKey = nameof(MaxVolumeColor);

		/// <summary>
		/// Max volume color
		/// </summary>
		public static string MaxVolumeColor => GetString(MaxVolumeColorKey);

		/// <summary>
		/// Cluster color
		/// </summary>
		public const string ClusterColorKey = nameof(ClusterColor);

		/// <summary>
		/// Cluster color
		/// </summary>
		public static string ClusterColor => GetString(ClusterColorKey);

		/// <summary>
		/// Cannot create a console window.
		/// </summary>
		public const string CannotCreateConsoleWindowKey = nameof(CannotCreateConsoleWindow);

		/// <summary>
		/// Cannot create a console window.
		/// </summary>
		public static string CannotCreateConsoleWindow => GetString(CannotCreateConsoleWindowKey);

		/// <summary>
		/// Unknown level of logs.
		/// </summary>
		public const string UnknownLevelLogKey = nameof(UnknownLevelLog);

		/// <summary>
		/// Unknown level of logs.
		/// </summary>
		public static string UnknownLevelLog => GetString(UnknownLevelLogKey);

		/// <summary>
		/// Name of file {0} does not contain a file name.
		/// </summary>
		public const string NameFileNotContainFileNameKey = nameof(NameFileNotContainFileName);

		/// <summary>
		/// Name of file {0} does not contain a file name.
		/// </summary>
		public static string NameFileNotContainFileName => GetString(NameFileNotContainFileNameKey);

		/// <summary>
		/// Roller file index must be greater than zero.
		/// </summary>
		public const string RollerFileIndexMustGreatZeroKey = nameof(RollerFileIndexMustGreatZero);

		/// <summary>
		/// Roller file index must be greater than zero.
		/// </summary>
		public static string RollerFileIndexMustGreatZero => GetString(RollerFileIndexMustGreatZeroKey);

		/// <summary>
		/// Logging
		/// </summary>
		public const string LoggingKey = nameof(Logging);

		/// <summary>
		/// Logging
		/// </summary>
		public static string Logging => GetString(LoggingKey);

		/// <summary>
		/// Name
		/// </summary>
		public const string NameKey = nameof(Name);

		/// <summary>
		/// Name
		/// </summary>
		public static string Name => GetString(NameKey);

		/// <summary>
		/// Name
		/// </summary>
		public const string Name2Key = nameof(Name2);

		/// <summary>
		/// Name
		/// </summary>
		public static string Name2 => GetString(Name2Key);

		/// <summary>
		/// Source name (to distinguish in log files).
		/// </summary>
		public const string Str7Key = nameof(Str7);

		/// <summary>
		/// Source name (to distinguish in log files).
		/// </summary>
		public static string Str7 => GetString(Str7Key);

		/// <summary>
		/// Parent at source {0} is already set in {1}.
		/// </summary>
		public const string Str8ParamsKey = nameof(Str8Params);

		/// <summary>
		/// Parent at source {0} is already set in {1}.
		/// </summary>
		public static string Str8Params => GetString(Str8ParamsKey);

		/// <summary>
		/// Logging level
		/// </summary>
		public const string Str9Key = nameof(Str9);

		/// <summary>
		/// Logging level
		/// </summary>
		public static string Str9 => GetString(Str9Key);

		/// <summary>
		/// Inherited
		/// </summary>
		public const string InheritedKey = nameof(Inherited);

		/// <summary>
		/// Inherited
		/// </summary>
		public static string Inherited => GetString(InheritedKey);

		/// <summary>
		/// Debug
		/// </summary>
		public const string Str12Key = nameof(Str12);

		/// <summary>
		/// Debug
		/// </summary>
		public static string Str12 => GetString(Str12Key);

		/// <summary>
		/// Info
		/// </summary>
		public const string InfoKey = nameof(Info);

		/// <summary>
		/// Info
		/// </summary>
		public static string Info => GetString(InfoKey);

		/// <summary>
		/// Warnings
		/// </summary>
		public const string WarningsKey = nameof(Warnings);

		/// <summary>
		/// Warnings
		/// </summary>
		public static string Warnings => GetString(WarningsKey);

		/// <summary>
		/// Errors
		/// </summary>
		public const string ErrorsKey = nameof(Errors);

		/// <summary>
		/// Errors
		/// </summary>
		public static string Errors => GetString(ErrorsKey);

		/// <summary>
		/// Off
		/// </summary>
		public const string OffKey = nameof(Off);

		/// <summary>
		/// Off
		/// </summary>
		public static string Off => GetString(OffKey);

		/// <summary>
		/// Method should be implemented in the inherited class.
		/// </summary>
		public const string Str17Key = nameof(Str17);

		/// <summary>
		/// Method should be implemented in the inherited class.
		/// </summary>
		public static string Str17 => GetString(Str17Key);

		/// <summary>
		/// Message log
		/// </summary>
		public const string MessageLogKey = nameof(MessageLog);

		/// <summary>
		/// Message log
		/// </summary>
		public static string MessageLog => GetString(MessageLogKey);

		/// <summary>
		/// Interval must be positive.
		/// </summary>
		public const string IntervalMustBePositiveKey = nameof(IntervalMustBePositive);

		/// <summary>
		/// Interval must be positive.
		/// </summary>
		public static string IntervalMustBePositive => GetString(IntervalMustBePositiveKey);

		/// <summary>
		/// Object {0} was added earlier.
		/// </summary>
		public const string ObjectWasAlreadyAddedKey = nameof(ObjectWasAlreadyAdded);

		/// <summary>
		/// Object {0} was added earlier.
		/// </summary>
		public static string ObjectWasAlreadyAdded => GetString(ObjectWasAlreadyAddedKey);

		/// <summary>
		/// Object {0} was deleted earlier.
		/// </summary>
		public const string ObjectWasAlreadyDeletedKey = nameof(ObjectWasAlreadyDeleted);

		/// <summary>
		/// Object {0} was deleted earlier.
		/// </summary>
		public static string ObjectWasAlreadyDeleted => GetString(ObjectWasAlreadyDeletedKey);

		/// <summary>
		/// Some objects were already deleted earlier.
		/// </summary>
		public const string SomeObjectWasDeletedKey = nameof(SomeObjectWasDeleted);

		/// <summary>
		/// Some objects were already deleted earlier.
		/// </summary>
		public static string SomeObjectWasDeleted => GetString(SomeObjectWasDeletedKey);

		/// <summary>
		/// Wrong login or password.
		/// </summary>
		public const string WrongLoginOrPasswordKey = nameof(WrongLoginOrPassword);

		/// <summary>
		/// Wrong login or password.
		/// </summary>
		public static string WrongLoginOrPassword => GetString(WrongLoginOrPasswordKey);

		/// <summary>
		/// Temporary block is on due to unsuccessful authorization tries.
		/// </summary>
		public const string Str24Key = nameof(Str24);

		/// <summary>
		/// Temporary block is on due to unsuccessful authorization tries.
		/// </summary>
		public static string Str24 => GetString(Str24Key);

		/// <summary>
		/// User account blocked.
		/// </summary>
		public const string UserBlockedKey = nameof(UserBlocked);

		/// <summary>
		/// User account blocked.
		/// </summary>
		public static string UserBlocked => GetString(UserBlockedKey);

		/// <summary>
		/// Session was expired or not created.
		/// </summary>
		public const string SessionExpiredKey = nameof(SessionExpired);

		/// <summary>
		/// Session was expired or not created.
		/// </summary>
		public static string SessionExpired => GetString(SessionExpiredKey);

		/// <summary>
		/// Information about the user account not found.
		/// </summary>
		public const string AccountNotFoundKey = nameof(AccountNotFound);

		/// <summary>
		/// Information about the user account not found.
		/// </summary>
		public static string AccountNotFound => GetString(AccountNotFoundKey);

		/// <summary>
		/// Unknown server '{0}' error code.
		/// </summary>
		public const string UnknownServerErrorCodeKey = nameof(UnknownServerErrorCode);

		/// <summary>
		/// Unknown server '{0}' error code.
		/// </summary>
		public static string UnknownServerErrorCode => GetString(UnknownServerErrorCodeKey);

		/// <summary>
		/// Unknown server error.
		/// </summary>
		public const string UnknownServerErrorKey = nameof(UnknownServerError);

		/// <summary>
		/// Unknown server error.
		/// </summary>
		public static string UnknownServerError => GetString(UnknownServerErrorKey);

		/// <summary>
		/// Message contains no text.
		/// </summary>
		public const string MessageNoTextKey = nameof(MessageNoText);

		/// <summary>
		/// Message contains no text.
		/// </summary>
		public static string MessageNoText => GetString(MessageNoTextKey);

		/// <summary>
		/// Message text exceeded maximum allowed length.
		/// </summary>
		public const string MessageTextMaxKey = nameof(MessageTextMax);

		/// <summary>
		/// Message text exceeded maximum allowed length.
		/// </summary>
		public static string MessageTextMax => GetString(MessageTextMaxKey);

		/// <summary>
		/// SMS is not enough.
		/// </summary>
		public const string SmsNotEnoughKey = nameof(SmsNotEnough);

		/// <summary>
		/// SMS is not enough.
		/// </summary>
		public static string SmsNotEnough => GetString(SmsNotEnoughKey);

		/// <summary>
		/// Email is not enough.
		/// </summary>
		public const string EmailNotEnoughKey = nameof(EmailNotEnough);

		/// <summary>
		/// Email is not enough.
		/// </summary>
		public static string EmailNotEnough => GetString(EmailNotEnoughKey);

		/// <summary>
		/// Phone number not specified.
		/// </summary>
		public const string PhoneNotSpecifiedKey = nameof(PhoneNotSpecified);

		/// <summary>
		/// Phone number not specified.
		/// </summary>
		public static string PhoneNotSpecified => GetString(PhoneNotSpecifiedKey);

		/// <summary>
		/// Specified Email has incorrect format.
		/// </summary>
		public const string EmailIncorrectKey = nameof(EmailIncorrect);

		/// <summary>
		/// Specified Email has incorrect format.
		/// </summary>
		public static string EmailIncorrect => GetString(EmailIncorrectKey);

		/// <summary>
		/// Specified login has incorrect format.
		/// </summary>
		public const string LoginIncorrectKey = nameof(LoginIncorrect);

		/// <summary>
		/// Specified login has incorrect format.
		/// </summary>
		public static string LoginIncorrect => GetString(LoginIncorrectKey);

		/// <summary>
		/// Specified phone number has incorrect format.
		/// </summary>
		public const string PhoneIncorrectKey = nameof(PhoneIncorrect);

		/// <summary>
		/// Specified phone number has incorrect format.
		/// </summary>
		public static string PhoneIncorrect => GetString(PhoneIncorrectKey);

		/// <summary>
		/// Specified password does not meet security criteria.
		/// </summary>
		public const string PasswordNotCriteriaKey = nameof(PasswordNotCriteria);

		/// <summary>
		/// Specified password does not meet security criteria.
		/// </summary>
		public static string PasswordNotCriteria => GetString(PasswordNotCriteriaKey);

		/// <summary>
		/// Specified Email address is already in use.
		/// </summary>
		public const string EmailAlreadyUseKey = nameof(EmailAlreadyUse);

		/// <summary>
		/// Specified Email address is already in use.
		/// </summary>
		public static string EmailAlreadyUse => GetString(EmailAlreadyUseKey);

		/// <summary>
		/// Specified phone number is already in use.
		/// </summary>
		public const string PhoneAlreadyUseKey = nameof(PhoneAlreadyUse);

		/// <summary>
		/// Specified phone number is already in use.
		/// </summary>
		public static string PhoneAlreadyUse => GetString(PhoneAlreadyUseKey);

		/// <summary>
		/// Specified login is already in use.
		/// </summary>
		public const string LoginAlreadyUseKey = nameof(LoginAlreadyUse);

		/// <summary>
		/// Specified login is already in use.
		/// </summary>
		public static string LoginAlreadyUse => GetString(LoginAlreadyUseKey);

		/// <summary>
		/// Incorrect verification code.
		/// </summary>
		public const string IncorrectVerificationCodeKey = nameof(IncorrectVerificationCode);

		/// <summary>
		/// Incorrect verification code.
		/// </summary>
		public static string IncorrectVerificationCode => GetString(IncorrectVerificationCodeKey);

		/// <summary>
		/// Incorrect SMS code.
		/// </summary>
		public const string IncorrectSmsCodeKey = nameof(IncorrectSmsCode);

		/// <summary>
		/// Incorrect SMS code.
		/// </summary>
		public static string IncorrectSmsCode => GetString(IncorrectSmsCodeKey);

		/// <summary>
		/// Cannot get a license.
		/// </summary>
		public const string CannotGetLicenseKey = nameof(CannotGetLicense);

		/// <summary>
		/// Cannot get a license.
		/// </summary>
		public static string CannotGetLicense => GetString(CannotGetLicenseKey);

		/// <summary>
		/// License N{0} revoked.
		/// </summary>
		public const string LicenseRevokedKey = nameof(LicenseRevoked);

		/// <summary>
		/// License N{0} revoked.
		/// </summary>
		public static string LicenseRevoked => GetString(LicenseRevokedKey);

		/// <summary>
		/// License N{0} renewed max times.
		/// </summary>
		public const string LicenseMaxRenewKey = nameof(LicenseMaxRenew);

		/// <summary>
		/// License N{0} renewed max times.
		/// </summary>
		public static string LicenseMaxRenew => GetString(LicenseMaxRenewKey);

		/// <summary>
		/// SMS activation failed. Read more at {0}.
		/// </summary>
		public const string SmsActivationFailedKey = nameof(SmsActivationFailed);

		/// <summary>
		/// SMS activation failed. Read more at {0}.
		/// </summary>
		public static string SmsActivationFailed => GetString(SmsActivationFailedKey);

		/// <summary>
		/// Maximum number of license generations per minute exceeded.
		/// </summary>
		public const string MaxLicensePerMinKey = nameof(MaxLicensePerMin);

		/// <summary>
		/// Maximum number of license generations per minute exceeded.
		/// </summary>
		public static string MaxLicensePerMin => GetString(MaxLicensePerMinKey);

		/// <summary>
		/// for '{0}' portfolio '{1}'
		/// </summary>
		public const string Str50ParamsKey = nameof(Str50Params);

		/// <summary>
		/// for '{0}' portfolio '{1}'
		/// </summary>
		public static string Str50Params => GetString(Str50ParamsKey);

		/// <summary>
		/// License N{0} is wrong.
		/// </summary>
		public const string LicenseWrongKey = nameof(LicenseWrong);

		/// <summary>
		/// License N{0} is wrong.
		/// </summary>
		public static string LicenseWrong => GetString(LicenseWrongKey);

		/// <summary>
		/// License N{0} contains a wrong computer ID '{1}' instead of '{2}'.
		/// </summary>
		public const string LicenseWrongHIDKey = nameof(LicenseWrongHID);

		/// <summary>
		/// License N{0} contains a wrong computer ID '{1}' instead of '{2}'.
		/// </summary>
		public static string LicenseWrongHID => GetString(LicenseWrongHIDKey);

		/// <summary>
		/// License N{0} has expired {1}. Visit {2} to obtain a new license.
		/// </summary>
		public const string LicenseExpiredKey = nameof(LicenseExpired);

		/// <summary>
		/// License N{0} has expired {1}. Visit {2} to obtain a new license.
		/// </summary>
		public static string LicenseExpired => GetString(LicenseExpiredKey);

		/// <summary>
		/// License N{0} does not support '{1}'.
		/// </summary>
		public const string LicenseNotSupportKey = nameof(LicenseNotSupport);

		/// <summary>
		/// License N{0} does not support '{1}'.
		/// </summary>
		public static string LicenseNotSupport => GetString(LicenseNotSupportKey);

		/// <summary>
		/// Stock exchange
		/// </summary>
		public const string StockExchangeKey = nameof(StockExchange);

		/// <summary>
		/// Stock exchange
		/// </summary>
		public static string StockExchange => GetString(StockExchangeKey);

		/// <summary>
		/// Code of the stock exchange, to which the board belongs.
		/// </summary>
		public const string Str56Key = nameof(Str56);

		/// <summary>
		/// Code of the stock exchange, to which the board belongs.
		/// </summary>
		public static string Str56 => GetString(Str56Key);

		/// <summary>
		/// Code
		/// </summary>
		public const string CodeKey = nameof(Code);

		/// <summary>
		/// Code
		/// </summary>
		public static string Code => GetString(CodeKey);

		/// <summary>
		/// Board code
		/// </summary>
		public const string BoardCodeKey = nameof(BoardCode);

		/// <summary>
		/// Board code
		/// </summary>
		public static string BoardCode => GetString(BoardCodeKey);

		/// <summary>
		/// Reregistering
		/// </summary>
		public const string ReregisteringKey = nameof(Reregistering);

		/// <summary>
		/// Reregistering
		/// </summary>
		public static string Reregistering => GetString(ReregisteringKey);

		/// <summary>
		/// Is order reregistration as a single transaction supported.
		/// </summary>
		public const string Str60Key = nameof(Str60);

		/// <summary>
		/// Is order reregistration as a single transaction supported.
		/// </summary>
		public static string Str60 => GetString(Str60Key);

		/// <summary>
		/// Market orders
		/// </summary>
		public const string MarketOrdersKey = nameof(MarketOrders);

		/// <summary>
		/// Market orders
		/// </summary>
		public static string MarketOrders => GetString(MarketOrdersKey);

		/// <summary>
		/// Are market type orders supported.
		/// </summary>
		public const string MarketOrdersSupportedKey = nameof(MarketOrdersSupported);

		/// <summary>
		/// Are market type orders supported.
		/// </summary>
		public static string MarketOrdersSupported => GetString(MarketOrdersSupportedKey);

		/// <summary>
		/// Securities expiration times.
		/// </summary>
		public const string Str64Key = nameof(Str64);

		/// <summary>
		/// Securities expiration times.
		/// </summary>
		public static string Str64 => GetString(Str64Key);

		/// <summary>
		/// Board working hours.
		/// </summary>
		public const string WorkingHoursKey = nameof(WorkingHours);

		/// <summary>
		/// Board working hours.
		/// </summary>
		public static string WorkingHours => GetString(WorkingHoursKey);

		/// <summary>
		/// Time zone
		/// </summary>
		public const string TimeZoneKey = nameof(TimeZone);

		/// <summary>
		/// Time zone
		/// </summary>
		public static string TimeZone => GetString(TimeZoneKey);

		/// <summary>
		/// Information about the time zone where the stock exchange is situated.
		/// </summary>
		public const string Str68Key = nameof(Str68);

		/// <summary>
		/// Information about the time zone where the stock exchange is situated.
		/// </summary>
		public static string Str68 => GetString(Str68Key);

		/// <summary>
		/// Security ID
		/// </summary>
		public const string SecurityIdKey = nameof(SecurityId);

		/// <summary>
		/// Security ID
		/// </summary>
		public static string SecurityId => GetString(SecurityIdKey);

		/// <summary>
		/// Time of candle open
		/// </summary>
		public const string CandleOpenTimeKey = nameof(CandleOpenTime);

		/// <summary>
		/// Time of candle open
		/// </summary>
		public static string CandleOpenTime => GetString(CandleOpenTimeKey);

		/// <summary>
		/// Time of candle high
		/// </summary>
		public const string CandleHighTimeKey = nameof(CandleHighTime);

		/// <summary>
		/// Time of candle high
		/// </summary>
		public static string CandleHighTime => GetString(CandleHighTimeKey);

		/// <summary>
		/// Time of candle low
		/// </summary>
		public const string CandleLowTimeKey = nameof(CandleLowTime);

		/// <summary>
		/// Time of candle low
		/// </summary>
		public static string CandleLowTime => GetString(CandleLowTimeKey);

		/// <summary>
		/// Time of candle close
		/// </summary>
		public const string CandleCloseTimeKey = nameof(CandleCloseTime);

		/// <summary>
		/// Time of candle close
		/// </summary>
		public static string CandleCloseTime => GetString(CandleCloseTimeKey);

		/// <summary>
		/// Opening price
		/// </summary>
		public const string Str79Key = nameof(Str79);

		/// <summary>
		/// Opening price
		/// </summary>
		public static string Str79 => GetString(Str79Key);

		/// <summary>
		/// Candle opening price.
		/// </summary>
		public const string Str80Key = nameof(Str80);

		/// <summary>
		/// Candle opening price.
		/// </summary>
		public static string Str80 => GetString(Str80Key);

		/// <summary>
		/// Highest price
		/// </summary>
		public const string HighestPriceKey = nameof(HighestPrice);

		/// <summary>
		/// Highest price
		/// </summary>
		public static string HighestPrice => GetString(HighestPriceKey);

		/// <summary>
		/// Highest price of a candle.
		/// </summary>
		public const string Str82Key = nameof(Str82);

		/// <summary>
		/// Highest price of a candle.
		/// </summary>
		public static string Str82 => GetString(Str82Key);

		/// <summary>
		/// Lowest price
		/// </summary>
		public const string LowestPriceKey = nameof(LowestPrice);

		/// <summary>
		/// Lowest price
		/// </summary>
		public static string LowestPrice => GetString(LowestPriceKey);

		/// <summary>
		/// Lowest price of a candle.
		/// </summary>
		public const string Str84Key = nameof(Str84);

		/// <summary>
		/// Lowest price of a candle.
		/// </summary>
		public static string Str84 => GetString(Str84Key);

		/// <summary>
		/// Closing price
		/// </summary>
		public const string ClosingPriceKey = nameof(ClosingPrice);

		/// <summary>
		/// Closing price
		/// </summary>
		public static string ClosingPrice => GetString(ClosingPriceKey);

		/// <summary>
		/// Candle closing price.
		/// </summary>
		public const string Str86Key = nameof(Str86);

		/// <summary>
		/// Candle closing price.
		/// </summary>
		public static string Str86 => GetString(Str86Key);

		/// <summary>
		/// Volume
		/// </summary>
		public const string VolumeKey = nameof(Volume);

		/// <summary>
		/// Volume
		/// </summary>
		public static string Volume => GetString(VolumeKey);

		/// <summary>
		/// Volume (order)
		/// </summary>
		public const string VolumeOrderKey = nameof(VolumeOrder);

		/// <summary>
		/// Volume (order)
		/// </summary>
		public static string VolumeOrder => GetString(VolumeOrderKey);

		/// <summary>
		/// Volume (trade)
		/// </summary>
		public const string VolumeTradeKey = nameof(VolumeTrade);

		/// <summary>
		/// Volume (trade)
		/// </summary>
		public static string VolumeTrade => GetString(VolumeTradeKey);

		/// <summary>
		/// Total candle volume.
		/// </summary>
		public const string TotalCandleVolumeKey = nameof(TotalCandleVolume);

		/// <summary>
		/// Total candle volume.
		/// </summary>
		public static string TotalCandleVolume => GetString(TotalCandleVolumeKey);

		/// <summary>
		/// OI
		/// </summary>
		public const string OIKey = nameof(OI);

		/// <summary>
		/// OI
		/// </summary>
		public static string OI => GetString(OIKey);

		/// <summary>
		/// Open interest.
		/// </summary>
		public const string OpenInterestKey = nameof(OpenInterest);

		/// <summary>
		/// Open interest.
		/// </summary>
		public static string OpenInterest => GetString(OpenInterestKey);

		/// <summary>
		/// Ticks
		/// </summary>
		public const string TicksKey = nameof(Ticks);

		/// <summary>
		/// Ticks
		/// </summary>
		public static string Ticks => GetString(TicksKey);

		/// <summary>
		/// Number of ticks.
		/// </summary>
		public const string TickCountKey = nameof(TickCount);

		/// <summary>
		/// Number of ticks.
		/// </summary>
		public static string TickCount => GetString(TickCountKey);

		/// <summary>
		/// Ticks (up)
		/// </summary>
		public const string TickUpKey = nameof(TickUp);

		/// <summary>
		/// Ticks (up)
		/// </summary>
		public static string TickUp => GetString(TickUpKey);

		/// <summary>
		/// Number of up trending ticks.
		/// </summary>
		public const string TickUpCountKey = nameof(TickUpCount);

		/// <summary>
		/// Number of up trending ticks.
		/// </summary>
		public static string TickUpCount => GetString(TickUpCountKey);

		/// <summary>
		/// Ticks (down)
		/// </summary>
		public const string TickDownKey = nameof(TickDown);

		/// <summary>
		/// Ticks (down)
		/// </summary>
		public static string TickDown => GetString(TickDownKey);

		/// <summary>
		/// Number of down trending ticks.
		/// </summary>
		public const string TickDownCountKey = nameof(TickDownCount);

		/// <summary>
		/// Number of down trending ticks.
		/// </summary>
		public static string TickDownCount => GetString(TickDownCountKey);

		/// <summary>
		/// State
		/// </summary>
		public const string StateKey = nameof(State);

		/// <summary>
		/// State
		/// </summary>
		public static string State => GetString(StateKey);

		/// <summary>
		/// Candle state
		/// </summary>
		public const string CandleStateKey = nameof(CandleState);

		/// <summary>
		/// Candle state
		/// </summary>
		public static string CandleState => GetString(CandleStateKey);

		/// <summary>
		/// Portfolio
		/// </summary>
		public const string PortfolioKey = nameof(Portfolio);

		/// <summary>
		/// Portfolio
		/// </summary>
		public static string Portfolio => GetString(PortfolioKey);

		/// <summary>
		/// Portfolio name.
		/// </summary>
		public const string PortfolioNameKey = nameof(PortfolioName);

		/// <summary>
		/// Portfolio name.
		/// </summary>
		public static string PortfolioName => GetString(PortfolioNameKey);

		/// <summary>
		/// Depositary
		/// </summary>
		public const string DepoKey = nameof(Depo);

		/// <summary>
		/// Depositary
		/// </summary>
		public static string Depo => GetString(DepoKey);

		/// <summary>
		/// Depositary name where the security is physically held.
		/// </summary>
		public const string DepoNameKey = nameof(DepoName);

		/// <summary>
		/// Depositary name where the security is physically held.
		/// </summary>
		public static string DepoName => GetString(DepoNameKey);

		/// <summary>
		/// Server time
		/// </summary>
		public const string ServerTimeKey = nameof(ServerTime);

		/// <summary>
		/// Server time
		/// </summary>
		public static string ServerTime => GetString(ServerTimeKey);

		/// <summary>
		/// Transaction
		/// </summary>
		public const string TransactionKey = nameof(Transaction);

		/// <summary>
		/// Transaction
		/// </summary>
		public static string Transaction => GetString(TransactionKey);

		/// <summary>
		/// Transaction ID
		/// </summary>
		public const string TransactionIdKey = nameof(TransactionId);

		/// <summary>
		/// Transaction ID
		/// </summary>
		public static string TransactionId => GetString(TransactionIdKey);

		/// <summary>
		/// Original transaction
		/// </summary>
		public const string OriginalTransactionKey = nameof(OriginalTransaction);

		/// <summary>
		/// Original transaction
		/// </summary>
		public static string OriginalTransaction => GetString(OriginalTransactionKey);

		/// <summary>
		/// ID of original transaction, for which this message is the answer.
		/// </summary>
		public const string OriginalTransactionIdKey = nameof(OriginalTransactionId);

		/// <summary>
		/// ID of original transaction, for which this message is the answer.
		/// </summary>
		public static string OriginalTransactionId => GetString(OriginalTransactionIdKey);

		/// <summary>
		/// Data type
		/// </summary>
		public const string DataTypeKey = nameof(DataType);

		/// <summary>
		/// Data type
		/// </summary>
		public static string DataType => GetString(DataTypeKey);

		/// <summary>
		/// Data type, information about which is contained in the message.
		/// </summary>
		public const string Str110Key = nameof(Str110);

		/// <summary>
		/// Data type, information about which is contained in the message.
		/// </summary>
		public static string Str110 => GetString(Str110Key);

		/// <summary>
		/// Cancel
		/// </summary>
		public const string CancelKey = nameof(Cancel);

		/// <summary>
		/// Cancel
		/// </summary>
		public static string Cancel => GetString(CancelKey);

		/// <summary>
		/// Is the action an order cancellation.
		/// </summary>
		public const string IsActionOrderCancellationKey = nameof(IsActionOrderCancellation);

		/// <summary>
		/// Is the action an order cancellation.
		/// </summary>
		public static string IsActionOrderCancellation => GetString(IsActionOrderCancellationKey);

		/// <summary>
		/// Order ID
		/// </summary>
		public const string OrderIdKey = nameof(OrderId);

		/// <summary>
		/// Order ID
		/// </summary>
		public static string OrderId => GetString(OrderIdKey);

		/// <summary>
		/// Order ID (string)
		/// </summary>
		public const string OrderIdStringKey = nameof(OrderIdString);

		/// <summary>
		/// Order ID (string)
		/// </summary>
		public static string OrderIdString => GetString(OrderIdStringKey);

		/// <summary>
		/// Order ID (as string, if electronic board does not use numeric order ID representation).
		/// </summary>
		public const string OrderIdStringDescKey = nameof(OrderIdStringDesc);

		/// <summary>
		/// Order ID (as string, if electronic board does not use numeric order ID representation).
		/// </summary>
		public static string OrderIdStringDesc => GetString(OrderIdStringDescKey);

		/// <summary>
		/// Order ID board
		/// </summary>
		public const string Str117Key = nameof(Str117);

		/// <summary>
		/// Order ID board
		/// </summary>
		public static string Str117 => GetString(Str117Key);

		/// <summary>
		/// Electronic board order ID.
		/// </summary>
		public const string Str118Key = nameof(Str118);

		/// <summary>
		/// Electronic board order ID.
		/// </summary>
		public static string Str118 => GetString(Str118Key);

		/// <summary>
		/// Derived
		/// </summary>
		public const string DerivedKey = nameof(Derived);

		/// <summary>
		/// Derived
		/// </summary>
		public static string Derived => GetString(DerivedKey);

		/// <summary>
		/// Derived order ID (e.g., conditional order generated a real stock exchange order).
		/// </summary>
		public const string DerivedOrderIdKey = nameof(DerivedOrderId);

		/// <summary>
		/// Derived order ID (e.g., conditional order generated a real stock exchange order).
		/// </summary>
		public static string DerivedOrderId => GetString(DerivedOrderIdKey);

		/// <summary>
		/// Derived (string)
		/// </summary>
		public const string DerivedStringKey = nameof(DerivedString);

		/// <summary>
		/// Derived (string)
		/// </summary>
		public static string DerivedString => GetString(DerivedStringKey);

		/// <summary>
		/// Derived order ID (string value).
		/// </summary>
		public const string DerivedStringDescKey = nameof(DerivedStringDesc);

		/// <summary>
		/// Derived order ID (string value).
		/// </summary>
		public static string DerivedStringDesc => GetString(DerivedStringDescKey);

		/// <summary>
		/// Price
		/// </summary>
		public const string PriceKey = nameof(Price);

		/// <summary>
		/// Price
		/// </summary>
		public static string Price => GetString(PriceKey);

		/// <summary>
		/// Order price.
		/// </summary>
		public const string OrderPriceKey = nameof(OrderPrice);

		/// <summary>
		/// Order price.
		/// </summary>
		public static string OrderPrice => GetString(OrderPriceKey);

		/// <summary>
		/// Number of contracts in the order.
		/// </summary>
		public const string OrderVolumeKey = nameof(OrderVolume);

		/// <summary>
		/// Number of contracts in the order.
		/// </summary>
		public static string OrderVolume => GetString(OrderVolumeKey);

		/// <summary>
		/// Visible volume
		/// </summary>
		public const string VisibleVolumeKey = nameof(VisibleVolume);

		/// <summary>
		/// Visible volume
		/// </summary>
		public static string VisibleVolume => GetString(VisibleVolumeKey);

		/// <summary>
		/// Visible quantity of contracts in order.
		/// </summary>
		public const string Str127Key = nameof(Str127);

		/// <summary>
		/// Visible quantity of contracts in order.
		/// </summary>
		public static string Str127 => GetString(Str127Key);

		/// <summary>
		/// Direction
		/// </summary>
		public const string Str128Key = nameof(Str128);

		/// <summary>
		/// Direction
		/// </summary>
		public static string Str128 => GetString(Str128Key);

		/// <summary>
		/// Order direction (buy or sell).
		/// </summary>
		public const string Str129Key = nameof(Str129);

		/// <summary>
		/// Order direction (buy or sell).
		/// </summary>
		public static string Str129 => GetString(Str129Key);

		/// <summary>
		/// Balance
		/// </summary>
		public const string Str130Key = nameof(Str130);

		/// <summary>
		/// Balance
		/// </summary>
		public static string Str130 => GetString(Str130Key);

		/// <summary>
		/// Order contracts balance.
		/// </summary>
		public const string Str131Key = nameof(Str131);

		/// <summary>
		/// Order contracts balance.
		/// </summary>
		public static string Str131 => GetString(Str131Key);

		/// <summary>
		/// Order type
		/// </summary>
		public const string Str132Key = nameof(Str132);

		/// <summary>
		/// Order type
		/// </summary>
		public static string Str132 => GetString(Str132Key);

		/// <summary>
		/// Order type (Limit, Market, Stop-order etc.).
		/// </summary>
		public const string Str133Key = nameof(Str133);

		/// <summary>
		/// Order type (Limit, Market, Stop-order etc.).
		/// </summary>
		public static string Str133 => GetString(Str133Key);

		/// <summary>
		/// Order state (Active, Not active, Error).
		/// </summary>
		public const string Str134Key = nameof(Str134);

		/// <summary>
		/// Order state (Active, Not active, Error).
		/// </summary>
		public static string Str134 => GetString(Str134Key);

		/// <summary>
		/// Comment
		/// </summary>
		public const string Str135Key = nameof(Str135);

		/// <summary>
		/// Comment
		/// </summary>
		public static string Str135 => GetString(Str135Key);

		/// <summary>
		/// Placed order comment.
		/// </summary>
		public const string Str136Key = nameof(Str136);

		/// <summary>
		/// Placed order comment.
		/// </summary>
		public static string Str136 => GetString(Str136Key);

		/// <summary>
		/// Message for order
		/// </summary>
		public const string Str137Key = nameof(Str137);

		/// <summary>
		/// Message for order
		/// </summary>
		public static string Str137 => GetString(Str137Key);

		/// <summary>
		/// Message for order (created by the trading system when registered, changed or cancelled).
		/// </summary>
		public const string Str138Key = nameof(Str138);

		/// <summary>
		/// Message for order (created by the trading system when registered, changed or cancelled).
		/// </summary>
		public static string Str138 => GetString(Str138Key);

		/// <summary>
		/// System order
		/// </summary>
		public const string Str139Key = nameof(Str139);

		/// <summary>
		/// System order
		/// </summary>
		public static string Str139 => GetString(Str139Key);

		/// <summary>
		/// Is a system trade.
		/// </summary>
		public const string Str140Key = nameof(Str140);

		/// <summary>
		/// Is a system trade.
		/// </summary>
		public static string Str140 => GetString(Str140Key);

		/// <summary>
		/// Order expiration time
		/// </summary>
		public const string Str141Key = nameof(Str141);

		/// <summary>
		/// Order expiration time
		/// </summary>
		public static string Str141 => GetString(Str141Key);

		/// <summary>
		/// Order expiration time.
		/// </summary>
		public const string Str142Key = nameof(Str142);

		/// <summary>
		/// Order expiration time.
		/// </summary>
		public static string Str142 => GetString(Str142Key);

		/// <summary>
		/// Execution condition
		/// </summary>
		public const string Str143Key = nameof(Str143);

		/// <summary>
		/// Execution condition
		/// </summary>
		public static string Str143 => GetString(Str143Key);

		/// <summary>
		/// Limit order execution condition.
		/// </summary>
		public const string Str144Key = nameof(Str144);

		/// <summary>
		/// Limit order execution condition.
		/// </summary>
		public static string Str144 => GetString(Str144Key);

		/// <summary>
		/// Trade ID.
		/// </summary>
		public const string Str145Key = nameof(Str145);

		/// <summary>
		/// Trade ID.
		/// </summary>
		public static string Str145 => GetString(Str145Key);

		/// <summary>
		/// Trade ID (as string, if electronic board does not use numeric order ID representation).
		/// </summary>
		public const string Str146Key = nameof(Str146);

		/// <summary>
		/// Trade ID (as string, if electronic board does not use numeric order ID representation).
		/// </summary>
		public static string Str146 => GetString(Str146Key);

		/// <summary>
		/// Trade price.
		/// </summary>
		public const string Str147Key = nameof(Str147);

		/// <summary>
		/// Trade price.
		/// </summary>
		public static string Str147 => GetString(Str147Key);

		/// <summary>
		/// Deal initiator
		/// </summary>
		public const string Str148Key = nameof(Str148);

		/// <summary>
		/// Deal initiator
		/// </summary>
		public static string Str148 => GetString(Str148Key);

		/// <summary>
		/// Deal initiator (seller or buyer).
		/// </summary>
		public const string Str149Key = nameof(Str149);

		/// <summary>
		/// Deal initiator (seller or buyer).
		/// </summary>
		public static string Str149 => GetString(Str149Key);

		/// <summary>
		/// Open interest
		/// </summary>
		public const string Str150Key = nameof(Str150);

		/// <summary>
		/// Open interest
		/// </summary>
		public static string Str150 => GetString(Str150Key);

		/// <summary>
		/// Number of open positions (open interest).
		/// </summary>
		public const string Str151Key = nameof(Str151);

		/// <summary>
		/// Number of open positions (open interest).
		/// </summary>
		public static string Str151 => GetString(Str151Key);

		/// <summary>
		/// Error
		/// </summary>
		public const string Str152Key = nameof(Str152);

		/// <summary>
		/// Error
		/// </summary>
		public static string Str152 => GetString(Str152Key);

		/// <summary>
		/// Error registering/cancelling order
		/// </summary>
		public const string Str153Key = nameof(Str153);

		/// <summary>
		/// Error registering/cancelling order
		/// </summary>
		public static string Str153 => GetString(Str153Key);

		/// <summary>
		/// Condition
		/// </summary>
		public const string Str154Key = nameof(Str154);

		/// <summary>
		/// Condition
		/// </summary>
		public static string Str154 => GetString(Str154Key);

		/// <summary>
		/// Order condition (e.g., stop- and algo- orders parameters).
		/// </summary>
		public const string Str155Key = nameof(Str155);

		/// <summary>
		/// Order condition (e.g., stop- and algo- orders parameters).
		/// </summary>
		public static string Str155 => GetString(Str155Key);

		/// <summary>
		/// Conditional order
		/// </summary>
		public const string Str156Key = nameof(Str156);

		/// <summary>
		/// Conditional order
		/// </summary>
		public static string Str156 => GetString(Str156Key);

		/// <summary>
		/// Uptrend
		/// </summary>
		public const string Str157Key = nameof(Str157);

		/// <summary>
		/// Uptrend
		/// </summary>
		public static string Str157 => GetString(Str157Key);

		/// <summary>
		/// Is tick ascending or descending in price.
		/// </summary>
		public const string Str158Key = nameof(Str158);

		/// <summary>
		/// Is tick ascending or descending in price.
		/// </summary>
		public static string Str158 => GetString(Str158Key);

		/// <summary>
		/// Commission
		/// </summary>
		public const string Str159Key = nameof(Str159);

		/// <summary>
		/// Commission
		/// </summary>
		public static string Str159 => GetString(Str159Key);

		/// <summary>
		/// Commission (broker, stock exchange etc.).
		/// </summary>
		public const string Str160Key = nameof(Str160);

		/// <summary>
		/// Commission (broker, stock exchange etc.).
		/// </summary>
		public static string Str160 => GetString(Str160Key);

		/// <summary>
		/// Latency
		/// </summary>
		public const string Str161Key = nameof(Str161);

		/// <summary>
		/// Latency
		/// </summary>
		public static string Str161 => GetString(Str161Key);

		/// <summary>
		/// Network latency.
		/// </summary>
		public const string Str162Key = nameof(Str162);

		/// <summary>
		/// Network latency.
		/// </summary>
		public static string Str162 => GetString(Str162Key);

		/// <summary>
		/// Slippage
		/// </summary>
		public const string Str163Key = nameof(Str163);

		/// <summary>
		/// Slippage
		/// </summary>
		public static string Str163 => GetString(Str163Key);

		/// <summary>
		/// Slippage in trade price.
		/// </summary>
		public const string Str164Key = nameof(Str164);

		/// <summary>
		/// Slippage in trade price.
		/// </summary>
		public static string Str164 => GetString(Str164Key);

		/// <summary>
		/// ID (user)
		/// </summary>
		public const string Str165Key = nameof(Str165);

		/// <summary>
		/// ID (user)
		/// </summary>
		public static string Str165 => GetString(Str165Key);

		/// <summary>
		/// User's order ID.
		/// </summary>
		public const string Str166Key = nameof(Str166);

		/// <summary>
		/// User's order ID.
		/// </summary>
		public static string Str166 => GetString(Str166Key);

		/// <summary>
		/// General
		/// </summary>
		public const string GeneralKey = nameof(General);

		/// <summary>
		/// General
		/// </summary>
		public static string General => GetString(GeneralKey);

		/// <summary>
		/// Change server time.
		/// </summary>
		public const string Str168Key = nameof(Str168);

		/// <summary>
		/// Change server time.
		/// </summary>
		public static string Str168 => GetString(Str168Key);

		/// <summary>
		/// Current process bit-width is not compatible with adapter {0}. Recompile under {1}.
		/// </summary>
		public const string Str169ParamsKey = nameof(Str169Params);

		/// <summary>
		/// Current process bit-width is not compatible with adapter {0}. Recompile under {1}.
		/// </summary>
		public static string Str169Params => GetString(Str169ParamsKey);

		/// <summary>
		/// Connection was not established in allowed time.
		/// </summary>
		public const string Str170Key = nameof(Str170);

		/// <summary>
		/// Connection was not established in allowed time.
		/// </summary>
		public static string Str170 => GetString(Str170Key);

		/// <summary>
		/// Connection was not disconnected in allowed time.
		/// </summary>
		public const string Str171Key = nameof(Str171);

		/// <summary>
		/// Connection was not disconnected in allowed time.
		/// </summary>
		public static string Str171 => GetString(Str171Key);

		/// <summary>
		/// Reconnection settings
		/// </summary>
		public const string Str172Key = nameof(Str172);

		/// <summary>
		/// Reconnection settings
		/// </summary>
		public static string Str172 => GetString(Str172Key);

		/// <summary>
		/// Connection and export settings.
		/// </summary>
		public const string Str173Key = nameof(Str173);

		/// <summary>
		/// Connection and export settings.
		/// </summary>
		public static string Str173 => GetString(Str173Key);

		/// <summary>
		/// Connection
		/// </summary>
		public const string Str174Key = nameof(Str174);

		/// <summary>
		/// Connection
		/// </summary>
		public static string Str174 => GetString(Str174Key);

		/// <summary>
		/// Interval
		/// </summary>
		public const string Str175Key = nameof(Str175);

		/// <summary>
		/// Interval
		/// </summary>
		public static string Str175 => GetString(Str175Key);

		/// <summary>
		/// Interval, with which there will be attempts to establish a connection.
		/// </summary>
		public const string Str176Key = nameof(Str176);

		/// <summary>
		/// Interval, with which there will be attempts to establish a connection.
		/// </summary>
		public static string Str176 => GetString(Str176Key);

		/// <summary>
		/// Unsupported value.
		/// </summary>
		public const string Str177Key = nameof(Str177);

		/// <summary>
		/// Unsupported value.
		/// </summary>
		public static string Str177 => GetString(Str177Key);

		/// <summary>
		/// Initially
		/// </summary>
		public const string Str178Key = nameof(Str178);

		/// <summary>
		/// Initially
		/// </summary>
		public static string Str178 => GetString(Str178Key);

		/// <summary>
		/// Number of attempts to reestablish the initial connection, if it was not reestablished (timeout, network failure etc.).
		/// </summary>
		public const string Str179Key = nameof(Str179);

		/// <summary>
		/// Number of attempts to reestablish the initial connection, if it was not reestablished (timeout, network failure etc.).
		/// </summary>
		public static string Str179 => GetString(Str179Key);

		/// <summary>
		/// Reconnection
		/// </summary>
		public const string Str180Key = nameof(Str180);

		/// <summary>
		/// Reconnection
		/// </summary>
		public static string Str180 => GetString(Str180Key);

		/// <summary>
		/// Number of attempts to reconnect, if the connection was lost during process.
		/// </summary>
		public const string Str181Key = nameof(Str181);

		/// <summary>
		/// Number of attempts to reconnect, if the connection was lost during process.
		/// </summary>
		public static string Str181 => GetString(Str181Key);

		/// <summary>
		/// Waiting time
		/// </summary>
		public const string Str182Key = nameof(Str182);

		/// <summary>
		/// Waiting time
		/// </summary>
		public static string Str182 => GetString(Str182Key);

		/// <summary>
		/// Successful connection / disconnection waiting time.
		/// </summary>
		public const string Str183Key = nameof(Str183);

		/// <summary>
		/// Successful connection / disconnection waiting time.
		/// </summary>
		public static string Str183 => GetString(Str183Key);

		/// <summary>
		/// Work schedule
		/// </summary>
		public const string Str184Key = nameof(Str184);

		/// <summary>
		/// Work schedule
		/// </summary>
		public static string Str184 => GetString(Str184Key);

		/// <summary>
		/// Work schedule, during which connections must be established.
		/// </summary>
		public const string Str185Key = nameof(Str185);

		/// <summary>
		/// Work schedule, during which connections must be established.
		/// </summary>
		public static string Str185 => GetString(Str185Key);

		/// <summary>
		/// Adapters
		/// </summary>
		public const string Str186Key = nameof(Str186);

		/// <summary>
		/// Adapters
		/// </summary>
		public static string Str186 => GetString(Str186Key);

		/// <summary>
		/// Securities
		/// </summary>
		public const string SecuritiesKey = nameof(Securities);

		/// <summary>
		/// Securities
		/// </summary>
		public static string Securities => GetString(SecuritiesKey);

		/// <summary>
		/// Market data
		/// </summary>
		public const string MarketDataKey = nameof(MarketData);

		/// <summary>
		/// Market data
		/// </summary>
		public static string MarketData => GetString(MarketDataKey);

		/// <summary>
		/// Use session to receive market-data.
		/// </summary>
		public const string UseMarketDataSessionKey = nameof(UseMarketDataSession);

		/// <summary>
		/// Use session to receive market-data.
		/// </summary>
		public static string UseMarketDataSession => GetString(UseMarketDataSessionKey);

		/// <summary>
		/// Transactions
		/// </summary>
		public const string TransactionsKey = nameof(Transactions);

		/// <summary>
		/// Transactions
		/// </summary>
		public static string Transactions => GetString(TransactionsKey);

		/// <summary>
		/// Use session to send transactions.
		/// </summary>
		public const string UseTransactionalSessionKey = nameof(UseTransactionalSession);

		/// <summary>
		/// Use session to send transactions.
		/// </summary>
		public static string UseTransactionalSession => GetString(UseTransactionalSessionKey);

		/// <summary>
		/// Heart beat
		/// </summary>
		public const string Str192Key = nameof(Str192);

		/// <summary>
		/// Heart beat
		/// </summary>
		public static string Str192 => GetString(Str192Key);

		/// <summary>
		/// Server notification interval that the connection is still alive. By default equal to 1 minute.
		/// </summary>
		public const string Str193Key = nameof(Str193);

		/// <summary>
		/// Server notification interval that the connection is still alive. By default equal to 1 minute.
		/// </summary>
		public static string Str193 => GetString(Str193Key);

		/// <summary>
		/// Time interval
		/// </summary>
		public const string TimeIntervalKey = nameof(TimeInterval);

		/// <summary>
		/// Time interval
		/// </summary>
		public static string TimeInterval => GetString(TimeIntervalKey);

		/// <summary>
		/// TimeMessage message generation interval. By default equal to 10 milliseconds.
		/// </summary>
		public const string Str195Key = nameof(Str195);

		/// <summary>
		/// TimeMessage message generation interval. By default equal to 10 milliseconds.
		/// </summary>
		public static string Str195 => GetString(Str195Key);

		/// <summary>
		/// MarketTimeChanged event invocation interval cannot be less or equal to zero.
		/// </summary>
		public const string Str196Key = nameof(Str196);

		/// <summary>
		/// MarketTimeChanged event invocation interval cannot be less or equal to zero.
		/// </summary>
		public static string Str196 => GetString(Str196Key);

		/// <summary>
		/// Combining securities
		/// </summary>
		public const string Str197Key = nameof(Str197);

		/// <summary>
		/// Combining securities
		/// </summary>
		public static string Str197 => GetString(Str197Key);

		/// <summary>
		/// Create a combined security for securities from different boards.
		/// </summary>
		public const string Str198Key = nameof(Str198);

		/// <summary>
		/// Create a combined security for securities from different boards.
		/// </summary>
		public static string Str198 => GetString(Str198Key);

		/// <summary>
		/// Board code for combined security.
		/// </summary>
		public const string Str199Key = nameof(Str199);

		/// <summary>
		/// Board code for combined security.
		/// </summary>
		public static string Str199 => GetString(Str199Key);

		/// <summary>
		/// Market depth at Level1
		/// </summary>
		public const string Str200Key = nameof(Str200);

		/// <summary>
		/// Market depth at Level1
		/// </summary>
		public static string Str200 => GetString(Str200Key);

		/// <summary>
		/// Refresh market depth for security using Level1 data.
		/// </summary>
		public const string Str201Key = nameof(Str201);

		/// <summary>
		/// Refresh market depth for security using Level1 data.
		/// </summary>
		public static string Str201 => GetString(Str201Key);

		/// <summary>
		/// Messages
		/// </summary>
		public const string MessagesKey = nameof(Messages);

		/// <summary>
		/// Messages
		/// </summary>
		public static string Messages => GetString(MessagesKey);

		/// <summary>
		/// Local time
		/// </summary>
		public const string Str203Key = nameof(Str203);

		/// <summary>
		/// Local time
		/// </summary>
		public static string Str203 => GetString(Str203Key);

		/// <summary>
		/// Local timestamp when a message was received/created.
		/// </summary>
		public const string Str204Key = nameof(Str204);

		/// <summary>
		/// Local timestamp when a message was received/created.
		/// </summary>
		public static string Str204 => GetString(Str204Key);

		/// <summary>
		/// Extended information
		/// </summary>
		public const string ExtendedInfoKey = nameof(ExtendedInfo);

		/// <summary>
		/// Extended information
		/// </summary>
		public static string ExtendedInfo => GetString(ExtendedInfoKey);

		/// <summary>
		/// ID
		/// </summary>
		public const string IdKey = nameof(Id);

		/// <summary>
		/// ID
		/// </summary>
		public static string Id => GetString(IdKey);

		/// <summary>
		/// News ID.
		/// </summary>
		public const string NewsIdKey = nameof(NewsId);

		/// <summary>
		/// News ID.
		/// </summary>
		public static string NewsId => GetString(NewsIdKey);

		/// <summary>
		/// Board
		/// </summary>
		public const string BoardKey = nameof(Board);

		/// <summary>
		/// Board
		/// </summary>
		public static string Board => GetString(BoardKey);

		/// <summary>
		/// Security
		/// </summary>
		public const string SecurityKey = nameof(Security);

		/// <summary>
		/// Security
		/// </summary>
		public static string Security => GetString(SecurityKey);

		/// <summary>
		/// Security ID, for which news have been published.
		/// </summary>
		public const string Str212Key = nameof(Str212);

		/// <summary>
		/// Security ID, for which news have been published.
		/// </summary>
		public static string Str212 => GetString(Str212Key);

		/// <summary>
		/// Source
		/// </summary>
		public const string Str213Key = nameof(Str213);

		/// <summary>
		/// Source
		/// </summary>
		public static string Str213 => GetString(Str213Key);

		/// <summary>
		/// News source.
		/// </summary>
		public const string Str214Key = nameof(Str214);

		/// <summary>
		/// News source.
		/// </summary>
		public static string Str214 => GetString(Str214Key);

		/// <summary>
		/// Header
		/// </summary>
		public const string Str215Key = nameof(Str215);

		/// <summary>
		/// Header
		/// </summary>
		public static string Str215 => GetString(Str215Key);

		/// <summary>
		/// Text
		/// </summary>
		public const string Str217Key = nameof(Str217);

		/// <summary>
		/// Text
		/// </summary>
		public static string Str217 => GetString(Str217Key);

		/// <summary>
		/// News text.
		/// </summary>
		public const string Str218Key = nameof(Str218);

		/// <summary>
		/// News text.
		/// </summary>
		public static string Str218 => GetString(Str218Key);

		/// <summary>
		/// Time
		/// </summary>
		public const string TimeKey = nameof(Time);

		/// <summary>
		/// Time
		/// </summary>
		public static string Time => GetString(TimeKey);

		/// <summary>
		/// Time of news arrival.
		/// </summary>
		public const string Str220Key = nameof(Str220);

		/// <summary>
		/// Time of news arrival.
		/// </summary>
		public static string Str220 => GetString(Str220Key);

		/// <summary>
		/// Link
		/// </summary>
		public const string Str221Key = nameof(Str221);

		/// <summary>
		/// Link
		/// </summary>
		public static string Str221 => GetString(Str221Key);

		/// <summary>
		/// News link in the internet.
		/// </summary>
		public const string Str222Key = nameof(Str222);

		/// <summary>
		/// News link in the internet.
		/// </summary>
		public static string Str222 => GetString(Str222Key);

		/// <summary>
		/// Call
		/// </summary>
		public const string Str223Key = nameof(Str223);

		/// <summary>
		/// Call
		/// </summary>
		public static string Str223 => GetString(Str223Key);

		/// <summary>
		/// Put
		/// </summary>
		public const string Str224Key = nameof(Str224);

		/// <summary>
		/// Put
		/// </summary>
		public static string Str224 => GetString(Str224Key);

		/// <summary>
		/// Parameters
		/// </summary>
		public const string Str225Key = nameof(Str225);

		/// <summary>
		/// Parameters
		/// </summary>
		public static string Str225 => GetString(Str225Key);

		/// <summary>
		/// Stop-orders
		/// </summary>
		public const string Str226Key = nameof(Str226);

		/// <summary>
		/// Stop-orders
		/// </summary>
		public static string Str226 => GetString(Str226Key);

		/// <summary>
		/// Cancel stop-orders or normal.
		/// </summary>
		public const string Str227Key = nameof(Str227);

		/// <summary>
		/// Cancel stop-orders or normal.
		/// </summary>
		public static string Str227 => GetString(Str227Key);

		/// <summary>
		/// Direction, for which orders have to be cancelled.
		/// </summary>
		public const string Str228Key = nameof(Str228);

		/// <summary>
		/// Direction, for which orders have to be cancelled.
		/// </summary>
		public static string Str228 => GetString(Str228Key);

		/// <summary>
		/// Portfolio name, for which an order must be placed/cancelled.
		/// </summary>
		public const string Str229Key = nameof(Str229);

		/// <summary>
		/// Portfolio name, for which an order must be placed/cancelled.
		/// </summary>
		public static string Str229 => GetString(Str229Key);

		/// <summary>
		/// Time in force
		/// </summary>
		public const string TimeInForceKey = nameof(TimeInForce);

		/// <summary>
		/// Time in force
		/// </summary>
		public static string TimeInForce => GetString(TimeInForceKey);

		/// <summary>
		/// Limit order time in force.
		/// </summary>
		public const string Str232Key = nameof(Str232);

		/// <summary>
		/// Limit order time in force.
		/// </summary>
		public static string Str232 => GetString(Str232Key);

		/// <summary>
		/// REPO\REPO-M information
		/// </summary>
		public const string Str233Key = nameof(Str233);

		/// <summary>
		/// REPO\REPO-M information
		/// </summary>
		public static string Str233 => GetString(Str233Key);

		/// <summary>
		/// Information for REPO\REPO-M orders.
		/// </summary>
		public const string RepoInfoKey = nameof(RepoInfo);

		/// <summary>
		/// Information for REPO\REPO-M orders.
		/// </summary>
		public static string RepoInfo => GetString(RepoInfoKey);

		/// <summary>
		/// Negotiated Trades Mode information
		/// </summary>
		public const string NtmInfoKey = nameof(NtmInfo);

		/// <summary>
		/// Negotiated Trades Mode information
		/// </summary>
		public static string NtmInfo => GetString(NtmInfoKey);

		/// <summary>
		/// Information for Negotiated Trades Mode orders.
		/// </summary>
		public const string Str236Key = nameof(Str236);

		/// <summary>
		/// Information for Negotiated Trades Mode orders.
		/// </summary>
		public static string Str236 => GetString(Str236Key);

		/// <summary>
		/// Active
		/// </summary>
		public const string Str238Key = nameof(Str238);

		/// <summary>
		/// Active
		/// </summary>
		public static string Str238 => GetString(Str238Key);

		/// <summary>
		/// Not active
		/// </summary>
		public const string Str239Key = nameof(Str239);

		/// <summary>
		/// Not active
		/// </summary>
		public static string Str239 => GetString(Str239Key);

		/// <summary>
		/// Market
		/// </summary>
		public const string Str241Key = nameof(Str241);

		/// <summary>
		/// Market
		/// </summary>
		public static string Str241 => GetString(Str241Key);

		/// <summary>
		/// Stop
		/// </summary>
		public const string Str242Key = nameof(Str242);

		/// <summary>
		/// Stop
		/// </summary>
		public static string Str242 => GetString(Str242Key);

		/// <summary>
		/// REPO
		/// </summary>
		public const string RepoKey = nameof(Repo);

		/// <summary>
		/// REPO
		/// </summary>
		public static string Repo => GetString(RepoKey);

		/// <summary>
		/// REPO-M
		/// </summary>
		public const string RepoMKey = nameof(RepoM);

		/// <summary>
		/// REPO-M
		/// </summary>
		public static string RepoM => GetString(RepoMKey);

		/// <summary>
		/// NTM
		/// </summary>
		public const string NtmKey = nameof(Ntm);

		/// <summary>
		/// NTM
		/// </summary>
		public static string Ntm => GetString(NtmKey);

		/// <summary>
		/// Negotiated Trades Mode
		/// </summary>
		public const string NtmDescKey = nameof(NtmDesc);

		/// <summary>
		/// Negotiated Trades Mode
		/// </summary>
		public static string NtmDesc => GetString(NtmDescKey);

		/// <summary>
		/// Filling
		/// </summary>
		public const string Str246Key = nameof(Str246);

		/// <summary>
		/// Filling
		/// </summary>
		public static string Str246 => GetString(Str246Key);

		/// <summary>
		/// Portfolio code name.
		/// </summary>
		public const string Str247Key = nameof(Str247);

		/// <summary>
		/// Portfolio code name.
		/// </summary>
		public static string Str247 => GetString(Str247Key);

		/// <summary>
		/// Active
		/// </summary>
		public const string Str248Key = nameof(Str248);

		/// <summary>
		/// Active
		/// </summary>
		public static string Str248 => GetString(Str248Key);

		/// <summary>
		/// Blocked
		/// </summary>
		public const string Str249Key = nameof(Str249);

		/// <summary>
		/// Blocked
		/// </summary>
		public static string Str249 => GetString(Str249Key);

		/// <summary>
		/// Currency
		/// </summary>
		public const string CurrencyKey = nameof(Currency);

		/// <summary>
		/// Currency
		/// </summary>
		public static string Currency => GetString(CurrencyKey);

		/// <summary>
		/// Portfolio currency.
		/// </summary>
		public const string Str251Key = nameof(Str251);

		/// <summary>
		/// Portfolio currency.
		/// </summary>
		public static string Str251 => GetString(Str251Key);

		/// <summary>
		/// Portfolio state.
		/// </summary>
		public const string Str252Key = nameof(Str252);

		/// <summary>
		/// Portfolio state.
		/// </summary>
		public static string Str252 => GetString(Str252Key);

		/// <summary>
		/// Initial value
		/// </summary>
		public const string Str253Key = nameof(Str253);

		/// <summary>
		/// Initial value
		/// </summary>
		public static string Str253 => GetString(Str253Key);

		/// <summary>
		/// Current value
		/// </summary>
		public const string Str254Key = nameof(Str254);

		/// <summary>
		/// Current value
		/// </summary>
		public static string Str254 => GetString(Str254Key);

		/// <summary>
		/// Blocked
		/// </summary>
		public const string Str255Key = nameof(Str255);

		/// <summary>
		/// Blocked
		/// </summary>
		public static string Str255 => GetString(Str255Key);

		/// <summary>
		/// Position price
		/// </summary>
		public const string Str256Key = nameof(Str256);

		/// <summary>
		/// Position price
		/// </summary>
		public static string Str256 => GetString(Str256Key);

		/// <summary>
		/// Unrealized profit
		/// </summary>
		public const string Str258Key = nameof(Str258);

		/// <summary>
		/// Unrealized profit
		/// </summary>
		public static string Str258 => GetString(Str258Key);

		/// <summary>
		/// Realized profit
		/// </summary>
		public const string Str259Key = nameof(Str259);

		/// <summary>
		/// Realized profit
		/// </summary>
		public static string Str259 => GetString(Str259Key);

		/// <summary>
		/// Variation margin
		/// </summary>
		public const string Str260Key = nameof(Str260);

		/// <summary>
		/// Variation margin
		/// </summary>
		public static string Str260 => GetString(Str260Key);

		/// <summary>
		/// Margin leverage
		/// </summary>
		public const string Str261Key = nameof(Str261);

		/// <summary>
		/// Margin leverage
		/// </summary>
		public static string Str261 => GetString(Str261Key);

		/// <summary>
		/// Total commission
		/// </summary>
		public const string Str262Key = nameof(Str262);

		/// <summary>
		/// Total commission
		/// </summary>
		public static string Str262 => GetString(Str262Key);

		/// <summary>
		/// Current value (in lots)
		/// </summary>
		public const string Str263Key = nameof(Str263);

		/// <summary>
		/// Current value (in lots)
		/// </summary>
		public static string Str263 => GetString(Str263Key);

		/// <summary>
		/// Depositary name
		/// </summary>
		public const string Str264Key = nameof(Str264);

		/// <summary>
		/// Depositary name
		/// </summary>
		public static string Str264 => GetString(Str264Key);

		/// <summary>
		/// Portfolio state
		/// </summary>
		public const string Str265Key = nameof(Str265);

		/// <summary>
		/// Portfolio state
		/// </summary>
		public static string Str265 => GetString(Str265Key);

		/// <summary>
		/// Limit type
		/// </summary>
		public const string Str266Key = nameof(Str266);

		/// <summary>
		/// Limit type
		/// </summary>
		public static string Str266 => GetString(Str266Key);

		/// <summary>
		/// Limit type for Т+ market. If delivery is immediate, then limit is equal Т+0.
		/// </summary>
		public const string Str267Key = nameof(Str267);

		/// <summary>
		/// Limit type for Т+ market. If delivery is immediate, then limit is equal Т+0.
		/// </summary>
		public static string Str267 => GetString(Str267Key);

		/// <summary>
		/// Description
		/// </summary>
		public const string DescriptionKey = nameof(Description);

		/// <summary>
		/// Description
		/// </summary>
		public static string Description => GetString(DescriptionKey);

		/// <summary>
		/// Text position description.
		/// </summary>
		public const string Str269Key = nameof(Str269);

		/// <summary>
		/// Text position description.
		/// </summary>
		public static string Str269 => GetString(Str269Key);

		/// <summary>
		/// Portfolio, in which position is created.
		/// </summary>
		public const string Str270Key = nameof(Str270);

		/// <summary>
		/// Portfolio, in which position is created.
		/// </summary>
		public static string Str270 => GetString(Str270Key);

		/// <summary>
		/// Security, for which a position was created.
		/// </summary>
		public const string Str271Key = nameof(Str271);

		/// <summary>
		/// Security, for which a position was created.
		/// </summary>
		public static string Str271 => GetString(Str271Key);

		/// <summary>
		/// Limit
		/// </summary>
		public const string Str272Key = nameof(Str272);

		/// <summary>
		/// Limit
		/// </summary>
		public static string Str272 => GetString(Str272Key);

		/// <summary>
		/// Quote
		/// </summary>
		public const string Str273Key = nameof(Str273);

		/// <summary>
		/// Quote
		/// </summary>
		public static string Str273 => GetString(Str273Key);

		/// <summary>
		/// Market depth quote representing bid or ask.
		/// </summary>
		public const string Str274Key = nameof(Str274);

		/// <summary>
		/// Market depth quote representing bid or ask.
		/// </summary>
		public static string Str274 => GetString(Str274Key);

		/// <summary>
		/// Quote price.
		/// </summary>
		public const string Str275Key = nameof(Str275);

		/// <summary>
		/// Quote price.
		/// </summary>
		public static string Str275 => GetString(Str275Key);

		/// <summary>
		/// Quote volume.
		/// </summary>
		public const string Str276Key = nameof(Str276);

		/// <summary>
		/// Quote volume.
		/// </summary>
		public static string Str276 => GetString(Str276Key);

		/// <summary>
		/// Direction (buy or sell).
		/// </summary>
		public const string Str277Key = nameof(Str277);

		/// <summary>
		/// Direction (buy or sell).
		/// </summary>
		public static string Str277 => GetString(Str277Key);

		/// <summary>
		/// Bid
		/// </summary>
		public const string BidKey = nameof(Bid);

		/// <summary>
		/// Bid
		/// </summary>
		public static string Bid => GetString(BidKey);

		/// <summary>
		/// Ask
		/// </summary>
		public const string AskKey = nameof(Ask);

		/// <summary>
		/// Ask
		/// </summary>
		public static string Ask => GetString(AskKey);

		/// <summary>
		/// Bids
		/// </summary>
		public const string Str281Key = nameof(Str281);

		/// <summary>
		/// Bids
		/// </summary>
		public static string Str281 => GetString(Str281Key);

		/// <summary>
		/// Quotes to buy.
		/// </summary>
		public const string Str282Key = nameof(Str282);

		/// <summary>
		/// Quotes to buy.
		/// </summary>
		public static string Str282 => GetString(Str282Key);

		/// <summary>
		/// Asks
		/// </summary>
		public const string Str283Key = nameof(Str283);

		/// <summary>
		/// Asks
		/// </summary>
		public static string Str283 => GetString(Str283Key);

		/// <summary>
		/// Quotes to sell.
		/// </summary>
		public const string Str284Key = nameof(Str284);

		/// <summary>
		/// Quotes to sell.
		/// </summary>
		public static string Str284 => GetString(Str284Key);

		/// <summary>
		/// Quotes change time
		/// </summary>
		public const string Str285Key = nameof(Str285);

		/// <summary>
		/// Quotes change time
		/// </summary>
		public static string Str285 => GetString(Str285Key);

		/// <summary>
		/// Highest price
		/// </summary>
		public const string Str287Key = nameof(Str287);

		/// <summary>
		/// Highest price
		/// </summary>
		public static string Str287 => GetString(Str287Key);

		/// <summary>
		/// Lowest price
		/// </summary>
		public const string Str288Key = nameof(Str288);

		/// <summary>
		/// Lowest price
		/// </summary>
		public static string Str288 => GetString(Str288Key);

		/// <summary>
		/// Last trade
		/// </summary>
		public const string Str289Key = nameof(Str289);

		/// <summary>
		/// Last trade
		/// </summary>
		public static string Str289 => GetString(Str289Key);

		/// <summary>
		/// Step price
		/// </summary>
		public const string Str290Key = nameof(Str290);

		/// <summary>
		/// Step price
		/// </summary>
		public static string Str290 => GetString(Str290Key);

		/// <summary>
		/// Best bid
		/// </summary>
		public const string Str291Key = nameof(Str291);

		/// <summary>
		/// Best bid
		/// </summary>
		public static string Str291 => GetString(Str291Key);

		/// <summary>
		/// Best ask
		/// </summary>
		public const string Str292Key = nameof(Str292);

		/// <summary>
		/// Best ask
		/// </summary>
		public static string Str292 => GetString(Str292Key);

		/// <summary>
		/// Volatility (implied)
		/// </summary>
		public const string Str293Key = nameof(Str293);

		/// <summary>
		/// Volatility (implied)
		/// </summary>
		public static string Str293 => GetString(Str293Key);

		/// <summary>
		/// Theoretical price
		/// </summary>
		public const string Str294Key = nameof(Str294);

		/// <summary>
		/// Theoretical price
		/// </summary>
		public static string Str294 => GetString(Str294Key);

		/// <summary>
		/// Bids volume
		/// </summary>
		public const string Str295Key = nameof(Str295);

		/// <summary>
		/// Bids volume
		/// </summary>
		public static string Str295 => GetString(Str295Key);

		/// <summary>
		/// Number of bids
		/// </summary>
		public const string Str296Key = nameof(Str296);

		/// <summary>
		/// Number of bids
		/// </summary>
		public static string Str296 => GetString(Str296Key);

		/// <summary>
		/// Ask volume
		/// </summary>
		public const string Str297Key = nameof(Str297);

		/// <summary>
		/// Ask volume
		/// </summary>
		public static string Str297 => GetString(Str297Key);

		/// <summary>
		/// Number of asks
		/// </summary>
		public const string Str298Key = nameof(Str298);

		/// <summary>
		/// Number of asks
		/// </summary>
		public static string Str298 => GetString(Str298Key);

		/// <summary>
		/// Volatility (historical)
		/// </summary>
		public const string Str299Key = nameof(Str299);

		/// <summary>
		/// Volatility (historical)
		/// </summary>
		public static string Str299 => GetString(Str299Key);

		/// <summary>
		/// Delta
		/// </summary>
		public const string DeltaKey = nameof(Delta);

		/// <summary>
		/// Delta
		/// </summary>
		public static string Delta => GetString(DeltaKey);

		/// <summary>
		/// Gamma
		/// </summary>
		public const string GammaKey = nameof(Gamma);

		/// <summary>
		/// Gamma
		/// </summary>
		public static string Gamma => GetString(GammaKey);

		/// <summary>
		/// Vega
		/// </summary>
		public const string VegaKey = nameof(Vega);

		/// <summary>
		/// Vega
		/// </summary>
		public static string Vega => GetString(VegaKey);

		/// <summary>
		/// Theta
		/// </summary>
		public const string ThetaKey = nameof(Theta);

		/// <summary>
		/// Theta
		/// </summary>
		public static string Theta => GetString(ThetaKey);

		/// <summary>
		/// Initial margin to buy
		/// </summary>
		public const string Str304Key = nameof(Str304);

		/// <summary>
		/// Initial margin to buy
		/// </summary>
		public static string Str304 => GetString(Str304Key);

		/// <summary>
		/// Initial margin to sell
		/// </summary>
		public const string Str305Key = nameof(Str305);

		/// <summary>
		/// Initial margin to sell
		/// </summary>
		public static string Str305 => GetString(Str305Key);

		/// <summary>
		/// Minimum price step
		/// </summary>
		public const string Str306Key = nameof(Str306);

		/// <summary>
		/// Minimum price step
		/// </summary>
		public static string Str306 => GetString(Str306Key);

		/// <summary>
		/// Minimum volume step
		/// </summary>
		public const string Str307Key = nameof(Str307);

		/// <summary>
		/// Minimum volume step
		/// </summary>
		public static string Str307 => GetString(Str307Key);

		/// <summary>
		/// Last trade price
		/// </summary>
		public const string Str308Key = nameof(Str308);

		/// <summary>
		/// Last trade price
		/// </summary>
		public static string Str308 => GetString(Str308Key);

		/// <summary>
		/// Last trade volume
		/// </summary>
		public const string Str309Key = nameof(Str309);

		/// <summary>
		/// Last trade volume
		/// </summary>
		public static string Str309 => GetString(Str309Key);

		/// <summary>
		/// Volume per session
		/// </summary>
		public const string Str310Key = nameof(Str310);

		/// <summary>
		/// Volume per session
		/// </summary>
		public static string Str310 => GetString(Str310Key);

		/// <summary>
		/// Average price per session
		/// </summary>
		public const string Str311Key = nameof(Str311);

		/// <summary>
		/// Average price per session
		/// </summary>
		public static string Str311 => GetString(Str311Key);

		/// <summary>
		/// Settlement price
		/// </summary>
		public const string Str312Key = nameof(Str312);

		/// <summary>
		/// Settlement price
		/// </summary>
		public static string Str312 => GetString(Str312Key);

		/// <summary>
		/// Best bid price
		/// </summary>
		public const string Str313Key = nameof(Str313);

		/// <summary>
		/// Best bid price
		/// </summary>
		public static string Str313 => GetString(Str313Key);

		/// <summary>
		/// Best bid volume
		/// </summary>
		public const string Str314Key = nameof(Str314);

		/// <summary>
		/// Best bid volume
		/// </summary>
		public static string Str314 => GetString(Str314Key);

		/// <summary>
		/// Best ask price
		/// </summary>
		public const string Str315Key = nameof(Str315);

		/// <summary>
		/// Best ask price
		/// </summary>
		public static string Str315 => GetString(Str315Key);

		/// <summary>
		/// Best ask volume
		/// </summary>
		public const string Str316Key = nameof(Str316);

		/// <summary>
		/// Best ask volume
		/// </summary>
		public static string Str316 => GetString(Str316Key);

		/// <summary>
		/// Rho
		/// </summary>
		public const string RhoKey = nameof(Rho);

		/// <summary>
		/// Rho
		/// </summary>
		public static string Rho => GetString(RhoKey);

		/// <summary>
		/// Accrued Coupon Interest
		/// </summary>
		public const string Str318Key = nameof(Str318);

		/// <summary>
		/// Accrued Coupon Interest
		/// </summary>
		public static string Str318 => GetString(Str318Key);

		/// <summary>
		/// Bid (max)
		/// </summary>
		public const string Str319Key = nameof(Str319);

		/// <summary>
		/// Bid (max)
		/// </summary>
		public static string Str319 => GetString(Str319Key);

		/// <summary>
		/// Ask (min)
		/// </summary>
		public const string Str320Key = nameof(Str320);

		/// <summary>
		/// Ask (min)
		/// </summary>
		public static string Str320 => GetString(Str320Key);

		/// <summary>
		/// Yield
		/// </summary>
		public const string Str321Key = nameof(Str321);

		/// <summary>
		/// Yield
		/// </summary>
		public static string Str321 => GetString(Str321Key);

		/// <summary>
		/// Time of last trade
		/// </summary>
		public const string Str322Key = nameof(Str322);

		/// <summary>
		/// Time of last trade
		/// </summary>
		public static string Str322 => GetString(Str322Key);

		/// <summary>
		/// Number of trades
		/// </summary>
		public const string NumOfTradesKey = nameof(NumOfTrades);

		/// <summary>
		/// Number of trades
		/// </summary>
		public static string NumOfTrades => GetString(NumOfTradesKey);

		/// <summary>
		/// Last trade ID
		/// </summary>
		public const string Str325Key = nameof(Str325);

		/// <summary>
		/// Last trade ID
		/// </summary>
		public static string Str325 => GetString(Str325Key);

		/// <summary>
		/// Best bid time
		/// </summary>
		public const string Str326Key = nameof(Str326);

		/// <summary>
		/// Best bid time
		/// </summary>
		public static string Str326 => GetString(Str326Key);

		/// <summary>
		/// Best ask time
		/// </summary>
		public const string Str327Key = nameof(Str327);

		/// <summary>
		/// Best ask time
		/// </summary>
		public static string Str327 => GetString(Str327Key);

		/// <summary>
		/// Trend
		/// </summary>
		public const string Str328Key = nameof(Str328);

		/// <summary>
		/// Trend
		/// </summary>
		public static string Str328 => GetString(Str328Key);

		/// <summary>
		/// Initiator
		/// </summary>
		public const string Str329Key = nameof(Str329);

		/// <summary>
		/// Initiator
		/// </summary>
		public static string Str329 => GetString(Str329Key);

		/// <summary>
		/// Lot
		/// </summary>
		public const string Str330Key = nameof(Str330);

		/// <summary>
		/// Lot
		/// </summary>
		public static string Str330 => GetString(Str330Key);

		/// <summary>
		/// Number of shares
		/// </summary>
		public const string Str331Key = nameof(Str331);

		/// <summary>
		/// Number of shares
		/// </summary>
		public static string Str331 => GetString(Str331Key);

		/// <summary>
		/// Liquidity (current)
		/// </summary>
		public const string Str332Key = nameof(Str332);

		/// <summary>
		/// Liquidity (current)
		/// </summary>
		public static string Str332 => GetString(Str332Key);

		/// <summary>
		/// Liquidity (instantaneous)
		/// </summary>
		public const string Str333Key = nameof(Str333);

		/// <summary>
		/// Liquidity (instantaneous)
		/// </summary>
		public static string Str333 => GetString(Str333Key);

		/// <summary>
		/// Capital (long-term debt)
		/// </summary>
		public const string Str334Key = nameof(Str334);

		/// <summary>
		/// Capital (long-term debt)
		/// </summary>
		public static string Str334 => GetString(Str334Key);

		/// <summary>
		/// Capital (debt)
		/// </summary>
		public const string Str335Key = nameof(Str335);

		/// <summary>
		/// Capital (debt)
		/// </summary>
		public static string Str335 => GetString(Str335Key);

		/// <summary>
		/// Assets margin (gross)
		/// </summary>
		public const string Str336Key = nameof(Str336);

		/// <summary>
		/// Assets margin (gross)
		/// </summary>
		public static string Str336 => GetString(Str336Key);

		/// <summary>
		/// Assets margin
		/// </summary>
		public const string Str337Key = nameof(Str337);

		/// <summary>
		/// Assets margin
		/// </summary>
		public static string Str337 => GetString(Str337Key);

		/// <summary>
		/// Profit margin
		/// </summary>
		public const string Str338Key = nameof(Str338);

		/// <summary>
		/// Profit margin
		/// </summary>
		public static string Str338 => GetString(Str338Key);

		/// <summary>
		/// Beta
		/// </summary>
		public const string BetaKey = nameof(Beta);

		/// <summary>
		/// Beta
		/// </summary>
		public static string Beta => GetString(BetaKey);

		/// <summary>
		/// HV (week)
		/// </summary>
		public const string Str340Key = nameof(Str340);

		/// <summary>
		/// HV (week)
		/// </summary>
		public static string Str340 => GetString(Str340Key);

		/// <summary>
		/// HV (month)
		/// </summary>
		public const string Str341Key = nameof(Str341);

		/// <summary>
		/// HV (month)
		/// </summary>
		public static string Str341 => GetString(Str341Key);

		/// <summary>
		/// System
		/// </summary>
		public const string Str342Key = nameof(Str342);

		/// <summary>
		/// System
		/// </summary>
		public static string Str342 => GetString(Str342Key);

		/// <summary>
		/// From
		/// </summary>
		public const string Str343Key = nameof(Str343);

		/// <summary>
		/// From
		/// </summary>
		public static string Str343 => GetString(Str343Key);

		/// <summary>
		/// Start date, from which data needs to be retrieved.
		/// </summary>
		public const string Str344Key = nameof(Str344);

		/// <summary>
		/// Start date, from which data needs to be retrieved.
		/// </summary>
		public static string Str344 => GetString(Str344Key);

		/// <summary>
		/// Until
		/// </summary>
		public const string Str345Key = nameof(Str345);

		/// <summary>
		/// Until
		/// </summary>
		public static string Str345 => GetString(Str345Key);

		/// <summary>
		/// End date, until which data needs to be retrieved.
		/// </summary>
		public const string Str346Key = nameof(Str346);

		/// <summary>
		/// End date, until which data needs to be retrieved.
		/// </summary>
		public static string Str346 => GetString(Str346Key);

		/// <summary>
		/// Argument
		/// </summary>
		public const string Str347Key = nameof(Str347);

		/// <summary>
		/// Argument
		/// </summary>
		public static string Str347 => GetString(Str347Key);

		/// <summary>
		/// Additional argument for market data request.
		/// </summary>
		public const string Str348Key = nameof(Str348);

		/// <summary>
		/// Additional argument for market data request.
		/// </summary>
		public static string Str348 => GetString(Str348Key);

		/// <summary>
		/// Security code
		/// </summary>
		public const string Str349Key = nameof(Str349);

		/// <summary>
		/// Security code
		/// </summary>
		public static string Str349 => GetString(Str349Key);

		/// <summary>
		/// ID in SEDOL format (Stock Exchange Daily Official List).
		/// </summary>
		public const string Str351Key = nameof(Str351);

		/// <summary>
		/// ID in SEDOL format (Stock Exchange Daily Official List).
		/// </summary>
		public static string Str351 => GetString(Str351Key);

		/// <summary>
		/// ID in CUSIP format (Committee on Uniform Securities Identification Procedures).
		/// </summary>
		public const string Str352Key = nameof(Str352);

		/// <summary>
		/// ID in CUSIP format (Committee on Uniform Securities Identification Procedures).
		/// </summary>
		public static string Str352 => GetString(Str352Key);

		/// <summary>
		/// ID in ISIN format (International Securities Identification Number).
		/// </summary>
		public const string Str353Key = nameof(Str353);

		/// <summary>
		/// ID in ISIN format (International Securities Identification Number).
		/// </summary>
		public static string Str353 => GetString(Str353Key);

		/// <summary>
		/// ID in RIC format (Reuters Instrument Code).
		/// </summary>
		public const string Str354Key = nameof(Str354);

		/// <summary>
		/// ID in RIC format (Reuters Instrument Code).
		/// </summary>
		public static string Str354 => GetString(Str354Key);

		/// <summary>
		/// ID in Bloomberg format.
		/// </summary>
		public const string Str355Key = nameof(Str355);

		/// <summary>
		/// ID in Bloomberg format.
		/// </summary>
		public static string Str355 => GetString(Str355Key);

		/// <summary>
		/// ID in IQFeed format.
		/// </summary>
		public const string Str356Key = nameof(Str356);

		/// <summary>
		/// ID in IQFeed format.
		/// </summary>
		public static string Str356 => GetString(Str356Key);

		/// <summary>
		/// ID in Interactive Brokers format.
		/// </summary>
		public const string Str357Key = nameof(Str357);

		/// <summary>
		/// ID in Interactive Brokers format.
		/// </summary>
		public static string Str357 => GetString(Str357Key);

		/// <summary>
		/// ID in Plaza format.
		/// </summary>
		public const string Str358Key = nameof(Str358);

		/// <summary>
		/// ID in Plaza format.
		/// </summary>
		public static string Str358 => GetString(Str358Key);

		/// <summary>
		/// Type
		/// </summary>
		public const string TypeKey = nameof(Type);

		/// <summary>
		/// Type
		/// </summary>
		public static string Type => GetString(TypeKey);

		/// <summary>
		/// Security type.
		/// </summary>
		public const string Str360Key = nameof(Str360);

		/// <summary>
		/// Security type.
		/// </summary>
		public static string Str360 => GetString(Str360Key);

		/// <summary>
		/// Identifier
		/// </summary>
		public const string Str361Key = nameof(Str361);

		/// <summary>
		/// Identifier
		/// </summary>
		public static string Str361 => GetString(Str361Key);

		/// <summary>
		/// Security name.
		/// </summary>
		public const string Str362Key = nameof(Str362);

		/// <summary>
		/// Security name.
		/// </summary>
		public static string Str362 => GetString(Str362Key);

		/// <summary>
		/// Short name
		/// </summary>
		public const string Str363Key = nameof(Str363);

		/// <summary>
		/// Short name
		/// </summary>
		public static string Str363 => GetString(Str363Key);

		/// <summary>
		/// Short security name.
		/// </summary>
		public const string Str364Key = nameof(Str364);

		/// <summary>
		/// Short security name.
		/// </summary>
		public static string Str364 => GetString(Str364Key);

		/// <summary>
		/// Volume step
		/// </summary>
		public const string VolumeStepKey = nameof(VolumeStep);

		/// <summary>
		/// Volume step
		/// </summary>
		public static string VolumeStep => GetString(VolumeStepKey);

		/// <summary>
		/// Minimum volume step.
		/// </summary>
		public const string Str366Key = nameof(Str366);

		/// <summary>
		/// Minimum volume step.
		/// </summary>
		public static string Str366 => GetString(Str366Key);

		/// <summary>
		/// Lot volume.
		/// </summary>
		public const string LotVolumeKey = nameof(LotVolume);

		/// <summary>
		/// Lot volume.
		/// </summary>
		public static string LotVolume => GetString(LotVolumeKey);

		/// <summary>
		/// Price step
		/// </summary>
		public const string PriceStepKey = nameof(PriceStep);

		/// <summary>
		/// Price step
		/// </summary>
		public static string PriceStep => GetString(PriceStepKey);

		/// <summary>
		/// Minimum price step.
		/// </summary>
		public const string MinPriceStepKey = nameof(MinPriceStep);

		/// <summary>
		/// Minimum price step.
		/// </summary>
		public static string MinPriceStep => GetString(MinPriceStepKey);

		/// <summary>
		/// Expiration date
		/// </summary>
		public const string ExpiryDateKey = nameof(ExpiryDate);

		/// <summary>
		/// Expiration date
		/// </summary>
		public static string ExpiryDate => GetString(ExpiryDateKey);

		/// <summary>
		/// Security expiration date (for derivatives - expiration, for bonds — redemption).
		/// </summary>
		public const string Str371Key = nameof(Str371);

		/// <summary>
		/// Security expiration date (for derivatives - expiration, for bonds — redemption).
		/// </summary>
		public static string Str371 => GetString(Str371Key);

		/// <summary>
		/// Settlement date
		/// </summary>
		public const string SettlementDateKey = nameof(SettlementDate);

		/// <summary>
		/// Settlement date
		/// </summary>
		public static string SettlementDate => GetString(SettlementDateKey);

		/// <summary>
		/// Settlement date for security (for derivatives and bonds).
		/// </summary>
		public const string Str373Key = nameof(Str373);

		/// <summary>
		/// Settlement date for security (for derivatives and bonds).
		/// </summary>
		public static string Str373 => GetString(Str373Key);

		/// <summary>
		/// Underlying asset
		/// </summary>
		public const string UnderlyingAssetKey = nameof(UnderlyingAsset);

		/// <summary>
		/// Underlying asset
		/// </summary>
		public static string UnderlyingAsset => GetString(UnderlyingAssetKey);

		/// <summary>
		/// Underlying asset code, on which the current security is based.
		/// </summary>
		public const string UnderlyingAssetCodeKey = nameof(UnderlyingAssetCode);

		/// <summary>
		/// Underlying asset code, on which the current security is based.
		/// </summary>
		public static string UnderlyingAssetCode => GetString(UnderlyingAssetCodeKey);

		/// <summary>
		/// Strike
		/// </summary>
		public const string StrikeKey = nameof(Strike);

		/// <summary>
		/// Strike
		/// </summary>
		public static string Strike => GetString(StrikeKey);

		/// <summary>
		/// Option strike price.
		/// </summary>
		public const string OptionStrikePriceKey = nameof(OptionStrikePrice);

		/// <summary>
		/// Option strike price.
		/// </summary>
		public static string OptionStrikePrice => GetString(OptionStrikePriceKey);

		/// <summary>
		/// Options contract
		/// </summary>
		public const string OptionsContractKey = nameof(OptionsContract);

		/// <summary>
		/// Options contract
		/// </summary>
		public static string OptionsContract => GetString(OptionsContractKey);

		/// <summary>
		/// Option contract type.
		/// </summary>
		public const string OptionContractTypeKey = nameof(OptionContractType);

		/// <summary>
		/// Option contract type.
		/// </summary>
		public static string OptionContractType => GetString(OptionContractTypeKey);

		/// <summary>
		/// Binary option
		/// </summary>
		public const string BinaryOptionKey = nameof(BinaryOption);

		/// <summary>
		/// Binary option
		/// </summary>
		public static string BinaryOption => GetString(BinaryOptionKey);

		/// <summary>
		/// Type of binary option.
		/// </summary>
		public const string TypeBinaryOptionKey = nameof(TypeBinaryOption);

		/// <summary>
		/// Type of binary option.
		/// </summary>
		public static string TypeBinaryOption => GetString(TypeBinaryOptionKey);

		/// <summary>
		/// Trading security currency.
		/// </summary>
		public const string Str382Key = nameof(Str382);

		/// <summary>
		/// Trading security currency.
		/// </summary>
		public static string Str382 => GetString(Str382Key);

		/// <summary>
		/// Class
		/// </summary>
		public const string ClassKey = nameof(Class);

		/// <summary>
		/// Class
		/// </summary>
		public static string Class => GetString(ClassKey);

		/// <summary>
		/// Security class.
		/// </summary>
		public const string SecurityClassKey = nameof(SecurityClass);

		/// <summary>
		/// Security class.
		/// </summary>
		public static string SecurityClass => GetString(SecurityClassKey);

		/// <summary>
		/// Active
		/// </summary>
		public const string SecurityActiveKey = nameof(SecurityActive);

		/// <summary>
		/// Active
		/// </summary>
		public static string SecurityActive => GetString(SecurityActiveKey);

		/// <summary>
		/// Suspended
		/// </summary>
		public const string SecuritySuspendedKey = nameof(SecuritySuspended);

		/// <summary>
		/// Suspended
		/// </summary>
		public static string SecuritySuspended => GetString(SecuritySuspendedKey);

		/// <summary>
		/// Stock
		/// </summary>
		public const string StockKey = nameof(Stock);

		/// <summary>
		/// Stock
		/// </summary>
		public static string Stock => GetString(StockKey);

		/// <summary>
		/// Future contract
		/// </summary>
		public const string FutureContractKey = nameof(FutureContract);

		/// <summary>
		/// Future contract
		/// </summary>
		public static string FutureContract => GetString(FutureContractKey);

		/// <summary>
		/// Index
		/// </summary>
		public const string IndexKey = nameof(Index);

		/// <summary>
		/// Index
		/// </summary>
		public static string Index => GetString(IndexKey);

		/// <summary>
		/// Bond
		/// </summary>
		public const string BondKey = nameof(Bond);

		/// <summary>
		/// Bond
		/// </summary>
		public static string Bond => GetString(BondKey);

		/// <summary>
		/// Warrant
		/// </summary>
		public const string WarrantKey = nameof(Warrant);

		/// <summary>
		/// Warrant
		/// </summary>
		public static string Warrant => GetString(WarrantKey);

		/// <summary>
		/// Forward
		/// </summary>
		public const string ForwardKey = nameof(Forward);

		/// <summary>
		/// Forward
		/// </summary>
		public static string Forward => GetString(ForwardKey);

		/// <summary>
		/// Swop
		/// </summary>
		public const string SwapKey = nameof(Swap);

		/// <summary>
		/// Swop
		/// </summary>
		public static string Swap => GetString(SwapKey);

		/// <summary>
		/// Product
		/// </summary>
		public const string ProductKey = nameof(Product);

		/// <summary>
		/// Product
		/// </summary>
		public static string Product => GetString(ProductKey);

		/// <summary>
		/// news
		/// </summary>
		public const string Str395Key = nameof(Str395);

		/// <summary>
		/// news
		/// </summary>
		public static string Str395 => GetString(Str395Key);

		/// <summary>
		/// Weather
		/// </summary>
		public const string WeatherKey = nameof(Weather);

		/// <summary>
		/// Weather
		/// </summary>
		public static string Weather => GetString(WeatherKey);

		/// <summary>
		/// Share (Open-end fund)
		/// </summary>
		public const string ShareFundKey = nameof(ShareFund);

		/// <summary>
		/// Share (Open-end fund)
		/// </summary>
		public static string ShareFund => GetString(ShareFundKey);

		/// <summary>
		/// Cryptocurrency
		/// </summary>
		public const string CryptocurrencyKey = nameof(Cryptocurrency);

		/// <summary>
		/// Cryptocurrency
		/// </summary>
		public static string Cryptocurrency => GetString(CryptocurrencyKey);

		/// <summary>
		/// Assigned
		/// </summary>
		public const string Str399Key = nameof(Str399);

		/// <summary>
		/// Assigned
		/// </summary>
		public static string Str399 => GetString(Str399Key);

		/// <summary>
		/// Suspended
		/// </summary>
		public const string Str400Key = nameof(Str400);

		/// <summary>
		/// Suspended
		/// </summary>
		public static string Str400 => GetString(Str400Key);

		/// <summary>
		/// Completed (forced)
		/// </summary>
		public const string Str401Key = nameof(Str401);

		/// <summary>
		/// Completed (forced)
		/// </summary>
		public static string Str401 => GetString(Str401Key);

		/// <summary>
		/// Completed
		/// </summary>
		public const string Str402Key = nameof(Str402);

		/// <summary>
		/// Completed
		/// </summary>
		public static string Str402 => GetString(Str402Key);

		/// <summary>
		/// Buy
		/// </summary>
		public const string Str403Key = nameof(Str403);

		/// <summary>
		/// Buy
		/// </summary>
		public static string Str403 => GetString(Str403Key);

		/// <summary>
		/// Sell
		/// </summary>
		public const string Str404Key = nameof(Str404);

		/// <summary>
		/// Sell
		/// </summary>
		public static string Str404 => GetString(Str404Key);

		/// <summary>
		/// Put in queue
		/// </summary>
		public const string Str405Key = nameof(Str405);

		/// <summary>
		/// Put in queue
		/// </summary>
		public static string Str405 => GetString(Str405Key);

		/// <summary>
		/// FOK
		/// </summary>
		public const string FOKKey = nameof(FOK);

		/// <summary>
		/// FOK
		/// </summary>
		public static string FOK => GetString(FOKKey);

		/// <summary>
		/// Fill Or Kill
		/// </summary>
		public const string FillOrKillKey = nameof(FillOrKill);

		/// <summary>
		/// Fill Or Kill
		/// </summary>
		public static string FillOrKill => GetString(FillOrKillKey);

		/// <summary>
		/// IOC
		/// </summary>
		public const string IOCKey = nameof(IOC);

		/// <summary>
		/// IOC
		/// </summary>
		public static string IOC => GetString(IOCKey);

		/// <summary>
		/// Immediate Or Cancel
		/// </summary>
		public const string ImmediateOrCancelKey = nameof(ImmediateOrCancel);

		/// <summary>
		/// Immediate Or Cancel
		/// </summary>
		public static string ImmediateOrCancel => GetString(ImmediateOrCancelKey);

		/// <summary>
		/// Work schedule (time, holidays etc.).
		/// </summary>
		public const string Str408Key = nameof(Str408);

		/// <summary>
		/// Work schedule (time, holidays etc.).
		/// </summary>
		public static string Str408 => GetString(Str408Key);

		/// <summary>
		/// Periods
		/// </summary>
		public const string Str409Key = nameof(Str409);

		/// <summary>
		/// Periods
		/// </summary>
		public static string Str409 => GetString(Str409Key);

		/// <summary>
		/// Schedule validity periods.
		/// </summary>
		public const string Str410Key = nameof(Str410);

		/// <summary>
		/// Schedule validity periods.
		/// </summary>
		public static string Str410 => GetString(Str410Key);

		/// <summary>
		/// Working days
		/// </summary>
		public const string Str411Key = nameof(Str411);

		/// <summary>
		/// Working days
		/// </summary>
		public static string Str411 => GetString(Str411Key);

		/// <summary>
		/// Working days, falling on Saturday and Sunday.
		/// </summary>
		public const string Str412Key = nameof(Str412);

		/// <summary>
		/// Working days, falling on Saturday and Sunday.
		/// </summary>
		public static string Str412 => GetString(Str412Key);

		/// <summary>
		/// Holidays
		/// </summary>
		public const string Str413Key = nameof(Str413);

		/// <summary>
		/// Holidays
		/// </summary>
		public static string Str413 => GetString(Str413Key);

		/// <summary>
		/// Holidays that fall on workdays.
		/// </summary>
		public const string Str414Key = nameof(Str414);

		/// <summary>
		/// Holidays that fall on workdays.
		/// </summary>
		public static string Str414 => GetString(Str414Key);

		/// <summary>
		/// Value {0} has duplicates.
		/// </summary>
		public const string Str415ParamsKey = nameof(Str415Params);

		/// <summary>
		/// Value {0} has duplicates.
		/// </summary>
		public static string Str415Params => GetString(Str415ParamsKey);

		/// <summary>
		/// Schedule
		/// </summary>
		public const string Str416Key = nameof(Str416);

		/// <summary>
		/// Schedule
		/// </summary>
		public static string Str416 => GetString(Str416Key);

		/// <summary>
		/// Schedule validity period.
		/// </summary>
		public const string Str417Key = nameof(Str417);

		/// <summary>
		/// Schedule validity period.
		/// </summary>
		public static string Str417 => GetString(Str417Key);

		/// <summary>
		/// End date
		/// </summary>
		public const string Str418Key = nameof(Str418);

		/// <summary>
		/// End date
		/// </summary>
		public static string Str418 => GetString(Str418Key);

		/// <summary>
		/// Schedule expiration date.
		/// </summary>
		public const string Str419Key = nameof(Str419);

		/// <summary>
		/// Schedule expiration date.
		/// </summary>
		public static string Str419 => GetString(Str419Key);

		/// <summary>
		/// Work schedule within day.
		/// </summary>
		public const string Str420Key = nameof(Str420);

		/// <summary>
		/// Work schedule within day.
		/// </summary>
		public static string Str420 => GetString(Str420Key);

		/// <summary>
		/// Inserted quote must have price {0}. Current price is equal to {1}.
		/// </summary>
		public const string Str421ParamsKey = nameof(Str421Params);

		/// <summary>
		/// Inserted quote must have price {0}. Current price is equal to {1}.
		/// </summary>
		public static string Str421Params => GetString(Str421ParamsKey);

		/// <summary>
		/// Inserted quote must have {0} direction. Current direction is {1}.
		/// </summary>
		public const string Str422ParamsKey = nameof(Str422Params);

		/// <summary>
		/// Inserted quote must have {0} direction. Current direction is {1}.
		/// </summary>
		public static string Str422Params => GetString(Str422ParamsKey);

		/// <summary>
		/// Inserted quote must be for security {0}. Current security {1}.
		/// </summary>
		public const string Str423ParamsKey = nameof(Str423Params);

		/// <summary>
		/// Inserted quote must be for security {0}. Current security {1}.
		/// </summary>
		public static string Str423Params => GetString(Str423ParamsKey);

		/// <summary>
		/// Position size at the beginning of the trading session.
		/// </summary>
		public const string Str424Key = nameof(Str424);

		/// <summary>
		/// Position size at the beginning of the trading session.
		/// </summary>
		public static string Str424 => GetString(Str424Key);

		/// <summary>
		/// Current position size.
		/// </summary>
		public const string Str425Key = nameof(Str425);

		/// <summary>
		/// Current position size.
		/// </summary>
		public static string Str425 => GetString(Str425Key);

		/// <summary>
		/// Position size, registered for active orders.
		/// </summary>
		public const string Str426Key = nameof(Str426);

		/// <summary>
		/// Position size, registered for active orders.
		/// </summary>
		public static string Str426 => GetString(Str426Key);

		/// <summary>
		/// Required when extra information is stored in the program.
		/// </summary>
		public const string Str427Key = nameof(Str427);

		/// <summary>
		/// Required when extra information is stored in the program.
		/// </summary>
		public static string Str427 => GetString(Str427Key);

		/// <summary>
		/// Position price, calculated using current market price of security.
		/// </summary>
		public const string Str428Key = nameof(Str428);

		/// <summary>
		/// Position price, calculated using current market price of security.
		/// </summary>
		public static string Str428 => GetString(Str428Key);

		/// <summary>
		/// Average price, calculated using execution prices.
		/// </summary>
		public const string Str429Key = nameof(Str429);

		/// <summary>
		/// Average price, calculated using execution prices.
		/// </summary>
		public static string Str429 => GetString(Str429Key);

		/// <summary>
		/// Unrealized profit, calculated with including open position.
		/// </summary>
		public const string Str430Key = nameof(Str430);

		/// <summary>
		/// Unrealized profit, calculated with including open position.
		/// </summary>
		public static string Str430 => GetString(Str430Key);

		/// <summary>
		/// Realized profit, calculated from closed trades.
		/// </summary>
		public const string Str431Key = nameof(Str431);

		/// <summary>
		/// Realized profit, calculated from closed trades.
		/// </summary>
		public static string Str431 => GetString(Str431Key);

		/// <summary>
		/// Variation margin.
		/// </summary>
		public const string Str432Key = nameof(Str432);

		/// <summary>
		/// Variation margin.
		/// </summary>
		public static string Str432 => GetString(Str432Key);

		/// <summary>
		/// Total commission.
		/// </summary>
		public const string Str433Key = nameof(Str433);

		/// <summary>
		/// Total commission.
		/// </summary>
		public static string Str433 => GetString(Str433Key);

		/// <summary>
		/// Changed
		/// </summary>
		public const string Str434Key = nameof(Str434);

		/// <summary>
		/// Changed
		/// </summary>
		public static string Str434 => GetString(Str434Key);

		/// <summary>
		/// Time of last position change.
		/// </summary>
		public const string Str435Key = nameof(Str435);

		/// <summary>
		/// Time of last position change.
		/// </summary>
		public static string Str435 => GetString(Str435Key);

		/// <summary>
		/// Statistics
		/// </summary>
		public const string Str436Key = nameof(Str436);

		/// <summary>
		/// Statistics
		/// </summary>
		public static string Str436 => GetString(Str436Key);

		/// <summary>
		/// Derivatives
		/// </summary>
		public const string Str437Key = nameof(Str437);

		/// <summary>
		/// Derivatives
		/// </summary>
		public static string Str437 => GetString(Str437Key);

		/// <summary>
		/// Stock exchange, where board is situated.
		/// </summary>
		public const string Str479Key = nameof(Str479);

		/// <summary>
		/// Stock exchange, where board is situated.
		/// </summary>
		public static string Str479 => GetString(Str479Key);

		/// <summary>
		/// Wrong maximum depth value of market depth.
		/// </summary>
		public const string Str480Key = nameof(Str480);

		/// <summary>
		/// Wrong maximum depth value of market depth.
		/// </summary>
		public static string Str480 => GetString(Str480Key);

		/// <summary>
		/// New depth cannot be less than zero.
		/// </summary>
		public const string Str481Key = nameof(Str481);

		/// <summary>
		/// New depth cannot be less than zero.
		/// </summary>
		public static string Str481 => GetString(Str481Key);

		/// <summary>
		/// New depth cannot be greater than the current {0}.
		/// </summary>
		public const string Str482ParamsKey = nameof(Str482Params);

		/// <summary>
		/// New depth cannot be greater than the current {0}.
		/// </summary>
		public static string Str482Params => GetString(Str482ParamsKey);

		/// <summary>
		/// Depth index cannot be less than zero.
		/// </summary>
		public const string Str483Key = nameof(Str483);

		/// <summary>
		/// Depth index cannot be less than zero.
		/// </summary>
		public static string Str483 => GetString(Str483Key);

		/// <summary>
		/// Depth cannot be less than zero.
		/// </summary>
		public const string Str484Key = nameof(Str484);

		/// <summary>
		/// Depth cannot be less than zero.
		/// </summary>
		public static string Str484 => GetString(Str484Key);

		/// <summary>
		/// Incoming quotes did not pass verification.
		/// </summary>
		public const string Str485Key = nameof(Str485);

		/// <summary>
		/// Incoming quotes did not pass verification.
		/// </summary>
		public static string Str485 => GetString(Str485Key);

		/// <summary>
		/// Market depth exceeded a maximum depth of {0} and become equal to {1}.
		/// </summary>
		public const string Str486ParamsKey = nameof(Str486Params);

		/// <summary>
		/// Market depth exceeded a maximum depth of {0} and become equal to {1}.
		/// </summary>
		public static string Str486Params => GetString(Str486ParamsKey);

		/// <summary>
		/// Quote for specified price is missing.
		/// </summary>
		public const string Str487Key = nameof(Str487);

		/// <summary>
		/// Quote for specified price is missing.
		/// </summary>
		public static string Str487 => GetString(Str487Key);

		/// <summary>
		/// Quote price is incorrect.
		/// </summary>
		public const string Str488Key = nameof(Str488);

		/// <summary>
		/// Quote price is incorrect.
		/// </summary>
		public static string Str488 => GetString(Str488Key);

		/// <summary>
		/// Cannot delete negative volume.
		/// </summary>
		public const string Str489Key = nameof(Str489);

		/// <summary>
		/// Cannot delete negative volume.
		/// </summary>
		public static string Str489 => GetString(Str489Key);

		/// <summary>
		/// Volume of quote {0} is less than the required deletion volume.
		/// </summary>
		public const string Str490ParamsKey = nameof(Str490Params);

		/// <summary>
		/// Volume of quote {0} is less than the required deletion volume.
		/// </summary>
		public static string Str490Params => GetString(Str490ParamsKey);

		/// <summary>
		/// Quote has a wrong security {0} for market depth for {1}.
		/// </summary>
		public const string Str491ParamsKey = nameof(Str491Params);

		/// <summary>
		/// Quote has a wrong security {0} for market depth for {1}.
		/// </summary>
		public static string Str491Params => GetString(Str491ParamsKey);

		/// <summary>
		/// Bid can only be to buy.
		/// </summary>
		public const string Str492Key = nameof(Str492);

		/// <summary>
		/// Bid can only be to buy.
		/// </summary>
		public static string Str492 => GetString(Str492Key);

		/// <summary>
		/// Ask can only be to buy.
		/// </summary>
		public const string Str493Key = nameof(Str493);

		/// <summary>
		/// Ask can only be to buy.
		/// </summary>
		public static string Str493 => GetString(Str493Key);

		/// <summary>
		/// Quote to buy.
		/// </summary>
		public const string Str494Key = nameof(Str494);

		/// <summary>
		/// Quote to buy.
		/// </summary>
		public static string Str494 => GetString(Str494Key);

		/// <summary>
		/// Quote to sell.
		/// </summary>
		public const string Str495Key = nameof(Str495);

		/// <summary>
		/// Quote to sell.
		/// </summary>
		public static string Str495 => GetString(Str495Key);

		/// <summary>
		/// Price spread
		/// </summary>
		public const string Str496Key = nameof(Str496);

		/// <summary>
		/// Price spread
		/// </summary>
		public static string Str496 => GetString(Str496Key);

		/// <summary>
		/// Size of price spread.
		/// </summary>
		public const string Str497Key = nameof(Str497);

		/// <summary>
		/// Size of price spread.
		/// </summary>
		public static string Str497 => GetString(Str497Key);

		/// <summary>
		/// Volume spread
		/// </summary>
		public const string Str498Key = nameof(Str498);

		/// <summary>
		/// Volume spread
		/// </summary>
		public static string Str498 => GetString(Str498Key);

		/// <summary>
		/// Size of volume spread. If value is negative, then best ask has a larger volume than best bid.
		/// </summary>
		public const string Str499Key = nameof(Str499);

		/// <summary>
		/// Size of volume spread. If value is negative, then best ask has a larger volume than best bid.
		/// </summary>
		public static string Str499 => GetString(Str499Key);

		/// <summary>
		/// Spread
		/// </summary>
		public const string SpreadKey = nameof(Spread);

		/// <summary>
		/// Spread
		/// </summary>
		public static string Spread => GetString(SpreadKey);

		/// <summary>
		/// Spread middle
		/// </summary>
		public const string SpreadMiddleKey = nameof(SpreadMiddle);

		/// <summary>
		/// Spread middle
		/// </summary>
		public static string SpreadMiddle => GetString(SpreadMiddleKey);

		/// <summary>
		/// Own trade
		/// </summary>
		public const string Str502Key = nameof(Str502);

		/// <summary>
		/// Own trade
		/// </summary>
		public static string Str502 => GetString(Str502Key);

		/// <summary>
		/// Information about own trade.
		/// </summary>
		public const string Str503Key = nameof(Str503);

		/// <summary>
		/// Information about own trade.
		/// </summary>
		public static string Str503 => GetString(Str503Key);

		/// <summary>
		/// Order
		/// </summary>
		public const string Str504Key = nameof(Str504);

		/// <summary>
		/// Order
		/// </summary>
		public static string Str504 => GetString(Str504Key);

		/// <summary>
		/// Order, for which a trade was filled.
		/// </summary>
		public const string Str505Key = nameof(Str505);

		/// <summary>
		/// Order, for which a trade was filled.
		/// </summary>
		public static string Str505 => GetString(Str505Key);

		/// <summary>
		/// Trade
		/// </summary>
		public const string Str506Key = nameof(Str506);

		/// <summary>
		/// Trade
		/// </summary>
		public static string Str506 => GetString(Str506Key);

		/// <summary>
		/// Information about tick trade.
		/// </summary>
		public const string Str507Key = nameof(Str507);

		/// <summary>
		/// Information about tick trade.
		/// </summary>
		public static string Str507 => GetString(Str507Key);

		/// <summary>
		/// {0} from order {1}
		/// </summary>
		public const string Str509ParamsKey = nameof(Str509Params);

		/// <summary>
		/// {0} from order {1}
		/// </summary>
		public static string Str509Params => GetString(Str509ParamsKey);

		/// <summary>
		/// News, released for a particular security, whole board or globally for the market.
		/// </summary>
		public const string Str510Key = nameof(Str510);

		/// <summary>
		/// News, released for a particular security, whole board or globally for the market.
		/// </summary>
		public static string Str510 => GetString(Str510Key);

		/// <summary>
		/// Stock exchange board
		/// </summary>
		public const string Str511Key = nameof(Str511);

		/// <summary>
		/// Stock exchange board
		/// </summary>
		public static string Str511 => GetString(Str511Key);

		/// <summary>
		/// Stock exchange board, for which news have been published.
		/// </summary>
		public const string Str512Key = nameof(Str512);

		/// <summary>
		/// Stock exchange board, for which news have been published.
		/// </summary>
		public static string Str512 => GetString(Str512Key);

		/// <summary>
		/// Security, for which news have been published.
		/// </summary>
		public const string Str513Key = nameof(Str513);

		/// <summary>
		/// Security, for which news have been published.
		/// </summary>
		public static string Str513 => GetString(Str513Key);

		/// <summary>
		/// Time (local)
		/// </summary>
		public const string Str514Key = nameof(Str514);

		/// <summary>
		/// Time (local)
		/// </summary>
		public static string Str514 => GetString(Str514Key);

		/// <summary>
		/// News received local time.
		/// </summary>
		public const string Str515Key = nameof(Str515);

		/// <summary>
		/// News received local time.
		/// </summary>
		public static string Str515 => GetString(Str515Key);

		/// <summary>
		/// Information about the order.
		/// </summary>
		public const string Str516Key = nameof(Str516);

		/// <summary>
		/// Information about the order.
		/// </summary>
		public static string Str516 => GetString(Str516Key);

		/// <summary>
		/// Latency in registration
		/// </summary>
		public const string Str517Key = nameof(Str517);

		/// <summary>
		/// Latency in registration
		/// </summary>
		public static string Str517 => GetString(Str517Key);

		/// <summary>
		/// Time taken to register an order.
		/// </summary>
		public const string Str518Key = nameof(Str518);

		/// <summary>
		/// Time taken to register an order.
		/// </summary>
		public static string Str518 => GetString(Str518Key);

		/// <summary>
		/// Latency in cancellation
		/// </summary>
		public const string Str519Key = nameof(Str519);

		/// <summary>
		/// Latency in cancellation
		/// </summary>
		public static string Str519 => GetString(Str519Key);

		/// <summary>
		/// Time taken to cancel an order.
		/// </summary>
		public const string Str520Key = nameof(Str520);

		/// <summary>
		/// Time taken to cancel an order.
		/// </summary>
		public static string Str520 => GetString(Str520Key);

		/// <summary>
		/// ID (string)
		/// </summary>
		public const string Str521Key = nameof(Str521);

		/// <summary>
		/// ID (string)
		/// </summary>
		public static string Str521 => GetString(Str521Key);

		/// <summary>
		/// Placing time
		/// </summary>
		public const string Str522Key = nameof(Str522);

		/// <summary>
		/// Placing time
		/// </summary>
		public static string Str522 => GetString(Str522Key);

		/// <summary>
		/// Order placing time on stock exchange.
		/// </summary>
		public const string Str523Key = nameof(Str523);

		/// <summary>
		/// Order placing time on stock exchange.
		/// </summary>
		public static string Str523 => GetString(Str523Key);

		/// <summary>
		/// Security, for which an order is being placed.
		/// </summary>
		public const string Str524Key = nameof(Str524);

		/// <summary>
		/// Security, for which an order is being placed.
		/// </summary>
		public static string Str524 => GetString(Str524Key);

		/// <summary>
		/// Portfolio, in which the order is being traded.
		/// </summary>
		public const string Str525Key = nameof(Str525);

		/// <summary>
		/// Portfolio, in which the order is being traded.
		/// </summary>
		public static string Str525 => GetString(Str525Key);

		/// <summary>
		/// Messages for order
		/// </summary>
		public const string Str526Key = nameof(Str526);

		/// <summary>
		/// Messages for order
		/// </summary>
		public static string Str526 => GetString(Str526Key);

		/// <summary>
		/// Messages for order (created by the trading system when registered, changed or cancelled).
		/// </summary>
		public const string Str527Key = nameof(Str527);

		/// <summary>
		/// Messages for order (created by the trading system when registered, changed or cancelled).
		/// </summary>
		public static string Str527 => GetString(Str527Key);

		/// <summary>
		/// Time of last change
		/// </summary>
		public const string Str528Key = nameof(Str528);

		/// <summary>
		/// Time of last change
		/// </summary>
		public static string Str528 => GetString(Str528Key);

		/// <summary>
		/// Time of last order change (Cancellation, Fill).
		/// </summary>
		public const string Str529Key = nameof(Str529);

		/// <summary>
		/// Time of last order change (Cancellation, Fill).
		/// </summary>
		public static string Str529 => GetString(Str529Key);

		/// <summary>
		/// Last change local time
		/// </summary>
		public const string Str530Key = nameof(Str530);

		/// <summary>
		/// Last change local time
		/// </summary>
		public static string Str530 => GetString(Str530Key);

		/// <summary>
		/// Last trade change local time (Cancellation, Fill).
		/// </summary>
		public const string Str531Key = nameof(Str531);

		/// <summary>
		/// Last trade change local time (Cancellation, Fill).
		/// </summary>
		public static string Str531 => GetString(Str531Key);

		/// <summary>
		/// Linked order
		/// </summary>
		public const string Str532Key = nameof(Str532);

		/// <summary>
		/// Linked order
		/// </summary>
		public static string Str532 => GetString(Str532Key);

		/// <summary>
		/// Order created by a stop-order during condition activation (empty value, if stop-condition has not been activated).
		/// </summary>
		public const string Str533Key = nameof(Str533);

		/// <summary>
		/// Order created by a stop-order during condition activation (empty value, if stop-condition has not been activated).
		/// </summary>
		public static string Str533 => GetString(Str533Key);

		/// <summary>
		/// {0}/{1} {2} {3} {4} Price={5} Volume={6} State={7} Bal={8} State={9}
		/// </summary>
		public const string Str534ParamsKey = nameof(Str534Params);

		/// <summary>
		/// {0}/{1} {2} {3} {4} Price={5} Volume={6} State={7} Bal={8} State={9}
		/// </summary>
		public static string Str534Params => GetString(Str534ParamsKey);

		/// <summary>
		/// Orders log row.
		/// </summary>
		public const string Str535Key = nameof(Str535);

		/// <summary>
		/// Orders log row.
		/// </summary>
		public static string Str535 => GetString(Str535Key);

		/// <summary>
		/// {0} orders {1}
		/// </summary>
		public const string Str536ParamsKey = nameof(Str536Params);

		/// <summary>
		/// {0} orders {1}
		/// </summary>
		public static string Str536Params => GetString(Str536ParamsKey);

		/// <summary>
		/// Cancellation
		/// </summary>
		public const string Str537Key = nameof(Str537);

		/// <summary>
		/// Cancellation
		/// </summary>
		public static string Str537 => GetString(Str537Key);

		/// <summary>
		/// Registration
		/// </summary>
		public const string Str538Key = nameof(Str538);

		/// <summary>
		/// Registration
		/// </summary>
		public static string Str538 => GetString(Str538Key);

		/// <summary>
		/// Matching
		/// </summary>
		public const string Str539Key = nameof(Str539);

		/// <summary>
		/// Matching
		/// </summary>
		public static string Str539 => GetString(Str539Key);

		/// <summary>
		/// per trade {0}
		/// </summary>
		public const string Str540ParamsKey = nameof(Str540Params);

		/// <summary>
		/// per trade {0}
		/// </summary>
		public static string Str540Params => GetString(Str540ParamsKey);

		/// <summary>
		/// Portfolio, describing the trading account and the size of its generated commission.
		/// </summary>
		public const string Str541Key = nameof(Str541);

		/// <summary>
		/// Portfolio, describing the trading account and the size of its generated commission.
		/// </summary>
		public static string Str541 => GetString(Str541Key);

		/// <summary>
		/// Leverage
		/// </summary>
		public const string LeverageKey = nameof(Leverage);

		/// <summary>
		/// Leverage
		/// </summary>
		public static string Leverage => GetString(LeverageKey);

		/// <summary>
		/// Stock exchange board, for which the current portfolio is active.
		/// </summary>
		public const string Str544Key = nameof(Str544);

		/// <summary>
		/// Stock exchange board, for which the current portfolio is active.
		/// </summary>
		public static string Str544 => GetString(Str544Key);

		/// <summary>
		/// Anonymous account
		/// </summary>
		public const string Str545Key = nameof(Str545);

		/// <summary>
		/// Anonymous account
		/// </summary>
		public static string Str545 => GetString(Str545Key);

		/// <summary>
		/// Security (shares, futures, options etc.).
		/// </summary>
		public const string Str546Key = nameof(Str546);

		/// <summary>
		/// Security (shares, futures, options etc.).
		/// </summary>
		public static string Str546 => GetString(Str546Key);

		/// <summary>
		/// Decimals
		/// </summary>
		public const string DecimalsKey = nameof(Decimals);

		/// <summary>
		/// Decimals
		/// </summary>
		public static string Decimals => GetString(DecimalsKey);

		/// <summary>
		/// Number of digits in price after coma.
		/// </summary>
		public const string Str548Key = nameof(Str548);

		/// <summary>
		/// Number of digits in price after coma.
		/// </summary>
		public static string Str548 => GetString(Str548Key);

		/// <summary>
		/// Stock exchange board where the security is traded.
		/// </summary>
		public const string Str549Key = nameof(Str549);

		/// <summary>
		/// Stock exchange board where the security is traded.
		/// </summary>
		public static string Str549 => GetString(Str549Key);

		/// <summary>
		/// Underlying asset on which the current security is built.
		/// </summary>
		public const string Str550Key = nameof(Str550);

		/// <summary>
		/// Underlying asset on which the current security is built.
		/// </summary>
		public static string Str550 => GetString(Str550Key);

		/// <summary>
		/// Option type
		/// </summary>
		public const string Str551Key = nameof(Str551);

		/// <summary>
		/// Option type
		/// </summary>
		public static string Str551 => GetString(Str551Key);

		/// <summary>
		/// Binary
		/// </summary>
		public const string Str552Key = nameof(Str552);

		/// <summary>
		/// Binary
		/// </summary>
		public static string Str552 => GetString(Str552Key);

		/// <summary>
		/// External ID
		/// </summary>
		public const string Str553Key = nameof(Str553);

		/// <summary>
		/// External ID
		/// </summary>
		public static string Str553 => GetString(Str553Key);

		/// <summary>
		/// Security ID in other systems.
		/// </summary>
		public const string Str554Key = nameof(Str554);

		/// <summary>
		/// Security ID in other systems.
		/// </summary>
		public static string Str554 => GetString(Str554Key);

		/// <summary>
		/// Step price.
		/// </summary>
		public const string Str555Key = nameof(Str555);

		/// <summary>
		/// Step price.
		/// </summary>
		public static string Str555 => GetString(Str555Key);

		/// <summary>
		/// Step price cannot be less than zero.
		/// </summary>
		public const string Str556Key = nameof(Str556);

		/// <summary>
		/// Step price cannot be less than zero.
		/// </summary>
		public static string Str556 => GetString(Str556Key);

		/// <summary>
		/// Information about the last trade.
		/// </summary>
		public const string Str557Key = nameof(Str557);

		/// <summary>
		/// Information about the last trade.
		/// </summary>
		public static string Str557 => GetString(Str557Key);

		/// <summary>
		/// First trade price
		/// </summary>
		public const string Str558Key = nameof(Str558);

		/// <summary>
		/// First trade price
		/// </summary>
		public static string Str558 => GetString(Str558Key);

		/// <summary>
		/// First trade price for the session.
		/// </summary>
		public const string Str559Key = nameof(Str559);

		/// <summary>
		/// First trade price for the session.
		/// </summary>
		public static string Str559 => GetString(Str559Key);

		/// <summary>
		/// Last trade price
		/// </summary>
		public const string Str560Key = nameof(Str560);

		/// <summary>
		/// Last trade price
		/// </summary>
		public static string Str560 => GetString(Str560Key);

		/// <summary>
		/// Last trade price for the previous session.
		/// </summary>
		public const string Str561Key = nameof(Str561);

		/// <summary>
		/// Last trade price for the previous session.
		/// </summary>
		public static string Str561 => GetString(Str561Key);

		/// <summary>
		/// Lowest price for the session.
		/// </summary>
		public const string Str562Key = nameof(Str562);

		/// <summary>
		/// Lowest price for the session.
		/// </summary>
		public static string Str562 => GetString(Str562Key);

		/// <summary>
		/// Highest price
		/// </summary>
		public const string Str563Key = nameof(Str563);

		/// <summary>
		/// Highest price
		/// </summary>
		public static string Str563 => GetString(Str563Key);

		/// <summary>
		/// Highest price for the session.
		/// </summary>
		public const string Str564Key = nameof(Str564);

		/// <summary>
		/// Highest price for the session.
		/// </summary>
		public static string Str564 => GetString(Str564Key);

		/// <summary>
		/// Best bid
		/// </summary>
		public const string Str565Key = nameof(Str565);

		/// <summary>
		/// Best bid
		/// </summary>
		public static string Str565 => GetString(Str565Key);

		/// <summary>
		/// Best bid in market depth.
		/// </summary>
		public const string Str566Key = nameof(Str566);

		/// <summary>
		/// Best bid in market depth.
		/// </summary>
		public static string Str566 => GetString(Str566Key);

		/// <summary>
		/// Best ask
		/// </summary>
		public const string BestAskKey = nameof(BestAsk);

		/// <summary>
		/// Best ask
		/// </summary>
		public static string BestAsk => GetString(BestAskKey);

		/// <summary>
		/// Best ask in market depth.
		/// </summary>
		public const string BestAskDescKey = nameof(BestAskDesc);

		/// <summary>
		/// Best ask in market depth.
		/// </summary>
		public static string BestAskDesc => GetString(BestAskDescKey);

		/// <summary>
		/// Current state of security.
		/// </summary>
		public const string Str569Key = nameof(Str569);

		/// <summary>
		/// Current state of security.
		/// </summary>
		public static string Str569 => GetString(Str569Key);

		/// <summary>
		/// Price (min)
		/// </summary>
		public const string PriceMinKey = nameof(PriceMin);

		/// <summary>
		/// Price (min)
		/// </summary>
		public static string PriceMin => GetString(PriceMinKey);

		/// <summary>
		/// Lower price limit.
		/// </summary>
		public const string PriceMinLimitKey = nameof(PriceMinLimit);

		/// <summary>
		/// Lower price limit.
		/// </summary>
		public static string PriceMinLimit => GetString(PriceMinLimitKey);

		/// <summary>
		/// Price (max)
		/// </summary>
		public const string PriceMaxKey = nameof(PriceMax);

		/// <summary>
		/// Price (max)
		/// </summary>
		public static string PriceMax => GetString(PriceMaxKey);

		/// <summary>
		/// Upper price limit.
		/// </summary>
		public const string PriceMaxLimitKey = nameof(PriceMaxLimit);

		/// <summary>
		/// Upper price limit.
		/// </summary>
		public static string PriceMaxLimit => GetString(PriceMaxLimitKey);

		/// <summary>
		/// Initial margin to buy.
		/// </summary>
		public const string MarginBuyKey = nameof(MarginBuy);

		/// <summary>
		/// Initial margin to buy.
		/// </summary>
		public static string MarginBuy => GetString(MarginBuyKey);

		/// <summary>
		/// Initial margin to sell.
		/// </summary>
		public const string MarginSellKey = nameof(MarginSell);

		/// <summary>
		/// Initial margin to sell.
		/// </summary>
		public static string MarginSell => GetString(MarginSellKey);

		/// <summary>
		/// Theoretical price.
		/// </summary>
		public const string TheoreticalPriceKey = nameof(TheoreticalPrice);

		/// <summary>
		/// Theoretical price.
		/// </summary>
		public static string TheoreticalPrice => GetString(TheoreticalPriceKey);

		/// <summary>
		/// Option delta.
		/// </summary>
		public const string OptionDeltaKey = nameof(OptionDelta);

		/// <summary>
		/// Option delta.
		/// </summary>
		public static string OptionDelta => GetString(OptionDeltaKey);

		/// <summary>
		/// Option gamma.
		/// </summary>
		public const string OptionGammaKey = nameof(OptionGamma);

		/// <summary>
		/// Option gamma.
		/// </summary>
		public static string OptionGamma => GetString(OptionGammaKey);

		/// <summary>
		/// Option vega.
		/// </summary>
		public const string OptionVegaKey = nameof(OptionVega);

		/// <summary>
		/// Option vega.
		/// </summary>
		public static string OptionVega => GetString(OptionVegaKey);

		/// <summary>
		/// Option theta.
		/// </summary>
		public const string OptionThetaKey = nameof(OptionTheta);

		/// <summary>
		/// Option theta.
		/// </summary>
		public static string OptionTheta => GetString(OptionThetaKey);

		/// <summary>
		/// Option rho.
		/// </summary>
		public const string OptionRhoKey = nameof(OptionRho);

		/// <summary>
		/// Option rho.
		/// </summary>
		public static string OptionRho => GetString(OptionRhoKey);

		/// <summary>
		/// Total volume in all buy orders.
		/// </summary>
		public const string BidsVolumeKey = nameof(BidsVolume);

		/// <summary>
		/// Total volume in all buy orders.
		/// </summary>
		public static string BidsVolume => GetString(BidsVolumeKey);

		/// <summary>
		/// Bids
		/// </summary>
		public const string BidsKey = nameof(Bids);

		/// <summary>
		/// Bids
		/// </summary>
		public static string Bids => GetString(BidsKey);

		/// <summary>
		/// Number of buy orders.
		/// </summary>
		public const string BidsCountKey = nameof(BidsCount);

		/// <summary>
		/// Number of buy orders.
		/// </summary>
		public static string BidsCount => GetString(BidsCountKey);

		/// <summary>
		/// Total volume in all sell orders.
		/// </summary>
		public const string AsksVolumeKey = nameof(AsksVolume);

		/// <summary>
		/// Total volume in all sell orders.
		/// </summary>
		public static string AsksVolume => GetString(AsksVolumeKey);

		/// <summary>
		/// Asks
		/// </summary>
		public const string AsksKey = nameof(Asks);

		/// <summary>
		/// Asks
		/// </summary>
		public static string Asks => GetString(AsksKey);

		/// <summary>
		/// Number of sell orders.
		/// </summary>
		public const string AsksCountKey = nameof(AsksCount);

		/// <summary>
		/// Number of sell orders.
		/// </summary>
		public static string AsksCount => GetString(AsksCountKey);

		/// <summary>
		/// Trades
		/// </summary>
		public const string TradesOfKey = nameof(TradesOf);

		/// <summary>
		/// Trades
		/// </summary>
		public static string TradesOf => GetString(TradesOfKey);

		/// <summary>
		/// Maximum bid during the session.
		/// </summary>
		public const string Str594Key = nameof(Str594);

		/// <summary>
		/// Maximum bid during the session.
		/// </summary>
		public static string Str594 => GetString(Str594Key);

		/// <summary>
		/// Minimum ask during the session.
		/// </summary>
		public const string Str595Key = nameof(Str595);

		/// <summary>
		/// Minimum ask during the session.
		/// </summary>
		public static string Str595 => GetString(Str595Key);

		/// <summary>
		/// Average price
		/// </summary>
		public const string AveragePriceKey = nameof(AveragePrice);

		/// <summary>
		/// Average price
		/// </summary>
		public static string AveragePrice => GetString(AveragePriceKey);

		/// <summary>
		/// Settlement price.
		/// </summary>
		public const string SettlementPriceKey = nameof(SettlementPrice);

		/// <summary>
		/// Settlement price.
		/// </summary>
		public static string SettlementPrice => GetString(SettlementPriceKey);

		/// <summary>
		/// Average price per session.
		/// </summary>
		public const string Str600Key = nameof(Str600);

		/// <summary>
		/// Average price per session.
		/// </summary>
		public static string Str600 => GetString(Str600Key);

		/// <summary>
		/// Volume per session.
		/// </summary>
		public const string Str601Key = nameof(Str601);

		/// <summary>
		/// Volume per session.
		/// </summary>
		public static string Str601 => GetString(Str601Key);

		/// <summary>
		/// Identifiers
		/// </summary>
		public const string IdentifiersKey = nameof(Identifiers);

		/// <summary>
		/// Identifiers
		/// </summary>
		public static string Identifiers => GetString(IdentifiersKey);

		/// <summary>
		/// Security IDs in other systems
		/// </summary>
		public const string Str603Key = nameof(Str603);

		/// <summary>
		/// Security IDs in other systems
		/// </summary>
		public static string Str603 => GetString(Str603Key);

		/// <summary>
		/// Tick trade.
		/// </summary>
		public const string TickTradeKey = nameof(TickTrade);

		/// <summary>
		/// Tick trade.
		/// </summary>
		public static string TickTrade => GetString(TickTradeKey);

		/// <summary>
		/// (Trade) Transaction time.
		/// </summary>
		public const string Str605Key = nameof(Str605);

		/// <summary>
		/// (Trade) Transaction time.
		/// </summary>
		public static string Str605 => GetString(Str605Key);

		/// <summary>
		/// Trade received local time.
		/// </summary>
		public const string Str606Key = nameof(Str606);

		/// <summary>
		/// Trade received local time.
		/// </summary>
		public static string Str606 => GetString(Str606Key);

		/// <summary>
		/// Number of contracts in the trade.
		/// </summary>
		public const string TradeVolumeKey = nameof(TradeVolume);

		/// <summary>
		/// Number of contracts in the trade.
		/// </summary>
		public static string TradeVolume => GetString(TradeVolumeKey);

		/// <summary>
		/// Order direction (buy or sell), which led to the trade.
		/// </summary>
		public const string Str608Key = nameof(Str608);

		/// <summary>
		/// Order direction (buy or sell), which led to the trade.
		/// </summary>
		public static string Str608 => GetString(Str608Key);

		/// <summary>
		/// System trade
		/// </summary>
		public const string SystemTradeKey = nameof(SystemTrade);

		/// <summary>
		/// System trade
		/// </summary>
		public static string SystemTrade => GetString(SystemTradeKey);

		/// <summary>
		/// Is a system trade.
		/// </summary>
		public const string IsSystemTradeKey = nameof(IsSystemTrade);

		/// <summary>
		/// Is a system trade.
		/// </summary>
		public static string IsSystemTrade => GetString(IsSystemTradeKey);

		/// <summary>
		/// Value has unknown type {0}.
		/// </summary>
		public const string Str620ParamsKey = nameof(Str620Params);

		/// <summary>
		/// Value has unknown type {0}.
		/// </summary>
		public static string Str620Params => GetString(Str620ParamsKey);

		/// <summary>
		/// Adapter for work with portfolio {0} not found.
		/// </summary>
		public const string Str623ParamsKey = nameof(Str623Params);

		/// <summary>
		/// Adapter for work with portfolio {0} not found.
		/// </summary>
		public static string Str623Params => GetString(Str623ParamsKey);

		/// <summary>
		/// Connection error for {0}: {1}
		/// </summary>
		public const string Str625ParamsKey = nameof(Str625Params);

		/// <summary>
		/// Connection error for {0}: {1}
		/// </summary>
		public static string Str625Params => GetString(Str625ParamsKey);

		/// <summary>
		/// Failed to connect of some connections.
		/// </summary>
		public const string Str626Key = nameof(Str626);

		/// <summary>
		/// Failed to connect of some connections.
		/// </summary>
		public static string Str626 => GetString(Str626Key);

		/// <summary>
		/// Error disconnecting for {0}: {1}
		/// </summary>
		public const string Str627ParamsKey = nameof(Str627Params);

		/// <summary>
		/// Error disconnecting for {0}: {1}
		/// </summary>
		public static string Str627Params => GetString(Str627ParamsKey);

		/// <summary>
		/// Errors occurred during shutdown.
		/// </summary>
		public const string Str628Key = nameof(Str628);

		/// <summary>
		/// Errors occurred during shutdown.
		/// </summary>
		public static string Str628 => GetString(Str628Key);

		/// <summary>
		/// No suitable adapter found for {0}.
		/// </summary>
		public const string Str629ParamsKey = nameof(Str629Params);

		/// <summary>
		/// No suitable adapter found for {0}.
		/// </summary>
		public static string Str629Params => GetString(Str629ParamsKey);

		/// <summary>
		/// Security's {0} corresponding adapter is {1}.
		/// </summary>
		public const string Str630ParamsKey = nameof(Str630Params);

		/// <summary>
		/// Security's {0} corresponding adapter is {1}.
		/// </summary>
		public static string Str630Params => GetString(Str630ParamsKey);

		/// <summary>
		/// Adapter {0} does not support security {1} for {2}: {3}
		/// </summary>
		public const string Str631ParamsKey = nameof(Str631Params);

		/// <summary>
		/// Adapter {0} does not support security {1} for {2}: {3}
		/// </summary>
		public static string Str631Params => GetString(Str631ParamsKey);

		/// <summary>
		/// Subscription process cancelled by user.
		/// </summary>
		public const string SubscriptionProcessCancelledKey = nameof(SubscriptionProcessCancelled);

		/// <summary>
		/// Subscription process cancelled by user.
		/// </summary>
		public static string SubscriptionProcessCancelled => GetString(SubscriptionProcessCancelledKey);

		/// <summary>
		/// For security {0} action for subscription for {1} was not found.
		/// </summary>
		public const string Str633ParamsKey = nameof(Str633Params);

		/// <summary>
		/// For security {0} action for subscription for {1} was not found.
		/// </summary>
		public static string Str633Params => GetString(Str633ParamsKey);

		/// <summary>
		/// Ending time is less or equal than beginning time {0}.
		/// </summary>
		public const string Str635ParamsKey = nameof(Str635Params);

		/// <summary>
		/// Ending time is less or equal than beginning time {0}.
		/// </summary>
		public static string Str635Params => GetString(Str635ParamsKey);

		/// <summary>
		/// Series {0} was not stopped before that.
		/// </summary>
		public const string Str636ParamsKey = nameof(Str636Params);

		/// <summary>
		/// Series {0} was not stopped before that.
		/// </summary>
		public static string Str636Params => GetString(Str636ParamsKey);

		/// <summary>
		/// Method should be overridden for the factory.
		/// </summary>
		public const string Str637Key = nameof(Str637);

		/// <summary>
		/// Method should be overridden for the factory.
		/// </summary>
		public static string Str637 => GetString(Str637Key);

		/// <summary>
		/// Offset value is incorrect.
		/// </summary>
		public const string OffsetValueIncorrectKey = nameof(OffsetValueIncorrect);

		/// <summary>
		/// Offset value is incorrect.
		/// </summary>
		public static string OffsetValueIncorrect => GetString(OffsetValueIncorrectKey);

		/// <summary>
		/// Time-frame must be above zero.
		/// </summary>
		public const string Str640Key = nameof(Str640);

		/// <summary>
		/// Time-frame must be above zero.
		/// </summary>
		public static string Str640 => GetString(Str640Key);

		/// <summary>
		/// Number of ticks should be positive.
		/// </summary>
		public const string TickCountMustBePositiveKey = nameof(TickCountMustBePositive);

		/// <summary>
		/// Number of ticks should be positive.
		/// </summary>
		public static string TickCountMustBePositive => GetString(TickCountMustBePositiveKey);

		/// <summary>
		/// Volume must be greater than zero.
		/// </summary>
		public const string VolumeMustBeGreaterThanZeroKey = nameof(VolumeMustBeGreaterThanZero);

		/// <summary>
		/// Volume must be greater than zero.
		/// </summary>
		public static string VolumeMustBeGreaterThanZero => GetString(VolumeMustBeGreaterThanZeroKey);

		/// <summary>
		/// Price range must be greater than zero.
		/// </summary>
		public const string PriceRangeMustBeGreaterThanZeroKey = nameof(PriceRangeMustBeGreaterThanZero);

		/// <summary>
		/// Price range must be greater than zero.
		/// </summary>
		public static string PriceRangeMustBeGreaterThanZero => GetString(PriceRangeMustBeGreaterThanZeroKey);

		/// <summary>
		/// Candles manager is not set.
		/// </summary>
		public const string CandleManagerIsNotSetKey = nameof(CandleManagerIsNotSet);

		/// <summary>
		/// Candles manager is not set.
		/// </summary>
		public static string CandleManagerIsNotSet => GetString(CandleManagerIsNotSetKey);

		/// <summary>
		/// Price change should be greater than zero.
		/// </summary>
		public const string Str645Key = nameof(Str645);

		/// <summary>
		/// Price change should be greater than zero.
		/// </summary>
		public static string Str645 => GetString(Str645Key);

		/// <summary>
		/// Candles
		/// </summary>
		public const string CandlesKey = nameof(Candles);

		/// <summary>
		/// Candles
		/// </summary>
		public static string Candles => GetString(CandlesKey);

		/// <summary>
		/// Candles storage time cannot be less than zero.
		/// </summary>
		public const string Str647Key = nameof(Str647);

		/// <summary>
		/// Candles storage time cannot be less than zero.
		/// </summary>
		public static string Str647 => GetString(Str647Key);

		/// <summary>
		/// Series {0} was not started earlier.
		/// </summary>
		public const string Str648ParamsKey = nameof(Str648Params);

		/// <summary>
		/// Series {0} was not started earlier.
		/// </summary>
		public static string Str648Params => GetString(Str648ParamsKey);

		/// <summary>
		/// Cannot change formed candle.
		/// </summary>
		public const string Str649Key = nameof(Str649);

		/// <summary>
		/// Cannot change formed candle.
		/// </summary>
		public static string Str649 => GetString(Str649Key);

		/// <summary>
		/// Series {0} was not stopped.
		/// </summary>
		public const string Str650ParamsKey = nameof(Str650Params);

		/// <summary>
		/// Series {0} was not stopped.
		/// </summary>
		public static string Str650Params => GetString(Str650ParamsKey);

		/// <summary>
		/// Candles (elements)
		/// </summary>
		public const string CandlesElemKey = nameof(CandlesElem);

		/// <summary>
		/// Candles (elements)
		/// </summary>
		public static string CandlesElem => GetString(CandlesElemKey);

		/// <summary>
		/// Data keep time cannot be less than zero.
		/// </summary>
		public const string Str652Key = nameof(Str652);

		/// <summary>
		/// Data keep time cannot be less than zero.
		/// </summary>
		public static string Str652 => GetString(Str652Key);

		/// <summary>
		/// Type '{0}' cannot be used as source data for candles.
		/// </summary>
		public const string Str653ParamsKey = nameof(Str653Params);

		/// <summary>
		/// Type '{0}' cannot be used as source data for candles.
		/// </summary>
		public static string Str653Params => GetString(Str653ParamsKey);

		/// <summary>
		/// Candle for {0} is already filled for buffer.
		/// </summary>
		public const string Str654ParamsKey = nameof(Str654Params);

		/// <summary>
		/// Candle for {0} is already filled for buffer.
		/// </summary>
		public static string Str654Params => GetString(Str654ParamsKey);

		/// <summary>
		/// Insufficient data to form a spread-candle.
		/// </summary>
		public const string Str655Key = nameof(Str655);

		/// <summary>
		/// Insufficient data to form a spread-candle.
		/// </summary>
		public static string Str655 => GetString(Str655Key);

		/// <summary>
		/// Insufficient data to form the last spread-candle.
		/// </summary>
		public const string Str656Key = nameof(Str656);

		/// <summary>
		/// Insufficient data to form the last spread-candle.
		/// </summary>
		public static string Str656 => GetString(Str656Key);

		/// <summary>
		/// Cannot calculate security basket value.
		/// </summary>
		public const string Str657Key = nameof(Str657);

		/// <summary>
		/// Cannot calculate security basket value.
		/// </summary>
		public static string Str657 => GetString(Str657Key);

		/// <summary>
		/// Commission value.
		/// </summary>
		public const string CommissionValueKey = nameof(CommissionValue);

		/// <summary>
		/// Commission value.
		/// </summary>
		public static string CommissionValue => GetString(CommissionValueKey);

		/// <summary>
		/// Order commission
		/// </summary>
		public const string Str660Key = nameof(Str660);

		/// <summary>
		/// Order commission
		/// </summary>
		public static string Str660 => GetString(Str660Key);

		/// <summary>
		/// Trade commission
		/// </summary>
		public const string Str661Key = nameof(Str661);

		/// <summary>
		/// Trade commission
		/// </summary>
		public static string Str661 => GetString(Str661Key);

		/// <summary>
		/// Order (volume)
		/// </summary>
		public const string Str662Key = nameof(Str662);

		/// <summary>
		/// Order (volume)
		/// </summary>
		public static string Str662 => GetString(Str662Key);

		/// <summary>
		/// Order volume commission
		/// </summary>
		public const string Str663Key = nameof(Str663);

		/// <summary>
		/// Order volume commission
		/// </summary>
		public static string Str663 => GetString(Str663Key);

		/// <summary>
		/// Trade (volume)
		/// </summary>
		public const string Str664Key = nameof(Str664);

		/// <summary>
		/// Trade (volume)
		/// </summary>
		public static string Str664 => GetString(Str664Key);

		/// <summary>
		/// Trade volume commission
		/// </summary>
		public const string Str665Key = nameof(Str665);

		/// <summary>
		/// Trade volume commission
		/// </summary>
		public static string Str665 => GetString(Str665Key);

		/// <summary>
		/// Orders (quantity)
		/// </summary>
		public const string Str666Key = nameof(Str666);

		/// <summary>
		/// Orders (quantity)
		/// </summary>
		public static string Str666 => GetString(Str666Key);

		/// <summary>
		/// Number of orders commission
		/// </summary>
		public const string Str667Key = nameof(Str667);

		/// <summary>
		/// Number of orders commission
		/// </summary>
		public static string Str667 => GetString(Str667Key);

		/// <summary>
		/// Orders
		/// </summary>
		public const string Str668Key = nameof(Str668);

		/// <summary>
		/// Orders
		/// </summary>
		public static string Str668 => GetString(Str668Key);

		/// <summary>
		/// Trade (quantity)
		/// </summary>
		public const string Str670Key = nameof(Str670);

		/// <summary>
		/// Trade (quantity)
		/// </summary>
		public static string Str670 => GetString(Str670Key);

		/// <summary>
		/// Number of trades commission
		/// </summary>
		public const string Str671Key = nameof(Str671);

		/// <summary>
		/// Number of trades commission
		/// </summary>
		public static string Str671 => GetString(Str671Key);

		/// <summary>
		/// Trade (price)
		/// </summary>
		public const string Str672Key = nameof(Str672);

		/// <summary>
		/// Trade (price)
		/// </summary>
		public static string Str672 => GetString(Str672Key);

		/// <summary>
		/// Trade price commission
		/// </summary>
		public const string Str673Key = nameof(Str673);

		/// <summary>
		/// Trade price commission
		/// </summary>
		public static string Str673 => GetString(Str673Key);

		/// <summary>
		/// Security commission
		/// </summary>
		public const string Str674Key = nameof(Str674);

		/// <summary>
		/// Security commission
		/// </summary>
		public static string Str674 => GetString(Str674Key);

		/// <summary>
		/// Security (type)
		/// </summary>
		public const string Str675Key = nameof(Str675);

		/// <summary>
		/// Security (type)
		/// </summary>
		public static string Str675 => GetString(Str675Key);

		/// <summary>
		/// Security type commission
		/// </summary>
		public const string Str676Key = nameof(Str676);

		/// <summary>
		/// Security type commission
		/// </summary>
		public static string Str676 => GetString(Str676Key);

		/// <summary>
		/// Board commission
		/// </summary>
		public const string BoardCommissionKey = nameof(BoardCommission);

		/// <summary>
		/// Board commission
		/// </summary>
		public static string BoardCommission => GetString(BoardCommissionKey);

		/// <summary>
		/// Turnover
		/// </summary>
		public const string TurnoverKey = nameof(Turnover);

		/// <summary>
		/// Turnover
		/// </summary>
		public static string Turnover => GetString(TurnoverKey);

		/// <summary>
		/// Turnover commission
		/// </summary>
		public const string TurnoverCommissionKey = nameof(TurnoverCommission);

		/// <summary>
		/// Turnover commission
		/// </summary>
		public static string TurnoverCommission => GetString(TurnoverCommissionKey);

		/// <summary>
		/// Message '{0}' caused processing error.
		/// </summary>
		public const string Str681ParamsKey = nameof(Str681Params);

		/// <summary>
		/// Message '{0}' caused processing error.
		/// </summary>
		public static string Str681Params => GetString(Str681ParamsKey);

		/// <summary>
		/// Empty associative information. Code {0} type {1}.
		/// </summary>
		public const string Str682ParamsKey = nameof(Str682Params);

		/// <summary>
		/// Empty associative information. Code {0} type {1}.
		/// </summary>
		public static string Str682Params => GetString(Str682ParamsKey);

		/// <summary>
		/// Connection process was interrupted because of an unexpected disconnection.
		/// </summary>
		public const string Str683Key = nameof(Str683);

		/// <summary>
		/// Connection process was interrupted because of an unexpected disconnection.
		/// </summary>
		public static string Str683 => GetString(Str683Key);

		/// <summary>
		/// Disconnection process was interrupted because of an unexpected connection.
		/// </summary>
		public const string Str684Key = nameof(Str684);

		/// <summary>
		/// Disconnection process was interrupted because of an unexpected connection.
		/// </summary>
		public static string Str684 => GetString(Str684Key);

		/// <summary>
		/// Connection in state {0} received an unexpected message of type '{1}'.
		/// </summary>
		public const string Str685ParamsKey = nameof(Str685Params);

		/// <summary>
		/// Connection in state {0} received an unexpected message of type '{1}'.
		/// </summary>
		public static string Str685Params => GetString(Str685ParamsKey);

		/// <summary>
		/// Connection does not support security {0}.
		/// </summary>
		public const string ConnectionNotSupportSecurityKey = nameof(ConnectionNotSupportSecurity);

		/// <summary>
		/// Connection does not support security {0}.
		/// </summary>
		public static string ConnectionNotSupportSecurity => GetString(ConnectionNotSupportSecurityKey);

		/// <summary>
		/// Securities {0} and {1} have the same trading system {2} ID.
		/// </summary>
		public const string Str687ParamsKey = nameof(Str687Params);

		/// <summary>
		/// Securities {0} and {1} have the same trading system {2} ID.
		/// </summary>
		public static string Str687Params => GetString(Str687ParamsKey);

		/// <summary>
		/// Message '{0}' does not have information about the type of data being transferred.
		/// </summary>
		public const string Str688ParamsKey = nameof(Str688Params);

		/// <summary>
		/// Message '{0}' does not have information about the type of data being transferred.
		/// </summary>
		public static string Str688Params => GetString(Str688ParamsKey);

		/// <summary>
		/// For order {0}/{1} security information has not been submitted.
		/// </summary>
		public const string Str689ParamsKey = nameof(Str689Params);

		/// <summary>
		/// For order {0}/{1} security information has not been submitted.
		/// </summary>
		public static string Str689Params => GetString(Str689ParamsKey);

		/// <summary>
		/// Security {0} is subscribed for {1}
		/// </summary>
		public const string SubscribedOkKey = nameof(SubscribedOk);

		/// <summary>
		/// Security {0} is subscribed for {1}
		/// </summary>
		public static string SubscribedOk => GetString(SubscribedOkKey);

		/// <summary>
		/// Security {0} is unsubscribed for {1}
		/// </summary>
		public const string UnSubscribedOkKey = nameof(UnSubscribedOk);

		/// <summary>
		/// Security {0} is unsubscribed for {1}
		/// </summary>
		public static string UnSubscribedOk => GetString(UnSubscribedOkKey);

		/// <summary>
		/// Security {0} cannot subscribe for {1}. Error is '{2}'.
		/// </summary>
		public const string SubscribedErrorKey = nameof(SubscribedError);

		/// <summary>
		/// Security {0} cannot subscribe for {1}. Error is '{2}'.
		/// </summary>
		public static string SubscribedError => GetString(SubscribedErrorKey);

		/// <summary>
		/// Security {0} cannot unsubscribe from {1}. Error is '{2}'.
		/// </summary>
		public const string UnSubscribedErrorKey = nameof(UnSubscribedError);

		/// <summary>
		/// Security {0} cannot unsubscribe from {1}. Error is '{2}'.
		/// </summary>
		public static string UnSubscribedError => GetString(UnSubscribedErrorKey);

		/// <summary>
		/// Security {0} is subscribing for {1}
		/// </summary>
		public const string SubscriptionSentKey = nameof(SubscriptionSent);

		/// <summary>
		/// Security {0} is subscribing for {1}
		/// </summary>
		public static string SubscriptionSent => GetString(SubscriptionSentKey);

		/// <summary>
		/// Security {0} is unsubscribing from {1}
		/// </summary>
		public const string UnSubscriptionSentKey = nameof(UnSubscriptionSent);

		/// <summary>
		/// Security {0} is unsubscribing from {1}
		/// </summary>
		public static string UnSubscriptionSent => GetString(UnSubscriptionSentKey);

		/// <summary>
		/// from {0} till {1}
		/// </summary>
		public const string Str691ParamsKey = nameof(Str691Params);

		/// <summary>
		/// from {0} till {1}
		/// </summary>
		public static string Str691Params => GetString(Str691ParamsKey);

		/// <summary>
		/// Security {0} for connection {1} not found.
		/// </summary>
		public const string Str692ParamsKey = nameof(Str692Params);

		/// <summary>
		/// Security {0} for connection {1} not found.
		/// </summary>
		public static string Str692Params => GetString(Str692ParamsKey);

		/// <summary>
		/// Cannot start export, because export is in state {0}.
		/// </summary>
		public const string Str693ParamsKey = nameof(Str693Params);

		/// <summary>
		/// Cannot start export, because export is in state {0}.
		/// </summary>
		public static string Str693Params => GetString(Str693ParamsKey);

		/// <summary>
		/// Cannot stop export, because export is in state {0}.
		/// </summary>
		public const string Str694ParamsKey = nameof(Str694Params);

		/// <summary>
		/// Cannot stop export, because export is in state {0}.
		/// </summary>
		public static string Str694Params => GetString(Str694ParamsKey);

		/// <summary>
		/// Continuous security
		/// </summary>
		public const string ContinuousSecurityKey = nameof(ContinuousSecurity);

		/// <summary>
		/// Continuous security
		/// </summary>
		public static string ContinuousSecurity => GetString(ContinuousSecurityKey);

		/// <summary>
		/// Continuous security (generally, a futures contract), containing expirable securities.
		/// </summary>
		public const string Str696Key = nameof(Str696);

		/// <summary>
		/// Continuous security (generally, a futures contract), containing expirable securities.
		/// </summary>
		public static string Str696 => GetString(Str696Key);

		/// <summary>
		/// Security {0} is not an internal security.
		/// </summary>
		public const string Str697ParamsKey = nameof(Str697Params);

		/// <summary>
		/// Security {0} is not an internal security.
		/// </summary>
		public static string Str697Params => GetString(Str697ParamsKey);

		/// <summary>
		/// Security {0} does not have information about expiration time.
		/// </summary>
		public const string Str698ParamsKey = nameof(Str698Params);

		/// <summary>
		/// Security {0} does not have information about expiration time.
		/// </summary>
		public static string Str698Params => GetString(Str698ParamsKey);

		/// <summary>
		/// For security {0} expiration time after shift {1} exceeded the actual expiration time {2}.
		/// </summary>
		public const string Str699ParamsKey = nameof(Str699Params);

		/// <summary>
		/// For security {0} expiration time after shift {1} exceeded the actual expiration time {2}.
		/// </summary>
		public static string Str699Params => GetString(Str699ParamsKey);

		/// <summary>
		/// Portfolio model does not contain options.
		/// </summary>
		public const string Str700Key = nameof(Str700);

		/// <summary>
		/// Portfolio model does not contain options.
		/// </summary>
		public static string Str700 => GetString(Str700Key);

		/// <summary>
		/// Asset {0} dividends not paid.
		/// </summary>
		public const string Str701ParamsKey = nameof(Str701Params);

		/// <summary>
		/// Asset {0} dividends not paid.
		/// </summary>
		public static string Str701Params => GetString(Str701ParamsKey);

		/// <summary>
		/// Number of digits after coma is incorrect.
		/// </summary>
		public const string Str702Key = nameof(Str702);

		/// <summary>
		/// Number of digits after coma is incorrect.
		/// </summary>
		public static string Str702 => GetString(Str702Key);

		/// <summary>
		/// Type of option {0} is missing.
		/// </summary>
		public const string Str703ParamsKey = nameof(Str703Params);

		/// <summary>
		/// Type of option {0} is missing.
		/// </summary>
		public static string Str703Params => GetString(Str703ParamsKey);

		/// <summary>
		/// Security {0} not found.
		/// </summary>
		public const string Str704ParamsKey = nameof(Str704Params);

		/// <summary>
		/// Security {0} not found.
		/// </summary>
		public static string Str704Params => GetString(Str704ParamsKey);

		/// <summary>
		/// Underlying asset was not found for derivative {0}.
		/// </summary>
		public const string Str705ParamsKey = nameof(Str705Params);

		/// <summary>
		/// Underlying asset was not found for derivative {0}.
		/// </summary>
		public static string Str705Params => GetString(Str705ParamsKey);

		/// <summary>
		/// Opposite option contract for {0} not found.
		/// </summary>
		public const string Str706ParamsKey = nameof(Str706Params);

		/// <summary>
		/// Opposite option contract for {0} not found.
		/// </summary>
		public static string Str706Params => GetString(Str706ParamsKey);

		/// <summary>
		/// Options contract for {0} not found.
		/// </summary>
		public const string Str707ParamsKey = nameof(Str707Params);

		/// <summary>
		/// Options contract for {0} not found.
		/// </summary>
		public static string Str707Params => GetString(Str707ParamsKey);

		/// <summary>
		/// Insufficient information to determine the strike step.
		/// </summary>
		public const string Str708Key = nameof(Str708);

		/// <summary>
		/// Insufficient information to determine the strike step.
		/// </summary>
		public static string Str708 => GetString(Str708Key);

		/// <summary>
		/// Security {0} does not have information about expiration date.
		/// </summary>
		public const string Str709ParamsKey = nameof(Str709Params);

		/// <summary>
		/// Security {0} does not have information about expiration date.
		/// </summary>
		public static string Str709Params => GetString(Str709ParamsKey);

		/// <summary>
		/// Expiration time for {0} has passed. Current date {1}.
		/// </summary>
		public const string Str710ParamsKey = nameof(Str710Params);

		/// <summary>
		/// Expiration time for {0} has passed. Current date {1}.
		/// </summary>
		public static string Str710Params => GetString(Str710ParamsKey);

		/// <summary>
		/// Standard deviation has an unacceptable value.
		/// </summary>
		public const string Str711Key = nameof(Str711);

		/// <summary>
		/// Standard deviation has an unacceptable value.
		/// </summary>
		public static string Str711 => GetString(Str711Key);

		/// <summary>
		/// Security does not have information about the expiration date.
		/// </summary>
		public const string Str712Key = nameof(Str712);

		/// <summary>
		/// Security does not have information about the expiration date.
		/// </summary>
		public static string Str712 => GetString(Str712Key);

		/// <summary>
		/// Message has state {OrderState} and information about error '{Error.Message}'.
		/// </summary>
		public const string Str714ParamsKey = nameof(Str714Params);

		/// <summary>
		/// Message has state {OrderState} and information about error '{Error.Message}'.
		/// </summary>
		public static string Str714Params => GetString(Str714ParamsKey);

		/// <summary>
		/// Transaction ID must be different from zero.
		/// </summary>
		public const string Str715Key = nameof(Str715);

		/// <summary>
		/// Transaction ID must be different from zero.
		/// </summary>
		public static string Str715 => GetString(Str715Key);

		/// <summary>
		/// Error cancelling.
		/// </summary>
		public const string Str716Key = nameof(Str716);

		/// <summary>
		/// Error cancelling.
		/// </summary>
		public static string Str716 => GetString(Str716Key);

		/// <summary>
		/// Error registering.
		/// </summary>
		public const string Str717Key = nameof(Str717);

		/// <summary>
		/// Error registering.
		/// </summary>
		public static string Str717 => GetString(Str717Key);

		/// <summary>
		/// Transaction ID is incorrectly set.
		/// </summary>
		public const string Str718Key = nameof(Str718);

		/// <summary>
		/// Transaction ID is incorrectly set.
		/// </summary>
		public static string Str718 => GetString(Str718Key);

		/// <summary>
		/// None of the possible order IDs is specified.
		/// </summary>
		public const string Str719Key = nameof(Str719);

		/// <summary>
		/// None of the possible order IDs is specified.
		/// </summary>
		public static string Str719 => GetString(Str719Key);

		/// <summary>
		/// Order for transaction {0} was not created.
		/// </summary>
		public const string Str720ParamsKey = nameof(Str720Params);

		/// <summary>
		/// Order for transaction {0} was not created.
		/// </summary>
		public static string Str720Params => GetString(Str720ParamsKey);

		/// <summary>
		/// Wrong type of market-data.
		/// </summary>
		public const string Str721Key = nameof(Str721);

		/// <summary>
		/// Wrong type of market-data.
		/// </summary>
		public static string Str721 => GetString(Str721Key);

		/// <summary>
		/// Action
		/// </summary>
		public const string Str722Key = nameof(Str722);

		/// <summary>
		/// Action
		/// </summary>
		public static string Str722 => GetString(Str722Key);

		/// <summary>
		/// ID (trade)
		/// </summary>
		public const string Str723Key = nameof(Str723);

		/// <summary>
		/// ID (trade)
		/// </summary>
		public static string Str723 => GetString(Str723Key);

		/// <summary>
		/// Price (trade)
		/// </summary>
		public const string Str724Key = nameof(Str724);

		/// <summary>
		/// Price (trade)
		/// </summary>
		public static string Str724 => GetString(Str724Key);

		/// <summary>
		/// OI (trade)
		/// </summary>
		public const string Str725Key = nameof(Str725);

		/// <summary>
		/// OI (trade)
		/// </summary>
		public static string Str725 => GetString(Str725Key);

		/// <summary>
		/// Beginning time
		/// </summary>
		public const string Str726Key = nameof(Str726);

		/// <summary>
		/// Beginning time
		/// </summary>
		public static string Str726 => GetString(Str726Key);

		/// <summary>
		/// Ending time
		/// </summary>
		public const string Str727Key = nameof(Str727);

		/// <summary>
		/// Ending time
		/// </summary>
		public static string Str727 => GetString(Str727Key);

		/// <summary>
		/// Index, built from a combination of several securities through a mathematical formula.
		/// </summary>
		public const string Str728Key = nameof(Str728);

		/// <summary>
		/// Index, built from a combination of several securities through a mathematical formula.
		/// </summary>
		public static string Str728 => GetString(Str728Key);

		/// <summary>
		/// Chaikin volatility.
		/// </summary>
		public const string Str730Key = nameof(Str730);

		/// <summary>
		/// Chaikin volatility.
		/// </summary>
		public static string Str730 => GetString(Str730Key);

		/// <summary>
		/// Moving Average.
		/// </summary>
		public const string Str731Key = nameof(Str731);

		/// <summary>
		/// Moving Average.
		/// </summary>
		public static string Str731 => GetString(Str731Key);

		/// <summary>
		/// Rate of change.
		/// </summary>
		public const string Str732Key = nameof(Str732);

		/// <summary>
		/// Rate of change.
		/// </summary>
		public static string Str732 => GetString(Str732Key);

		/// <summary>
		/// Maximum value for a period.
		/// </summary>
		public const string Str733Key = nameof(Str733);

		/// <summary>
		/// Maximum value for a period.
		/// </summary>
		public static string Str733 => GetString(Str733Key);

		/// <summary>
		/// Linear regression - Value returns the last point prediction.
		/// </summary>
		public const string Str734Key = nameof(Str734);

		/// <summary>
		/// Linear regression - Value returns the last point prediction.
		/// </summary>
		public static string Str734 => GetString(Str734Key);

		/// <summary>
		/// Complete linear regression, simultaneously calculates LinearReg, LinearRegSlope, RSquared and StandardError.
		/// </summary>
		public const string Str735Key = nameof(Str735);

		/// <summary>
		/// Complete linear regression, simultaneously calculates LinearReg, LinearRegSlope, RSquared and StandardError.
		/// </summary>
		public static string Str735 => GetString(Str735Key);

		/// <summary>
		/// Period
		/// </summary>
		public const string Str736Key = nameof(Str736);

		/// <summary>
		/// Period
		/// </summary>
		public static string Str736 => GetString(Str736Key);

		/// <summary>
		/// Indicator period.
		/// </summary>
		public const string Str737Key = nameof(Str737);

		/// <summary>
		/// Indicator period.
		/// </summary>
		public static string Str737 => GetString(Str737Key);

		/// <summary>
		/// Linear regression.
		/// </summary>
		public const string Str738Key = nameof(Str738);

		/// <summary>
		/// Linear regression.
		/// </summary>
		public static string Str738 => GetString(Str738Key);

		/// <summary>
		/// Regression R-squared.
		/// </summary>
		public const string Str739Key = nameof(Str739);

		/// <summary>
		/// Regression R-squared.
		/// </summary>
		public static string Str739 => GetString(Str739Key);

		/// <summary>
		/// Standard error.
		/// </summary>
		public const string Str740Key = nameof(Str740);

		/// <summary>
		/// Standard error.
		/// </summary>
		public static string Str740 => GetString(Str740Key);

		/// <summary>
		/// Coefficient with independent variable, slope of a straight line.
		/// </summary>
		public const string Str741Key = nameof(Str741);

		/// <summary>
		/// Coefficient with independent variable, slope of a straight line.
		/// </summary>
		public static string Str741 => GetString(Str741Key);

		/// <summary>
		/// Linear regression gradient.
		/// </summary>
		public const string Str742Key = nameof(Str742);

		/// <summary>
		/// Linear regression gradient.
		/// </summary>
		public static string Str742 => GetString(Str742Key);

		/// <summary>
		/// Minimum value for a period.
		/// </summary>
		public const string Str743Key = nameof(Str743);

		/// <summary>
		/// Minimum value for a period.
		/// </summary>
		public static string Str743 => GetString(Str743Key);

		/// <summary>
		/// Average deviation.
		/// </summary>
		public const string Str744Key = nameof(Str744);

		/// <summary>
		/// Average deviation.
		/// </summary>
		public static string Str744 => GetString(Str744Key);

		/// <summary>
		/// Median price.
		/// </summary>
		public const string Str745Key = nameof(Str745);

		/// <summary>
		/// Median price.
		/// </summary>
		public static string Str745 => GetString(Str745Key);

		/// <summary>
		/// Linear regression R-squared.
		/// </summary>
		public const string Str746Key = nameof(Str746);

		/// <summary>
		/// Linear regression R-squared.
		/// </summary>
		public static string Str746 => GetString(Str746Key);

		/// <summary>
		/// Indicator based on the security property value.
		/// </summary>
		public const string Str747Key = nameof(Str747);

		/// <summary>
		/// Indicator based on the security property value.
		/// </summary>
		public static string Str747 => GetString(Str747Key);

		/// <summary>
		/// Field
		/// </summary>
		public const string Str748Key = nameof(Str748);

		/// <summary>
		/// Field
		/// </summary>
		public static string Str748 => GetString(Str748Key);

		/// <summary>
		/// Level one market-data field, which is used as an indicator value.
		/// </summary>
		public const string Str749Key = nameof(Str749);

		/// <summary>
		/// Level one market-data field, which is used as an indicator value.
		/// </summary>
		public static string Str749 => GetString(Str749Key);

		/// <summary>
		/// Standard error in linear regression.
		/// </summary>
		public const string Str750Key = nameof(Str750);

		/// <summary>
		/// Standard error in linear regression.
		/// </summary>
		public static string Str750 => GetString(Str750Key);

		/// <summary>
		/// Sum of N last values.
		/// </summary>
		public const string Str751Key = nameof(Str751);

		/// <summary>
		/// Sum of N last values.
		/// </summary>
		public static string Str751 => GetString(Str751Key);

		/// <summary>
		/// Triple Exponential Moving Average.
		/// </summary>
		public const string Str752Key = nameof(Str752);

		/// <summary>
		/// Triple Exponential Moving Average.
		/// </summary>
		public static string Str752 => GetString(Str752Key);

		/// <summary>
		/// ROC period length.
		/// </summary>
		public const string Str753Key = nameof(Str753);

		/// <summary>
		/// ROC period length.
		/// </summary>
		public static string Str753 => GetString(Str753Key);

		/// <summary>
		/// Vertical-horizontal filter.
		/// </summary>
		public const string Str754Key = nameof(Str754);

		/// <summary>
		/// Vertical-horizontal filter.
		/// </summary>
		public static string Str754 => GetString(Str754Key);

		/// <summary>
		/// Variable Index Dynamic Average.
		/// </summary>
		public const string Str755Key = nameof(Str755);

		/// <summary>
		/// Variable Index Dynamic Average.
		/// </summary>
		public static string Str755 => GetString(Str755Key);

		/// <summary>
		/// Candle volume.
		/// </summary>
		public const string Str756Key = nameof(Str756);

		/// <summary>
		/// Candle volume.
		/// </summary>
		public static string Str756 => GetString(Str756Key);

		/// <summary>
		/// Welles Wilder Average Directional Index.
		/// </summary>
		public const string Str757Key = nameof(Str757);

		/// <summary>
		/// Welles Wilder Average Directional Index.
		/// </summary>
		public static string Str757 => GetString(Str757Key);

		/// <summary>
		/// Average True Range.
		/// </summary>
		public const string Str758Key = nameof(Str758);

		/// <summary>
		/// Average True Range.
		/// </summary>
		public static string Str758 => GetString(Str758Key);

		/// <summary>
		/// Chande Momentum Oscillator.
		/// </summary>
		public const string Str759Key = nameof(Str759);

		/// <summary>
		/// Chande Momentum Oscillator.
		/// </summary>
		public static string Str759 => GetString(Str759Key);

		/// <summary>
		/// Commodity Channel Index.
		/// </summary>
		public const string Str760Key = nameof(Str760);

		/// <summary>
		/// Commodity Channel Index.
		/// </summary>
		public static string Str760 => GetString(Str760Key);

		/// <summary>
		/// Price oscillator without trend.
		/// </summary>
		public const string Str761Key = nameof(Str761);

		/// <summary>
		/// Price oscillator without trend.
		/// </summary>
		public static string Str761 => GetString(Str761Key);

		/// <summary>
		/// Welles Wilder Directional Movement Index.
		/// </summary>
		public const string Str762Key = nameof(Str762);

		/// <summary>
		/// Welles Wilder Directional Movement Index.
		/// </summary>
		public static string Str762 => GetString(Str762Key);

		/// <summary>
		/// Ichimoku
		/// </summary>
		public const string Str763Key = nameof(Str763);

		/// <summary>
		/// Ichimoku
		/// </summary>
		public static string Str763 => GetString(Str763Key);

		/// <summary>
		/// Tenkan line
		/// </summary>
		public const string Str764Key = nameof(Str764);

		/// <summary>
		/// Tenkan line
		/// </summary>
		public static string Str764 => GetString(Str764Key);

		/// <summary>
		/// Kijun line
		/// </summary>
		public const string Str765Key = nameof(Str765);

		/// <summary>
		/// Kijun line
		/// </summary>
		public static string Str765 => GetString(Str765Key);

		/// <summary>
		/// Senkou (A) line
		/// </summary>
		public const string Str766Key = nameof(Str766);

		/// <summary>
		/// Senkou (A) line
		/// </summary>
		public static string Str766 => GetString(Str766Key);

		/// <summary>
		/// Senkou (B) line
		/// </summary>
		public const string Str767Key = nameof(Str767);

		/// <summary>
		/// Senkou (B) line
		/// </summary>
		public static string Str767 => GetString(Str767Key);

		/// <summary>
		/// Chinkou line
		/// </summary>
		public const string Str768Key = nameof(Str768);

		/// <summary>
		/// Chinkou line
		/// </summary>
		public static string Str768 => GetString(Str768Key);

		/// <summary>
		/// Momentum.
		/// </summary>
		public const string Str769Key = nameof(Str769);

		/// <summary>
		/// Momentum.
		/// </summary>
		public static string Str769 => GetString(Str769Key);

		/// <summary>
		/// Money Flow Index.
		/// </summary>
		public const string MoneyFlowIndexKey = nameof(MoneyFlowIndex);

		/// <summary>
		/// Money Flow Index.
		/// </summary>
		public static string MoneyFlowIndex => GetString(MoneyFlowIndexKey);

		/// <summary>
		/// Relative Strength Index.
		/// </summary>
		public const string Str770Key = nameof(Str770);

		/// <summary>
		/// Relative Strength Index.
		/// </summary>
		public static string Str770 => GetString(Str770Key);

		/// <summary>
		/// Relative Vigor Index.
		/// </summary>
		public const string Str771Key = nameof(Str771);

		/// <summary>
		/// Relative Vigor Index.
		/// </summary>
		public static string Str771 => GetString(Str771Key);

		/// <summary>
		/// Average indicator part.
		/// </summary>
		public const string Str772Key = nameof(Str772);

		/// <summary>
		/// Average indicator part.
		/// </summary>
		public static string Str772 => GetString(Str772Key);

		/// <summary>
		/// Signaling part of indicator.
		/// </summary>
		public const string Str773Key = nameof(Str773);

		/// <summary>
		/// Signaling part of indicator.
		/// </summary>
		public static string Str773 => GetString(Str773Key);

		/// <summary>
		/// Stochastic %K.
		/// </summary>
		public const string Str774Key = nameof(Str774);

		/// <summary>
		/// Stochastic %K.
		/// </summary>
		public static string Str774 => GetString(Str774Key);

		/// <summary>
		/// True range.
		/// </summary>
		public const string Str775Key = nameof(Str775);

		/// <summary>
		/// True range.
		/// </summary>
		public static string Str775 => GetString(Str775Key);

		/// <summary>
		/// Last oscillator.
		/// </summary>
		public const string Str776Key = nameof(Str776);

		/// <summary>
		/// Last oscillator.
		/// </summary>
		public static string Str776 => GetString(Str776Key);

		/// <summary>
		/// Bollinger Bands.
		/// </summary>
		public const string Str777Key = nameof(Str777);

		/// <summary>
		/// Bollinger Bands.
		/// </summary>
		public static string Str777 => GetString(Str777Key);

		/// <summary>
		/// Period length
		/// </summary>
		public const string Str778Key = nameof(Str778);

		/// <summary>
		/// Period length
		/// </summary>
		public static string Str778 => GetString(Str778Key);

		/// <summary>
		/// Period length. By default equal to 1.
		/// </summary>
		public const string Str779Key = nameof(Str779);

		/// <summary>
		/// Period length. By default equal to 1.
		/// </summary>
		public static string Str779 => GetString(Str779Key);

		/// <summary>
		/// Channel width
		/// </summary>
		public const string Str780Key = nameof(Str780);

		/// <summary>
		/// Channel width
		/// </summary>
		public static string Str780 => GetString(Str780Key);

		/// <summary>
		/// Bollinger Bands channel width. Default value equal to 2.
		/// </summary>
		public const string Str781Key = nameof(Str781);

		/// <summary>
		/// Bollinger Bands channel width. Default value equal to 2.
		/// </summary>
		public static string Str781 => GetString(Str781Key);

		/// <summary>
		/// Incorrect value of bandwidth.
		/// </summary>
		public const string Str782Key = nameof(Str782);

		/// <summary>
		/// Incorrect value of bandwidth.
		/// </summary>
		public static string Str782 => GetString(Str782Key);

		/// <summary>
		/// Changes threshold
		/// </summary>
		public const string Str783Key = nameof(Str783);

		/// <summary>
		/// Changes threshold
		/// </summary>
		public static string Str783 => GetString(Str783Key);

		/// <summary>
		/// Indicator changes threshold.
		/// </summary>
		public const string Str784Key = nameof(Str784);

		/// <summary>
		/// Indicator changes threshold.
		/// </summary>
		public static string Str784 => GetString(Str784Key);

		/// <summary>
		/// Exponential Moving Average.
		/// </summary>
		public const string Str785Key = nameof(Str785);

		/// <summary>
		/// Exponential Moving Average.
		/// </summary>
		public static string Str785 => GetString(Str785Key);

		/// <summary>
		/// Hull Moving Average.
		/// </summary>
		public const string Str786Key = nameof(Str786);

		/// <summary>
		/// Hull Moving Average.
		/// </summary>
		public static string Str786 => GetString(Str786Key);

		/// <summary>
		/// Period of resulting average
		/// </summary>
		public const string Str787Key = nameof(Str787);

		/// <summary>
		/// Period of resulting average
		/// </summary>
		public static string Str787 => GetString(Str787Key);

		/// <summary>
		/// Period of resulting average. If equal to 0, period of resulting average is equal to the square root of HMA period. By default equal to 0.
		/// </summary>
		public const string Str788Key = nameof(Str788);

		/// <summary>
		/// Period of resulting average. If equal to 0, period of resulting average is equal to the square root of HMA period. By default equal to 0.
		/// </summary>
		public static string Str788 => GetString(Str788Key);

		/// <summary>
		/// Jurik Moving Average.
		/// </summary>
		public const string Str789Key = nameof(Str789);

		/// <summary>
		/// Jurik Moving Average.
		/// </summary>
		public static string Str789 => GetString(Str789Key);

		/// <summary>
		/// Phase
		/// </summary>
		public const string Str790Key = nameof(Str790);

		/// <summary>
		/// Phase
		/// </summary>
		public static string Str790 => GetString(Str790Key);

		/// <summary>
		/// Moving average phase.
		/// </summary>
		public const string Str791Key = nameof(Str791);

		/// <summary>
		/// Moving average phase.
		/// </summary>
		public static string Str791 => GetString(Str791Key);

		/// <summary>
		/// Kaufman adaptive moving average.
		/// </summary>
		public const string Str792Key = nameof(Str792);

		/// <summary>
		/// Kaufman adaptive moving average.
		/// </summary>
		public static string Str792 => GetString(Str792Key);

		/// <summary>
		/// Fast MA
		/// </summary>
		public const string Str793Key = nameof(Str793);

		/// <summary>
		/// Fast MA
		/// </summary>
		public static string Str793 => GetString(Str793Key);

		/// <summary>
		/// Fast EMA period. By default value is 2.
		/// </summary>
		public const string Str794Key = nameof(Str794);

		/// <summary>
		/// Fast EMA period. By default value is 2.
		/// </summary>
		public static string Str794 => GetString(Str794Key);

		/// <summary>
		/// Slow MA
		/// </summary>
		public const string Str795Key = nameof(Str795);

		/// <summary>
		/// Slow MA
		/// </summary>
		public static string Str795 => GetString(Str795Key);

		/// <summary>
		/// Slow EMA period. By default value is 30.
		/// </summary>
		public const string Str796Key = nameof(Str796);

		/// <summary>
		/// Slow EMA period. By default value is 30.
		/// </summary>
		public static string Str796 => GetString(Str796Key);

		/// <summary>
		/// Convergence/divergence of moving averages.
		/// </summary>
		public const string Str797Key = nameof(Str797);

		/// <summary>
		/// Convergence/divergence of moving averages.
		/// </summary>
		public static string Str797 => GetString(Str797Key);

		/// <summary>
		/// Long MA
		/// </summary>
		public const string Str798Key = nameof(Str798);

		/// <summary>
		/// Long MA
		/// </summary>
		public static string Str798 => GetString(Str798Key);

		/// <summary>
		/// Long moving average.
		/// </summary>
		public const string Str799Key = nameof(Str799);

		/// <summary>
		/// Long moving average.
		/// </summary>
		public static string Str799 => GetString(Str799Key);

		/// <summary>
		/// Short MA
		/// </summary>
		public const string Str800Key = nameof(Str800);

		/// <summary>
		/// Short MA
		/// </summary>
		public static string Str800 => GetString(Str800Key);

		/// <summary>
		/// Short moving average.
		/// </summary>
		public const string Str801Key = nameof(Str801);

		/// <summary>
		/// Short moving average.
		/// </summary>
		public static string Str801 => GetString(Str801Key);

		/// <summary>
		/// Convergence/divergence of moving averages. Histogram.
		/// </summary>
		public const string Str802Key = nameof(Str802);

		/// <summary>
		/// Convergence/divergence of moving averages. Histogram.
		/// </summary>
		public static string Str802 => GetString(Str802Key);

		/// <summary>
		/// Convergence/divergence of moving averages with signal line.
		/// </summary>
		public const string Str803Key = nameof(Str803);

		/// <summary>
		/// Convergence/divergence of moving averages with signal line.
		/// </summary>
		public static string Str803 => GetString(Str803Key);

		/// <summary>
		/// Signaling MA
		/// </summary>
		public const string Str804Key = nameof(Str804);

		/// <summary>
		/// Signaling MA
		/// </summary>
		public static string Str804 => GetString(Str804Key);

		/// <summary>
		/// Signaling Moving Average.
		/// </summary>
		public const string Str805Key = nameof(Str805);

		/// <summary>
		/// Signaling Moving Average.
		/// </summary>
		public static string Str805 => GetString(Str805Key);

		/// <summary>
		/// Multiplication factor
		/// </summary>
		public const string Str806Key = nameof(Str806);

		/// <summary>
		/// Multiplication factor
		/// </summary>
		public static string Str806 => GetString(Str806Key);

		/// <summary>
		/// Multiplication factor.
		/// </summary>
		public const string Str807Key = nameof(Str807);

		/// <summary>
		/// Multiplication factor.
		/// </summary>
		public static string Str807 => GetString(Str807Key);

		/// <summary>
		/// Parabolic SAR trend indicator implementation.
		/// </summary>
		public const string Str809Key = nameof(Str809);

		/// <summary>
		/// Parabolic SAR trend indicator implementation.
		/// </summary>
		public static string Str809 => GetString(Str809Key);

		/// <summary>
		/// Factor
		/// </summary>
		public const string Str810Key = nameof(Str810);

		/// <summary>
		/// Factor
		/// </summary>
		public static string Str810 => GetString(Str810Key);

		/// <summary>
		/// Acceleration factor.
		/// </summary>
		public const string Str811Key = nameof(Str811);

		/// <summary>
		/// Acceleration factor.
		/// </summary>
		public static string Str811 => GetString(Str811Key);

		/// <summary>
		/// Step
		/// </summary>
		public const string Str812Key = nameof(Str812);

		/// <summary>
		/// Step
		/// </summary>
		public static string Str812 => GetString(Str812Key);

		/// <summary>
		/// Acceleration factor step.
		/// </summary>
		public const string Str813Key = nameof(Str813);

		/// <summary>
		/// Acceleration factor step.
		/// </summary>
		public static string Str813 => GetString(Str813Key);

		/// <summary>
		/// Max
		/// </summary>
		public const string MaxKey = nameof(Max);

		/// <summary>
		/// Max
		/// </summary>
		public static string Max => GetString(MaxKey);

		/// <summary>
		/// Maximum acceleration factor.
		/// </summary>
		public const string Str815Key = nameof(Str815);

		/// <summary>
		/// Maximum acceleration factor.
		/// </summary>
		public static string Str815 => GetString(Str815Key);

		/// <summary>
		/// Peak.
		/// </summary>
		public const string Str816Key = nameof(Str816);

		/// <summary>
		/// Peak.
		/// </summary>
		public static string Str816 => GetString(Str816Key);

		/// <summary>
		/// PeakBar.
		/// </summary>
		public const string Str817Key = nameof(Str817);

		/// <summary>
		/// PeakBar.
		/// </summary>
		public static string Str817 => GetString(Str817Key);

		/// <summary>
		/// Simple moving average.
		/// </summary>
		public const string Str818Key = nameof(Str818);

		/// <summary>
		/// Simple moving average.
		/// </summary>
		public static string Str818 => GetString(Str818Key);

		/// <summary>
		/// Smoothed Moving Average.
		/// </summary>
		public const string Str819Key = nameof(Str819);

		/// <summary>
		/// Smoothed Moving Average.
		/// </summary>
		public static string Str819 => GetString(Str819Key);

		/// <summary>
		/// Standard deviation.
		/// </summary>
		public const string Str820Key = nameof(Str820);

		/// <summary>
		/// Standard deviation.
		/// </summary>
		public static string Str820 => GetString(Str820Key);

		/// <summary>
		/// Trough.
		/// </summary>
		public const string Str821Key = nameof(Str821);

		/// <summary>
		/// Trough.
		/// </summary>
		public static string Str821 => GetString(Str821Key);

		/// <summary>
		/// TroughBar.
		/// </summary>
		public const string Str822Key = nameof(Str822);

		/// <summary>
		/// TroughBar.
		/// </summary>
		public static string Str822 => GetString(Str822Key);

		/// <summary>
		/// Volume weighted moving average.
		/// </summary>
		public const string Str823Key = nameof(Str823);

		/// <summary>
		/// Volume weighted moving average.
		/// </summary>
		public static string Str823 => GetString(Str823Key);

		/// <summary>
		/// Weighted moving average.
		/// </summary>
		public const string Str824Key = nameof(Str824);

		/// <summary>
		/// Weighted moving average.
		/// </summary>
		public static string Str824 => GetString(Str824Key);

		/// <summary>
		/// Welles Wilder Moving Average.
		/// </summary>
		public const string Str825Key = nameof(Str825);

		/// <summary>
		/// Welles Wilder Moving Average.
		/// </summary>
		public static string Str825 => GetString(Str825Key);

		/// <summary>
		/// ZigZag.
		/// </summary>
		public const string Str826Key = nameof(Str826);

		/// <summary>
		/// ZigZag.
		/// </summary>
		public static string Str826 => GetString(Str826Key);

		/// <summary>
		/// Bars between local extremes
		/// </summary>
		public const string Str827Key = nameof(Str827);

		/// <summary>
		/// Bars between local extremes
		/// </summary>
		public static string Str827 => GetString(Str827Key);

		/// <summary>
		/// Minimum number of bars between local maximums, minimums.
		/// </summary>
		public const string Str828Key = nameof(Str828);

		/// <summary>
		/// Minimum number of bars between local maximums, minimums.
		/// </summary>
		public static string Str828 => GetString(Str828Key);

		/// <summary>
		/// Bars between extremes
		/// </summary>
		public const string Str829Key = nameof(Str829);

		/// <summary>
		/// Bars between extremes
		/// </summary>
		public static string Str829 => GetString(Str829Key);

		/// <summary>
		/// Bars minimum, on which Zigzag will not build a second maximum (or minimum), if it is smaller (or larger) by a deviation of the previous respectively.
		/// </summary>
		public const string Str830Key = nameof(Str830);

		/// <summary>
		/// Bars minimum, on which Zigzag will not build a second maximum (or minimum), if it is smaller (or larger) by a deviation of the previous respectively.
		/// </summary>
		public static string Str830 => GetString(Str830Key);

		/// <summary>
		/// Minimum change
		/// </summary>
		public const string Str831Key = nameof(Str831);

		/// <summary>
		/// Minimum change
		/// </summary>
		public static string Str831 => GetString(Str831Key);

		/// <summary>
		/// Minimum number of points between maximums (minimums) of two adjacent bars used by Zigzag indicator to form a local peak (local trough).
		/// </summary>
		public const string Str832Key = nameof(Str832);

		/// <summary>
		/// Minimum number of points between maximums (minimums) of two adjacent bars used by Zigzag indicator to form a local peak (local trough).
		/// </summary>
		public static string Str832 => GetString(Str832Key);

		/// <summary>
		/// Percentage change
		/// </summary>
		public const string Str833Key = nameof(Str833);

		/// <summary>
		/// Percentage change
		/// </summary>
		public static string Str833 => GetString(Str833Key);

		/// <summary>
		/// Percentage change. Specified in 0 to 1 range.
		/// </summary>
		public const string Str834Key = nameof(Str834);

		/// <summary>
		/// Percentage change. Specified in 0 to 1 range.
		/// </summary>
		public static string Str834 => GetString(Str834Key);

		/// <summary>
		/// Acceleration / Deceleration Indicator.
		/// </summary>
		public const string Str835Key = nameof(Str835);

		/// <summary>
		/// Acceleration / Deceleration Indicator.
		/// </summary>
		public static string Str835 => GetString(Str835Key);

		/// <summary>
		/// Awesome Oscillator.
		/// </summary>
		public const string Str836Key = nameof(Str836);

		/// <summary>
		/// Awesome Oscillator.
		/// </summary>
		public static string Str836 => GetString(Str836Key);

		/// <summary>
		/// Alligator
		/// </summary>
		public const string Str837Key = nameof(Str837);

		/// <summary>
		/// Alligator
		/// </summary>
		public static string Str837 => GetString(Str837Key);

		/// <summary>
		/// Jaw
		/// </summary>
		public const string Str838Key = nameof(Str838);

		/// <summary>
		/// Jaw
		/// </summary>
		public static string Str838 => GetString(Str838Key);

		/// <summary>
		/// Teeth
		/// </summary>
		public const string Str839Key = nameof(Str839);

		/// <summary>
		/// Teeth
		/// </summary>
		public static string Str839 => GetString(Str839Key);

		/// <summary>
		/// Lips
		/// </summary>
		public const string Str840Key = nameof(Str840);

		/// <summary>
		/// Lips
		/// </summary>
		public static string Str840 => GetString(Str840Key);

		/// <summary>
		/// Shift
		/// </summary>
		public const string Str841Key = nameof(Str841);

		/// <summary>
		/// Shift
		/// </summary>
		public static string Str841 => GetString(Str841Key);

		/// <summary>
		/// Shift to the future.
		/// </summary>
		public const string Str842Key = nameof(Str842);

		/// <summary>
		/// Shift to the future.
		/// </summary>
		public static string Str842 => GetString(Str842Key);

		/// <summary>
		/// Median price
		/// </summary>
		public const string Str843Key = nameof(Str843);

		/// <summary>
		/// Median price
		/// </summary>
		public static string Str843 => GetString(Str843Key);

		/// <summary>
		/// Fractals.
		/// </summary>
		public const string Str844Key = nameof(Str844);

		/// <summary>
		/// Fractals.
		/// </summary>
		public static string Str844 => GetString(Str844Key);

		/// <summary>
		/// Indicator length must be an odd number.
		/// </summary>
		public const string Str845Key = nameof(Str845);

		/// <summary>
		/// Indicator length must be an odd number.
		/// </summary>
		public static string Str845 => GetString(Str845Key);

		/// <summary>
		/// Fractal up
		/// </summary>
		public const string Str846Key = nameof(Str846);

		/// <summary>
		/// Fractal up
		/// </summary>
		public static string Str846 => GetString(Str846Key);

		/// <summary>
		/// Fractal down
		/// </summary>
		public const string Str848Key = nameof(Str848);

		/// <summary>
		/// Fractal down
		/// </summary>
		public static string Str848 => GetString(Str848Key);

		/// <summary>
		/// Gator oscillator.
		/// </summary>
		public const string Str850Key = nameof(Str850);

		/// <summary>
		/// Gator oscillator.
		/// </summary>
		public static string Str850 => GetString(Str850Key);

		/// <summary>
		/// Top histogram.
		/// </summary>
		public const string Str851Key = nameof(Str851);

		/// <summary>
		/// Top histogram.
		/// </summary>
		public static string Str851 => GetString(Str851Key);

		/// <summary>
		/// Lower histogram.
		/// </summary>
		public const string Str852Key = nameof(Str852);

		/// <summary>
		/// Lower histogram.
		/// </summary>
		public static string Str852 => GetString(Str852Key);

		/// <summary>
		/// Market Facilitation Index.
		/// </summary>
		public const string Str853Key = nameof(Str853);

		/// <summary>
		/// Market Facilitation Index.
		/// </summary>
		public static string Str853 => GetString(Str853Key);

		/// <summary>
		/// Williams Percent Range.
		/// </summary>
		public const string Str854Key = nameof(Str854);

		/// <summary>
		/// Williams Percent Range.
		/// </summary>
		public static string Str854 => GetString(Str854Key);

		/// <summary>
		/// Activation of risk-rule {0}-{1} with action {2}.
		/// </summary>
		public const string Str855ParamsKey = nameof(Str855Params);

		/// <summary>
		/// Activation of risk-rule {0}-{1} with action {2}.
		/// </summary>
		public static string Str855Params => GetString(Str855ParamsKey);

		/// <summary>
		/// Close positions.
		/// </summary>
		public const string Str856Key = nameof(Str856);

		/// <summary>
		/// Close positions.
		/// </summary>
		public static string Str856 => GetString(Str856Key);

		/// <summary>
		/// Stop trading.
		/// </summary>
		public const string Str857Key = nameof(Str857);

		/// <summary>
		/// Stop trading.
		/// </summary>
		public static string Str857 => GetString(Str857Key);

		/// <summary>
		/// Cancel orders.
		/// </summary>
		public const string Str858Key = nameof(Str858);

		/// <summary>
		/// Cancel orders.
		/// </summary>
		public static string Str858 => GetString(Str858Key);

		/// <summary>
		/// Action that needs to be taken in case of rule activation.
		/// </summary>
		public const string Str859Key = nameof(Str859);

		/// <summary>
		/// Action that needs to be taken in case of rule activation.
		/// </summary>
		public static string Str859 => GetString(Str859Key);

		/// <summary>
		/// Risk-rule, tracking profit-loss.
		/// </summary>
		public const string Str860Key = nameof(Str860);

		/// <summary>
		/// Risk-rule, tracking profit-loss.
		/// </summary>
		public static string Str860 => GetString(Str860Key);

		/// <summary>
		/// Profit-loss.
		/// </summary>
		public const string Str861Key = nameof(Str861);

		/// <summary>
		/// Profit-loss.
		/// </summary>
		public static string Str861 => GetString(Str861Key);

		/// <summary>
		/// Position
		/// </summary>
		public const string Str862Key = nameof(Str862);

		/// <summary>
		/// Position
		/// </summary>
		public static string Str862 => GetString(Str862Key);

		/// <summary>
		/// Risk-rule, tracking position size.
		/// </summary>
		public const string Str863Key = nameof(Str863);

		/// <summary>
		/// Risk-rule, tracking position size.
		/// </summary>
		public static string Str863 => GetString(Str863Key);

		/// <summary>
		/// Position size.
		/// </summary>
		public const string Str864Key = nameof(Str864);

		/// <summary>
		/// Position size.
		/// </summary>
		public static string Str864 => GetString(Str864Key);

		/// <summary>
		/// Position (time)
		/// </summary>
		public const string Str865Key = nameof(Str865);

		/// <summary>
		/// Position (time)
		/// </summary>
		public static string Str865 => GetString(Str865Key);

		/// <summary>
		/// Risk-rule, tracking position lifetime.
		/// </summary>
		public const string Str866Key = nameof(Str866);

		/// <summary>
		/// Risk-rule, tracking position lifetime.
		/// </summary>
		public static string Str866 => GetString(Str866Key);

		/// <summary>
		/// Position lifetime.
		/// </summary>
		public const string Str867Key = nameof(Str867);

		/// <summary>
		/// Position lifetime.
		/// </summary>
		public static string Str867 => GetString(Str867Key);

		/// <summary>
		/// Risk-rule, tracking commission size.
		/// </summary>
		public const string Str868Key = nameof(Str868);

		/// <summary>
		/// Risk-rule, tracking commission size.
		/// </summary>
		public static string Str868 => GetString(Str868Key);

		/// <summary>
		/// Commission size.
		/// </summary>
		public const string Str869Key = nameof(Str869);

		/// <summary>
		/// Commission size.
		/// </summary>
		public static string Str869 => GetString(Str869Key);

		/// <summary>
		/// Risk-rule, tracking slippage size.
		/// </summary>
		public const string Str870Key = nameof(Str870);

		/// <summary>
		/// Risk-rule, tracking slippage size.
		/// </summary>
		public static string Str870 => GetString(Str870Key);

		/// <summary>
		/// Slippage size.
		/// </summary>
		public const string Str871Key = nameof(Str871);

		/// <summary>
		/// Slippage size.
		/// </summary>
		public static string Str871 => GetString(Str871Key);

		/// <summary>
		/// Order (price)
		/// </summary>
		public const string Str872Key = nameof(Str872);

		/// <summary>
		/// Order (price)
		/// </summary>
		public static string Str872 => GetString(Str872Key);

		/// <summary>
		/// Risk-rule, tracking order price.
		/// </summary>
		public const string Str873Key = nameof(Str873);

		/// <summary>
		/// Risk-rule, tracking order price.
		/// </summary>
		public static string Str873 => GetString(Str873Key);

		/// <summary>
		/// Risk-rule, tracking order volume.
		/// </summary>
		public const string Str874Key = nameof(Str874);

		/// <summary>
		/// Risk-rule, tracking order volume.
		/// </summary>
		public static string Str874 => GetString(Str874Key);

		/// <summary>
		/// Order volume.
		/// </summary>
		public const string Str875Key = nameof(Str875);

		/// <summary>
		/// Order volume.
		/// </summary>
		public static string Str875 => GetString(Str875Key);

		/// <summary>
		/// Order (frequency)
		/// </summary>
		public const string Str876Key = nameof(Str876);

		/// <summary>
		/// Order (frequency)
		/// </summary>
		public static string Str876 => GetString(Str876Key);

		/// <summary>
		/// Risk-rule, tracking orders placing frequency.
		/// </summary>
		public const string Str877Key = nameof(Str877);

		/// <summary>
		/// Risk-rule, tracking orders placing frequency.
		/// </summary>
		public static string Str877 => GetString(Str877Key);

		/// <summary>
		/// Quantity
		/// </summary>
		public const string Str878Key = nameof(Str878);

		/// <summary>
		/// Quantity
		/// </summary>
		public static string Str878 => GetString(Str878Key);

		/// <summary>
		/// Interval, during which orders quantity will be monitored.
		/// </summary>
		public const string Str879Key = nameof(Str879);

		/// <summary>
		/// Interval, during which orders quantity will be monitored.
		/// </summary>
		public static string Str879 => GetString(Str879Key);

		/// <summary>
		/// Risk-rule, tracking trade price.
		/// </summary>
		public const string Str880Key = nameof(Str880);

		/// <summary>
		/// Risk-rule, tracking trade price.
		/// </summary>
		public static string Str880 => GetString(Str880Key);

		/// <summary>
		/// Risk-rule, tracking trade volume.
		/// </summary>
		public const string Str881Key = nameof(Str881);

		/// <summary>
		/// Risk-rule, tracking trade volume.
		/// </summary>
		public static string Str881 => GetString(Str881Key);

		/// <summary>
		/// Trade volume.
		/// </summary>
		public const string Str882Key = nameof(Str882);

		/// <summary>
		/// Trade volume.
		/// </summary>
		public static string Str882 => GetString(Str882Key);

		/// <summary>
		/// Trade (frequency)
		/// </summary>
		public const string Str883Key = nameof(Str883);

		/// <summary>
		/// Trade (frequency)
		/// </summary>
		public static string Str883 => GetString(Str883Key);

		/// <summary>
		/// Risk-rule, tracking orders execution frequency.
		/// </summary>
		public const string Str884Key = nameof(Str884);

		/// <summary>
		/// Risk-rule, tracking orders execution frequency.
		/// </summary>
		public static string Str884 => GetString(Str884Key);

		/// <summary>
		/// Interval, during which trades quantity will be monitored.
		/// </summary>
		public const string Str885Key = nameof(Str885);

		/// <summary>
		/// Interval, during which trades quantity will be monitored.
		/// </summary>
		public static string Str885 => GetString(Str885Key);

		/// <summary>
		/// Anonymous
		/// </summary>
		public const string AnonymousKey = nameof(Anonymous);

		/// <summary>
		/// Anonymous
		/// </summary>
		public static string Anonymous => GetString(AnonymousKey);

		/// <summary>
		/// Custom
		/// </summary>
		public const string CustomKey = nameof(Custom);

		/// <summary>
		/// Custom
		/// </summary>
		public static string Custom => GetString(CustomKey);

		/// <summary>
		/// Type of data '{0}' is not supported.
		/// </summary>
		public const string Str888ParamsKey = nameof(Str888Params);

		/// <summary>
		/// Type of data '{0}' is not supported.
		/// </summary>
		public static string Str888Params => GetString(Str888ParamsKey);

		/// <summary>
		/// Conditional order does not have a condition.
		/// </summary>
		public const string Str889Key = nameof(Str889);

		/// <summary>
		/// Conditional order does not have a condition.
		/// </summary>
		public static string Str889 => GetString(Str889Key);

		/// <summary>
		/// Security information is missing.
		/// </summary>
		public const string Str890Key = nameof(Str890);

		/// <summary>
		/// Security information is missing.
		/// </summary>
		public static string Str890 => GetString(Str890Key);

		/// <summary>
		/// Portfolio was not found.
		/// </summary>
		public const string Str891Key = nameof(Str891);

		/// <summary>
		/// Portfolio was not found.
		/// </summary>
		public static string Str891 => GetString(Str891Key);

		/// <summary>
		/// Order price must be positive.
		/// </summary>
		public const string Str892Key = nameof(Str892);

		/// <summary>
		/// Order price must be positive.
		/// </summary>
		public static string Str892 => GetString(Str892Key);

		/// <summary>
		/// Limit order price cannot be equal 0.
		/// </summary>
		public const string Str893Key = nameof(Str893);

		/// <summary>
		/// Limit order price cannot be equal 0.
		/// </summary>
		public static string Str893 => GetString(Str893Key);

		/// <summary>
		/// Order volume cannot be zero.
		/// </summary>
		public const string Str894Key = nameof(Str894);

		/// <summary>
		/// Order volume cannot be zero.
		/// </summary>
		public static string Str894 => GetString(Str894Key);

		/// <summary>
		/// Volume for the price {0} cannot be less than zero.
		/// </summary>
		public const string Str895Key = nameof(Str895);

		/// <summary>
		/// Volume for the price {0} cannot be less than zero.
		/// </summary>
		public static string Str895 => GetString(Str895Key);

		/// <summary>
		/// Order already has a ID '{0}'. Possibly, it was already registered.
		/// </summary>
		public const string Str896ParamsKey = nameof(Str896Params);

		/// <summary>
		/// Order already has a ID '{0}'. Possibly, it was already registered.
		/// </summary>
		public static string Str896Params => GetString(Str896ParamsKey);

		/// <summary>
		/// Order already has a transaction ID '{0}'. Possibly, it was already registered.
		/// </summary>
		public const string Str897ParamsKey = nameof(Str897Params);

		/// <summary>
		/// Order already has a transaction ID '{0}'. Possibly, it was already registered.
		/// </summary>
		public static string Str897Params => GetString(Str897ParamsKey);

		/// <summary>
		/// Order already has state '{0}'. Possibly, it was already registered.
		/// </summary>
		public const string Str898ParamsKey = nameof(Str898Params);

		/// <summary>
		/// Order already has state '{0}'. Possibly, it was already registered.
		/// </summary>
		public static string Str898Params => GetString(Str898ParamsKey);

		/// <summary>
		/// Order has neither exchange identifier nor transaction ID. Possibly, it was not registered.
		/// </summary>
		public const string Str899Key = nameof(Str899);

		/// <summary>
		/// Order has neither exchange identifier nor transaction ID. Possibly, it was not registered.
		/// </summary>
		public static string Str899 => GetString(Str899Key);

		/// <summary>
		/// Wrong type {0} of security.
		/// </summary>
		public const string Str900ParamsKey = nameof(Str900Params);

		/// <summary>
		/// Wrong type {0} of security.
		/// </summary>
		public static string Str900Params => GetString(Str900ParamsKey);

		/// <summary>
		/// Option {0} does not have information about expiration date.
		/// </summary>
		public const string Str901ParamsKey = nameof(Str901Params);

		/// <summary>
		/// Option {0} does not have information about expiration date.
		/// </summary>
		public static string Str901Params => GetString(Str901ParamsKey);

		/// <summary>
		/// Information about the underlying security {0} is missing.
		/// </summary>
		public const string Str902ParamsKey = nameof(Str902Params);

		/// <summary>
		/// Information about the underlying security {0} is missing.
		/// </summary>
		public static string Str902Params => GetString(Str902ParamsKey);

		/// <summary>
		/// Security {0} is missing information about the stock exchange board.
		/// </summary>
		public const string Str903ParamsKey = nameof(Str903Params);

		/// <summary>
		/// Security {0} is missing information about the stock exchange board.
		/// </summary>
		public static string Str903Params => GetString(Str903ParamsKey);

		/// <summary>
		/// Order {0} does not have information about connection.
		/// </summary>
		public const string Str904ParamsKey = nameof(Str904Params);

		/// <summary>
		/// Order {0} does not have information about connection.
		/// </summary>
		public static string Str904Params => GetString(Str904ParamsKey);

		/// <summary>
		/// Security {0} price step is equal zero.
		/// </summary>
		public const string Str905ParamsKey = nameof(Str905Params);

		/// <summary>
		/// Security {0} price step is equal zero.
		/// </summary>
		public static string Str905Params => GetString(Str905ParamsKey);

		/// <summary>
		/// Rule {0} not registered in container {1}.
		/// </summary>
		public const string Str906ParamsKey = nameof(Str906Params);

		/// <summary>
		/// Rule {0} not registered in container {1}.
		/// </summary>
		public static string Str906Params => GetString(Str906ParamsKey);

		/// <summary>
		/// Deleting.
		/// </summary>
		public const string Str907Key = nameof(Str907);

		/// <summary>
		/// Deleting.
		/// </summary>
		public static string Str907 => GetString(Str907Key);

		/// <summary>
		/// Indicator name.
		/// </summary>
		public const string Str908Key = nameof(Str908);

		/// <summary>
		/// Indicator name.
		/// </summary>
		public static string Str908 => GetString(Str908Key);

		/// <summary>
		/// Insufficient data to determine if it is possible to process IIndicatorInput.
		/// </summary>
		public const string Str909Key = nameof(Str909);

		/// <summary>
		/// Insufficient data to determine if it is possible to process IIndicatorInput.
		/// </summary>
		public static string Str909 => GetString(Str909Key);

		/// <summary>
		/// Indicator value does not contain data.
		/// </summary>
		public const string Str910Key = nameof(Str910);

		/// <summary>
		/// Indicator value does not contain data.
		/// </summary>
		public static string Str910 => GetString(Str910Key);

		/// <summary>
		/// Object must be an indicator value.
		/// </summary>
		public const string Str911Key = nameof(Str911);

		/// <summary>
		/// Object must be an indicator value.
		/// </summary>
		public static string Str911 => GetString(Str911Key);

		/// <summary>
		/// Index must be positive.
		/// </summary>
		public const string Str912Key = nameof(Str912);

		/// <summary>
		/// Index must be positive.
		/// </summary>
		public static string Str912 => GetString(Str912Key);

		/// <summary>
		/// Index is greater than the allowed range.
		/// </summary>
		public const string Str913Key = nameof(Str913);

		/// <summary>
		/// Index is greater than the allowed range.
		/// </summary>
		public static string Str913 => GetString(Str913Key);

		/// <summary>
		/// Indicator {0} does not contain the required number of values.
		/// </summary>
		public const string Str914ParamsKey = nameof(Str914Params);

		/// <summary>
		/// Indicator {0} does not contain the required number of values.
		/// </summary>
		public static string Str914Params => GetString(Str914ParamsKey);

		/// <summary>
		/// Period length is incorrectly set.
		/// </summary>
		public const string Str916Key = nameof(Str916);

		/// <summary>
		/// Period length is incorrectly set.
		/// </summary>
		public static string Str916 => GetString(Str916Key);

		/// <summary>
		/// Code for field {0} not found.
		/// </summary>
		public const string Str917ParamsKey = nameof(Str917Params);

		/// <summary>
		/// Code for field {0} not found.
		/// </summary>
		public static string Str917Params => GetString(Str917ParamsKey);

		/// <summary>
		/// Field for code {0} not found.
		/// </summary>
		public const string Str918ParamsKey = nameof(Str918Params);

		/// <summary>
		/// Field for code {0} not found.
		/// </summary>
		public static string Str918Params => GetString(Str918ParamsKey);

		/// <summary>
		/// level1 (local)
		/// </summary>
		public const string Str919Key = nameof(Str919);

		/// <summary>
		/// level1 (local)
		/// </summary>
		public static string Str919 => GetString(Str919Key);

		/// <summary>
		/// Message does not contain changes.
		/// </summary>
		public const string Str920Key = nameof(Str920);

		/// <summary>
		/// Message does not contain changes.
		/// </summary>
		public static string Str920 => GetString(Str920Key);

		/// <summary>
		/// time of last {0}
		/// </summary>
		public const string Str921ParamsKey = nameof(Str921Params);

		/// <summary>
		/// time of last {0}
		/// </summary>
		public static string Str921Params => GetString(Str921ParamsKey);

		/// <summary>
		/// Unknown security change.
		/// </summary>
		public const string Str922Key = nameof(Str922);

		/// <summary>
		/// Unknown security change.
		/// </summary>
		public static string Str922 => GetString(Str922Key);

		/// <summary>
		/// Unknown security change {0}.
		/// </summary>
		public const string Str923ParamsKey = nameof(Str923Params);

		/// <summary>
		/// Unknown security change {0}.
		/// </summary>
		public static string Str923Params => GetString(Str923ParamsKey);

		/// <summary>
		/// Wrong type of message.
		/// </summary>
		public const string Str924Key = nameof(Str924);

		/// <summary>
		/// Wrong type of message.
		/// </summary>
		public static string Str924 => GetString(Str924Key);

		/// <summary>
		/// Wrong order ID.
		/// </summary>
		public const string Str925Key = nameof(Str925);

		/// <summary>
		/// Wrong order ID.
		/// </summary>
		public static string Str925 => GetString(Str925Key);

		/// <summary>
		/// Wrong price of order {0}.
		/// </summary>
		public const string Str926ParamsKey = nameof(Str926Params);

		/// <summary>
		/// Wrong price of order {0}.
		/// </summary>
		public static string Str926Params => GetString(Str926ParamsKey);

		/// <summary>
		/// Wrong volume of order {0}.
		/// </summary>
		public const string Str927ParamsKey = nameof(Str927Params);

		/// <summary>
		/// Wrong volume of order {0}.
		/// </summary>
		public static string Str927Params => GetString(Str927ParamsKey);

		/// <summary>
		/// Wrong ID of trade transaction {0}.
		/// </summary>
		public const string Str928ParamsKey = nameof(Str928Params);

		/// <summary>
		/// Wrong ID of trade transaction {0}.
		/// </summary>
		public static string Str928Params => GetString(Str928ParamsKey);

		/// <summary>
		/// Wrong price of trade {0} order {1}.
		/// </summary>
		public const string Str929ParamsKey = nameof(Str929Params);

		/// <summary>
		/// Wrong price of trade {0} order {1}.
		/// </summary>
		public static string Str929Params => GetString(Str929ParamsKey);

		/// <summary>
		/// filling
		/// </summary>
		public const string Str930Key = nameof(Str930);

		/// <summary>
		/// filling
		/// </summary>
		public static string Str930 => GetString(Str930Key);

		/// <summary>
		/// All transferred changes are empty.
		/// </summary>
		public const string Str931Key = nameof(Str931);

		/// <summary>
		/// All transferred changes are empty.
		/// </summary>
		public static string Str931 => GetString(Str931Key);

		/// <summary>
		/// Best bid {0} is greater or equal to best ask {1} during {2}.
		/// </summary>
		public const string Str932ParamsKey = nameof(Str932Params);

		/// <summary>
		/// Best bid {0} is greater or equal to best ask {1} during {2}.
		/// </summary>
		public static string Str932Params => GetString(Str932ParamsKey);

		/// <summary>
		/// market depths (local)
		/// </summary>
		public const string Str934Key = nameof(Str934);

		/// <summary>
		/// market depths (local)
		/// </summary>
		public static string Str934 => GetString(Str934Key);

		/// <summary>
		/// Wrong price of quote.
		/// </summary>
		public const string Str935Key = nameof(Str935);

		/// <summary>
		/// Wrong price of quote.
		/// </summary>
		public static string Str935 => GetString(Str935Key);

		/// <summary>
		/// Wrong volume of quote.
		/// </summary>
		public const string Str936Key = nameof(Str936);

		/// <summary>
		/// Wrong volume of quote.
		/// </summary>
		public static string Str936 => GetString(Str936Key);

		/// <summary>
		/// String is not an order cancellation operation.
		/// </summary>
		public const string Str937Key = nameof(Str937);

		/// <summary>
		/// String is not an order cancellation operation.
		/// </summary>
		public static string Str937 => GetString(Str937Key);

		/// <summary>
		/// Row does not contain information on why the order was cancelled.
		/// </summary>
		public const string Str938Key = nameof(Str938);

		/// <summary>
		/// Row does not contain information on why the order was cancelled.
		/// </summary>
		public static string Str938 => GetString(Str938Key);

		/// <summary>
		/// Row contains incorrect information why the order was cancelled.
		/// </summary>
		public const string Str939Key = nameof(Str939);

		/// <summary>
		/// Row contains incorrect information why the order was cancelled.
		/// </summary>
		public static string Str939 => GetString(Str939Key);

		/// <summary>
		/// Interval cannot be less than zero.
		/// </summary>
		public const string Str940Key = nameof(Str940);

		/// <summary>
		/// Interval cannot be less than zero.
		/// </summary>
		public static string Str940 => GetString(Str940Key);

		/// <summary>
		/// Market depth cannot be less than zero.
		/// </summary>
		public const string Str941Key = nameof(Str941);

		/// <summary>
		/// Market depth cannot be less than zero.
		/// </summary>
		public static string Str941 => GetString(Str941Key);

		/// <summary>
		/// Market depth must be sorted.
		/// </summary>
		public const string Str942Key = nameof(Str942);

		/// <summary>
		/// Market depth must be sorted.
		/// </summary>
		public static string Str942 => GetString(Str942Key);

		/// <summary>
		/// Unknown row in order log {0}.
		/// </summary>
		public const string Str943ParamsKey = nameof(Str943Params);

		/// <summary>
		/// Unknown row in order log {0}.
		/// </summary>
		public static string Str943Params => GetString(Str943ParamsKey);

		/// <summary>
		/// Interval is incorrectly specified.
		/// </summary>
		public const string Str944Key = nameof(Str944);

		/// <summary>
		/// Interval is incorrectly specified.
		/// </summary>
		public static string Str944 => GetString(Str944Key);

		/// <summary>
		/// Interval is not specified.
		/// </summary>
		public const string Str945Key = nameof(Str945);

		/// <summary>
		/// Interval is not specified.
		/// </summary>
		public static string Str945 => GetString(Str945Key);

		/// <summary>
		/// Closed volume is out of range.
		/// </summary>
		public const string Str946Key = nameof(Str946);

		/// <summary>
		/// Closed volume is out of range.
		/// </summary>
		public static string Str946 => GetString(Str946Key);

		/// <summary>
		/// Max order registration latency
		/// </summary>
		public const string Str947Key = nameof(Str947);

		/// <summary>
		/// Max order registration latency
		/// </summary>
		public static string Str947 => GetString(Str947Key);

		/// <summary>
		/// Maximum latency value when order is registered.
		/// </summary>
		public const string Str948Key = nameof(Str948);

		/// <summary>
		/// Maximum latency value when order is registered.
		/// </summary>
		public static string Str948 => GetString(Str948Key);

		/// <summary>
		/// Orders
		/// </summary>
		public const string OrdersKey = nameof(Orders);

		/// <summary>
		/// Orders
		/// </summary>
		public static string Orders => GetString(OrdersKey);

		/// <summary>
		/// Max order cancellation latency
		/// </summary>
		public const string Str950Key = nameof(Str950);

		/// <summary>
		/// Max order cancellation latency
		/// </summary>
		public static string Str950 => GetString(Str950Key);

		/// <summary>
		/// Maximum latency value when order is cancelled.
		/// </summary>
		public const string Str951Key = nameof(Str951);

		/// <summary>
		/// Maximum latency value when order is cancelled.
		/// </summary>
		public static string Str951 => GetString(Str951Key);

		/// <summary>
		/// Min order registration latency
		/// </summary>
		public const string Str952Key = nameof(Str952);

		/// <summary>
		/// Min order registration latency
		/// </summary>
		public static string Str952 => GetString(Str952Key);

		/// <summary>
		/// Minimum latency value when order is registered.
		/// </summary>
		public const string Str953Key = nameof(Str953);

		/// <summary>
		/// Minimum latency value when order is registered.
		/// </summary>
		public static string Str953 => GetString(Str953Key);

		/// <summary>
		/// Min order cancellation latency
		/// </summary>
		public const string Str954Key = nameof(Str954);

		/// <summary>
		/// Min order cancellation latency
		/// </summary>
		public static string Str954 => GetString(Str954Key);

		/// <summary>
		/// Minimum latency value when order is cancelled.
		/// </summary>
		public const string Str955Key = nameof(Str955);

		/// <summary>
		/// Minimum latency value when order is cancelled.
		/// </summary>
		public static string Str955 => GetString(Str955Key);

		/// <summary>
		/// Total orders
		/// </summary>
		public const string Str956Key = nameof(Str956);

		/// <summary>
		/// Total orders
		/// </summary>
		public static string Str956 => GetString(Str956Key);

		/// <summary>
		/// Total number of orders.
		/// </summary>
		public const string Str957Key = nameof(Str957);

		/// <summary>
		/// Total number of orders.
		/// </summary>
		public static string Str957 => GetString(Str957Key);

		/// <summary>
		/// Max profit
		/// </summary>
		public const string Str958Key = nameof(Str958);

		/// <summary>
		/// Max profit
		/// </summary>
		public static string Str958 => GetString(Str958Key);

		/// <summary>
		/// Maximum profit value for the whole period.
		/// </summary>
		public const string Str959Key = nameof(Str959);

		/// <summary>
		/// Maximum profit value for the whole period.
		/// </summary>
		public static string Str959 => GetString(Str959Key);

		/// <summary>
		/// Max drawdown
		/// </summary>
		public const string Str960Key = nameof(Str960);

		/// <summary>
		/// Max drawdown
		/// </summary>
		public static string Str960 => GetString(Str960Key);

		/// <summary>
		/// Maximum absolute drawdown during the whole period.
		/// </summary>
		public const string Str961Key = nameof(Str961);

		/// <summary>
		/// Maximum absolute drawdown during the whole period.
		/// </summary>
		public static string Str961 => GetString(Str961Key);

		/// <summary>
		/// Relative drawdown
		/// </summary>
		public const string Str962Key = nameof(Str962);

		/// <summary>
		/// Relative drawdown
		/// </summary>
		public static string Str962 => GetString(Str962Key);

		/// <summary>
		/// Maximum relative equity drawdown during the whole period.
		/// </summary>
		public const string Str963Key = nameof(Str963);

		/// <summary>
		/// Maximum relative equity drawdown during the whole period.
		/// </summary>
		public static string Str963 => GetString(Str963Key);

		/// <summary>
		/// Relative income
		/// </summary>
		public const string Str964Key = nameof(Str964);

		/// <summary>
		/// Relative income
		/// </summary>
		public static string Str964 => GetString(Str964Key);

		/// <summary>
		/// Relative income for the whole time period.
		/// </summary>
		public const string Str965Key = nameof(Str965);

		/// <summary>
		/// Relative income for the whole time period.
		/// </summary>
		public static string Str965 => GetString(Str965Key);

		/// <summary>
		/// Recovery factor
		/// </summary>
		public const string Str966Key = nameof(Str966);

		/// <summary>
		/// Recovery factor
		/// </summary>
		public static string Str966 => GetString(Str966Key);

		/// <summary>
		/// Recovery factor (net profit / maximum drawdown).
		/// </summary>
		public const string Str967Key = nameof(Str967);

		/// <summary>
		/// Recovery factor (net profit / maximum drawdown).
		/// </summary>
		public static string Str967 => GetString(Str967Key);

		/// <summary>
		/// Numeric profit
		/// </summary>
		public const string Str968Key = nameof(Str968);

		/// <summary>
		/// Numeric profit
		/// </summary>
		public static string Str968 => GetString(Str968Key);

		/// <summary>
		/// Net profit for whole time period.
		/// </summary>
		public const string Str969Key = nameof(Str969);

		/// <summary>
		/// Net profit for whole time period.
		/// </summary>
		public static string Str969 => GetString(Str969Key);

		/// <summary>
		/// Max long position
		/// </summary>
		public const string Str970Key = nameof(Str970);

		/// <summary>
		/// Max long position
		/// </summary>
		public static string Str970 => GetString(Str970Key);

		/// <summary>
		/// Maximum long position size.
		/// </summary>
		public const string Str971Key = nameof(Str971);

		/// <summary>
		/// Maximum long position size.
		/// </summary>
		public static string Str971 => GetString(Str971Key);

		/// <summary>
		/// Positions
		/// </summary>
		public const string Str972Key = nameof(Str972);

		/// <summary>
		/// Positions
		/// </summary>
		public static string Str972 => GetString(Str972Key);

		/// <summary>
		/// Max short position
		/// </summary>
		public const string Str973Key = nameof(Str973);

		/// <summary>
		/// Max short position
		/// </summary>
		public static string Str973 => GetString(Str973Key);

		/// <summary>
		/// Maximum short position size.
		/// </summary>
		public const string Str974Key = nameof(Str974);

		/// <summary>
		/// Maximum short position size.
		/// </summary>
		public static string Str974 => GetString(Str974Key);

		/// <summary>
		/// Opposite
		/// </summary>
		public const string Str975Key = nameof(Str975);

		/// <summary>
		/// Opposite
		/// </summary>
		public static string Str975 => GetString(Str975Key);

		/// <summary>
		/// Following
		/// </summary>
		public const string Str976Key = nameof(Str976);

		/// <summary>
		/// Following
		/// </summary>
		public static string Str976 => GetString(Str976Key);

		/// <summary>
		/// Connection settings
		/// </summary>
		public const string ConnectionSettingsKey = nameof(ConnectionSettings);

		/// <summary>
		/// Connection settings
		/// </summary>
		public static string ConnectionSettings => GetString(ConnectionSettingsKey);

		/// <summary>
		/// Mechanism for tracking connections with the trading system settings.
		/// </summary>
		public const string Str978Key = nameof(Str978);

		/// <summary>
		/// Mechanism for tracking connections with the trading system settings.
		/// </summary>
		public static string Str978 => GetString(Str978Key);

		/// <summary>
		/// Settings
		/// </summary>
		public const string SettingsKey = nameof(Settings);

		/// <summary>
		/// Settings
		/// </summary>
		public static string Settings => GetString(SettingsKey);

		/// <summary>
		/// Export
		/// </summary>
		public const string ExportKey = nameof(Export);

		/// <summary>
		/// Export
		/// </summary>
		public static string Export => GetString(ExportKey);

		/// <summary>
		/// Export settings.
		/// </summary>
		public const string ExportSettingsKey = nameof(ExportSettings);

		/// <summary>
		/// Export settings.
		/// </summary>
		public static string ExportSettings => GetString(ExportSettingsKey);

		/// <summary>
		/// Profitable trades
		/// </summary>
		public const string Str983Key = nameof(Str983);

		/// <summary>
		/// Profitable trades
		/// </summary>
		public static string Str983 => GetString(Str983Key);

		/// <summary>
		/// Number of trades won (whose profit is greater than 0).
		/// </summary>
		public const string Str984Key = nameof(Str984);

		/// <summary>
		/// Number of trades won (whose profit is greater than 0).
		/// </summary>
		public static string Str984 => GetString(Str984Key);

		/// <summary>
		/// Trades
		/// </summary>
		public const string Str985Key = nameof(Str985);

		/// <summary>
		/// Trades
		/// </summary>
		public static string Str985 => GetString(Str985Key);

		/// <summary>
		/// Losing trades
		/// </summary>
		public const string Str986Key = nameof(Str986);

		/// <summary>
		/// Losing trades
		/// </summary>
		public static string Str986 => GetString(Str986Key);

		/// <summary>
		/// Number of trades lost with zero profit (whose profit is less than or equal to 0).
		/// </summary>
		public const string Str987Key = nameof(Str987);

		/// <summary>
		/// Number of trades lost with zero profit (whose profit is less than or equal to 0).
		/// </summary>
		public static string Str987 => GetString(Str987Key);

		/// <summary>
		/// Total trades
		/// </summary>
		public const string Str988Key = nameof(Str988);

		/// <summary>
		/// Total trades
		/// </summary>
		public static string Str988 => GetString(Str988Key);

		/// <summary>
		/// Total number of trades.
		/// </summary>
		public const string Str989Key = nameof(Str989);

		/// <summary>
		/// Total number of trades.
		/// </summary>
		public static string Str989 => GetString(Str989Key);

		/// <summary>
		/// Closing trades
		/// </summary>
		public const string Str990Key = nameof(Str990);

		/// <summary>
		/// Closing trades
		/// </summary>
		public static string Str990 => GetString(Str990Key);

		/// <summary>
		/// Total number of closing trades.
		/// </summary>
		public const string Str991Key = nameof(Str991);

		/// <summary>
		/// Total number of closing trades.
		/// </summary>
		public static string Str991 => GetString(Str991Key);

		/// <summary>
		/// Average profit
		/// </summary>
		public const string Str992Key = nameof(Str992);

		/// <summary>
		/// Average profit
		/// </summary>
		public static string Str992 => GetString(Str992Key);

		/// <summary>
		/// Average trade profit.
		/// </summary>
		public const string Str993Key = nameof(Str993);

		/// <summary>
		/// Average trade profit.
		/// </summary>
		public static string Str993 => GetString(Str993Key);

		/// <summary>
		/// Average win
		/// </summary>
		public const string Str994Key = nameof(Str994);

		/// <summary>
		/// Average win
		/// </summary>
		public static string Str994 => GetString(Str994Key);

		/// <summary>
		/// Average winning trade.
		/// </summary>
		public const string Str995Key = nameof(Str995);

		/// <summary>
		/// Average winning trade.
		/// </summary>
		public static string Str995 => GetString(Str995Key);

		/// <summary>
		/// Average loss
		/// </summary>
		public const string Str996Key = nameof(Str996);

		/// <summary>
		/// Average loss
		/// </summary>
		public static string Str996 => GetString(Str996Key);

		/// <summary>
		/// Average losing trade.
		/// </summary>
		public const string Str997Key = nameof(Str997);

		/// <summary>
		/// Average losing trade.
		/// </summary>
		public static string Str997 => GetString(Str997Key);

		/// <summary>
		/// candles (opening time)
		/// </summary>
		public const string Str998Key = nameof(Str998);

		/// <summary>
		/// candles (opening time)
		/// </summary>
		public static string Str998 => GetString(Str998Key);

		/// <summary>
		/// candles (max time)
		/// </summary>
		public const string Str999Key = nameof(Str999);

		/// <summary>
		/// candles (max time)
		/// </summary>
		public static string Str999 => GetString(Str999Key);

		/// <summary>
		/// candles (min time)
		/// </summary>
		public const string Str1000Key = nameof(Str1000);

		/// <summary>
		/// candles (min time)
		/// </summary>
		public static string Str1000 => GetString(Str1000Key);

		/// <summary>
		/// candles (closing time)
		/// </summary>
		public const string Str1001Key = nameof(Str1001);

		/// <summary>
		/// candles (closing time)
		/// </summary>
		public static string Str1001 => GetString(Str1001Key);

		/// <summary>
		/// File {0} has newer version {1} format, than current {2}.
		/// </summary>
		public const string Str1002ParamsKey = nameof(Str1002Params);

		/// <summary>
		/// File {0} has newer version {1} format, than current {2}.
		/// </summary>
		public static string Str1002Params => GetString(Str1002ParamsKey);

		/// <summary>
		/// Error reading file {0}.
		/// </summary>
		public const string Str1003ParamsKey = nameof(Str1003Params);

		/// <summary>
		/// Error reading file {0}.
		/// </summary>
		public static string Str1003Params => GetString(Str1003ParamsKey);

		/// <summary>
		/// Name was not found for directory {0}.
		/// </summary>
		public const string Str1004ParamsKey = nameof(Str1004Params);

		/// <summary>
		/// Name was not found for directory {0}.
		/// </summary>
		public static string Str1004Params => GetString(Str1004ParamsKey);

		/// <summary>
		/// Difference between values {0} and {1} exceeded decimal unit allowed range.
		/// </summary>
		public const string Str1006ParamsKey = nameof(Str1006Params);

		/// <summary>
		/// Difference between values {0} and {1} exceeded decimal unit allowed range.
		/// </summary>
		public static string Str1006Params => GetString(Str1006ParamsKey);

		/// <summary>
		/// Minimum price step {0} for security {1} does not correspond to the price itself {2}.
		/// </summary>
		public const string Str1007ParamsKey = nameof(Str1007Params);

		/// <summary>
		/// Minimum price step {0} for security {1} does not correspond to the price itself {2}.
		/// </summary>
		public static string Str1007Params => GetString(Str1007ParamsKey);

		/// <summary>
		/// Cannot cast to integer value. Price {0}, previous price {1}, step {2}, use long {3}.
		/// </summary>
		public const string Str1008ParamsKey = nameof(Str1008Params);

		/// <summary>
		/// Cannot cast to integer value. Price {0}, previous price {1}, step {2}, use long {3}.
		/// </summary>
		public static string Str1008Params => GetString(Str1008ParamsKey);

		/// <summary>
		/// Attempting to write unordered {0}. Last written time equal to {1:yyyy/MM/dd HH:mm:ss.fff}, new {2:yyyy/MM/dd HH:mm:ss.fff}.
		/// </summary>
		public const string Str1009ParamsKey = nameof(Str1009Params);

		/// <summary>
		/// Attempting to write unordered {0}. Last written time equal to {1:yyyy/MM/dd HH:mm:ss.fff}, new {2:yyyy/MM/dd HH:mm:ss.fff}.
		/// </summary>
		public static string Str1009Params => GetString(Str1009ParamsKey);

		/// <summary>
		/// Fractional volume {0} is not supported.
		/// </summary>
		public const string Str1010ParamsKey = nameof(Str1010Params);

		/// <summary>
		/// Fractional volume {0} is not supported.
		/// </summary>
		public static string Str1010Params => GetString(Str1010ParamsKey);

		/// <summary>
		/// Fractional volume is not supported.
		/// </summary>
		public const string Str1011Key = nameof(Str1011);

		/// <summary>
		/// Fractional volume is not supported.
		/// </summary>
		public static string Str1011 => GetString(Str1011Key);

		/// <summary>
		/// Wrong ID of trade order {0}.
		/// </summary>
		public const string Str1012ParamsKey = nameof(Str1012Params);

		/// <summary>
		/// Wrong ID of trade order {0}.
		/// </summary>
		public static string Str1012Params => GetString(Str1012ParamsKey);

		/// <summary>
		/// orders
		/// </summary>
		public const string Str1013Key = nameof(Str1013);

		/// <summary>
		/// orders
		/// </summary>
		public static string Str1013 => GetString(Str1013Key);

		/// <summary>
		/// To value cannot be less than {0} value.
		/// </summary>
		public const string Str1014Key = nameof(Str1014);

		/// <summary>
		/// To value cannot be less than {0} value.
		/// </summary>
		public static string Str1014 => GetString(Str1014Key);

		/// <summary>
		/// Wrong parameter of candle {0}. Candle parameter is equal {1}, storage accepts {2}.
		/// </summary>
		public const string Str1016ParamsKey = nameof(Str1016Params);

		/// <summary>
		/// Wrong parameter of candle {0}. Candle parameter is equal {1}, storage accepts {2}.
		/// </summary>
		public static string Str1016Params => GetString(Str1016ParamsKey);

		/// <summary>
		/// Wrong type of candle.
		/// </summary>
		public const string WrongCandleTypeKey = nameof(WrongCandleType);

		/// <summary>
		/// Wrong type of candle.
		/// </summary>
		public static string WrongCandleType => GetString(WrongCandleTypeKey);

		/// <summary>
		/// Unknown type of market-data.
		/// </summary>
		public const string Str1018Key = nameof(Str1018);

		/// <summary>
		/// Unknown type of market-data.
		/// </summary>
		public static string Str1018 => GetString(Str1018Key);

		/// <summary>
		/// Wrong trade ID.
		/// </summary>
		public const string Str1020Key = nameof(Str1020);

		/// <summary>
		/// Wrong trade ID.
		/// </summary>
		public static string Str1020 => GetString(Str1020Key);

		/// <summary>
		/// Wrong price of trade {0}.
		/// </summary>
		public const string Str1021ParamsKey = nameof(Str1021Params);

		/// <summary>
		/// Wrong price of trade {0}.
		/// </summary>
		public static string Str1021Params => GetString(Str1021ParamsKey);

		/// <summary>
		/// Wrong volume of trade {0}.
		/// </summary>
		public const string Str1022ParamsKey = nameof(Str1022Params);

		/// <summary>
		/// Wrong volume of trade {0}.
		/// </summary>
		public static string Str1022Params => GetString(Str1022ParamsKey);

		/// <summary>
		/// trades (local)
		/// </summary>
		public const string Str1024Key = nameof(Str1024);

		/// <summary>
		/// trades (local)
		/// </summary>
		public static string Str1024 => GetString(Str1024Key);

		/// <summary>
		/// Empty security ID.
		/// </summary>
		public const string Str1025Key = nameof(Str1025);

		/// <summary>
		/// Empty security ID.
		/// </summary>
		public static string Str1025 => GetString(Str1025Key);

		/// <summary>
		/// Security for {0} is equal {1}, but should be {2}.
		/// </summary>
		public const string Str1026ParamsKey = nameof(Str1026Params);

		/// <summary>
		/// Security for {0} is equal {1}, but should be {2}.
		/// </summary>
		public static string Str1026Params => GetString(Str1026ParamsKey);

		/// <summary>
		/// Security {0} volume step is equal zero.
		/// </summary>
		public const string Str1027ParamsKey = nameof(Str1027Params);

		/// <summary>
		/// Security {0} volume step is equal zero.
		/// </summary>
		public static string Str1027Params => GetString(Str1027ParamsKey);

		/// <summary>
		/// Subscribed to events.
		/// </summary>
		public const string Str1028Key = nameof(Str1028);

		/// <summary>
		/// Subscribed to events.
		/// </summary>
		public static string Str1028 => GetString(Str1028Key);

		/// <summary>
		/// Error cancelling order
		/// </summary>
		public const string Str1030Key = nameof(Str1030);

		/// <summary>
		/// Error cancelling order
		/// </summary>
		public static string Str1030 => GetString(Str1030Key);

		/// <summary>
		/// Order change
		/// </summary>
		public const string Str1031Key = nameof(Str1031);

		/// <summary>
		/// Order change
		/// </summary>
		public static string Str1031 => GetString(Str1031Key);

		/// <summary>
		/// New trades for order
		/// </summary>
		public const string Str1032Key = nameof(Str1032);

		/// <summary>
		/// New trades for order
		/// </summary>
		public static string Str1032 => GetString(Str1032Key);

		/// <summary>
		/// All order trades
		/// </summary>
		public const string Str1033Key = nameof(Str1033);

		/// <summary>
		/// All order trades
		/// </summary>
		public static string Str1033 => GetString(Str1033Key);

		/// <summary>
		/// Order registration
		/// </summary>
		public const string Str1034Key = nameof(Str1034);

		/// <summary>
		/// Order registration
		/// </summary>
		public static string Str1034 => GetString(Str1034Key);

		/// <summary>
		/// Stop-order activation
		/// </summary>
		public const string Str1035Key = nameof(Str1035);

		/// <summary>
		/// Stop-order activation
		/// </summary>
		public static string Str1035 => GetString(Str1035Key);

		/// <summary>
		/// Partial order filling
		/// </summary>
		public const string Str1036Key = nameof(Str1036);

		/// <summary>
		/// Partial order filling
		/// </summary>
		public static string Str1036 => GetString(Str1036Key);

		/// <summary>
		/// Cancel order
		/// </summary>
		public const string Str1037Key = nameof(Str1037);

		/// <summary>
		/// Cancel order
		/// </summary>
		public static string Str1037 => GetString(Str1037Key);

		/// <summary>
		/// Completely filled
		/// </summary>
		public const string Str1038Key = nameof(Str1038);

		/// <summary>
		/// Completely filled
		/// </summary>
		public static string Str1038 => GetString(Str1038Key);

		/// <summary>
		/// Portfolio does not have information about connection.
		/// </summary>
		public const string Str1039Key = nameof(Str1039);

		/// <summary>
		/// Portfolio does not have information about connection.
		/// </summary>
		public static string Str1039 => GetString(Str1039Key);

		/// <summary>
		/// Portfolio {0} balance decreased below {1}
		/// </summary>
		public const string Str1040ParamsKey = nameof(Str1040Params);

		/// <summary>
		/// Portfolio {0} balance decreased below {1}
		/// </summary>
		public static string Str1040Params => GetString(Str1040ParamsKey);

		/// <summary>
		/// Portfolio {0} balance increased above {1}
		/// </summary>
		public const string Str1041ParamsKey = nameof(Str1041Params);

		/// <summary>
		/// Portfolio {0} balance increased above {1}
		/// </summary>
		public static string Str1041Params => GetString(Str1041ParamsKey);

		/// <summary>
		/// Position change
		/// </summary>
		public const string Str1042Key = nameof(Str1042);

		/// <summary>
		/// Position change
		/// </summary>
		public static string Str1042 => GetString(Str1042Key);

		/// <summary>
		/// Position does not have information about portfolio.
		/// </summary>
		public const string Str1043Key = nameof(Str1043);

		/// <summary>
		/// Position does not have information about portfolio.
		/// </summary>
		public static string Str1043 => GetString(Str1043Key);

		/// <summary>
		/// Position {0} decreased below {1}
		/// </summary>
		public const string Str1044ParamsKey = nameof(Str1044Params);

		/// <summary>
		/// Position {0} decreased below {1}
		/// </summary>
		public static string Str1044Params => GetString(Str1044ParamsKey);

		/// <summary>
		/// Position {0} increased above {1}
		/// </summary>
		public const string Str1045ParamsKey = nameof(Str1045Params);

		/// <summary>
		/// Position {0} increased above {1}
		/// </summary>
		public static string Str1045Params => GetString(Str1045ParamsKey);

		/// <summary>
		/// Security change
		/// </summary>
		public const string Str1046Key = nameof(Str1046);

		/// <summary>
		/// Security change
		/// </summary>
		public static string Str1046 => GetString(Str1046Key);

		/// <summary>
		/// New trades of a security
		/// </summary>
		public const string Str1047Key = nameof(Str1047);

		/// <summary>
		/// New trades of a security
		/// </summary>
		public static string Str1047 => GetString(Str1047Key);

		/// <summary>
		/// New entries in orders log for security
		/// </summary>
		public const string Str1048Key = nameof(Str1048);

		/// <summary>
		/// New entries in orders log for security
		/// </summary>
		public static string Str1048 => GetString(Str1048Key);

		/// <summary>
		/// Security's last trade
		/// </summary>
		public const string Str1049Key = nameof(Str1049);

		/// <summary>
		/// Security's last trade
		/// </summary>
		public static string Str1049 => GetString(Str1049Key);

		/// <summary>
		/// Security market depth change
		/// </summary>
		public const string Str1050Key = nameof(Str1050);

		/// <summary>
		/// Security market depth change
		/// </summary>
		public static string Str1050 => GetString(Str1050Key);

		/// <summary>
		/// Price value cannot be zero.
		/// </summary>
		public const string Str1051Key = nameof(Str1051);

		/// <summary>
		/// Price value cannot be zero.
		/// </summary>
		public static string Str1051 => GetString(Str1051Key);

		/// <summary>
		/// Price value cannot be less than zero.
		/// </summary>
		public const string Str1052Key = nameof(Str1052);

		/// <summary>
		/// Price value cannot be less than zero.
		/// </summary>
		public static string Str1052 => GetString(Str1052Key);

		/// <summary>
		/// Quote is missing.
		/// </summary>
		public const string Str1053Key = nameof(Str1053);

		/// <summary>
		/// Quote is missing.
		/// </summary>
		public static string Str1053 => GetString(Str1053Key);

		/// <summary>
		/// Last trade is missing.
		/// </summary>
		public const string Str1054Key = nameof(Str1054);

		/// <summary>
		/// Last trade is missing.
		/// </summary>
		public static string Str1054 => GetString(Str1054Key);

		/// <summary>
		/// Exact time
		/// </summary>
		public const string Str1055Key = nameof(Str1055);

		/// <summary>
		/// Exact time
		/// </summary>
		public static string Str1055 => GetString(Str1055Key);

		/// <summary>
		/// Market depth change
		/// </summary>
		public const string Str1056Key = nameof(Str1056);

		/// <summary>
		/// Market depth change
		/// </summary>
		public static string Str1056 => GetString(Str1056Key);

		/// <summary>
		/// Increasing spread size of market depth {0} by {1}
		/// </summary>
		public const string Str1057ParamsKey = nameof(Str1057Params);

		/// <summary>
		/// Increasing spread size of market depth {0} by {1}
		/// </summary>
		public static string Str1057Params => GetString(Str1057ParamsKey);

		/// <summary>
		/// Decreasing spread size of market depth {0} by {1}
		/// </summary>
		public const string Str1058ParamsKey = nameof(Str1058Params);

		/// <summary>
		/// Decreasing spread size of market depth {0} by {1}
		/// </summary>
		public static string Str1058Params => GetString(Str1058ParamsKey);

		/// <summary>
		/// Increasing best bid of market depth {0} by {1}
		/// </summary>
		public const string Str1059ParamsKey = nameof(Str1059Params);

		/// <summary>
		/// Increasing best bid of market depth {0} by {1}
		/// </summary>
		public static string Str1059Params => GetString(Str1059ParamsKey);

		/// <summary>
		/// Decreasing best bid of market depth {0} by {1}
		/// </summary>
		public const string Str1060ParamsKey = nameof(Str1060Params);

		/// <summary>
		/// Decreasing best bid of market depth {0} by {1}
		/// </summary>
		public static string Str1060Params => GetString(Str1060ParamsKey);

		/// <summary>
		/// Increasing best ask of market depth {0} by {1}
		/// </summary>
		public const string Str1061ParamsKey = nameof(Str1061Params);

		/// <summary>
		/// Increasing best ask of market depth {0} by {1}
		/// </summary>
		public static string Str1061Params => GetString(Str1061ParamsKey);

		/// <summary>
		/// Decreasing best ask of market depth {0} by {1}
		/// </summary>
		public const string Str1062ParamsKey = nameof(Str1062Params);

		/// <summary>
		/// Decreasing best ask of market depth {0} by {1}
		/// </summary>
		public static string Str1062Params => GetString(Str1062ParamsKey);

		/// <summary>
		/// Missing quote in market depth.
		/// </summary>
		public const string Str1063Key = nameof(Str1063);

		/// <summary>
		/// Missing quote in market depth.
		/// </summary>
		public static string Str1063 => GetString(Str1063Key);

		/// <summary>
		/// Changed candles
		/// </summary>
		public const string Str1064Key = nameof(Str1064);

		/// <summary>
		/// Changed candles
		/// </summary>
		public static string Str1064 => GetString(Str1064Key);

		/// <summary>
		/// Candle change
		/// </summary>
		public const string Str1065Key = nameof(Str1065);

		/// <summary>
		/// Candle change
		/// </summary>
		public static string Str1065 => GetString(Str1065Key);

		/// <summary>
		/// End of candle
		/// </summary>
		public const string Str1066Key = nameof(Str1066);

		/// <summary>
		/// End of candle
		/// </summary>
		public static string Str1066 => GetString(Str1066Key);

		/// <summary>
		/// Increasing close price of candle {0} above {1}
		/// </summary>
		public const string Str1067ParamsKey = nameof(Str1067Params);

		/// <summary>
		/// Increasing close price of candle {0} above {1}
		/// </summary>
		public static string Str1067Params => GetString(Str1067ParamsKey);

		/// <summary>
		/// Decreasing close price of candle {0} below {1}
		/// </summary>
		public const string Str1068ParamsKey = nameof(Str1068Params);

		/// <summary>
		/// Decreasing close price of candle {0} below {1}
		/// </summary>
		public static string Str1068Params => GetString(Str1068ParamsKey);

		/// <summary>
		/// - volume exceeding {0}
		/// </summary>
		public const string Str1069ParamsKey = nameof(Str1069Params);

		/// <summary>
		/// - volume exceeding {0}
		/// </summary>
		public static string Str1069Params => GetString(Str1069ParamsKey);

		/// <summary>
		/// Registration ID does not contain information about current candle.
		/// </summary>
		public const string Str1070Key = nameof(Str1070);

		/// <summary>
		/// Registration ID does not contain information about current candle.
		/// </summary>
		public static string Str1070 => GetString(Str1070Key);

		/// <summary>
		/// - current candle exceeding {0}
		/// </summary>
		public const string Str1071ParamsKey = nameof(Str1071Params);

		/// <summary>
		/// - current candle exceeding {0}
		/// </summary>
		public static string Str1071Params => GetString(Str1071ParamsKey);

		/// <summary>
		/// Started candles
		/// </summary>
		public const string Str1072Key = nameof(Str1072);

		/// <summary>
		/// Started candles
		/// </summary>
		public static string Str1072 => GetString(Str1072Key);

		/// <summary>
		/// Finished candles
		/// </summary>
		public const string Str1073Key = nameof(Str1073);

		/// <summary>
		/// Finished candles
		/// </summary>
		public static string Str1073 => GetString(Str1073Key);

		/// <summary>
		/// {0}% of current candle is completed.
		/// </summary>
		public const string Str1075ParamsKey = nameof(Str1075Params);

		/// <summary>
		/// {0}% of current candle is completed.
		/// </summary>
		public static string Str1075Params => GetString(Str1075ParamsKey);

		/// <summary>
		/// {0}% of current candles is completed.
		/// </summary>
		public const string Str1076ParamsKey = nameof(Str1076Params);

		/// <summary>
		/// {0}% of current candles is completed.
		/// </summary>
		public static string Str1076Params => GetString(Str1076ParamsKey);

		/// <summary>
		/// Percentage change must be positive.
		/// </summary>
		public const string Str1077Key = nameof(Str1077);

		/// <summary>
		/// Percentage change must be positive.
		/// </summary>
		public static string Str1077 => GetString(Str1077Key);

		/// <summary>
		/// New trades
		/// </summary>
		public const string Str1080Key = nameof(Str1080);

		/// <summary>
		/// New trades
		/// </summary>
		public static string Str1080 => GetString(Str1080Key);

		/// <summary>
		/// New orders
		/// </summary>
		public const string Str1081Key = nameof(Str1081);

		/// <summary>
		/// New orders
		/// </summary>
		public static string Str1081 => GetString(Str1081Key);

		/// <summary>
		/// Activation.
		/// </summary>
		public const string Str1082Key = nameof(Str1082);

		/// <summary>
		/// Activation.
		/// </summary>
		public static string Str1082 => GetString(Str1082Key);

		/// <summary>
		/// Deletion.
		/// </summary>
		public const string Str1083Key = nameof(Str1083);

		/// <summary>
		/// Deletion.
		/// </summary>
		public static string Str1083 => GetString(Str1083Key);

		/// <summary>
		/// Deleted.
		/// </summary>
		public const string Str1084Key = nameof(Str1084);

		/// <summary>
		/// Deleted.
		/// </summary>
		public static string Str1084 => GetString(Str1084Key);

		/// <summary>
		/// Cannot make rule {0} self exclusive.
		/// </summary>
		public const string Str1085ParamsKey = nameof(Str1085Params);

		/// <summary>
		/// Cannot make rule {0} self exclusive.
		/// </summary>
		public static string Str1085Params => GetString(Str1085ParamsKey);

		/// <summary>
		/// List of rules is empty.
		/// </summary>
		public const string Str1086Key = nameof(Str1086);

		/// <summary>
		/// List of rules is empty.
		/// </summary>
		public static string Str1086 => GetString(Str1086Key);

		/// <summary>
		/// Rule '{0}'. {1}
		/// </summary>
		public const string Str1087ParamsKey = nameof(Str1087Params);

		/// <summary>
		/// Rule '{0}'. {1}
		/// </summary>
		public static string Str1087Params => GetString(Str1087ParamsKey);

		/// <summary>
		/// Rules
		/// </summary>
		public const string Str1088Key = nameof(Str1088);

		/// <summary>
		/// Rules
		/// </summary>
		public static string Str1088 => GetString(Str1088Key);

		/// <summary>
		/// Suspended.
		/// </summary>
		public const string Str1089Key = nameof(Str1089);

		/// <summary>
		/// Suspended.
		/// </summary>
		public static string Str1089 => GetString(Str1089Key);

		/// <summary>
		/// Resumed.
		/// </summary>
		public const string Str1090Key = nameof(Str1090);

		/// <summary>
		/// Resumed.
		/// </summary>
		public static string Str1090 => GetString(Str1090Key);

		/// <summary>
		/// Rule '{0}' was earlier added to container '{1}'.
		/// </summary>
		public const string Str1091ParamsKey = nameof(Str1091Params);

		/// <summary>
		/// Rule '{0}' was earlier added to container '{1}'.
		/// </summary>
		public static string Str1091Params => GetString(Str1091ParamsKey);

		/// <summary>
		/// Resources freed.
		/// </summary>
		public const string Str1092Key = nameof(Str1092);

		/// <summary>
		/// Resources freed.
		/// </summary>
		public static string Str1092 => GetString(Str1092Key);

		/// <summary>
		/// Connectors
		/// </summary>
		public const string Str1093Key = nameof(Str1093);

		/// <summary>
		/// Connectors
		/// </summary>
		public static string Str1093 => GetString(Str1093Key);

		/// <summary>
		/// Postponed messages
		/// </summary>
		public const string Str1094Key = nameof(Str1094);

		/// <summary>
		/// Postponed messages
		/// </summary>
		public static string Str1094 => GetString(Str1094Key);

		/// <summary>
		/// Cannot connect, because connection is in state {0}.
		/// </summary>
		public const string Str1095ParamsKey = nameof(Str1095Params);

		/// <summary>
		/// Cannot connect, because connection is in state {0}.
		/// </summary>
		public static string Str1095Params => GetString(Str1095ParamsKey);

		/// <summary>
		/// Cannot disconnect, because connection is in state {0}.
		/// </summary>
		public const string Str1096ParamsKey = nameof(Str1096Params);

		/// <summary>
		/// Cannot disconnect, because connection is in state {0}.
		/// </summary>
		public static string Str1096Params => GetString(Str1096ParamsKey);

		/// <summary>
		/// Security {0} is not signed up to receive a filtered market depth.
		/// </summary>
		public const string Str1097ParamsKey = nameof(Str1097Params);

		/// <summary>
		/// Security {0} is not signed up to receive a filtered market depth.
		/// </summary>
		public static string Str1097Params => GetString(Str1097ParamsKey);

		/// <summary>
		/// New order is being registered for security {0}. Old order is registered at {1}.
		/// </summary>
		public const string Str1098ParamsKey = nameof(Str1098Params);

		/// <summary>
		/// New order is being registered for security {0}. Old order is registered at {1}.
		/// </summary>
		public static string Str1098Params => GetString(Str1098ParamsKey);

		/// <summary>
		/// First new order is being registered for security {0}. Old was registered for {1}.
		/// </summary>
		public const string Str1099ParamsKey = nameof(Str1099Params);

		/// <summary>
		/// First new order is being registered for security {0}. Old was registered for {1}.
		/// </summary>
		public static string Str1099Params => GetString(Str1099ParamsKey);

		/// <summary>
		/// Second new order is registered with security {0}. Old is registered with {1}.
		/// </summary>
		public const string Str1100ParamsKey = nameof(Str1100Params);

		/// <summary>
		/// Second new order is registered with security {0}. Old is registered with {1}.
		/// </summary>
		public static string Str1100Params => GetString(Str1100ParamsKey);

		/// <summary>
		/// Order with transaction {0} was earlier registered.
		/// </summary>
		public const string Str1101ParamsKey = nameof(Str1101Params);

		/// <summary>
		/// Order with transaction {0} was earlier registered.
		/// </summary>
		public static string Str1101Params => GetString(Str1101ParamsKey);

		/// <summary>
		/// Security for ID '{0}' was not created.
		/// </summary>
		public const string Str1102ParamsKey = nameof(Str1102Params);

		/// <summary>
		/// Security for ID '{0}' was not created.
		/// </summary>
		public static string Str1102Params => GetString(Str1102ParamsKey);

		/// <summary>
		/// Portfolio for account '{0}' was not created.
		/// </summary>
		public const string Str1104ParamsKey = nameof(Str1104Params);

		/// <summary>
		/// Portfolio for account '{0}' was not created.
		/// </summary>
		public static string Str1104Params => GetString(Str1104ParamsKey);

		/// <summary>
		/// New portfolio {0} created.
		/// </summary>
		public const string Str1105ParamsKey = nameof(Str1105Params);

		/// <summary>
		/// New portfolio {0} created.
		/// </summary>
		public static string Str1105Params => GetString(Str1105ParamsKey);

		/// <summary>
		/// Transaction {0} was already added to track the latency of registration.
		/// </summary>
		public const string Str1106ParamsKey = nameof(Str1106Params);

		/// <summary>
		/// Transaction {0} was already added to track the latency of registration.
		/// </summary>
		public static string Str1106Params => GetString(Str1106ParamsKey);

		/// <summary>
		/// Transaction {0} was already added to track the latency of cancellation.
		/// </summary>
		public const string Str1107ParamsKey = nameof(Str1107Params);

		/// <summary>
		/// Transaction {0} was already added to track the latency of cancellation.
		/// </summary>
		public static string Str1107Params => GetString(Str1107ParamsKey);

		/// <summary>
		/// Connection for portfolio {0} not found.
		/// </summary>
		public const string Str1108ParamsKey = nameof(Str1108Params);

		/// <summary>
		/// Connection for portfolio {0} not found.
		/// </summary>
		public static string Str1108Params => GetString(Str1108ParamsKey);

		/// <summary>
		/// No suitable connection for security {0} found.
		/// </summary>
		public const string Str1109ParamsKey = nameof(Str1109Params);

		/// <summary>
		/// No suitable connection for security {0} found.
		/// </summary>
		public static string Str1109Params => GetString(Str1109ParamsKey);

		/// <summary>
		/// No connection to cancel data receiving by {0} for security {1} found.
		/// </summary>
		public const string Str1110ParamsKey = nameof(Str1110Params);

		/// <summary>
		/// No connection to cancel data receiving by {0} for security {1} found.
		/// </summary>
		public static string Str1110Params => GetString(Str1110ParamsKey);

		/// <summary>
		/// Connection {0} does not support security {1} for {2}: {3}
		/// </summary>
		public const string Str1111ParamsKey = nameof(Str1111Params);

		/// <summary>
		/// Connection {0} does not support security {1} for {2}: {3}
		/// </summary>
		public static string Str1111Params => GetString(Str1111ParamsKey);

		/// <summary>
		/// Security's {0} corresponding connection is {1}.
		/// </summary>
		public const string Str1112ParamsKey = nameof(Str1112Params);

		/// <summary>
		/// Security's {0} corresponding connection is {1}.
		/// </summary>
		public static string Str1112Params => GetString(Str1112ParamsKey);

		/// <summary>
		/// Stopped
		/// </summary>
		public const string Str1113Key = nameof(Str1113);

		/// <summary>
		/// Stopped
		/// </summary>
		public static string Str1113 => GetString(Str1113Key);

		/// <summary>
		/// Stopping
		/// </summary>
		public const string Str1114Key = nameof(Str1114);

		/// <summary>
		/// Stopping
		/// </summary>
		public static string Str1114 => GetString(Str1114Key);

		/// <summary>
		/// Started
		/// </summary>
		public const string Str1115Key = nameof(Str1115);

		/// <summary>
		/// Started
		/// </summary>
		public static string Str1115 => GetString(Str1115Key);

		/// <summary>
		/// Data download stream did not stop from the previous launch.
		/// </summary>
		public const string Str1116Key = nameof(Str1116);

		/// <summary>
		/// Data download stream did not stop from the previous launch.
		/// </summary>
		public static string Str1116 => GetString(Str1116Key);

		/// <summary>
		/// Emulator does not support receiving {0} for {1}.
		/// </summary>
		public const string Str1117ParamsKey = nameof(Str1117Params);

		/// <summary>
		/// Emulator does not support receiving {0} for {1}.
		/// </summary>
		public static string Str1117Params => GetString(Str1117ParamsKey);

		/// <summary>
		/// Emulator does not support receiving data for {0}.
		/// </summary>
		public const string Str1118ParamsKey = nameof(Str1118Params);

		/// <summary>
		/// Emulator does not support receiving data for {0}.
		/// </summary>
		public static string Str1118Params => GetString(Str1118ParamsKey);

		/// <summary>
		/// Start date {0} is greater than end date {1}.
		/// </summary>
		public const string Str1119ParamsKey = nameof(Str1119Params);

		/// <summary>
		/// Start date {0} is greater than end date {1}.
		/// </summary>
		public static string Str1119Params => GetString(Str1119ParamsKey);

		/// <summary>
		/// Testing cannot be started, because the connection is in state {0}.
		/// </summary>
		public const string Str1120ParamsKey = nameof(Str1120Params);

		/// <summary>
		/// Testing cannot be started, because the connection is in state {0}.
		/// </summary>
		public static string Str1120Params => GetString(Str1120ParamsKey);

		/// <summary>
		/// Emulation state change {0} -&gt; {1}
		/// </summary>
		public const string Str1121ParamsKey = nameof(Str1121Params);

		/// <summary>
		/// Emulation state change {0} -&gt; {1}
		/// </summary>
		public static string Str1121Params => GetString(Str1121ParamsKey);

		/// <summary>
		/// Type of execution {0} is not supported.
		/// </summary>
		public const string Str1122ParamsKey = nameof(Str1122Params);

		/// <summary>
		/// Type of execution {0} is not supported.
		/// </summary>
		public static string Str1122Params => GetString(Str1122ParamsKey);

		/// <summary>
		/// Security does not contain neither code nor ID.
		/// </summary>
		public const string Str1123Key = nameof(Str1123);

		/// <summary>
		/// Security does not contain neither code nor ID.
		/// </summary>
		public static string Str1123 => GetString(Str1123Key);

		/// <summary>
		/// Security with code {0} does not contain the board.
		/// </summary>
		public const string Str1124ParamsKey = nameof(Str1124Params);

		/// <summary>
		/// Security with code {0} does not contain the board.
		/// </summary>
		public static string Str1124Params => GetString(Str1124ParamsKey);

		/// <summary>
		/// Emulator
		/// </summary>
		public const string Str1125Key = nameof(Str1125);

		/// <summary>
		/// Emulator
		/// </summary>
		public static string Str1125 => GetString(Str1125Key);

		/// <summary>
		/// Current time {0} must be in the interval from {1} to {2}.
		/// </summary>
		public const string Str1126ParamsKey = nameof(Str1126Params);

		/// <summary>
		/// Current time {0} must be in the interval from {1} to {2}.
		/// </summary>
		public static string Str1126Params => GetString(Str1126ParamsKey);

		/// <summary>
		/// History (from {0} to {1})
		/// </summary>
		public const string Str1127ParamsKey = nameof(Str1127Params);

		/// <summary>
		/// History (from {0} to {1})
		/// </summary>
		public static string Str1127Params => GetString(Str1127ParamsKey);

		/// <summary>
		/// Stopped
		/// </summary>
		public const string Str1128Key = nameof(Str1128);

		/// <summary>
		/// Stopped
		/// </summary>
		public static string Str1128 => GetString(Str1128Key);

		/// <summary>
		/// Starting
		/// </summary>
		public const string Str1129Key = nameof(Str1129);

		/// <summary>
		/// Starting
		/// </summary>
		public static string Str1129 => GetString(Str1129Key);

		/// <summary>
		/// Working
		/// </summary>
		public const string Str1130Key = nameof(Str1130);

		/// <summary>
		/// Working
		/// </summary>
		public static string Str1130 => GetString(Str1130Key);

		/// <summary>
		/// Suspending
		/// </summary>
		public const string Str1131Key = nameof(Str1131);

		/// <summary>
		/// Suspending
		/// </summary>
		public static string Str1131 => GetString(Str1131Key);

		/// <summary>
		/// Suspended
		/// </summary>
		public const string Str1132Key = nameof(Str1132);

		/// <summary>
		/// Suspended
		/// </summary>
		public static string Str1132 => GetString(Str1132Key);

		/// <summary>
		/// Maximum volume cannot be less than 1.
		/// </summary>
		public const string Str1133Key = nameof(Str1133);

		/// <summary>
		/// Maximum volume cannot be less than 1.
		/// </summary>
		public static string Str1133 => GetString(Str1133Key);

		/// <summary>
		/// Minimum volume cannot be less than 1.
		/// </summary>
		public const string Str1134Key = nameof(Str1134);

		/// <summary>
		/// Minimum volume cannot be less than 1.
		/// </summary>
		public static string Str1134 => GetString(Str1134Key);

		/// <summary>
		/// Maximum number of steps cannot be less than 1.
		/// </summary>
		public const string Str1135Key = nameof(Str1135);

		/// <summary>
		/// Maximum number of steps cannot be less than 1.
		/// </summary>
		public static string Str1135 => GetString(Str1135Key);

		/// <summary>
		/// Generator not initialized.
		/// </summary>
		public const string Str1136Key = nameof(Str1136);

		/// <summary>
		/// Generator not initialized.
		/// </summary>
		public static string Str1136 => GetString(Str1136Key);

		/// <summary>
		/// Minimum spread size cannot be less than 1.
		/// </summary>
		public const string Str1137Key = nameof(Str1137);

		/// <summary>
		/// Minimum spread size cannot be less than 1.
		/// </summary>
		public static string Str1137 => GetString(Str1137Key);

		/// <summary>
		/// Maximum spread size cannot be less than 1.
		/// </summary>
		public const string Str1138Key = nameof(Str1138);

		/// <summary>
		/// Maximum spread size cannot be less than 1.
		/// </summary>
		public static string Str1138 => GetString(Str1138Key);

		/// <summary>
		/// Maximum bids depth cannot be less than 1.
		/// </summary>
		public const string Str1139Key = nameof(Str1139);

		/// <summary>
		/// Maximum bids depth cannot be less than 1.
		/// </summary>
		public static string Str1139 => GetString(Str1139Key);

		/// <summary>
		/// Maximum asks depth cannot be less than 1.
		/// </summary>
		public const string Str1140Key = nameof(Str1140);

		/// <summary>
		/// Maximum asks depth cannot be less than 1.
		/// </summary>
		public static string Str1140 => GetString(Str1140Key);

		/// <summary>
		/// Maximum number of generations cannot be less than 1.
		/// </summary>
		public const string Str1141Key = nameof(Str1141);

		/// <summary>
		/// Maximum number of generations cannot be less than 1.
		/// </summary>
		public static string Str1141 => GetString(Str1141Key);

		/// <summary>
		/// Information about the last trade is missing.
		/// </summary>
		public const string Str1142Key = nameof(Str1142);

		/// <summary>
		/// Information about the last trade is missing.
		/// </summary>
		public static string Str1142 => GetString(Str1142Key);

		/// <summary>
		/// Cannot generate a new market depth, because there were no new trades for an extended period of time.
		/// </summary>
		public const string Str1143Key = nameof(Str1143);

		/// <summary>
		/// Cannot generate a new market depth, because there were no new trades for an extended period of time.
		/// </summary>
		public static string Str1143 => GetString(Str1143Key);

		/// <summary>
		/// Price is incorrectly specified.
		/// </summary>
		public const string Str1144Key = nameof(Str1144);

		/// <summary>
		/// Price is incorrectly specified.
		/// </summary>
		public static string Str1144 => GetString(Str1144Key);

		/// <summary>
		/// Waiting {0} for order {1}.
		/// </summary>
		public const string Str1145ParamsKey = nameof(Str1145Params);

		/// <summary>
		/// Waiting {0} for order {1}.
		/// </summary>
		public static string Str1145Params => GetString(Str1145ParamsKey);

		/// <summary>
		/// cancellations
		/// </summary>
		public const string Str1146Key = nameof(Str1146);

		/// <summary>
		/// cancellations
		/// </summary>
		public static string Str1146 => GetString(Str1146Key);

		/// <summary>
		/// registrations
		/// </summary>
		public const string Str1147Key = nameof(Str1147);

		/// <summary>
		/// registrations
		/// </summary>
		public static string Str1147 => GetString(Str1147Key);

		/// <summary>
		/// Order {0} for reregistration not found.
		/// </summary>
		public const string Str1148ParamsKey = nameof(Str1148Params);

		/// <summary>
		/// Order {0} for reregistration not found.
		/// </summary>
		public static string Str1148Params => GetString(Str1148ParamsKey);

		/// <summary>
		/// Trading board information is missing.
		/// </summary>
		public const string Str1149Key = nameof(Str1149);

		/// <summary>
		/// Trading board information is missing.
		/// </summary>
		public static string Str1149 => GetString(Str1149Key);

		/// <summary>
		/// Traded security information is missing.
		/// </summary>
		public const string Str1150Key = nameof(Str1150);

		/// <summary>
		/// Traded security information is missing.
		/// </summary>
		public static string Str1150 => GetString(Str1150Key);

		/// <summary>
		/// Error at {0} for order {1}.
		/// </summary>
		public const string Str1151ParamsKey = nameof(Str1151Params);

		/// <summary>
		/// Error at {0} for order {1}.
		/// </summary>
		public static string Str1151Params => GetString(Str1151ParamsKey);

		/// <summary>
		/// cancellation
		/// </summary>
		public const string Str1152Key = nameof(Str1152);

		/// <summary>
		/// cancellation
		/// </summary>
		public static string Str1152 => GetString(Str1152Key);

		/// <summary>
		/// registration
		/// </summary>
		public const string Str1153Key = nameof(Str1153);

		/// <summary>
		/// registration
		/// </summary>
		public static string Str1153 => GetString(Str1153Key);

		/// <summary>
		/// Random error.
		/// </summary>
		public const string Str1154Key = nameof(Str1154);

		/// <summary>
		/// Random error.
		/// </summary>
		public static string Str1154 => GetString(Str1154Key);

		/// <summary>
		/// Order {0} cancelled.
		/// </summary>
		public const string Str1155ParamsKey = nameof(Str1155Params);

		/// <summary>
		/// Order {0} cancelled.
		/// </summary>
		public static string Str1155Params => GetString(Str1155ParamsKey);

		/// <summary>
		/// Order {0} not found.
		/// </summary>
		public const string Str1156ParamsKey = nameof(Str1156Params);

		/// <summary>
		/// Order {0} not found.
		/// </summary>
		public static string Str1156Params => GetString(Str1156ParamsKey);

		/// <summary>
		/// Order {0} registered.
		/// </summary>
		public const string Str1157ParamsKey = nameof(Str1157Params);

		/// <summary>
		/// Order {0} registered.
		/// </summary>
		public static string Str1157Params => GetString(Str1157ParamsKey);

		/// <summary>
		/// Order {0} is not registered. Reason is '{1}'.
		/// </summary>
		public const string Str1158ParamsKey = nameof(Str1158Params);

		/// <summary>
		/// Order {0} is not registered. Reason is '{1}'.
		/// </summary>
		public static string Str1158Params => GetString(Str1158ParamsKey);

		/// <summary>
		/// Type of action with order cannot be a statement.
		/// </summary>
		public const string Str1159Key = nameof(Str1159);

		/// <summary>
		/// Type of action with order cannot be a statement.
		/// </summary>
		public static string Str1159 => GetString(Str1159Key);

		/// <summary>
		/// Volume of order {0} is incorrectly set.
		/// </summary>
		public const string Str1160ParamsKey = nameof(Str1160Params);

		/// <summary>
		/// Volume of order {0} is incorrectly set.
		/// </summary>
		public static string Str1160Params => GetString(Str1160ParamsKey);

		/// <summary>
		/// Cross-trade for orders {0} and {1}.
		/// </summary>
		public const string Str1161ParamsKey = nameof(Str1161Params);

		/// <summary>
		/// Cross-trade for orders {0} and {1}.
		/// </summary>
		public static string Str1161Params => GetString(Str1161ParamsKey);

		/// <summary>
		/// Filled volume must be greater than zero.
		/// </summary>
		public const string Str1162Key = nameof(Str1162);

		/// <summary>
		/// Filled volume must be greater than zero.
		/// </summary>
		public static string Str1162 => GetString(Str1162Key);

		/// <summary>
		/// Order {0}. Filling volume {1} at a price of {2}.
		/// </summary>
		public const string Str1163ParamsKey = nameof(Str1163Params);

		/// <summary>
		/// Order {0}. Filling volume {1} at a price of {2}.
		/// </summary>
		public static string Str1163Params => GetString(Str1163ParamsKey);

		/// <summary>
		/// Order {0} completely filled.
		/// </summary>
		public const string Str1164ParamsKey = nameof(Str1164Params);

		/// <summary>
		/// Order {0} completely filled.
		/// </summary>
		public static string Str1164Params => GetString(Str1164ParamsKey);

		/// <summary>
		/// Order {0} is cancelling, because it is a market order with unfilled volume of {1}.
		/// </summary>
		public const string Str1165ParamsKey = nameof(Str1165Params);

		/// <summary>
		/// Order {0} is cancelling, because it is a market order with unfilled volume of {1}.
		/// </summary>
		public static string Str1165Params => GetString(Str1165ParamsKey);

		/// <summary>
		/// Order {0} (FOK) filled.
		/// </summary>
		public const string Str1166ParamsKey = nameof(Str1166Params);

		/// <summary>
		/// Order {0} (FOK) filled.
		/// </summary>
		public static string Str1166Params => GetString(Str1166ParamsKey);

		/// <summary>
		/// Order {0} (IOC) filled.
		/// </summary>
		public const string Str1167ParamsKey = nameof(Str1167Params);

		/// <summary>
		/// Order {0} (IOC) filled.
		/// </summary>
		public static string Str1167Params => GetString(Str1167ParamsKey);

		/// <summary>
		/// Trade {0} of order {1} P={2} V={3}.
		/// </summary>
		public const string Str1168ParamsKey = nameof(Str1168Params);

		/// <summary>
		/// Trade {0} of order {1} P={2} V={3}.
		/// </summary>
		public static string Str1168Params => GetString(Str1168ParamsKey);

		/// <summary>
		/// Insufficient funds on account {0} to register order {1}. Must have {2}, currently available {3}, blocked {4}.
		/// </summary>
		public const string Str1169ParamsKey = nameof(Str1169Params);

		/// <summary>
		/// Insufficient funds on account {0} to register order {1}. Must have {2}, currently available {3}, blocked {4}.
		/// </summary>
		public static string Str1169Params => GetString(Str1169ParamsKey);

		/// <summary>
		/// Board {0} does not allow registration of market orders.
		/// </summary>
		public const string Str1170ParamsKey = nameof(Str1170Params);

		/// <summary>
		/// Board {0} does not allow registration of market orders.
		/// </summary>
		public static string Str1170Params => GetString(Str1170ParamsKey);

		/// <summary>
		/// This session is currently inactive.
		/// </summary>
		public const string Str1171Key = nameof(Str1171);

		/// <summary>
		/// This session is currently inactive.
		/// </summary>
		public static string Str1171 => GetString(Str1171Key);

		/// <summary>
		/// Price {0} of order {1} is lower than allowed minimum {2}.
		/// </summary>
		public const string Str1172ParamsKey = nameof(Str1172Params);

		/// <summary>
		/// Price {0} of order {1} is lower than allowed minimum {2}.
		/// </summary>
		public static string Str1172Params => GetString(Str1172ParamsKey);

		/// <summary>
		/// Price {0} of order {1} is greater than allowed maximum {2}.
		/// </summary>
		public const string Str1173ParamsKey = nameof(Str1173Params);

		/// <summary>
		/// Price {0} of order {1} is greater than allowed maximum {2}.
		/// </summary>
		public static string Str1173Params => GetString(Str1173ParamsKey);

		/// <summary>
		/// Emulation
		/// </summary>
		public const string Str1174Key = nameof(Str1174);

		/// <summary>
		/// Emulation
		/// </summary>
		public static string Str1174 => GetString(Str1174Key);

		/// <summary>
		/// Emulation (extra)
		/// </summary>
		public const string Str1175Key = nameof(Str1175);

		/// <summary>
		/// Emulation (extra)
		/// </summary>
		public static string Str1175 => GetString(Str1175Key);

		/// <summary>
		/// Match on touch
		/// </summary>
		public const string Str1176Key = nameof(Str1176);

		/// <summary>
		/// Match on touch
		/// </summary>
		public static string Str1176 => GetString(Str1176Key);

		/// <summary>
		/// When emulating trades matches, match orders, when trade price touched the order price (equal to order price).
		/// </summary>
		public const string Str1177Key = nameof(Str1177);

		/// <summary>
		/// When emulating trades matches, match orders, when trade price touched the order price (equal to order price).
		/// </summary>
		public static string Str1177 => GetString(Str1177Key);

		/// <summary>
		/// Market depth (lifetime)
		/// </summary>
		public const string Str1178Key = nameof(Str1178);

		/// <summary>
		/// Market depth (lifetime)
		/// </summary>
		public static string Str1178 => GetString(Str1178Key);

		/// <summary>
		/// Maximum time, during which a market depth is in an emulator. If there was no update during that time, the market depth is erased. This property can be used to delete old market depths if there are gaps in the data.
		/// </summary>
		public const string Str1179Key = nameof(Str1179);

		/// <summary>
		/// Maximum time, during which a market depth is in an emulator. If there was no update during that time, the market depth is erased. This property can be used to delete old market depths if there are gaps in the data.
		/// </summary>
		public static string Str1179 => GetString(Str1179Key);

		/// <summary>
		/// Errors percentage
		/// </summary>
		public const string Str1180Key = nameof(Str1180);

		/// <summary>
		/// Errors percentage
		/// </summary>
		public static string Str1180 => GetString(Str1180Key);

		/// <summary>
		/// New orders registration error percentage value. can be from 0 (no errors) to 100.
		/// </summary>
		public const string Str1181Key = nameof(Str1181);

		/// <summary>
		/// New orders registration error percentage value. can be from 0 (no errors) to 100.
		/// </summary>
		public static string Str1181 => GetString(Str1181Key);

		/// <summary>
		/// Percentage value cannot be less than zero.
		/// </summary>
		public const string Str1182Key = nameof(Str1182);

		/// <summary>
		/// Percentage value cannot be less than zero.
		/// </summary>
		public static string Str1182 => GetString(Str1182Key);

		/// <summary>
		/// Percentage value cannot be greater than 100.
		/// </summary>
		public const string Str1183Key = nameof(Str1183);

		/// <summary>
		/// Percentage value cannot be greater than 100.
		/// </summary>
		public static string Str1183 => GetString(Str1183Key);

		/// <summary>
		/// Minimum latency value when orders are placed.
		/// </summary>
		public const string Str1184Key = nameof(Str1184);

		/// <summary>
		/// Minimum latency value when orders are placed.
		/// </summary>
		public static string Str1184 => GetString(Str1184Key);

		/// <summary>
		/// Latency cannot be less than zero.
		/// </summary>
		public const string Str1185Key = nameof(Str1185);

		/// <summary>
		/// Latency cannot be less than zero.
		/// </summary>
		public static string Str1185 => GetString(Str1185Key);

		/// <summary>
		/// Buffering period
		/// </summary>
		public const string Str1186Key = nameof(Str1186);

		/// <summary>
		/// Buffering period
		/// </summary>
		public static string Str1186 => GetString(Str1186Key);

		/// <summary>
		/// Send replies in whole packages via an interval. Network latency and buffered work of stock exchange core are emulated.
		/// </summary>
		public const string Str1187Key = nameof(Str1187);

		/// <summary>
		/// Send replies in whole packages via an interval. Network latency and buffered work of stock exchange core are emulated.
		/// </summary>
		public static string Str1187 => GetString(Str1187Key);

		/// <summary>
		/// Use candles with specified timeframe.
		/// </summary>
		public const string Str1188Key = nameof(Str1188);

		/// <summary>
		/// Use candles with specified timeframe.
		/// </summary>
		public static string Str1188 => GetString(Str1188Key);

		/// <summary>
		/// Time-frame cannot be less than zero or zero.
		/// </summary>
		public const string Str1189Key = nameof(Str1189);

		/// <summary>
		/// Time-frame cannot be less than zero or zero.
		/// </summary>
		public static string Str1189 => GetString(Str1189Key);

		/// <summary>
		/// Order ID
		/// </summary>
		public const string Str1190Key = nameof(Str1190);

		/// <summary>
		/// Order ID
		/// </summary>
		public static string Str1190 => GetString(Str1190Key);

		/// <summary>
		/// Number, starting from which the emulator will generate orders IDs.
		/// </summary>
		public const string Str1191Key = nameof(Str1191);

		/// <summary>
		/// Number, starting from which the emulator will generate orders IDs.
		/// </summary>
		public static string Str1191 => GetString(Str1191Key);

		/// <summary>
		/// Trade ID
		/// </summary>
		public const string Str1192Key = nameof(Str1192);

		/// <summary>
		/// Trade ID
		/// </summary>
		public static string Str1192 => GetString(Str1192Key);

		/// <summary>
		/// Number, starting with which the emulator will generate trades IDs.
		/// </summary>
		public const string Str1193Key = nameof(Str1193);

		/// <summary>
		/// Number, starting with which the emulator will generate trades IDs.
		/// </summary>
		public static string Str1193 => GetString(Str1193Key);

		/// <summary>
		/// Number, starting with which the emulator will generate orders transactions IDs.
		/// </summary>
		public const string Str1194Key = nameof(Str1194);

		/// <summary>
		/// Number, starting with which the emulator will generate orders transactions IDs.
		/// </summary>
		public static string Str1194 => GetString(Str1194Key);

		/// <summary>
		/// Spread size
		/// </summary>
		public const string Str1195Key = nameof(Str1195);

		/// <summary>
		/// Spread size
		/// </summary>
		public static string Str1195 => GetString(Str1195Key);

		/// <summary>
		/// Spread size in price steps. Used in determining spread when generating market depths from ticks.
		/// </summary>
		public const string Str1196Key = nameof(Str1196);

		/// <summary>
		/// Spread size in price steps. Used in determining spread when generating market depths from ticks.
		/// </summary>
		public static string Str1196 => GetString(Str1196Key);

		/// <summary>
		/// Depth of book
		/// </summary>
		public const string Str1197Key = nameof(Str1197);

		/// <summary>
		/// Depth of book
		/// </summary>
		public static string Str1197 => GetString(Str1197Key);

		/// <summary>
		/// Maximum depth of a market depth, which will be generated from ticks.
		/// </summary>
		public const string Str1198Key = nameof(Str1198);

		/// <summary>
		/// Maximum depth of a market depth, which will be generated from ticks.
		/// </summary>
		public static string Str1198 => GetString(Str1198Key);

		/// <summary>
		/// Number of volume steps
		/// </summary>
		public const string Str1199Key = nameof(Str1199);

		/// <summary>
		/// Number of volume steps
		/// </summary>
		public static string Str1199 => GetString(Str1199Key);

		/// <summary>
		/// Number of volume steps of an order exceeding those of a tick trade. Used in testing with ticks.
		/// </summary>
		public const string Str1200Key = nameof(Str1200);

		/// <summary>
		/// Number of volume steps of an order exceeding those of a tick trade. Used in testing with ticks.
		/// </summary>
		public static string Str1200 => GetString(Str1200Key);

		/// <summary>
		/// Portfolios interval
		/// </summary>
		public const string Str1201Key = nameof(Str1201);

		/// <summary>
		/// Portfolios interval
		/// </summary>
		public static string Str1201 => GetString(Str1201Key);

		/// <summary>
		/// Portfolios data recalculation interval. If interval is equal to zero, then recalculation is not performed.
		/// </summary>
		public const string Str1202Key = nameof(Str1202);

		/// <summary>
		/// Portfolios data recalculation interval. If interval is equal to zero, then recalculation is not performed.
		/// </summary>
		public static string Str1202 => GetString(Str1202Key);

		/// <summary>
		/// Change time
		/// </summary>
		public const string Str1203Key = nameof(Str1203);

		/// <summary>
		/// Change time
		/// </summary>
		public static string Str1203 => GetString(Str1203Key);

		/// <summary>
		/// Convert time for orders and trades to stock exchange time.
		/// </summary>
		public const string Str1204Key = nameof(Str1204);

		/// <summary>
		/// Convert time for orders and trades to stock exchange time.
		/// </summary>
		public static string Str1204 => GetString(Str1204Key);

		/// <summary>
		/// Price shift
		/// </summary>
		public const string Str1205Key = nameof(Str1205);

		/// <summary>
		/// Price shift
		/// </summary>
		public static string Str1205 => GetString(Str1205Key);

		/// <summary>
		/// Price shift from the last trade, determining maximum and minimum price boundaries for the next session.
		/// </summary>
		public const string Str1206Key = nameof(Str1206);

		/// <summary>
		/// Price shift from the last trade, determining maximum and minimum price boundaries for the next session.
		/// </summary>
		public static string Str1206 => GetString(Str1206Key);

		/// <summary>
		/// Add extra volume
		/// </summary>
		public const string Str1207Key = nameof(Str1207);

		/// <summary>
		/// Add extra volume
		/// </summary>
		public static string Str1207 => GetString(Str1207Key);

		/// <summary>
		/// Add extra volume in the market depth when placing orders with large volume.
		/// </summary>
		public const string Str1208Key = nameof(Str1208);

		/// <summary>
		/// Add extra volume in the market depth when placing orders with large volume.
		/// </summary>
		public static string Str1208 => GetString(Str1208Key);

		/// <summary>
		/// Simulator
		/// </summary>
		public const string Str1209Key = nameof(Str1209);

		/// <summary>
		/// Simulator
		/// </summary>
		public static string Str1209 => GetString(Str1209Key);

		/// <summary>
		/// Board {0} supports market orders.
		/// </summary>
		public const string Str1210ParamsKey = nameof(Str1210Params);

		/// <summary>
		/// Board {0} supports market orders.
		/// </summary>
		public static string Str1210Params => GetString(Str1210ParamsKey);

		/// <summary>
		/// Orders missing.
		/// </summary>
		public const string Str1211Key = nameof(Str1211);

		/// <summary>
		/// Orders missing.
		/// </summary>
		public static string Str1211 => GetString(Str1211Key);

		/// <summary>
		/// Currency '{0}' not supported.
		/// </summary>
		public const string Str1212ParamsKey = nameof(Str1212Params);

		/// <summary>
		/// Currency '{0}' not supported.
		/// </summary>
		public static string Str1212Params => GetString(Str1212ParamsKey);

		/// <summary>
		/// Price step size is less than allowed.
		/// </summary>
		public const string Str1213Key = nameof(Str1213);

		/// <summary>
		/// Price step size is less than allowed.
		/// </summary>
		public static string Str1213 => GetString(Str1213Key);

		/// <summary>
		/// Quotes collection is not equally directed.
		/// </summary>
		public const string Str1214Key = nameof(Str1214);

		/// <summary>
		/// Quotes collection is not equally directed.
		/// </summary>
		public static string Str1214 => GetString(Str1214Key);

		/// <summary>
		/// Security {0} does not contain information about the stock exchange board.
		/// </summary>
		public const string Str1215ParamsKey = nameof(Str1215Params);

		/// <summary>
		/// Security {0} does not contain information about the stock exchange board.
		/// </summary>
		public static string Str1215Params => GetString(Str1215ParamsKey);

		/// <summary>
		/// Security {0} does not contain information about the stock exchange.
		/// </summary>
		public const string Str1216ParamsKey = nameof(Str1216Params);

		/// <summary>
		/// Security {0} does not contain information about the stock exchange.
		/// </summary>
		public static string Str1216Params => GetString(Str1216ParamsKey);

		/// <summary>
		/// Exchange board with code {0} not found.
		/// </summary>
		public const string Str1217ParamsKey = nameof(Str1217Params);

		/// <summary>
		/// Exchange board with code {0} not found.
		/// </summary>
		public static string Str1217Params => GetString(Str1217ParamsKey);

		/// <summary>
		/// Invalid value.
		/// </summary>
		public const string Str1219Key = nameof(Str1219);

		/// <summary>
		/// Invalid value.
		/// </summary>
		public static string Str1219 => GetString(Str1219Key);

		/// <summary>
		/// Change {0} threw an exception.
		/// </summary>
		public const string Str1220ParamsKey = nameof(Str1220Params);

		/// <summary>
		/// Change {0} threw an exception.
		/// </summary>
		public static string Str1220Params => GetString(Str1220ParamsKey);

		/// <summary>
		/// Analytics
		/// </summary>
		public const string AnalyticsKey = nameof(Analytics);

		/// <summary>
		/// Analytics
		/// </summary>
		public static string Analytics => GetString(AnalyticsKey);

		/// <summary>
		/// Start date.
		/// </summary>
		public const string Str1222Key = nameof(Str1222);

		/// <summary>
		/// Start date.
		/// </summary>
		public static string Str1222 => GetString(Str1222Key);

		/// <summary>
		/// Daughter strategies are missing.
		/// </summary>
		public const string Str1224Key = nameof(Str1224);

		/// <summary>
		/// Daughter strategies are missing.
		/// </summary>
		public static string Str1224 => GetString(Str1224Key);

		/// <summary>
		/// Trailing mechanism cannot be used at a limited stop level.
		/// </summary>
		public const string Str1225Key = nameof(Str1225);

		/// <summary>
		/// Trailing mechanism cannot be used at a limited stop level.
		/// </summary>
		public static string Str1225 => GetString(Str1225Key);

		/// <summary>
		/// Trailing mechanism cannot be used at a limited take level.
		/// </summary>
		public const string Str1226Key = nameof(Str1226);

		/// <summary>
		/// Trailing mechanism cannot be used at a limited take level.
		/// </summary>
		public static string Str1226 => GetString(Str1226Key);

		/// <summary>
		/// Limitation in time cannot be less than zero.
		/// </summary>
		public const string Str1227Key = nameof(Str1227);

		/// <summary>
		/// Limitation in time cannot be less than zero.
		/// </summary>
		public static string Str1227 => GetString(Str1227Key);

		/// <summary>
		/// Maximum volume cannot be less than or equal to zero.
		/// </summary>
		public const string Str1228Key = nameof(Str1228);

		/// <summary>
		/// Maximum volume cannot be less than or equal to zero.
		/// </summary>
		public static string Str1228 => GetString(Str1228Key);

		/// <summary>
		/// Received {0} trades.
		/// </summary>
		public const string Str1229ParamsKey = nameof(Str1229Params);

		/// <summary>
		/// Received {0} trades.
		/// </summary>
		public static string Str1229Params => GetString(Str1229ParamsKey);

		/// <summary>
		/// For security {0} previous position {1}, new {2}.
		/// </summary>
		public const string Str1230ParamsKey = nameof(Str1230Params);

		/// <summary>
		/// For security {0} previous position {1}, new {2}.
		/// </summary>
		public static string Str1230Params => GetString(Str1230ParamsKey);

		/// <summary>
		/// Reverse position.
		/// </summary>
		public const string Str1231Key = nameof(Str1231);

		/// <summary>
		/// Reverse position.
		/// </summary>
		public static string Str1231 => GetString(Str1231Key);

		/// <summary>
		/// Position increased by {0}.
		/// </summary>
		public const string Str1232ParamsKey = nameof(Str1232Params);

		/// <summary>
		/// Position increased by {0}.
		/// </summary>
		public static string Str1232Params => GetString(Str1232ParamsKey);

		/// <summary>
		/// Position changed to {0}.
		/// </summary>
		public const string Str1233ParamsKey = nameof(Str1233Params);

		/// <summary>
		/// Position changed to {0}.
		/// </summary>
		public static string Str1233Params => GetString(Str1233ParamsKey);

		/// <summary>
		/// Position decreased by {0}.
		/// </summary>
		public const string Str1234ParamsKey = nameof(Str1234Params);

		/// <summary>
		/// Position decreased by {0}.
		/// </summary>
		public static string Str1234Params => GetString(Str1234ParamsKey);

		/// <summary>
		/// Stops were not found.
		/// </summary>
		public const string Str1235Key = nameof(Str1235);

		/// <summary>
		/// Stops were not found.
		/// </summary>
		public static string Str1235 => GetString(Str1235Key);

		/// <summary>
		/// Stops decreased by {0}.
		/// </summary>
		public const string Str1236ParamsKey = nameof(Str1236Params);

		/// <summary>
		/// Stops decreased by {0}.
		/// </summary>
		public static string Str1236Params => GetString(Str1236ParamsKey);

		/// <summary>
		/// No protective strategies.
		/// </summary>
		public const string Str1237Key = nameof(Str1237);

		/// <summary>
		/// No protective strategies.
		/// </summary>
		public static string Str1237 => GetString(Str1237Key);

		/// <summary>
		/// Received {0} trades from protective strategy {1}.
		/// </summary>
		public const string Str1238ParamsKey = nameof(Str1238Params);

		/// <summary>
		/// Received {0} trades from protective strategy {1}.
		/// </summary>
		public static string Str1238Params => GetString(Str1238ParamsKey);

		/// <summary>
		/// For security {0} previous position {1}, new {2}, trade {3}.
		/// </summary>
		public const string Str1239ParamsKey = nameof(Str1239Params);

		/// <summary>
		/// For security {0} previous position {1}, new {2}, trade {3}.
		/// </summary>
		public static string Str1239Params => GetString(Str1239ParamsKey);

		/// <summary>
		/// Protective strategies stop.
		/// </summary>
		public const string Str1240Key = nameof(Str1240);

		/// <summary>
		/// Protective strategies stop.
		/// </summary>
		public static string Str1240 => GetString(Str1240Key);

		/// <summary>
		/// Market depth information is missing. Impossible to calculate volume before order being placed.
		/// </summary>
		public const string Str1241Key = nameof(Str1241);

		/// <summary>
		/// Market depth information is missing. Impossible to calculate volume before order being placed.
		/// </summary>
		public static string Str1241 => GetString(Str1241Key);

		/// <summary>
		/// Time-frame
		/// </summary>
		public const string Str1242Key = nameof(Str1242);

		/// <summary>
		/// Time-frame
		/// </summary>
		public static string Str1242 => GetString(Str1242Key);

		/// <summary>
		/// Time-frame of time candles, which have to be downloaded from storage for calculations.
		/// </summary>
		public const string Str1243Key = nameof(Str1243);

		/// <summary>
		/// Time-frame of time candles, which have to be downloaded from storage for calculations.
		/// </summary>
		public static string Str1243 => GetString(Str1243Key);

		/// <summary>
		/// Hedging
		/// </summary>
		public const string Str1244Key = nameof(Str1244);

		/// <summary>
		/// Hedging
		/// </summary>
		public static string Str1244 => GetString(Str1244Key);

		/// <summary>
		/// Shift in position
		/// </summary>
		public const string Str1245Key = nameof(Str1245);

		/// <summary>
		/// Shift in position
		/// </summary>
		public static string Str1245 => GetString(Str1245Key);

		/// <summary>
		/// Shift in position for underlying asset, allowing not to hedge part of the options position.
		/// </summary>
		public const string Str1246Key = nameof(Str1246);

		/// <summary>
		/// Shift in position for underlying asset, allowing not to hedge part of the options position.
		/// </summary>
		public static string Str1246 => GetString(Str1246Key);

		/// <summary>
		/// Delta total {0}, Futures position {1}, Directional position {2}, Difference in position {3}.
		/// </summary>
		public const string Str1247ParamsKey = nameof(Str1247Params);

		/// <summary>
		/// Delta total {0}, Futures position {1}, Directional position {2}, Difference in position {3}.
		/// </summary>
		public static string Str1247Params => GetString(Str1247ParamsKey);

		/// <summary>
		/// Information about both take-profit and stop-loss is missing.
		/// </summary>
		public const string Str1248Key = nameof(Str1248);

		/// <summary>
		/// Information about both take-profit and stop-loss is missing.
		/// </summary>
		public static string Str1248 => GetString(Str1248Key);

		/// <summary>
		/// P&amp;L change
		/// </summary>
		public const string PnLChangeKey = nameof(PnLChange);

		/// <summary>
		/// P&amp;L change
		/// </summary>
		public static string PnLChange => GetString(PnLChangeKey);

		/// <summary>
		/// Position change
		/// </summary>
		public const string Str1250Key = nameof(Str1250);

		/// <summary>
		/// Position change
		/// </summary>
		public static string Str1250 => GetString(Str1250Key);

		/// <summary>
		/// New trades of a strategy
		/// </summary>
		public const string Str1251Key = nameof(Str1251);

		/// <summary>
		/// New trades of a strategy
		/// </summary>
		public static string Str1251 => GetString(Str1251Key);

		/// <summary>
		/// New strategy order
		/// </summary>
		public const string Str1252Key = nameof(Str1252);

		/// <summary>
		/// New strategy order
		/// </summary>
		public static string Str1252 => GetString(Str1252Key);

		/// <summary>
		/// Strategy order change
		/// </summary>
		public const string Str1253Key = nameof(Str1253);

		/// <summary>
		/// Strategy order change
		/// </summary>
		public static string Str1253 => GetString(Str1253Key);

		/// <summary>
		/// - error
		/// </summary>
		public const string Str1254Key = nameof(Str1254);

		/// <summary>
		/// - error
		/// </summary>
		public static string Str1254 => GetString(Str1254Key);

		/// <summary>
		/// Position decreased below {0}
		/// </summary>
		public const string Str1255ParamsKey = nameof(Str1255Params);

		/// <summary>
		/// Position decreased below {0}
		/// </summary>
		public static string Str1255Params => GetString(Str1255ParamsKey);

		/// <summary>
		/// Position increased above {0}
		/// </summary>
		public const string Str1256ParamsKey = nameof(Str1256Params);

		/// <summary>
		/// Position increased above {0}
		/// </summary>
		public static string Str1256Params => GetString(Str1256ParamsKey);

		/// <summary>
		/// Profit decreased below {0}
		/// </summary>
		public const string Str1257ParamsKey = nameof(Str1257Params);

		/// <summary>
		/// Profit decreased below {0}
		/// </summary>
		public static string Str1257Params => GetString(Str1257ParamsKey);

		/// <summary>
		/// Profit increased above {0}
		/// </summary>
		public const string Str1258ParamsKey = nameof(Str1258Params);

		/// <summary>
		/// Profit increased above {0}
		/// </summary>
		public static string Str1258Params => GetString(Str1258ParamsKey);

		/// <summary>
		/// - started
		/// </summary>
		public const string Str1259Key = nameof(Str1259);

		/// <summary>
		/// - started
		/// </summary>
		public static string Str1259 => GetString(Str1259Key);

		/// <summary>
		/// - stopping
		/// </summary>
		public const string Str1260Key = nameof(Str1260);

		/// <summary>
		/// - stopping
		/// </summary>
		public static string Str1260 => GetString(Str1260Key);

		/// <summary>
		/// - stopped
		/// </summary>
		public const string Str1261Key = nameof(Str1261);

		/// <summary>
		/// - stopped
		/// </summary>
		public static string Str1261 => GetString(Str1261Key);

		/// <summary>
		/// - warning
		/// </summary>
		public const string Str1262Key = nameof(Str1262);

		/// <summary>
		/// - warning
		/// </summary>
		public static string Str1262 => GetString(Str1262Key);

		/// <summary>
		/// Rule {0} not registered in strategy.
		/// </summary>
		public const string Str1263ParamsKey = nameof(Str1263Params);

		/// <summary>
		/// Rule {0} not registered in strategy.
		/// </summary>
		public static string Str1263Params => GetString(Str1263ParamsKey);

		/// <summary>
		/// Quoting
		/// </summary>
		public const string Str1264Key = nameof(Str1264);

		/// <summary>
		/// Quoting
		/// </summary>
		public static string Str1264 => GetString(Str1264Key);

		/// <summary>
		/// Should placed market order be quoted.
		/// </summary>
		public const string Str1265Key = nameof(Str1265);

		/// <summary>
		/// Should placed market order be quoted.
		/// </summary>
		public static string Str1265 => GetString(Str1265Key);

		/// <summary>
		/// Price offset
		/// </summary>
		public const string Str1266Key = nameof(Str1266);

		/// <summary>
		/// Price offset
		/// </summary>
		public static string Str1266 => GetString(Str1266Key);

		/// <summary>
		/// Price offset for placed order.
		/// </summary>
		public const string Str1267Key = nameof(Str1267);

		/// <summary>
		/// Price offset for placed order.
		/// </summary>
		public static string Str1267 => GetString(Str1267Key);

		/// <summary>
		/// Strategy for underlying asset created.
		/// </summary>
		public const string Str1268Key = nameof(Str1268);

		/// <summary>
		/// Strategy for underlying asset created.
		/// </summary>
		public static string Str1268 => GetString(Str1268Key);

		/// <summary>
		/// Strategy for the underlying asset {0} found.
		/// </summary>
		public const string Str1269ParamsKey = nameof(Str1269Params);

		/// <summary>
		/// Strategy for the underlying asset {0} found.
		/// </summary>
		public static string Str1269Params => GetString(Str1269ParamsKey);

		/// <summary>
		/// Underlying asset position specified.
		/// </summary>
		public const string Str1270Key = nameof(Str1270);

		/// <summary>
		/// Underlying asset position specified.
		/// </summary>
		public static string Str1270 => GetString(Str1270Key);

		/// <summary>
		/// Strike strategy {0} found.
		/// </summary>
		public const string Str1271ParamsKey = nameof(Str1271Params);

		/// <summary>
		/// Strike strategy {0} found.
		/// </summary>
		public static string Str1271Params => GetString(Str1271ParamsKey);

		/// <summary>
		/// Order {0} {1} in {2}.
		/// </summary>
		public const string Str1272ParamsKey = nameof(Str1272Params);

		/// <summary>
		/// Order {0} {1} in {2}.
		/// </summary>
		public static string Str1272Params => GetString(Str1272ParamsKey);

		/// <summary>
		/// Order {0} registered with ID {1} in {2}.
		/// </summary>
		public const string Str1275ParamsKey = nameof(Str1275Params);

		/// <summary>
		/// Order {0} registered with ID {1} in {2}.
		/// </summary>
		public static string Str1275Params => GetString(Str1275ParamsKey);

		/// <summary>
		/// Error registering order {0}. Error description {1}.
		/// </summary>
		public const string Str1276ParamsKey = nameof(Str1276Params);

		/// <summary>
		/// Error registering order {0}. Error description {1}.
		/// </summary>
		public static string Str1276Params => GetString(Str1276ParamsKey);

		/// <summary>
		/// Rehedging with order {0} {1} volume {2} with price {3}.
		/// </summary>
		public const string Str1277ParamsKey = nameof(Str1277Params);

		/// <summary>
		/// Rehedging with order {0} {1} volume {2} with price {3}.
		/// </summary>
		public static string Str1277Params => GetString(Str1277ParamsKey);

		/// <summary>
		/// For security {0} no daughter strategies were created.
		/// </summary>
		public const string Str1278ParamsKey = nameof(Str1278Params);

		/// <summary>
		/// For security {0} no daughter strategies were created.
		/// </summary>
		public static string Str1278Params => GetString(Str1278ParamsKey);

		/// <summary>
		/// Rule suspension. Кол-во заявок {0}.
		/// </summary>
		public const string Str1279ParamsKey = nameof(Str1279Params);

		/// <summary>
		/// Rule suspension. Кол-во заявок {0}.
		/// </summary>
		public static string Str1279Params => GetString(Str1279ParamsKey);

		/// <summary>
		/// Resume rule.
		/// </summary>
		public const string Str1280Key = nameof(Str1280);

		/// <summary>
		/// Resume rule.
		/// </summary>
		public static string Str1280 => GetString(Str1280Key);

		/// <summary>
		/// Part of orders is realized. Remaining orders number is {0}.
		/// </summary>
		public const string Str1281ParamsKey = nameof(Str1281Params);

		/// <summary>
		/// Part of orders is realized. Remaining orders number is {0}.
		/// </summary>
		public static string Str1281Params => GetString(Str1281ParamsKey);

		/// <summary>
		/// Trailing mechanism cannot be used at a limited level.
		/// </summary>
		public const string Str1282Key = nameof(Str1282);

		/// <summary>
		/// Trailing mechanism cannot be used at a limited level.
		/// </summary>
		public static string Str1282 => GetString(Str1282Key);

		/// <summary>
		/// Position protection {0}/{1} with volume {2}. Level={3}, Moving={4}, Market orders={5}, Quoting={6}, Slippage={7}
		/// </summary>
		public const string Str1283ParamsKey = nameof(Str1283Params);

		/// <summary>
		/// Position protection {0}/{1} with volume {2}. Level={3}, Moving={4}, Market orders={5}, Quoting={6}, Slippage={7}
		/// </summary>
		public static string Str1283Params => GetString(Str1283ParamsKey);

		/// <summary>
		/// Security {0} does not have quotes for {1}.
		/// </summary>
		public const string Str1284ParamsKey = nameof(Str1284Params);

		/// <summary>
		/// Security {0} does not have quotes for {1}.
		/// </summary>
		public static string Str1284Params => GetString(Str1284ParamsKey);

		/// <summary>
		/// Protective quoting registration.
		/// </summary>
		public const string Str1285Key = nameof(Str1285);

		/// <summary>
		/// Protective quoting registration.
		/// </summary>
		public static string Str1285 => GetString(Str1285Key);

		/// <summary>
		/// Protection activated. Position closing at {0}.
		/// </summary>
		public const string Str1286ParamsKey = nameof(Str1286Params);

		/// <summary>
		/// Protection activated. Position closing at {0}.
		/// </summary>
		public static string Str1286Params => GetString(Str1286ParamsKey);

		/// <summary>
		/// market
		/// </summary>
		public const string Str1287Key = nameof(Str1287);

		/// <summary>
		/// market
		/// </summary>
		public static string Str1287 => GetString(Str1287Key);

		/// <summary>
		/// Quoting direction cannot be changed when the position is zero.
		/// </summary>
		public const string Str1288Key = nameof(Str1288);

		/// <summary>
		/// Quoting direction cannot be changed when the position is zero.
		/// </summary>
		public static string Str1288 => GetString(Str1288Key);

		/// <summary>
		/// Quoting volume change. Old volume {0}, new volume {1}.
		/// </summary>
		public const string Str1289ParamsKey = nameof(Str1289Params);

		/// <summary>
		/// Quoting volume change. Old volume {0}, new volume {1}.
		/// </summary>
		public static string Str1289Params => GetString(Str1289ParamsKey);

		/// <summary>
		/// Quoted volume must be positive.
		/// </summary>
		public const string Str1290Key = nameof(Str1290);

		/// <summary>
		/// Quoted volume must be positive.
		/// </summary>
		public static string Str1290 => GetString(Str1290Key);

		/// <summary>
		/// Wrong value.
		/// </summary>
		public const string Str1291Key = nameof(Str1291);

		/// <summary>
		/// Wrong value.
		/// </summary>
		public static string Str1291 => GetString(Str1291Key);

		/// <summary>
		/// Action was not executed. Strategy is expected to stop.
		/// </summary>
		public const string Str1292Key = nameof(Str1292);

		/// <summary>
		/// Action was not executed. Strategy is expected to stop.
		/// </summary>
		public static string Str1292 => GetString(Str1292Key);

		/// <summary>
		/// Quoting to {0} volume {1}.
		/// </summary>
		public const string Str1293ParamsKey = nameof(Str1293Params);

		/// <summary>
		/// Quoting to {0} volume {1}.
		/// </summary>
		public static string Str1293Params => GetString(Str1293ParamsKey);

		/// <summary>
		/// Finishing quoting with unfilled volume equal {0}.
		/// </summary>
		public const string Str1294ParamsKey = nameof(Str1294Params);

		/// <summary>
		/// Finishing quoting with unfilled volume equal {0}.
		/// </summary>
		public static string Str1294Params => GetString(Str1294ParamsKey);

		/// <summary>
		/// Position changed by {0}. Remaining volume {1}.
		/// </summary>
		public const string Str1295ParamsKey = nameof(Str1295Params);

		/// <summary>
		/// Position changed by {0}. Remaining volume {1}.
		/// </summary>
		public static string Str1295Params => GetString(Str1295ParamsKey);

		/// <summary>
		/// Finishing quoting.
		/// </summary>
		public const string Str1296Key = nameof(Str1296);

		/// <summary>
		/// Finishing quoting.
		/// </summary>
		public static string Str1296 => GetString(Str1296Key);

		/// <summary>
		/// Current errors count {0}. Maximum {1}.
		/// </summary>
		public const string Str1297ParamsKey = nameof(Str1297Params);

		/// <summary>
		/// Current errors count {0}. Maximum {1}.
		/// </summary>
		public static string Str1297Params => GetString(Str1297ParamsKey);

		/// <summary>
		/// Reset registration errors counter from {0} to zero.
		/// </summary>
		public const string Str1298ParamsKey = nameof(Str1298Params);

		/// <summary>
		/// Reset registration errors counter from {0} to zero.
		/// </summary>
		public static string Str1298Params => GetString(Str1298ParamsKey);

		/// <summary>
		/// Order {0} accepted by the stock exchange.
		/// </summary>
		public const string Str1299ParamsKey = nameof(Str1299Params);

		/// <summary>
		/// Order {0} accepted by the stock exchange.
		/// </summary>
		public static string Str1299Params => GetString(Str1299ParamsKey);

		/// <summary>
		/// Order {0} reregistered to order {1}.
		/// </summary>
		public const string Str1300ParamsKey = nameof(Str1300Params);

		/// <summary>
		/// Order {0} reregistered to order {1}.
		/// </summary>
		public static string Str1300Params => GetString(Str1300ParamsKey);

		/// <summary>
		/// Order {0} is out of date.
		/// </summary>
		public const string Str1301ParamsKey = nameof(Str1301Params);

		/// <summary>
		/// Order {0} is out of date.
		/// </summary>
		public static string Str1301Params => GetString(Str1301ParamsKey);

		/// <summary>
		/// Order {0} was not registered because '{1}'.
		/// </summary>
		public const string Str1302ParamsKey = nameof(Str1302Params);

		/// <summary>
		/// Order {0} was not registered because '{1}'.
		/// </summary>
		public static string Str1302Params => GetString(Str1302ParamsKey);

		/// <summary>
		/// Order {0} completely filled. Active volume is {1}.
		/// </summary>
		public const string Str1303ParamsKey = nameof(Str1303Params);

		/// <summary>
		/// Order {0} completely filled. Active volume is {1}.
		/// </summary>
		public static string Str1303Params => GetString(Str1303ParamsKey);

		/// <summary>
		/// Quoting in state {0}.
		/// </summary>
		public const string Str1304ParamsKey = nameof(Str1304Params);

		/// <summary>
		/// Quoting in state {0}.
		/// </summary>
		public static string Str1304Params => GetString(Str1304ParamsKey);

		/// <summary>
		/// Order {0} in cancellation process.
		/// </summary>
		public const string Str1305ParamsKey = nameof(Str1305Params);

		/// <summary>
		/// Order {0} in cancellation process.
		/// </summary>
		public static string Str1305Params => GetString(Str1305ParamsKey);

		/// <summary>
		/// Order {0} in reregistering process.
		/// </summary>
		public const string Str1306ParamsKey = nameof(Str1306Params);

		/// <summary>
		/// Order {0} in reregistering process.
		/// </summary>
		public static string Str1306Params => GetString(Str1306ParamsKey);

		/// <summary>
		/// Order {0} in reregistering process to order {1}.
		/// </summary>
		public const string Str1307ParamsKey = nameof(Str1307Params);

		/// <summary>
		/// Order {0} in reregistering process to order {1}.
		/// </summary>
		public static string Str1307Params => GetString(Str1307ParamsKey);

		/// <summary>
		/// Reregistration was not complete. Waiting for order {0} to fill.
		/// </summary>
		public const string Str1308ParamsKey = nameof(Str1308Params);

		/// <summary>
		/// Reregistration was not complete. Waiting for order {0} to fill.
		/// </summary>
		public static string Str1308Params => GetString(Str1308ParamsKey);

		/// <summary>
		/// Market depth is empty.
		/// </summary>
		public const string Str1309Key = nameof(Str1309);

		/// <summary>
		/// Market depth is empty.
		/// </summary>
		public static string Str1309 => GetString(Str1309Key);

		/// <summary>
		/// Price of current {0} and best {1}.
		/// </summary>
		public const string Str1310ParamsKey = nameof(Str1310Params);

		/// <summary>
		/// Price of current {0} and best {1}.
		/// </summary>
		public static string Str1310Params => GetString(Str1310ParamsKey);

		/// <summary>
		/// Best bid {0} and best ask {1}.
		/// </summary>
		public const string Str1311ParamsKey = nameof(Str1311Params);

		/// <summary>
		/// Best bid {0} and best ask {1}.
		/// </summary>
		public static string Str1311Params => GetString(Str1311ParamsKey);

		/// <summary>
		/// Quoting order {0} to {1} with price {2} volume {3}.
		/// </summary>
		public const string Str1312ParamsKey = nameof(Str1312Params);

		/// <summary>
		/// Quoting order {0} to {1} with price {2} volume {3}.
		/// </summary>
		public static string Str1312Params => GetString(Str1312ParamsKey);

		/// <summary>
		/// Cannot change order price to 0.
		/// </summary>
		public const string Str1313Key = nameof(Str1313);

		/// <summary>
		/// Cannot change order price to 0.
		/// </summary>
		public static string Str1313 => GetString(Str1313Key);

		/// <summary>
		/// Requoting registered for order {0} with price {1} and volume {2}.
		/// </summary>
		public const string Str1314ParamsKey = nameof(Str1314Params);

		/// <summary>
		/// Requoting registered for order {0} with price {1} and volume {2}.
		/// </summary>
		public static string Str1314Params => GetString(Str1314ParamsKey);

		/// <summary>
		/// Cancel order {0}.
		/// </summary>
		public const string Str1315ParamsKey = nameof(Str1315Params);

		/// <summary>
		/// Cancel order {0}.
		/// </summary>
		public static string Str1315Params => GetString(Str1315ParamsKey);

		/// <summary>
		/// Order {0} was canceled. Cancellation time {1}.
		/// </summary>
		public const string Str1316ParamsKey = nameof(Str1316Params);

		/// <summary>
		/// Order {0} was canceled. Cancellation time {1}.
		/// </summary>
		public static string Str1316Params => GetString(Str1316ParamsKey);

		/// <summary>
		/// Cannot requote. Maximum number {0} of tries was made.
		/// </summary>
		public const string Str1317ParamsKey = nameof(Str1317Params);

		/// <summary>
		/// Cannot requote. Maximum number {0} of tries was made.
		/// </summary>
		public static string Str1317Params => GetString(Str1317ParamsKey);

		/// <summary>
		/// Order cannot be reregistered, since the interval has not yet expired.
		/// </summary>
		public const string Str1318Key = nameof(Str1318);

		/// <summary>
		/// Order cannot be reregistered, since the interval has not yet expired.
		/// </summary>
		public static string Str1318 => GetString(Str1318Key);

		/// <summary>
		/// Remaining {0}, beginning {1}, current {2}, interval {3}.
		/// </summary>
		public const string Str1319ParamsKey = nameof(Str1319Params);

		/// <summary>
		/// Remaining {0}, beginning {1}, current {2}, interval {3}.
		/// </summary>
		public static string Str1319Params => GetString(Str1319ParamsKey);

		/// <summary>
		/// Strategy
		/// </summary>
		public const string StrategyKey = nameof(Strategy);

		/// <summary>
		/// Strategy
		/// </summary>
		public static string Strategy => GetString(StrategyKey);

		/// <summary>
		/// Total working time
		/// </summary>
		public const string Str1321Key = nameof(Str1321);

		/// <summary>
		/// Total working time
		/// </summary>
		public static string Str1321 => GetString(Str1321Key);

		/// <summary>
		/// Strategy parameters
		/// </summary>
		public const string Str1322Key = nameof(Str1322);

		/// <summary>
		/// Strategy parameters
		/// </summary>
		public static string Str1322 => GetString(Str1322Key);

		/// <summary>
		/// Price (average)
		/// </summary>
		public const string Str1323Key = nameof(Str1323);

		/// <summary>
		/// Price (average)
		/// </summary>
		public static string Str1323 => GetString(Str1323Key);

		/// <summary>
		/// Status
		/// </summary>
		public const string Str1324Key = nameof(Str1324);

		/// <summary>
		/// Status
		/// </summary>
		public static string Str1324 => GetString(Str1324Key);

		/// <summary>
		/// Balance
		/// </summary>
		public const string Str1325Key = nameof(Str1325);

		/// <summary>
		/// Balance
		/// </summary>
		public static string Str1325 => GetString(Str1325Key);

		/// <summary>
		/// Registration latency
		/// </summary>
		public const string Str1326Key = nameof(Str1326);

		/// <summary>
		/// Registration latency
		/// </summary>
		public static string Str1326 => GetString(Str1326Key);

		/// <summary>
		/// Cancellation latency
		/// </summary>
		public const string Str1327Key = nameof(Str1327);

		/// <summary>
		/// Cancellation latency
		/// </summary>
		public static string Str1327 => GetString(Str1327Key);

		/// <summary>
		/// Filled
		/// </summary>
		public const string Str1328Key = nameof(Str1328);

		/// <summary>
		/// Filled
		/// </summary>
		public static string Str1328 => GetString(Str1328Key);

		/// <summary>
		/// Cancelled
		/// </summary>
		public const string Str1329Key = nameof(Str1329);

		/// <summary>
		/// Cancelled
		/// </summary>
		public static string Str1329 => GetString(Str1329Key);

		/// <summary>
		/// Profit
		/// </summary>
		public const string Str1330Key = nameof(Str1330);

		/// <summary>
		/// Profit
		/// </summary>
		public static string Str1330 => GetString(Str1330Key);

		/// <summary>
		/// General information about strategy:
		/// </summary>
		public const string Str1331Key = nameof(Str1331);

		/// <summary>
		/// General information about strategy:
		/// </summary>
		public static string Str1331 => GetString(Str1331Key);

		/// <summary>
		/// Total working time
		/// </summary>
		public const string Str1334Key = nameof(Str1334);

		/// <summary>
		/// Total working time
		/// </summary>
		public static string Str1334 => GetString(Str1334Key);

		/// <summary>
		/// Total execution time:
		/// </summary>
		public const string Str1335Key = nameof(Str1335);

		/// <summary>
		/// Total execution time:
		/// </summary>
		public static string Str1335 => GetString(Str1335Key);

		/// <summary>
		/// Strategy parameters:
		/// </summary>
		public const string Str1340Key = nameof(Str1340);

		/// <summary>
		/// Strategy parameters:
		/// </summary>
		public static string Str1340 => GetString(Str1340Key);

		/// <summary>
		/// Order price
		/// </summary>
		public const string Str1341Key = nameof(Str1341);

		/// <summary>
		/// Order price
		/// </summary>
		public static string Str1341 => GetString(Str1341Key);

		/// <summary>
		/// Profit in currency
		/// </summary>
		public const string Str1342Key = nameof(Str1342);

		/// <summary>
		/// Profit in currency
		/// </summary>
		public static string Str1342 => GetString(Str1342Key);

		/// <summary>
		/// Profit in points
		/// </summary>
		public const string Str1343Key = nameof(Str1343);

		/// <summary>
		/// Profit in points
		/// </summary>
		public static string Str1343 => GetString(Str1343Key);

		/// <summary>
		/// Profit in currency (total)
		/// </summary>
		public const string Str1344Key = nameof(Str1344);

		/// <summary>
		/// Profit in currency (total)
		/// </summary>
		public static string Str1344 => GetString(Str1344Key);

		/// <summary>
		/// Profit in points (total)
		/// </summary>
		public const string Str1345Key = nameof(Str1345);

		/// <summary>
		/// Profit in points (total)
		/// </summary>
		public static string Str1345 => GetString(Str1345Key);

		/// <summary>
		/// Registered
		/// </summary>
		public const string Str1346Key = nameof(Str1346);

		/// <summary>
		/// Registered
		/// </summary>
		public static string Str1346 => GetString(Str1346Key);

		/// <summary>
		/// Changed
		/// </summary>
		public const string Str1347Key = nameof(Str1347);

		/// <summary>
		/// Changed
		/// </summary>
		public static string Str1347 => GetString(Str1347Key);

		/// <summary>
		/// Duration
		/// </summary>
		public const string Str1348Key = nameof(Str1348);

		/// <summary>
		/// Duration
		/// </summary>
		public static string Str1348 => GetString(Str1348Key);

		/// <summary>
		/// Stop-Orders
		/// </summary>
		public const string Str1351Key = nameof(Str1351);

		/// <summary>
		/// Stop-Orders
		/// </summary>
		public static string Str1351 => GetString(Str1351Key);

		/// <summary>
		/// Derivative order ID
		/// </summary>
		public const string Str1352Key = nameof(Str1352);

		/// <summary>
		/// Derivative order ID
		/// </summary>
		public static string Str1352 => GetString(Str1352Key);

		/// <summary>
		/// Limit
		/// </summary>
		public const string Str1353Key = nameof(Str1353);

		/// <summary>
		/// Limit
		/// </summary>
		public static string Str1353 => GetString(Str1353Key);

		/// <summary>
		/// OTC
		/// </summary>
		public const string Str1354Key = nameof(Str1354);

		/// <summary>
		/// OTC
		/// </summary>
		public static string Str1354 => GetString(Str1354Key);

		/// <summary>
		/// Strategies
		/// </summary>
		public const string Str1355Key = nameof(Str1355);

		/// <summary>
		/// Strategies
		/// </summary>
		public static string Str1355 => GetString(Str1355Key);

		/// <summary>
		/// Strategy is already added as a child strategy.
		/// </summary>
		public const string Str1356Key = nameof(Str1356);

		/// <summary>
		/// Strategy is already added as a child strategy.
		/// </summary>
		public static string Str1356 => GetString(Str1356Key);

		/// <summary>
		/// Strategy logging level.
		/// </summary>
		public const string Str1358Key = nameof(Str1358);

		/// <summary>
		/// Strategy logging level.
		/// </summary>
		public static string Str1358 => GetString(Str1358Key);

		/// <summary>
		/// Strategy name.
		/// </summary>
		public const string Str1359Key = nameof(Str1359);

		/// <summary>
		/// Strategy name.
		/// </summary>
		public static string Str1359 => GetString(Str1359Key);

		/// <summary>
		/// Connection is not initialized.
		/// </summary>
		public const string Str1360Key = nameof(Str1360);

		/// <summary>
		/// Connection is not initialized.
		/// </summary>
		public static string Str1360 => GetString(Str1360Key);

		/// <summary>
		/// Trading portfolio, through which operations with orders are going to be performed.
		/// </summary>
		public const string Str1361Key = nameof(Str1361);

		/// <summary>
		/// Trading portfolio, through which operations with orders are going to be performed.
		/// </summary>
		public static string Str1361 => GetString(Str1361Key);

		/// <summary>
		/// Security, with which the strategy is working.
		/// </summary>
		public const string Str1362Key = nameof(Str1362);

		/// <summary>
		/// Security, with which the strategy is working.
		/// </summary>
		public static string Str1362 => GetString(Str1362Key);

		/// <summary>
		/// Total slippage.
		/// </summary>
		public const string Str1363Key = nameof(Str1363);

		/// <summary>
		/// Total slippage.
		/// </summary>
		public static string Str1363 => GetString(Str1363Key);

		/// <summary>
		/// Total profit-loss.
		/// </summary>
		public const string Str1364Key = nameof(Str1364);

		/// <summary>
		/// Total profit-loss.
		/// </summary>
		public static string Str1364 => GetString(Str1364Key);

		/// <summary>
		/// Total commission.
		/// </summary>
		public const string Str1365Key = nameof(Str1365);

		/// <summary>
		/// Total commission.
		/// </summary>
		public static string Str1365 => GetString(Str1365Key);

		/// <summary>
		/// Total latency.
		/// </summary>
		public const string Str1366Key = nameof(Str1366);

		/// <summary>
		/// Total latency.
		/// </summary>
		public static string Str1366 => GetString(Str1366Key);

		/// <summary>
		/// Maximum number of errors cannot be less than one.
		/// </summary>
		public const string Str1367Key = nameof(Str1367);

		/// <summary>
		/// Maximum number of errors cannot be less than one.
		/// </summary>
		public static string Str1367 => GetString(Str1367Key);

		/// <summary>
		/// Transition from state {0} to {1}.
		/// </summary>
		public const string Str1368ParamsKey = nameof(Str1368Params);

		/// <summary>
		/// Transition from state {0} to {1}.
		/// </summary>
		public static string Str1368Params => GetString(Str1368ParamsKey);

		/// <summary>
		/// Strategy {0} is already stopped, and cannot be transferred to state {1}.
		/// </summary>
		public const string Str1369ParamsKey = nameof(Str1369Params);

		/// <summary>
		/// Strategy {0} is already stopped, and cannot be transferred to state {1}.
		/// </summary>
		public static string Str1369Params => GetString(Str1369ParamsKey);

		/// <summary>
		/// Waiting for all active orders to be cancelled.
		/// </summary>
		public const string Str1370Key = nameof(Str1370);

		/// <summary>
		/// Waiting for all active orders to be cancelled.
		/// </summary>
		public static string Str1370 => GetString(Str1370Key);

		/// <summary>
		/// stopped
		/// </summary>
		public const string Str1371Key = nameof(Str1371);

		/// <summary>
		/// stopped
		/// </summary>
		public static string Str1371 => GetString(Str1371Key);

		/// <summary>
		/// stopping
		/// </summary>
		public const string Str1372Key = nameof(Str1372);

		/// <summary>
		/// stopping
		/// </summary>
		public static string Str1372 => GetString(Str1372Key);

		/// <summary>
		/// Started
		/// </summary>
		public const string Str1373Key = nameof(Str1373);

		/// <summary>
		/// Started
		/// </summary>
		public static string Str1373 => GetString(Str1373Key);

		/// <summary>
		/// Strategy {0}. [{1},{2}]. Position {3}.
		/// </summary>
		public const string Str1374ParamsKey = nameof(Str1374Params);

		/// <summary>
		/// Strategy {0}. [{1},{2}]. Position {3}.
		/// </summary>
		public static string Str1374Params => GetString(Str1374ParamsKey);

		/// <summary>
		/// Orders storage time cannot be less than zero.
		/// </summary>
		public const string Str1375Key = nameof(Str1375);

		/// <summary>
		/// Orders storage time cannot be less than zero.
		/// </summary>
		public static string Str1375 => GetString(Str1375Key);

		/// <summary>
		/// Operational volume.
		/// </summary>
		public const string Str1376Key = nameof(Str1376);

		/// <summary>
		/// Operational volume.
		/// </summary>
		public static string Str1376 => GetString(Str1376Key);

		/// <summary>
		/// Strategy volume cannot be less than zero.
		/// </summary>
		public const string Str1377Key = nameof(Str1377);

		/// <summary>
		/// Strategy volume cannot be less than zero.
		/// </summary>
		public static string Str1377 => GetString(Str1377Key);

		/// <summary>
		/// Start time
		/// </summary>
		public const string Str1378Key = nameof(Str1378);

		/// <summary>
		/// Start time
		/// </summary>
		public static string Str1378 => GetString(Str1378Key);

		/// <summary>
		/// Strategy start time.
		/// </summary>
		public const string Str1379Key = nameof(Str1379);

		/// <summary>
		/// Strategy start time.
		/// </summary>
		public static string Str1379 => GetString(Str1379Key);

		/// <summary>
		/// Security is not initialized.
		/// </summary>
		public const string Str1380Key = nameof(Str1380);

		/// <summary>
		/// Security is not initialized.
		/// </summary>
		public static string Str1380 => GetString(Str1380Key);

		/// <summary>
		/// Portfolio is not initialized.
		/// </summary>
		public const string Str1381Key = nameof(Str1381);

		/// <summary>
		/// Portfolio is not initialized.
		/// </summary>
		public static string Str1381 => GetString(Str1381Key);

		/// <summary>
		/// Registration of new {0} (0x{5:X}) order for {1} with price {2} and volume {3}. {4}
		/// </summary>
		public const string Str1382ParamsKey = nameof(Str1382Params);

		/// <summary>
		/// Registration of new {0} (0x{5:X}) order for {1} with price {2} and volume {3}. {4}
		/// </summary>
		public static string Str1382Params => GetString(Str1382ParamsKey);

		/// <summary>
		/// Strategy is in state {0}. Order registration is not possible.
		/// </summary>
		public const string Str1383ParamsKey = nameof(Str1383Params);

		/// <summary>
		/// Strategy is in state {0}. Order registration is not possible.
		/// </summary>
		public static string Str1383Params => GetString(Str1383ParamsKey);

		/// <summary>
		/// Reregistration of order {0} with price {1} to price {2}. {3}
		/// </summary>
		public const string Str1384ParamsKey = nameof(Str1384Params);

		/// <summary>
		/// Reregistration of order {0} with price {1} to price {2}. {3}
		/// </summary>
		public static string Str1384Params => GetString(Str1384ParamsKey);

		/// <summary>
		/// Strategy is in state {0}. Order reregistration is not possible.
		/// </summary>
		public const string Str1385ParamsKey = nameof(Str1385Params);

		/// <summary>
		/// Strategy is in state {0}. Order reregistration is not possible.
		/// </summary>
		public static string Str1385Params => GetString(Str1385ParamsKey);

		/// <summary>
		/// Order {0} no longer active.
		/// </summary>
		public const string Str1386ParamsKey = nameof(Str1386Params);

		/// <summary>
		/// Order {0} no longer active.
		/// </summary>
		public static string Str1386Params => GetString(Str1386ParamsKey);

		/// <summary>
		/// Error cancelling order {0} when strategy is stopped.
		/// </summary>
		public const string Str1387ParamsKey = nameof(Str1387Params);

		/// <summary>
		/// Error cancelling order {0} when strategy is stopped.
		/// </summary>
		public static string Str1387Params => GetString(Str1387ParamsKey);

		/// <summary>
		/// Strategy is in state {0}. Order cancellation is not possible.
		/// </summary>
		public const string Str1388ParamsKey = nameof(Str1388Params);

		/// <summary>
		/// Strategy is in state {0}. Order cancellation is not possible.
		/// </summary>
		public static string Str1388Params => GetString(Str1388ParamsKey);

		/// <summary>
		/// Order {0} does not belong to the strategy {1}.
		/// </summary>
		public const string Str1389ParamsKey = nameof(Str1389Params);

		/// <summary>
		/// Order {0} does not belong to the strategy {1}.
		/// </summary>
		public static string Str1389Params => GetString(Str1389ParamsKey);

		/// <summary>
		/// For order {0} cancellation signal has already been sent.
		/// </summary>
		public const string Str1390ParamsKey = nameof(Str1390Params);

		/// <summary>
		/// For order {0} cancellation signal has already been sent.
		/// </summary>
		public static string Str1390Params => GetString(Str1390ParamsKey);

		/// <summary>
		/// Attempting to start strategy in state {0}.
		/// </summary>
		public const string Str1391ParamsKey = nameof(Str1391Params);

		/// <summary>
		/// Attempting to start strategy in state {0}.
		/// </summary>
		public static string Str1391Params => GetString(Str1391ParamsKey);

		/// <summary>
		/// Attempting to stop strategy in state {0}.
		/// </summary>
		public const string Str1392ParamsKey = nameof(Str1392Params);

		/// <summary>
		/// Attempting to stop strategy in state {0}.
		/// </summary>
		public static string Str1392Params => GetString(Str1392ParamsKey);

		/// <summary>
		/// Reinitialization.
		/// </summary>
		public const string Str1393Key = nameof(Str1393);

		/// <summary>
		/// Reinitialization.
		/// </summary>
		public static string Str1393 => GetString(Str1393Key);

		/// <summary>
		/// Rules suspension. _rulesSuspendCount {0}.
		/// </summary>
		public const string Str1394ParamsKey = nameof(Str1394Params);

		/// <summary>
		/// Rules suspension. _rulesSuspendCount {0}.
		/// </summary>
		public static string Str1394Params => GetString(Str1394ParamsKey);

		/// <summary>
		/// Resume rules. _rulesSuspendCount {0}.
		/// </summary>
		public const string Str1395ParamsKey = nameof(Str1395Params);

		/// <summary>
		/// Resume rules. _rulesSuspendCount {0}.
		/// </summary>
		public static string Str1395Params => GetString(Str1395ParamsKey);

		/// <summary>
		/// Attempting to stop. Remaining {0} rules. Rules {1}.
		/// </summary>
		public const string Str1396ParamsKey = nameof(Str1396Params);

		/// <summary>
		/// Attempting to stop. Remaining {0} rules. Rules {1}.
		/// </summary>
		public static string Str1396Params => GetString(Str1396ParamsKey);

		/// <summary>
		/// cannot be processed, because rules have been suspended.
		/// </summary>
		public const string Str1397Key = nameof(Str1397);

		/// <summary>
		/// cannot be processed, because rules have been suspended.
		/// </summary>
		public static string Str1397 => GetString(Str1397Key);

		/// <summary>
		/// New {0} trade {1} at price {2} for {3} orders {4}.
		/// </summary>
		public const string Str1398ParamsKey = nameof(Str1398Params);

		/// <summary>
		/// New {0} trade {1} at price {2} for {3} orders {4}.
		/// </summary>
		public static string Str1398Params => GetString(Str1398ParamsKey);

		/// <summary>
		/// New position: {0}.
		/// </summary>
		public const string Str1399ParamsKey = nameof(Str1399Params);

		/// <summary>
		/// New position: {0}.
		/// </summary>
		public static string Str1399Params => GetString(Str1399ParamsKey);

		/// <summary>
		/// Strategy is in state {0}. Order cancellation is not possible.
		/// </summary>
		public const string Str1400ParamsKey = nameof(Str1400Params);

		/// <summary>
		/// Strategy is in state {0}. Order cancellation is not possible.
		/// </summary>
		public static string Str1400Params => GetString(Str1400ParamsKey);

		/// <summary>
		/// Cancellation of all active orders.
		/// </summary>
		public const string Str1401Key = nameof(Str1401);

		/// <summary>
		/// Cancellation of all active orders.
		/// </summary>
		public static string Str1401 => GetString(Str1401Key);

		/// <summary>
		/// Order {0} was not cancelled because {1}.
		/// </summary>
		public const string Str1402ParamsKey = nameof(Str1402Params);

		/// <summary>
		/// Order {0} was not cancelled because {1}.
		/// </summary>
		public static string Str1402Params => GetString(Str1402ParamsKey);

		/// <summary>
		/// For strategy {0} the security is not specified.
		/// </summary>
		public const string Str1403ParamsKey = nameof(Str1403Params);

		/// <summary>
		/// For strategy {0} the security is not specified.
		/// </summary>
		public static string Str1403Params => GetString(Str1403ParamsKey);

		/// <summary>
		/// Strategy settings loading caused identifier to change.
		/// </summary>
		public const string Str1404Key = nameof(Str1404);

		/// <summary>
		/// Strategy settings loading caused identifier to change.
		/// </summary>
		public static string Str1404 => GetString(Str1404Key);

		/// <summary>
		/// Storage
		/// </summary>
		public const string Str1405Key = nameof(Str1405);

		/// <summary>
		/// Storage
		/// </summary>
		public static string Str1405 => GetString(Str1405Key);

		/// <summary>
		/// Generated
		/// </summary>
		public const string Str1406Key = nameof(Str1406);

		/// <summary>
		/// Generated
		/// </summary>
		public static string Str1406 => GetString(Str1406Key);

		/// <summary>
		/// None
		/// </summary>
		public const string Str1407Key = nameof(Str1407);

		/// <summary>
		/// None
		/// </summary>
		public static string Str1407 => GetString(Str1407Key);

		/// <summary>
		/// Emulation settings.
		/// </summary>
		public const string Str1408Key = nameof(Str1408);

		/// <summary>
		/// Emulation settings.
		/// </summary>
		public static string Str1408 => GetString(Str1408Key);

		/// <summary>
		/// Time change interval.
		/// </summary>
		public const string Str1409Key = nameof(Str1409);

		/// <summary>
		/// Time change interval.
		/// </summary>
		public static string Str1409 => GetString(Str1409Key);

		/// <summary>
		/// Unrealized P&amp;L
		/// </summary>
		public const string Str1410Key = nameof(Str1410);

		/// <summary>
		/// Unrealized P&amp;L
		/// </summary>
		public static string Str1410 => GetString(Str1410Key);

		/// <summary>
		/// Unrealized profit recalculation interval.
		/// </summary>
		public const string Str1411Key = nameof(Str1411);

		/// <summary>
		/// Unrealized profit recalculation interval.
		/// </summary>
		public static string Str1411 => GetString(Str1411Key);

		/// <summary>
		/// What trades to use.
		/// </summary>
		public const string Str1413Key = nameof(Str1413);

		/// <summary>
		/// What trades to use.
		/// </summary>
		public static string Str1413 => GetString(Str1413Key);

		/// <summary>
		/// Market depths
		/// </summary>
		public const string MarketDepthsKey = nameof(MarketDepths);

		/// <summary>
		/// Market depths
		/// </summary>
		public static string MarketDepths => GetString(MarketDepthsKey);

		/// <summary>
		/// What market depths to use.
		/// </summary>
		public const string Str1415Key = nameof(Str1415);

		/// <summary>
		/// What market depths to use.
		/// </summary>
		public static string Str1415 => GetString(Str1415Key);

		/// <summary>
		/// Use orders log.
		/// </summary>
		public const string Str1417Key = nameof(Str1417);

		/// <summary>
		/// Use orders log.
		/// </summary>
		public static string Str1417 => GetString(Str1417Key);

		/// <summary>
		/// Number of strategies
		/// </summary>
		public const string Str1418Key = nameof(Str1418);

		/// <summary>
		/// Number of strategies
		/// </summary>
		public static string Str1418 => GetString(Str1418Key);

		/// <summary>
		/// Number of simultaneously tested strategies.
		/// </summary>
		public const string Str1419Key = nameof(Str1419);

		/// <summary>
		/// Number of simultaneously tested strategies.
		/// </summary>
		public static string Str1419 => GetString(Str1419Key);

		/// <summary>
		/// Code is executing. Execution must be restarted.
		/// </summary>
		public const string Str1420Key = nameof(Str1420);

		/// <summary>
		/// Code is executing. Execution must be restarted.
		/// </summary>
		public static string Str1420 => GetString(Str1420Key);

		/// <summary>
		/// Compilation was successful.
		/// </summary>
		public const string Str1421Key = nameof(Str1421);

		/// <summary>
		/// Compilation was successful.
		/// </summary>
		public static string Str1421 => GetString(Str1421Key);

		/// <summary>
		/// Assemblies (*.dll)|*.dll|All files (*.*)|*.*
		/// </summary>
		public const string Str1422Key = nameof(Str1422);

		/// <summary>
		/// Assemblies (*.dll)|*.dll|All files (*.*)|*.*
		/// </summary>
		public static string Str1422 => GetString(Str1422Key);

		/// <summary>
		/// File being opened is not a .NET assembly.
		/// </summary>
		public const string Str1423Key = nameof(Str1423);

		/// <summary>
		/// File being opened is not a .NET assembly.
		/// </summary>
		public static string Str1423 => GetString(Str1423Key);

		/// <summary>
		/// Link to be deleted is not selected.
		/// </summary>
		public const string Str1424Key = nameof(Str1424);

		/// <summary>
		/// Link to be deleted is not selected.
		/// </summary>
		public static string Str1424 => GetString(Str1424Key);

		/// <summary>
		/// To save a new record, fill in the form and click the save button.
		/// </summary>
		public const string Str1425Key = nameof(Str1425);

		/// <summary>
		/// To save a new record, fill in the form and click the save button.
		/// </summary>
		public static string Str1425 => GetString(Str1425Key);

		/// <summary>
		/// Before saving stock exchange board first save information about the stock exchange.
		/// </summary>
		public const string Str1426Key = nameof(Str1426);

		/// <summary>
		/// Before saving stock exchange board first save information about the stock exchange.
		/// </summary>
		public static string Str1426 => GetString(Str1426Key);

		/// <summary>
		/// Error: entered date is already in the list.
		/// </summary>
		public const string Str1427Key = nameof(Str1427);

		/// <summary>
		/// Error: entered date is already in the list.
		/// </summary>
		public static string Str1427 => GetString(Str1427Key);

		/// <summary>
		/// Error: trading session ending time must be less than starting time.
		/// </summary>
		public const string Str1428Key = nameof(Str1428);

		/// <summary>
		/// Error: trading session ending time must be less than starting time.
		/// </summary>
		public static string Str1428 => GetString(Str1428Key);

		/// <summary>
		/// Error: trading session time periods should not overlap.
		/// </summary>
		public const string Str1429Key = nameof(Str1429);

		/// <summary>
		/// Error: trading session time periods should not overlap.
		/// </summary>
		public static string Str1429 => GetString(Str1429Key);

		/// <summary>
		/// Error: selected date is already in the list of special holidays
		/// </summary>
		public const string Str1430Key = nameof(Str1430);

		/// <summary>
		/// Error: selected date is already in the list of special holidays
		/// </summary>
		public static string Str1430 => GetString(Str1430Key);

		/// <summary>
		/// Error: selected date is already in the list of special work days
		/// </summary>
		public const string Str1431Key = nameof(Str1431);

		/// <summary>
		/// Error: selected date is already in the list of special work days
		/// </summary>
		public static string Str1431 => GetString(Str1431Key);

		/// <summary>
		/// Selected date is already in the list.
		/// </summary>
		public const string Str1432Key = nameof(Str1432);

		/// <summary>
		/// Selected date is already in the list.
		/// </summary>
		public static string Str1432 => GetString(Str1432Key);

		/// <summary>
		/// To save data, enter board code.
		/// </summary>
		public const string Str1433Key = nameof(Str1433);

		/// <summary>
		/// To save data, enter board code.
		/// </summary>
		public static string Str1433 => GetString(Str1433Key);

		/// <summary>
		/// Error: lists of holidays and work days overlap.
		/// </summary>
		public const string Str1434Key = nameof(Str1434);

		/// <summary>
		/// Error: lists of holidays and work days overlap.
		/// </summary>
		public static string Str1434 => GetString(Str1434Key);

		/// <summary>
		/// Proxy-server settings
		/// </summary>
		public const string Str1435Key = nameof(Str1435);

		/// <summary>
		/// Proxy-server settings
		/// </summary>
		public static string Str1435 => GetString(Str1435Key);

		/// <summary>
		/// Proxy-server
		/// </summary>
		public const string Str1436Key = nameof(Str1436);

		/// <summary>
		/// Proxy-server
		/// </summary>
		public static string Str1436 => GetString(Str1436Key);

		/// <summary>
		/// Active
		/// </summary>
		public const string Str1437Key = nameof(Str1437);

		/// <summary>
		/// Active
		/// </summary>
		public static string Str1437 => GetString(Str1437Key);

		/// <summary>
		/// Use proxy-server.
		/// </summary>
		public const string Str1438Key = nameof(Str1438);

		/// <summary>
		/// Use proxy-server.
		/// </summary>
		public static string Str1438 => GetString(Str1438Key);

		/// <summary>
		/// Address
		/// </summary>
		public const string AddressKey = nameof(Address);

		/// <summary>
		/// Address
		/// </summary>
		public static string Address => GetString(AddressKey);

		/// <summary>
		/// Proxy server address.
		/// </summary>
		public const string Str1440Key = nameof(Str1440);

		/// <summary>
		/// Proxy server address.
		/// </summary>
		public static string Str1440 => GetString(Str1440Key);

		/// <summary>
		/// Locally
		/// </summary>
		public const string Str1441Key = nameof(Str1441);

		/// <summary>
		/// Locally
		/// </summary>
		public static string Str1441 => GetString(Str1441Key);

		/// <summary>
		/// Use for local addresses.
		/// </summary>
		public const string Str1442Key = nameof(Str1442);

		/// <summary>
		/// Use for local addresses.
		/// </summary>
		public static string Str1442 => GetString(Str1442Key);

		/// <summary>
		/// Authorization
		/// </summary>
		public const string AuthorizationKey = nameof(Authorization);

		/// <summary>
		/// Authorization
		/// </summary>
		public static string Authorization => GetString(AuthorizationKey);

		/// <summary>
		/// Use login and password authorization.
		/// </summary>
		public const string Str1444Key = nameof(Str1444);

		/// <summary>
		/// Use login and password authorization.
		/// </summary>
		public static string Str1444 => GetString(Str1444Key);

		/// <summary>
		/// Login
		/// </summary>
		public const string LoginKey = nameof(Login);

		/// <summary>
		/// Login
		/// </summary>
		public static string Login => GetString(LoginKey);

		/// <summary>
		/// Password
		/// </summary>
		public const string PasswordKey = nameof(Password);

		/// <summary>
		/// Password
		/// </summary>
		public static string Password => GetString(PasswordKey);

		/// <summary>
		/// No transition was specified.
		/// </summary>
		public const string Str1449Key = nameof(Str1449);

		/// <summary>
		/// No transition was specified.
		/// </summary>
		public static string Str1449 => GetString(Str1449Key);

		/// <summary>
		/// Some securities are not filled in.
		/// </summary>
		public const string Str1450Key = nameof(Str1450);

		/// <summary>
		/// Some securities are not filled in.
		/// </summary>
		public static string Str1450 => GetString(Str1450Key);

		/// <summary>
		/// Security '{0}' is composite.
		/// </summary>
		public const string Str1451Key = nameof(Str1451);

		/// <summary>
		/// Security '{0}' is composite.
		/// </summary>
		public static string Str1451 => GetString(Str1451Key);

		/// <summary>
		/// Some dates are not filled in.
		/// </summary>
		public const string Str1452Key = nameof(Str1452);

		/// <summary>
		/// Some dates are not filled in.
		/// </summary>
		public static string Str1452 => GetString(Str1452Key);

		/// <summary>
		/// Security '{0}' is doubled.
		/// </summary>
		public const string Str1453Key = nameof(Str1453);

		/// <summary>
		/// Security '{0}' is doubled.
		/// </summary>
		public static string Str1453 => GetString(Str1453Key);

		/// <summary>
		/// Date '{0}' is doubled.
		/// </summary>
		public const string Str1454Key = nameof(Str1454);

		/// <summary>
		/// Date '{0}' is doubled.
		/// </summary>
		public static string Str1454 => GetString(Str1454Key);

		/// <summary>
		/// Continuous futures contract built.
		/// </summary>
		public const string Str1455Key = nameof(Str1455);

		/// <summary>
		/// Continuous futures contract built.
		/// </summary>
		public static string Str1455 => GetString(Str1455Key);

		/// <summary>
		/// Insufficient data to automatically form a continuous futures contract.
		/// </summary>
		public const string Str1456Key = nameof(Str1456);

		/// <summary>
		/// Insufficient data to automatically form a continuous futures contract.
		/// </summary>
		public static string Str1456 => GetString(Str1456Key);

		/// <summary>
		/// Exit
		/// </summary>
		public const string Str1457Key = nameof(Str1457);

		/// <summary>
		/// Exit
		/// </summary>
		public static string Str1457 => GetString(Str1457Key);

		/// <summary>
		/// Enter
		/// </summary>
		public const string Str1458Key = nameof(Str1458);

		/// <summary>
		/// Enter
		/// </summary>
		public static string Str1458 => GetString(Str1458Key);

		/// <summary>
		/// Incorrect address.
		/// </summary>
		public const string Str1459Key = nameof(Str1459);

		/// <summary>
		/// Incorrect address.
		/// </summary>
		public static string Str1459 => GetString(Str1459Key);

		/// <summary>
		/// To save a new record, fill in the form and click the add exchange button.
		/// </summary>
		public const string Str1460Key = nameof(Str1460);

		/// <summary>
		/// To save a new record, fill in the form and click the add exchange button.
		/// </summary>
		public static string Str1460 => GetString(Str1460Key);

		/// <summary>
		/// To save data, enter the stock exchange name.
		/// </summary>
		public const string Str1461Key = nameof(Str1461);

		/// <summary>
		/// To save data, enter the stock exchange name.
		/// </summary>
		public static string Str1461 => GetString(Str1461Key);

		/// <summary>
		/// To save data, enter the full name of the stock exchange.
		/// </summary>
		public const string Str1462Key = nameof(Str1462);

		/// <summary>
		/// To save data, enter the full name of the stock exchange.
		/// </summary>
		public static string Str1462 => GetString(Str1462Key);

		/// <summary>
		/// To save data, enter the country of the stock exchange.
		/// </summary>
		public const string Str1464Key = nameof(Str1464);

		/// <summary>
		/// To save data, enter the country of the stock exchange.
		/// </summary>
		public static string Str1464 => GetString(Str1464Key);

		/// <summary>
		/// To save data, enter the time zone of the stock exchange.
		/// </summary>
		public const string Str1465Key = nameof(Str1465);

		/// <summary>
		/// To save data, enter the time zone of the stock exchange.
		/// </summary>
		public static string Str1465 => GetString(Str1465Key);

		/// <summary>
		/// Last version used. Update is not required.
		/// </summary>
		public const string Str1466Key = nameof(Str1466);

		/// <summary>
		/// Last version used. Update is not required.
		/// </summary>
		public static string Str1466 => GetString(Str1466Key);

		/// <summary>
		/// Cancel checking for updates
		/// </summary>
		public const string Str1467Key = nameof(Str1467);

		/// <summary>
		/// Cancel checking for updates
		/// </summary>
		public static string Str1467 => GetString(Str1467Key);

		/// <summary>
		/// Cancel update
		/// </summary>
		public const string Str1468Key = nameof(Str1468);

		/// <summary>
		/// Cancel update
		/// </summary>
		public static string Str1468 => GetString(Str1468Key);

		/// <summary>
		/// List of changes in version %version%
		/// </summary>
		public const string Str1469Key = nameof(Str1469);

		/// <summary>
		/// List of changes in version %version%
		/// </summary>
		public static string Str1469 => GetString(Str1469Key);

		/// <summary>
		/// Check for updates
		/// </summary>
		public const string Str1470Key = nameof(Str1470);

		/// <summary>
		/// Check for updates
		/// </summary>
		public static string Str1470 => GetString(Str1470Key);

		/// <summary>
		/// Checking for updates
		/// </summary>
		public const string Str1471Key = nameof(Str1471);

		/// <summary>
		/// Checking for updates
		/// </summary>
		public static string Str1471 => GetString(Str1471Key);

		/// <summary>
		/// Close
		/// </summary>
		public const string Str1472Key = nameof(Str1472);

		/// <summary>
		/// Close
		/// </summary>
		public static string Str1472 => GetString(Str1472Key);

		/// <summary>
		/// Updates loading
		/// </summary>
		public const string Str1473Key = nameof(Str1473);

		/// <summary>
		/// Updates loading
		/// </summary>
		public static string Str1473 => GetString(Str1473Key);

		/// <summary>
		/// Load update
		/// </summary>
		public const string Str1474Key = nameof(Str1474);

		/// <summary>
		/// Load update
		/// </summary>
		public static string Str1474 => GetString(Str1474Key);

		/// <summary>
		/// Unpacking archive
		/// </summary>
		public const string Str1475Key = nameof(Str1475);

		/// <summary>
		/// Unpacking archive
		/// </summary>
		public static string Str1475 => GetString(Str1475Key);

		/// <summary>
		/// Error checking for updates
		/// </summary>
		public const string Str1476Key = nameof(Str1476);

		/// <summary>
		/// Error checking for updates
		/// </summary>
		public static string Str1476 => GetString(Str1476Key);

		/// <summary>
		/// Error downloading updates
		/// </summary>
		public const string Str1477Key = nameof(Str1477);

		/// <summary>
		/// Error downloading updates
		/// </summary>
		public static string Str1477 => GetString(Str1477Key);

		/// <summary>
		/// Error unpacking updates
		/// </summary>
		public const string Str1478Key = nameof(Str1478);

		/// <summary>
		/// Error unpacking updates
		/// </summary>
		public static string Str1478 => GetString(Str1478Key);

		/// <summary>
		/// Hide
		/// </summary>
		public const string Str1479Key = nameof(Str1479);

		/// <summary>
		/// Hide
		/// </summary>
		public static string Str1479 => GetString(Str1479Key);

		/// <summary>
		/// Install updates with next start
		/// </summary>
		public const string Str1480Key = nameof(Str1480);

		/// <summary>
		/// Install updates with next start
		/// </summary>
		public static string Str1480 => GetString(Str1480Key);

		/// <summary>
		/// Install updates now
		/// </summary>
		public const string Str1481Key = nameof(Str1481);

		/// <summary>
		/// Install updates now
		/// </summary>
		public static string Str1481 => GetString(Str1481Key);

		/// <summary>
		/// Cancels updates check
		/// </summary>
		public const string Str1482Key = nameof(Str1482);

		/// <summary>
		/// Cancels updates check
		/// </summary>
		public static string Str1482 => GetString(Str1482Key);

		/// <summary>
		/// Cancel updates download
		/// </summary>
		public const string Str1483Key = nameof(Str1483);

		/// <summary>
		/// Cancel updates download
		/// </summary>
		public static string Str1483 => GetString(Str1483Key);

		/// <summary>
		/// Cancel updates unpacking
		/// </summary>
		public const string Str1484Key = nameof(Str1484);

		/// <summary>
		/// Cancel updates unpacking
		/// </summary>
		public static string Str1484 => GetString(Str1484Key);

		/// <summary>
		/// Update successful
		/// </summary>
		public const string Str1485Key = nameof(Str1485);

		/// <summary>
		/// Update successful
		/// </summary>
		public static string Str1485 => GetString(Str1485Key);

		/// <summary>
		/// Repeat later
		/// </summary>
		public const string Str1486Key = nameof(Str1486);

		/// <summary>
		/// Repeat later
		/// </summary>
		public static string Str1486 => GetString(Str1486Key);

		/// <summary>
		/// Repeat now
		/// </summary>
		public const string Str1487Key = nameof(Str1487);

		/// <summary>
		/// Repeat now
		/// </summary>
		public static string Str1487 => GetString(Str1487Key);

		/// <summary>
		/// New updates available
		/// </summary>
		public const string Str1488Key = nameof(Str1488);

		/// <summary>
		/// New updates available
		/// </summary>
		public static string Str1488 => GetString(Str1488Key);

		/// <summary>
		/// Error installing updates
		/// </summary>
		public const string Str1489Key = nameof(Str1489);

		/// <summary>
		/// Error installing updates
		/// </summary>
		public static string Str1489 => GetString(Str1489Key);

		/// <summary>
		/// Update now
		/// </summary>
		public const string Str1490Key = nameof(Str1490);

		/// <summary>
		/// Update now
		/// </summary>
		public static string Str1490 => GetString(Str1490Key);

		/// <summary>
		/// View list of changes
		/// </summary>
		public const string Str1491Key = nameof(Str1491);

		/// <summary>
		/// View list of changes
		/// </summary>
		public static string Str1491 => GetString(Str1491Key);

		/// <summary>
		/// View list of errors
		/// </summary>
		public const string Str1492Key = nameof(Str1492);

		/// <summary>
		/// View list of errors
		/// </summary>
		public static string Str1492 => GetString(Str1492Key);

		/// <summary>
		/// Next tab
		/// </summary>
		public const string Str1493Key = nameof(Str1493);

		/// <summary>
		/// Next tab
		/// </summary>
		public static string Str1493 => GetString(Str1493Key);

		/// <summary>
		/// Previous tab
		/// </summary>
		public const string Str1494Key = nameof(Str1494);

		/// <summary>
		/// Previous tab
		/// </summary>
		public static string Str1494 => GetString(Str1494Key);

		/// <summary>
		/// Open main tab
		/// </summary>
		public const string Str1495Key = nameof(Str1495);

		/// <summary>
		/// Open main tab
		/// </summary>
		public static string Str1495 => GetString(Str1495Key);

		/// <summary>
		/// Close main tab
		/// </summary>
		public const string Str1496Key = nameof(Str1496);

		/// <summary>
		/// Close main tab
		/// </summary>
		public static string Str1496 => GetString(Str1496Key);

		/// <summary>
		/// Attach
		/// </summary>
		public const string Str1497Key = nameof(Str1497);

		/// <summary>
		/// Attach
		/// </summary>
		public static string Str1497 => GetString(Str1497Key);

		/// <summary>
		/// Attach as tab
		/// </summary>
		public const string Str1498Key = nameof(Str1498);

		/// <summary>
		/// Attach as tab
		/// </summary>
		public static string Str1498 => GetString(Str1498Key);

		/// <summary>
		/// Disconnect
		/// </summary>
		public const string Str1499Key = nameof(Str1499);

		/// <summary>
		/// Disconnect
		/// </summary>
		public static string Str1499 => GetString(Str1499Key);

		/// <summary>
		/// Turn around
		/// </summary>
		public const string Str1500Key = nameof(Str1500);

		/// <summary>
		/// Turn around
		/// </summary>
		public static string Str1500 => GetString(Str1500Key);

		/// <summary>
		/// Collapse
		/// </summary>
		public const string Str1501Key = nameof(Str1501);

		/// <summary>
		/// Collapse
		/// </summary>
		public static string Str1501 => GetString(Str1501Key);

		/// <summary>
		/// New group of horizontal tabs
		/// </summary>
		public const string Str1502Key = nameof(Str1502);

		/// <summary>
		/// New group of horizontal tabs
		/// </summary>
		public static string Str1502 => GetString(Str1502Key);

		/// <summary>
		/// New group of vertical tabs
		/// </summary>
		public const string Str1503Key = nameof(Str1503);

		/// <summary>
		/// New group of vertical tabs
		/// </summary>
		public static string Str1503 => GetString(Str1503Key);

		/// <summary>
		/// To next group
		/// </summary>
		public const string Str1504Key = nameof(Str1504);

		/// <summary>
		/// To next group
		/// </summary>
		public static string Str1504 => GetString(Str1504Key);

		/// <summary>
		/// To previous group
		/// </summary>
		public const string Str1505Key = nameof(Str1505);

		/// <summary>
		/// To previous group
		/// </summary>
		public static string Str1505 => GetString(Str1505Key);

		/// <summary>
		/// Open tabs
		/// </summary>
		public const string Str1506Key = nameof(Str1506);

		/// <summary>
		/// Open tabs
		/// </summary>
		public static string Str1506 => GetString(Str1506Key);

		/// <summary>
		/// Properties
		/// </summary>
		public const string Str1507Key = nameof(Str1507);

		/// <summary>
		/// Properties
		/// </summary>
		public static string Str1507 => GetString(Str1507Key);

		/// <summary>
		/// Window opening
		/// </summary>
		public const string Str1508Key = nameof(Str1508);

		/// <summary>
		/// Window opening
		/// </summary>
		public static string Str1508 => GetString(Str1508Key);

		/// <summary>
		/// Open
		/// </summary>
		public const string Str1509Key = nameof(Str1509);

		/// <summary>
		/// Open
		/// </summary>
		public static string Str1509 => GetString(Str1509Key);

		/// <summary>
		/// Resume
		/// </summary>
		public const string Str1510Key = nameof(Str1510);

		/// <summary>
		/// Resume
		/// </summary>
		public static string Str1510 => GetString(Str1510Key);

		/// <summary>
		/// Hide automatically
		/// </summary>
		public const string Str1511Key = nameof(Str1511);

		/// <summary>
		/// Hide automatically
		/// </summary>
		public static string Str1511 => GetString(Str1511Key);

		/// <summary>
		/// Configure buttons
		/// </summary>
		public const string Str1512Key = nameof(Str1512);

		/// <summary>
		/// Configure buttons
		/// </summary>
		public static string Str1512 => GetString(Str1512Key);

		/// <summary>
		/// Add or remove buttons
		/// </summary>
		public const string Str1513Key = nameof(Str1513);

		/// <summary>
		/// Add or remove buttons
		/// </summary>
		public static string Str1513 => GetString(Str1513Key);

		/// <summary>
		/// Show fewer buttons
		/// </summary>
		public const string Str1514Key = nameof(Str1514);

		/// <summary>
		/// Show fewer buttons
		/// </summary>
		public static string Str1514 => GetString(Str1514Key);

		/// <summary>
		/// Show more buttons
		/// </summary>
		public const string Str1515Key = nameof(Str1515);

		/// <summary>
		/// Show more buttons
		/// </summary>
		public static string Str1515 => GetString(Str1515Key);

		/// <summary>
		/// Displayed buttons
		/// </summary>
		public const string Str1516Key = nameof(Str1516);

		/// <summary>
		/// Displayed buttons
		/// </summary>
		public static string Str1516 => GetString(Str1516Key);

		/// <summary>
		/// Move lower
		/// </summary>
		public const string Str1517Key = nameof(Str1517);

		/// <summary>
		/// Move lower
		/// </summary>
		public static string Str1517 => GetString(Str1517Key);

		/// <summary>
		/// Move higher
		/// </summary>
		public const string Str1518Key = nameof(Str1518);

		/// <summary>
		/// Move higher
		/// </summary>
		public static string Str1518 => GetString(Str1518Key);

		/// <summary>
		/// Save
		/// </summary>
		public const string Str1519Key = nameof(Str1519);

		/// <summary>
		/// Save
		/// </summary>
		public static string Str1519 => GetString(Str1519Key);

		/// <summary>
		/// Reset settings
		/// </summary>
		public const string Str1520Key = nameof(Str1520);

		/// <summary>
		/// Reset settings
		/// </summary>
		public static string Str1520 => GetString(Str1520Key);

		/// <summary>
		/// &lt; Choose &gt;
		/// </summary>
		public const string Str1521Key = nameof(Str1521);

		/// <summary>
		/// &lt; Choose &gt;
		/// </summary>
		public static string Str1521 => GetString(Str1521Key);

		/// <summary>
		/// Error in index '{0}' format.
		/// </summary>
		public const string Str1523ParamsKey = nameof(Str1523Params);

		/// <summary>
		/// Error in index '{0}' format.
		/// </summary>
		public static string Str1523Params => GetString(Str1523ParamsKey);

		/// <summary>
		/// Options have different underlying assets.
		/// </summary>
		public const string Str1524Key = nameof(Str1524);

		/// <summary>
		/// Options have different underlying assets.
		/// </summary>
		public static string Str1524 => GetString(Str1524Key);

		/// <summary>
		/// Pair options
		/// </summary>
		public const string Str1525Key = nameof(Str1525);

		/// <summary>
		/// Pair options
		/// </summary>
		public static string Str1525 => GetString(Str1525Key);

		/// <summary>
		/// Information about the option.
		/// </summary>
		public const string Str1526Key = nameof(Str1526);

		/// <summary>
		/// Information about the option.
		/// </summary>
		public static string Str1526 => GetString(Str1526Key);

		/// <summary>
		/// Profitability of an option contract
		/// </summary>
		public const string Str1527Key = nameof(Str1527);

		/// <summary>
		/// Profitability of an option contract
		/// </summary>
		public static string Str1527 => GetString(Str1527Key);

		/// <summary>
		/// Profitability of an option contract.
		/// </summary>
		public const string Str1528Key = nameof(Str1528);

		/// <summary>
		/// Profitability of an option contract.
		/// </summary>
		public static string Str1528 => GetString(Str1528Key);

		/// <summary>
		/// Options
		/// </summary>
		public const string OptionsKey = nameof(Options);

		/// <summary>
		/// Options
		/// </summary>
		public static string Options => GetString(OptionsKey);

		/// <summary>
		/// AND Call and Put not found.
		/// </summary>
		public const string Str1530Key = nameof(Str1530);

		/// <summary>
		/// AND Call and Put not found.
		/// </summary>
		public static string Str1530 => GetString(Str1530Key);

		/// <summary>
		/// Option volatility (implied).
		/// </summary>
		public const string Str1531Key = nameof(Str1531);

		/// <summary>
		/// Option volatility (implied).
		/// </summary>
		public static string Str1531 => GetString(Str1531Key);

		/// <summary>
		/// Option volatility (historical).
		/// </summary>
		public const string Str1532Key = nameof(Str1532);

		/// <summary>
		/// Option volatility (historical).
		/// </summary>
		public static string Str1532 => GetString(Str1532Key);

		/// <summary>
		/// Information about the underlying asset.
		/// </summary>
		public const string Str1533Key = nameof(Str1533);

		/// <summary>
		/// Information about the underlying asset.
		/// </summary>
		public static string Str1533 => GetString(Str1533Key);

		/// <summary>
		/// Call option parameters.
		/// </summary>
		public const string Str1534Key = nameof(Str1534);

		/// <summary>
		/// Call option parameters.
		/// </summary>
		public static string Str1534 => GetString(Str1534Key);

		/// <summary>
		/// Put option parameters.
		/// </summary>
		public const string Str1535Key = nameof(Str1535);

		/// <summary>
		/// Put option parameters.
		/// </summary>
		public static string Str1535 => GetString(Str1535Key);

		/// <summary>
		/// EXPIRED
		/// </summary>
		public const string Str1536Key = nameof(Str1536);

		/// <summary>
		/// EXPIRED
		/// </summary>
		public static string Str1536 => GetString(Str1536Key);

		/// <summary>
		/// days
		/// </summary>
		public const string Str1537Key = nameof(Str1537);

		/// <summary>
		/// days
		/// </summary>
		public static string Str1537 => GetString(Str1537Key);

		/// <summary>
		/// Error processing request to refresh the table.
		/// </summary>
		public const string Str1538Key = nameof(Str1538);

		/// <summary>
		/// Error processing request to refresh the table.
		/// </summary>
		public static string Str1538 => GetString(Str1538Key);

		/// <summary>
		/// GTC
		/// </summary>
		public const string GTCKey = nameof(GTC);

		/// <summary>
		/// GTC
		/// </summary>
		public static string GTC => GetString(GTCKey);

		/// <summary>
		/// Good til cancelled
		/// </summary>
		public const string GoodTilCancelledKey = nameof(GoodTilCancelled);

		/// <summary>
		/// Good til cancelled
		/// </summary>
		public static string GoodTilCancelled => GetString(GoodTilCancelledKey);

		/// <summary>
		/// GTD
		/// </summary>
		public const string GTDKey = nameof(GTD);

		/// <summary>
		/// GTD
		/// </summary>
		public static string GTD => GetString(GTDKey);

		/// <summary>
		/// Good til date
		/// </summary>
		public const string GoodTilDateKey = nameof(GoodTilDate);

		/// <summary>
		/// Good til date
		/// </summary>
		public static string GoodTilDate => GetString(GoodTilDateKey);

		/// <summary>
		/// Session
		/// </summary>
		public const string SessionKey = nameof(Session);

		/// <summary>
		/// Session
		/// </summary>
		public static string Session => GetString(SessionKey);

		/// <summary>
		/// Unsupported action time.
		/// </summary>
		public const string Str1541Key = nameof(Str1541);

		/// <summary>
		/// Unsupported action time.
		/// </summary>
		public static string Str1541 => GetString(Str1541Key);

		/// <summary>
		/// For portfolio {0} adapter is already specified.
		/// </summary>
		public const string Str1542ParamsKey = nameof(Str1542Params);

		/// <summary>
		/// For portfolio {0} adapter is already specified.
		/// </summary>
		public static string Str1542Params => GetString(Str1542ParamsKey);

		/// <summary>
		/// Money
		/// </summary>
		public const string Str1543Key = nameof(Str1543);

		/// <summary>
		/// Money
		/// </summary>
		public static string Str1543 => GetString(Str1543Key);

		/// <summary>
		/// Selected:
		/// </summary>
		public const string Str1544Key = nameof(Str1544);

		/// <summary>
		/// Selected:
		/// </summary>
		public static string Str1544 => GetString(Str1544Key);

		/// <summary>
		/// Editing {0}
		/// </summary>
		public const string Str1545ParamsKey = nameof(Str1545Params);

		/// <summary>
		/// Editing {0}
		/// </summary>
		public static string Str1545Params => GetString(Str1545ParamsKey);

		/// <summary>
		/// Security {0} is missing in the collection.
		/// </summary>
		public const string Str1548ParamsKey = nameof(Str1548Params);

		/// <summary>
		/// Security {0} is missing in the collection.
		/// </summary>
		public static string Str1548Params => GetString(Str1548ParamsKey);

		/// <summary>
		/// {0} is an invalid identifier. Symbols '{1}' are not allowed.
		/// </summary>
		public const string Str1549ParamsKey = nameof(Str1549Params);

		/// <summary>
		/// {0} is an invalid identifier. Symbols '{1}' are not allowed.
		/// </summary>
		public static string Str1549Params => GetString(Str1549ParamsKey);

		/// <summary>
		/// Symbol @ is met several times.
		/// </summary>
		public const string Str1550Key = nameof(Str1550);

		/// <summary>
		/// Symbol @ is met several times.
		/// </summary>
		public static string Str1550 => GetString(Str1550Key);

		/// <summary>
		/// Description of connection {0} not found.
		/// </summary>
		public const string Str1553ParamsKey = nameof(Str1553Params);

		/// <summary>
		/// Description of connection {0} not found.
		/// </summary>
		public static string Str1553Params => GetString(Str1553ParamsKey);

		/// <summary>
		/// Working connection cannot be deleted.
		/// </summary>
		public const string Str1554Key = nameof(Str1554);

		/// <summary>
		/// Working connection cannot be deleted.
		/// </summary>
		public static string Str1554 => GetString(Str1554Key);

		/// <summary>
		/// Working connection cannot be edited.
		/// </summary>
		public const string Str1555Key = nameof(Str1555);

		/// <summary>
		/// Working connection cannot be edited.
		/// </summary>
		public static string Str1555 => GetString(Str1555Key);

		/// <summary>
		/// Connection status cannot be changed in the connected state. You must disconnect first.
		/// </summary>
		public const string Str1556Key = nameof(Str1556);

		/// <summary>
		/// Connection status cannot be changed in the connected state. You must disconnect first.
		/// </summary>
		public static string Str1556 => GetString(Str1556Key);

		/// <summary>
		/// Disconnect
		/// </summary>
		public const string Str1557Key = nameof(Str1557);

		/// <summary>
		/// Disconnect
		/// </summary>
		public static string Str1557 => GetString(Str1557Key);

		/// <summary>
		/// Activate connection
		/// </summary>
		public const string Str1558Key = nameof(Str1558);

		/// <summary>
		/// Activate connection
		/// </summary>
		public static string Str1558 => GetString(Str1558Key);

		/// <summary>
		/// Common
		/// </summary>
		public const string CommonKey = nameof(Common);

		/// <summary>
		/// Common
		/// </summary>
		public static string Common => GetString(CommonKey);

		/// <summary>
		/// Connection successfully checked.
		/// </summary>
		public const string Str1560Key = nameof(Str1560);

		/// <summary>
		/// Connection successfully checked.
		/// </summary>
		public static string Str1560 => GetString(Str1560Key);

		/// <summary>
		/// Cannot connect.
		/// </summary>
		public const string Str1561Key = nameof(Str1561);

		/// <summary>
		/// Cannot connect.
		/// </summary>
		public static string Str1561 => GetString(Str1561Key);

		/// <summary>
		/// Cannot create a connection, because some data was not entered.
		/// </summary>
		public const string Str1562Key = nameof(Str1562);

		/// <summary>
		/// Cannot create a connection, because some data was not entered.
		/// </summary>
		public static string Str1562 => GetString(Str1562Key);

		/// <summary>
		/// At least one type of connection must be selected.
		/// </summary>
		public const string Str1563Key = nameof(Str1563);

		/// <summary>
		/// At least one type of connection must be selected.
		/// </summary>
		public static string Str1563 => GetString(Str1563Key);

		/// <summary>
		/// Failed to get Dispatcher instance to show window.
		/// </summary>
		public const string Str1564Key = nameof(Str1564);

		/// <summary>
		/// Failed to get Dispatcher instance to show window.
		/// </summary>
		public static string Str1564 => GetString(Str1564Key);

		/// <summary>
		/// Log (monitor)
		/// </summary>
		public const string Str1565Key = nameof(Str1565);

		/// <summary>
		/// Log (monitor)
		/// </summary>
		public static string Str1565 => GetString(Str1565Key);

		/// <summary>
		/// Order registration
		/// </summary>
		public const string Str1566Key = nameof(Str1566);

		/// <summary>
		/// Order registration
		/// </summary>
		public static string Str1566 => GetString(Str1566Key);

		/// <summary>
		/// Price NULL Volume NULL
		/// </summary>
		public const string Str1567Key = nameof(Str1567);

		/// <summary>
		/// Price NULL Volume NULL
		/// </summary>
		public static string Str1567 => GetString(Str1567Key);

		/// <summary>
		/// Price {0} Volume {1}
		/// </summary>
		public const string Str1568ParamsKey = nameof(Str1568Params);

		/// <summary>
		/// Price {0} Volume {1}
		/// </summary>
		public static string Str1568Params => GetString(Str1568ParamsKey);

		/// <summary>
		/// All
		/// </summary>
		public const string Str1569Key = nameof(Str1569);

		/// <summary>
		/// All
		/// </summary>
		public static string Str1569 => GetString(Str1569Key);

		/// <summary>
		/// Progress
		/// </summary>
		public const string Str1570Key = nameof(Str1570);

		/// <summary>
		/// Progress
		/// </summary>
		public static string Str1570 => GetString(Str1570Key);

		/// <summary>
		/// File loading...
		/// </summary>
		public const string Str1574Key = nameof(Str1574);

		/// <summary>
		/// File loading...
		/// </summary>
		public static string Str1574 => GetString(Str1574Key);

		/// <summary>
		/// Specified file not found.
		/// </summary>
		public const string Str1575Key = nameof(Str1575);

		/// <summary>
		/// Specified file not found.
		/// </summary>
		public static string Str1575 => GetString(Str1575Key);

		/// <summary>
		/// Type of configuration {0}.
		/// </summary>
		public const string Str1576ParamsKey = nameof(Str1576Params);

		/// <summary>
		/// Type of configuration {0}.
		/// </summary>
		public static string Str1576Params => GetString(Str1576ParamsKey);

		/// <summary>
		/// Debug version found.
		/// </summary>
		public const string Str1577Key = nameof(Str1577);

		/// <summary>
		/// Debug version found.
		/// </summary>
		public static string Str1577 => GetString(Str1577Key);

		/// <summary>
		/// Version {0} found.
		/// </summary>
		public const string Str1578ParamsKey = nameof(Str1578Params);

		/// <summary>
		/// Version {0} found.
		/// </summary>
		public static string Str1578Params => GetString(Str1578ParamsKey);

		/// <summary>
		/// Reference files copied.
		/// </summary>
		public const string Str1579Key = nameof(Str1579);

		/// <summary>
		/// Reference files copied.
		/// </summary>
		public static string Str1579 => GetString(Str1579Key);

		/// <summary>
		/// File {0} copied.
		/// </summary>
		public const string Str1580ParamsKey = nameof(Str1580Params);

		/// <summary>
		/// File {0} copied.
		/// </summary>
		public static string Str1580Params => GetString(Str1580ParamsKey);

		/// <summary>
		/// S# files copied.
		/// </summary>
		public const string Str1581Key = nameof(Str1581);

		/// <summary>
		/// S# files copied.
		/// </summary>
		public static string Str1581 => GetString(Str1581Key);

		/// <summary>
		/// S# files obfuscated.
		/// </summary>
		public const string Str1582Key = nameof(Str1582);

		/// <summary>
		/// S# files obfuscated.
		/// </summary>
		public static string Str1582 => GetString(Str1582Key);

		/// <summary>
		/// Wnd files copied.
		/// </summary>
		public const string Str1583Key = nameof(Str1583);

		/// <summary>
		/// Wnd files copied.
		/// </summary>
		public static string Str1583 => GetString(Str1583Key);

		/// <summary>
		/// MatLab files copied.
		/// </summary>
		public const string Str1584Key = nameof(Str1584);

		/// <summary>
		/// MatLab files copied.
		/// </summary>
		public static string Str1584 => GetString(Str1584Key);

		/// <summary>
		/// Archive {0} collected.
		/// </summary>
		public const string Str1585ParamsKey = nameof(Str1585Params);

		/// <summary>
		/// Archive {0} collected.
		/// </summary>
		public static string Str1585Params => GetString(Str1585ParamsKey);

		/// <summary>
		/// Examples compiled.
		/// </summary>
		public const string Str1586Key = nameof(Str1586);

		/// <summary>
		/// Examples compiled.
		/// </summary>
		public static string Str1586 => GetString(Str1586Key);

		/// <summary>
		/// All archives copied.
		/// </summary>
		public const string Str1587Key = nameof(Str1587);

		/// <summary>
		/// All archives copied.
		/// </summary>
		public static string Str1587 => GetString(Str1587Key);

		/// <summary>
		/// Required files copied.
		/// </summary>
		public const string Str1588Key = nameof(Str1588);

		/// <summary>
		/// Required files copied.
		/// </summary>
		public static string Str1588 => GetString(Str1588Key);

		/// <summary>
		/// Directory {0} already exists.
		/// </summary>
		public const string Str1589ParamsKey = nameof(Str1589Params);

		/// <summary>
		/// Directory {0} already exists.
		/// </summary>
		public static string Str1589Params => GetString(Str1589ParamsKey);

		/// <summary>
		/// Directory {0} is cleared.
		/// </summary>
		public const string Str1590ParamsKey = nameof(Str1590Params);

		/// <summary>
		/// Directory {0} is cleared.
		/// </summary>
		public static string Str1590Params => GetString(Str1590ParamsKey);

		/// <summary>
		/// New directory {0} created.
		/// </summary>
		public const string Str1591ParamsKey = nameof(Str1591Params);

		/// <summary>
		/// New directory {0} created.
		/// </summary>
		public static string Str1591Params => GetString(Str1591ParamsKey);

		/// <summary>
		/// Example {0} copied.
		/// </summary>
		public const string Str1592ParamsKey = nameof(Str1592Params);

		/// <summary>
		/// Example {0} copied.
		/// </summary>
		public static string Str1592Params => GetString(Str1592ParamsKey);

		/// <summary>
		/// {0} copied.
		/// </summary>
		public const string Str1593ParamsKey = nameof(Str1593Params);

		/// <summary>
		/// {0} copied.
		/// </summary>
		public static string Str1593Params => GetString(Str1593ParamsKey);

		/// <summary>
		/// Unknown session state.
		/// </summary>
		public const string Str1594Key = nameof(Str1594);

		/// <summary>
		/// Unknown session state.
		/// </summary>
		public static string Str1594 => GetString(Str1594Key);

		/// <summary>
		/// Unknown order direction.
		/// </summary>
		public const string Str1595Key = nameof(Str1595);

		/// <summary>
		/// Unknown order direction.
		/// </summary>
		public static string Str1595 => GetString(Str1595Key);

		/// <summary>
		/// Wrong state {0} of order {1}.
		/// </summary>
		public const string Str1596ParamsKey = nameof(Str1596Params);

		/// <summary>
		/// Wrong state {0} of order {1}.
		/// </summary>
		public static string Str1596Params => GetString(Str1596ParamsKey);

		/// <summary>
		/// Unknown order {0} state.
		/// </summary>
		public const string Str1597ParamsKey = nameof(Str1597Params);

		/// <summary>
		/// Unknown order {0} state.
		/// </summary>
		public static string Str1597Params => GetString(Str1597ParamsKey);

		/// <summary>
		/// Unknown order status.
		/// </summary>
		public const string Str1598Key = nameof(Str1598);

		/// <summary>
		/// Unknown order status.
		/// </summary>
		public static string Str1598 => GetString(Str1598Key);

		/// <summary>
		/// Unknown order duration time.
		/// </summary>
		public const string Str1599Key = nameof(Str1599);

		/// <summary>
		/// Unknown order duration time.
		/// </summary>
		public static string Str1599 => GetString(Str1599Key);

		/// <summary>
		/// Unknown type of order.
		/// </summary>
		public const string Str1600Key = nameof(Str1600);

		/// <summary>
		/// Unknown type of order.
		/// </summary>
		public static string Str1600 => GetString(Str1600Key);

		/// <summary>
		/// Unsupported type {0} of order {1}.
		/// </summary>
		public const string Str1601ParamsKey = nameof(Str1601Params);

		/// <summary>
		/// Unsupported type {0} of order {1}.
		/// </summary>
		public static string Str1601Params => GetString(Str1601ParamsKey);

		/// <summary>
		/// Unknown type {0} of order {1}.
		/// </summary>
		public const string Str1602ParamsKey = nameof(Str1602Params);

		/// <summary>
		/// Unknown type {0} of order {1}.
		/// </summary>
		public static string Str1602Params => GetString(Str1602ParamsKey);

		/// <summary>
		/// Unknown type of security.
		/// </summary>
		public const string Str1603Key = nameof(Str1603);

		/// <summary>
		/// Unknown type of security.
		/// </summary>
		public static string Str1603 => GetString(Str1603Key);

		/// <summary>
		/// Code {0} does not contain information about option.
		/// </summary>
		public const string Str1604ParamsKey = nameof(Str1604Params);

		/// <summary>
		/// Code {0} does not contain information about option.
		/// </summary>
		public static string Str1604Params => GetString(Str1604ParamsKey);

		/// <summary>
		/// Code {0} does not contain information about option type.
		/// </summary>
		public const string Str1605ParamsKey = nameof(Str1605Params);

		/// <summary>
		/// Code {0} does not contain information about option type.
		/// </summary>
		public static string Str1605Params => GetString(Str1605ParamsKey);

		/// <summary>
		/// Unknown type of option {0}.
		/// </summary>
		public const string Str1606ParamsKey = nameof(Str1606Params);

		/// <summary>
		/// Unknown type of option {0}.
		/// </summary>
		public static string Str1606Params => GetString(Str1606ParamsKey);

		/// <summary>
		/// Unknown market-data field.
		/// </summary>
		public const string Str1608Key = nameof(Str1608);

		/// <summary>
		/// Unknown market-data field.
		/// </summary>
		public static string Str1608 => GetString(Str1608Key);

		/// <summary>
		/// Unknown FIX version.
		/// </summary>
		public const string Str1609Key = nameof(Str1609);

		/// <summary>
		/// Unknown FIX version.
		/// </summary>
		public static string Str1609 => GetString(Str1609Key);

		/// <summary>
		/// Session board is not specified.
		/// </summary>
		public const string Str1610Key = nameof(Str1610);

		/// <summary>
		/// Session board is not specified.
		/// </summary>
		public static string Str1610 => GetString(Str1610Key);

		/// <summary>
		/// Connection dropped.
		/// </summary>
		public const string Str1611Key = nameof(Str1611);

		/// <summary>
		/// Connection dropped.
		/// </summary>
		public static string Str1611 => GetString(Str1611Key);

		/// <summary>
		/// Message {0} is too long.
		/// </summary>
		public const string Str1612ParamsKey = nameof(Str1612Params);

		/// <summary>
		/// Message {0} is too long.
		/// </summary>
		public static string Str1612Params => GetString(Str1612ParamsKey);

		/// <summary>
		/// Binary
		/// </summary>
		public const string Str1613Key = nameof(Str1613);

		/// <summary>
		/// Binary
		/// </summary>
		public static string Str1613 => GetString(Str1613Key);

		/// <summary>
		/// Quotations {0} request for {1} was not correctly handled by the FIX server. Error code {2}.
		/// </summary>
		public const string Str1614ParamsKey = nameof(Str1614Params);

		/// <summary>
		/// Quotations {0} request for {1} was not correctly handled by the FIX server. Error code {2}.
		/// </summary>
		public static string Str1614Params => GetString(Str1614ParamsKey);

		/// <summary>
		/// Security for market-data with request ID {0} not found.
		/// </summary>
		public const string Str1615ParamsKey = nameof(Str1615Params);

		/// <summary>
		/// Security for market-data with request ID {0} not found.
		/// </summary>
		public static string Str1615Params => GetString(Str1615ParamsKey);

		/// <summary>
		/// Error receiving market-date. Code '{0}', text '{1}'.
		/// </summary>
		public const string Str1616ParamsKey = nameof(Str1616Params);

		/// <summary>
		/// Error receiving market-date. Code '{0}', text '{1}'.
		/// </summary>
		public static string Str1616Params => GetString(Str1616ParamsKey);

		/// <summary>
		/// Connector does not support text news receiving.
		/// </summary>
		public const string Str1617Key = nameof(Str1617);

		/// <summary>
		/// Connector does not support text news receiving.
		/// </summary>
		public static string Str1617 => GetString(Str1617Key);

		/// <summary>
		/// Unsupported type of market-data.
		/// </summary>
		public const string Str1618Key = nameof(Str1618);

		/// <summary>
		/// Unsupported type of market-data.
		/// </summary>
		public static string Str1618 => GetString(Str1618Key);

		/// <summary>
		/// Connection was not disconnected from previous time.
		/// </summary>
		public const string Str1619Key = nameof(Str1619);

		/// <summary>
		/// Connection was not disconnected from previous time.
		/// </summary>
		public static string Str1619 => GetString(Str1619Key);

		/// <summary>
		/// Counter value is unacceptable.
		/// </summary>
		public const string Str1620Key = nameof(Str1620);

		/// <summary>
		/// Counter value is unacceptable.
		/// </summary>
		public static string Str1620 => GetString(Str1620Key);

		/// <summary>
		/// Session '{0}'. Received: '{1}'
		/// </summary>
		public const string Str1621ParamsKey = nameof(Str1621Params);

		/// <summary>
		/// Session '{0}'. Received: '{1}'
		/// </summary>
		public static string Str1621Params => GetString(Str1621ParamsKey);

		/// <summary>
		/// Message {0} is unacceptable.
		/// </summary>
		public const string Str1622ParamsKey = nameof(Str1622Params);

		/// <summary>
		/// Message {0} is unacceptable.
		/// </summary>
		public static string Str1622Params => GetString(Str1622ParamsKey);

		/// <summary>
		/// Error receiving state of session {0}. Reason '{1}'.
		/// </summary>
		public const string Str1624ParamsKey = nameof(Str1624Params);

		/// <summary>
		/// Error receiving state of session {0}. Reason '{1}'.
		/// </summary>
		public static string Str1624Params => GetString(Str1624ParamsKey);

		/// <summary>
		/// unknown session
		/// </summary>
		public const string Str1625Key = nameof(Str1625);

		/// <summary>
		/// unknown session
		/// </summary>
		public static string Str1625 => GetString(Str1625Key);

		/// <summary>
		/// unknown
		/// </summary>
		public const string Str1626Key = nameof(Str1626);

		/// <summary>
		/// unknown
		/// </summary>
		public static string Str1626 => GetString(Str1626Key);

		/// <summary>
		/// Message {0} of type {1} was not correctly processed by FIX server. Reason ({2}) {3} (field {4}).
		/// </summary>
		public const string Str1627ParamsKey = nameof(Str1627Params);

		/// <summary>
		/// Message {0} of type {1} was not correctly processed by FIX server. Reason ({2}) {3} (field {4}).
		/// </summary>
		public static string Str1627Params => GetString(Str1627ParamsKey);

		/// <summary>
		/// Unknown password change error.
		/// </summary>
		public const string Str1628Key = nameof(Str1628);

		/// <summary>
		/// Unknown password change error.
		/// </summary>
		public static string Str1628 => GetString(Str1628Key);

		/// <summary>
		/// Regular
		/// </summary>
		public const string Str1629Key = nameof(Str1629);

		/// <summary>
		/// Regular
		/// </summary>
		public static string Str1629 => GetString(Str1629Key);

		/// <summary>
		/// Admin
		/// </summary>
		public const string Str1630Key = nameof(Str1630);

		/// <summary>
		/// Admin
		/// </summary>
		public static string Str1630 => GetString(Str1630Key);

		/// <summary>
		/// Server port is out of range.
		/// </summary>
		public const string Str1631Key = nameof(Str1631);

		/// <summary>
		/// Server port is out of range.
		/// </summary>
		public static string Str1631 => GetString(Str1631Key);

		/// <summary>
		/// Server was not stopped from previous time.
		/// </summary>
		public const string Str1632Key = nameof(Str1632);

		/// <summary>
		/// Server was not stopped from previous time.
		/// </summary>
		public static string Str1632 => GetString(Str1632Key);

		/// <summary>
		/// For message with transaction ID {0} the server transaction ID was not found.
		/// </summary>
		public const string Str1633ParamsKey = nameof(Str1633Params);

		/// <summary>
		/// For message with transaction ID {0} the server transaction ID was not found.
		/// </summary>
		public static string Str1633Params => GetString(Str1633ParamsKey);

		/// <summary>
		/// Stock exchange identifier and transaction ID are not specified.
		/// </summary>
		public const string Str1634Key = nameof(Str1634);

		/// <summary>
		/// Stock exchange identifier and transaction ID are not specified.
		/// </summary>
		public static string Str1634 => GetString(Str1634Key);

		/// <summary>
		/// Unknown type {0} market-data.
		/// </summary>
		public const string Str1635ParamsKey = nameof(Str1635Params);

		/// <summary>
		/// Unknown type {0} market-data.
		/// </summary>
		public static string Str1635Params => GetString(Str1635ParamsKey);

		/// <summary>
		/// Cannot process the request.
		/// </summary>
		public const string Str1636Key = nameof(Str1636);

		/// <summary>
		/// Cannot process the request.
		/// </summary>
		public static string Str1636 => GetString(Str1636Key);

		/// <summary>
		/// User {0} not found.
		/// </summary>
		public const string Str1637ParamsKey = nameof(Str1637Params);

		/// <summary>
		/// User {0} not found.
		/// </summary>
		public static string Str1637Params => GetString(Str1637ParamsKey);

		/// <summary>
		/// Password change is impossible.
		/// </summary>
		public const string Str1638Key = nameof(Str1638);

		/// <summary>
		/// Password change is impossible.
		/// </summary>
		public static string Str1638 => GetString(Str1638Key);

		/// <summary>
		/// User logged out.
		/// </summary>
		public const string Str1639Key = nameof(Str1639);

		/// <summary>
		/// User logged out.
		/// </summary>
		public static string Str1639 => GetString(Str1639Key);

		/// <summary>
		/// Unsupported action {0}.
		/// </summary>
		public const string Str1640ParamsKey = nameof(Str1640Params);

		/// <summary>
		/// Unsupported action {0}.
		/// </summary>
		public static string Str1640Params => GetString(Str1640ParamsKey);

		/// <summary>
		/// Unknown type of message {0} from client {1}.
		/// </summary>
		public const string Str1641ParamsKey = nameof(Str1641Params);

		/// <summary>
		/// Unknown type of message {0} from client {1}.
		/// </summary>
		public static string Str1641Params => GetString(Str1641ParamsKey);

		/// <summary>
		/// User {0} logged out earlier.
		/// </summary>
		public const string Str1642ParamsKey = nameof(Str1642Params);

		/// <summary>
		/// User {0} logged out earlier.
		/// </summary>
		public static string Str1642Params => GetString(Str1642ParamsKey);

		/// <summary>
		/// Disabling {0} session {1}.
		/// </summary>
		public const string Str1643ParamsKey = nameof(Str1643Params);

		/// <summary>
		/// Disabling {0} session {1}.
		/// </summary>
		public static string Str1643Params => GetString(Str1643ParamsKey);

		/// <summary>
		/// Client {0} ({1}) authorized.
		/// </summary>
		public const string Str1644ParamsKey = nameof(Str1644Params);

		/// <summary>
		/// Client {0} ({1}) authorized.
		/// </summary>
		public static string Str1644Params => GetString(Str1644ParamsKey);

		/// <summary>
		/// Maximum number of allowed connections is {0}.
		/// </summary>
		public const string Str1645ParamsKey = nameof(Str1645Params);

		/// <summary>
		/// Maximum number of allowed connections is {0}.
		/// </summary>
		public static string Str1645Params => GetString(Str1645ParamsKey);

		/// <summary>
		/// Sending Logon to client.
		/// </summary>
		public const string Str1646Key = nameof(Str1646);

		/// <summary>
		/// Sending Logon to client.
		/// </summary>
		public static string Str1646 => GetString(Str1646Key);

		/// <summary>
		/// Session started.
		/// </summary>
		public const string Str1647Key = nameof(Str1647);

		/// <summary>
		/// Session started.
		/// </summary>
		public static string Str1647 => GetString(Str1647Key);

		/// <summary>
		/// Client {0} ({1}) not authorized.
		/// </summary>
		public const string Str1648ParamsKey = nameof(Str1648Params);

		/// <summary>
		/// Client {0} ({1}) not authorized.
		/// </summary>
		public static string Str1648Params => GetString(Str1648ParamsKey);

		/// <summary>
		/// Client {0} (errors {1}/{2}). Error '{3}'.
		/// </summary>
		public const string Str1649ParamsKey = nameof(Str1649Params);

		/// <summary>
		/// Client {0} (errors {1}/{2}). Error '{3}'.
		/// </summary>
		public static string Str1649Params => GetString(Str1649ParamsKey);

		/// <summary>
		/// User {0} was forcefully logged out, because of data sending errors.
		/// </summary>
		public const string Str1650ParamsKey = nameof(Str1650Params);

		/// <summary>
		/// User {0} was forcefully logged out, because of data sending errors.
		/// </summary>
		public static string Str1650Params => GetString(Str1650ParamsKey);

		/// <summary>
		/// Client {0}. Error '{1}'.
		/// </summary>
		public const string Str1651ParamsKey = nameof(Str1651Params);

		/// <summary>
		/// Client {0}. Error '{1}'.
		/// </summary>
		public static string Str1651Params => GetString(Str1651ParamsKey);

		/// <summary>
		/// Server was not launched earlier.
		/// </summary>
		public const string Str1652Key = nameof(Str1652);

		/// <summary>
		/// Server was not launched earlier.
		/// </summary>
		public static string Str1652 => GetString(Str1652Key);

		/// <summary>
		/// For client {0} no session was created earlier.
		/// </summary>
		public const string Str1653ParamsKey = nameof(Str1653Params);

		/// <summary>
		/// For client {0} no session was created earlier.
		/// </summary>
		public static string Str1653Params => GetString(Str1653ParamsKey);

		/// <summary>
		/// Client {0} was disconnected earlier.
		/// </summary>
		public const string Str1654ParamsKey = nameof(Str1654Params);

		/// <summary>
		/// Client {0} was disconnected earlier.
		/// </summary>
		public static string Str1654Params => GetString(Str1654ParamsKey);

		/// <summary>
		/// Wrong type of data.
		/// </summary>
		public const string Str1655Key = nameof(Str1655);

		/// <summary>
		/// Wrong type of data.
		/// </summary>
		public static string Str1655 => GetString(Str1655Key);

		/// <summary>
		/// Security {0} found.
		/// </summary>
		public const string Str1656ParamsKey = nameof(Str1656Params);

		/// <summary>
		/// Security {0} found.
		/// </summary>
		public static string Str1656Params => GetString(Str1656ParamsKey);

		/// <summary>
		/// For message with transaction ID {0} the original transaction ID was not found.
		/// </summary>
		public const string Str1657ParamsKey = nameof(Str1657Params);

		/// <summary>
		/// For message with transaction ID {0} the original transaction ID was not found.
		/// </summary>
		public static string Str1657Params => GetString(Str1657ParamsKey);

		/// <summary>
		/// None
		/// </summary>
		public const string Str1658Key = nameof(Str1658);

		/// <summary>
		/// None
		/// </summary>
		public static string Str1658 => GetString(Str1658Key);

		/// <summary>
		/// Quotes
		/// </summary>
		public const string Str1659Key = nameof(Str1659);

		/// <summary>
		/// Quotes
		/// </summary>
		public static string Str1659 => GetString(Str1659Key);

		/// <summary>
		/// Depth
		/// </summary>
		public const string Str1660Key = nameof(Str1660);

		/// <summary>
		/// Depth
		/// </summary>
		public static string Str1660 => GetString(Str1660Key);

		/// <summary>
		/// Version
		/// </summary>
		public const string VersionKey = nameof(Version);

		/// <summary>
		/// Version
		/// </summary>
		public static string Version => GetString(VersionKey);

		/// <summary>
		/// Dialect
		/// </summary>
		public const string DialectKey = nameof(Dialect);

		/// <summary>
		/// Dialect
		/// </summary>
		public static string Dialect => GetString(DialectKey);

		/// <summary>
		/// Version FIX protocol.
		/// </summary>
		public const string FixVersionProtocolKey = nameof(FixVersionProtocol);

		/// <summary>
		/// Version FIX protocol.
		/// </summary>
		public static string FixVersionProtocol => GetString(FixVersionProtocolKey);

		/// <summary>
		/// Dialect FIX protocol.
		/// </summary>
		public static string FixDialectProtocol => GetString(FixDialectProtocolKey);

		/// <summary>
		/// Dialect FIX protocol.
		/// </summary>
		public const string FixDialectProtocolKey = nameof(FixDialectProtocol);

		/// <summary>
		/// FIX protocol format.
		/// </summary>
		public const string FixFormatKey = nameof(FixFormat);

		/// <summary>
		/// FIX protocol format.
		/// </summary>
		public static string FixFormat => GetString(FixFormatKey);

		/// <summary>
		/// Sender
		/// </summary>
		public const string Str1664Key = nameof(Str1664);

		/// <summary>
		/// Sender
		/// </summary>
		public static string Str1664 => GetString(Str1664Key);

		/// <summary>
		/// Sender ID.
		/// </summary>
		public const string Str1665Key = nameof(Str1665);

		/// <summary>
		/// Sender ID.
		/// </summary>
		public static string Str1665 => GetString(Str1665Key);

		/// <summary>
		/// Target
		/// </summary>
		public const string Str1666Key = nameof(Str1666);

		/// <summary>
		/// Target
		/// </summary>
		public static string Str1666 => GetString(Str1666Key);

		/// <summary>
		/// Target ID.
		/// </summary>
		public const string Str1667Key = nameof(Str1667);

		/// <summary>
		/// Target ID.
		/// </summary>
		public static string Str1667 => GetString(Str1667Key);

		/// <summary>
		/// Connection availability checking interval.
		/// </summary>
		public const string Str1669Key = nameof(Str1669);

		/// <summary>
		/// Connection availability checking interval.
		/// </summary>
		public static string Str1669 => GetString(Str1669Key);

		/// <summary>
		/// Market data type.
		/// </summary>
		public const string Str1670Key = nameof(Str1670);

		/// <summary>
		/// Market data type.
		/// </summary>
		public static string Str1670 => GetString(Str1670Key);

		/// <summary>
		/// Board, where securities are traded.
		/// </summary>
		public const string Str1671Key = nameof(Str1671);

		/// <summary>
		/// Board, where securities are traded.
		/// </summary>
		public static string Str1671 => GetString(Str1671Key);

		/// <summary>
		/// Portfolios
		/// </summary>
		public const string PortfoliosKey = nameof(Portfolios);

		/// <summary>
		/// Portfolios
		/// </summary>
		public static string Portfolios => GetString(PortfoliosKey);

		/// <summary>
		/// Request all portfolios on start.
		/// </summary>
		public const string RequestAllPortfoliosKey = nameof(RequestAllPortfolios);

		/// <summary>
		/// Request all portfolios on start.
		/// </summary>
		public static string RequestAllPortfolios => GetString(RequestAllPortfoliosKey);

		/// <summary>
		/// Request all securities on connection.
		/// </summary>
		public const string RequestAllSecuritiesKey = nameof(RequestAllSecurities);

		/// <summary>
		/// Request all securities on connection.
		/// </summary>
		public static string RequestAllSecurities => GetString(RequestAllSecuritiesKey);

		/// <summary>
		/// Encoding
		/// </summary>
		public const string EncodingKey = nameof(Encoding);

		/// <summary>
		/// Encoding
		/// </summary>
		public static string Encoding => GetString(EncodingKey);

		/// <summary>
		/// Encoding used in data transfer.
		/// </summary>
		public const string EncodingDescKey = nameof(EncodingDesc);

		/// <summary>
		/// Encoding used in data transfer.
		/// </summary>
		public static string EncodingDesc => GetString(EncodingDescKey);

		/// <summary>
		/// Counter
		/// </summary>
		public const string CounterKey = nameof(Counter);

		/// <summary>
		/// Counter
		/// </summary>
		public static string Counter => GetString(CounterKey);

		/// <summary>
		/// Reset counter.
		/// </summary>
		public const string ResetCounterKey = nameof(ResetCounter);

		/// <summary>
		/// Reset counter.
		/// </summary>
		public static string ResetCounter => GetString(ResetCounterKey);

		/// <summary>
		/// Connection to broker or stock exchange through FIX protocol.
		/// </summary>
		public const string Str1679Key = nameof(Str1679);

		/// <summary>
		/// Connection to broker or stock exchange through FIX protocol.
		/// </summary>
		public static string Str1679 => GetString(Str1679Key);

		/// <summary>
		/// Transactional session
		/// </summary>
		public const string TransactionalSessionKey = nameof(TransactionalSession);

		/// <summary>
		/// Transactional session
		/// </summary>
		public static string TransactionalSession => GetString(TransactionalSessionKey);

		/// <summary>
		/// Market data session
		/// </summary>
		public const string MarketDataSessionKey = nameof(MarketDataSession);

		/// <summary>
		/// Market data session
		/// </summary>
		public static string MarketDataSession => GetString(MarketDataSessionKey);

		/// <summary>
		/// Transactions (copy)
		/// </summary>
		public const string Str1683Key = nameof(Str1683);

		/// <summary>
		/// Transactions (copy)
		/// </summary>
		public static string Str1683 => GetString(Str1683Key);

		/// <summary>
		/// Transactional session (copy, used with MICEX to receive orders and trades, registered for connections).
		/// </summary>
		public const string Str1684Key = nameof(Str1684);

		/// <summary>
		/// Transactional session (copy, used with MICEX to receive orders and trades, registered for connections).
		/// </summary>
		public static string Str1684 => GetString(Str1684Key);

		/// <summary>
		/// Transaction = {0} Market-data = {1}
		/// </summary>
		public const string Str1685ParamsKey = nameof(Str1685Params);

		/// <summary>
		/// Transaction = {0} Market-data = {1}
		/// </summary>
		public static string Str1685Params => GetString(Str1685ParamsKey);

		/// <summary>
		/// Stop-loss
		/// </summary>
		public const string StopLossKey = nameof(StopLoss);

		/// <summary>
		/// Stop-loss
		/// </summary>
		public static string StopLoss => GetString(StopLossKey);

		/// <summary>
		/// Trailing stop-loss
		/// </summary>
		public const string TrailingStopLossKey = nameof(TrailingStopLoss);

		/// <summary>
		/// Trailing stop-loss
		/// </summary>
		public static string TrailingStopLoss => GetString(TrailingStopLossKey);

		/// <summary>
		/// Take-profit
		/// </summary>
		public const string TakeProfitKey = nameof(TakeProfit);

		/// <summary>
		/// Take-profit
		/// </summary>
		public static string TakeProfit => GetString(TakeProfitKey);

		/// <summary>
		/// Trailing take-profit
		/// </summary>
		public const string TrailingTakeProfitKey = nameof(TrailingTakeProfit);

		/// <summary>
		/// Trailing take-profit
		/// </summary>
		public static string TrailingTakeProfit => GetString(TrailingTakeProfitKey);

		/// <summary>
		/// Stop-order type.
		/// </summary>
		public const string Str1691Key = nameof(Str1691);

		/// <summary>
		/// Stop-order type.
		/// </summary>
		public static string Str1691 => GetString(Str1691Key);

		/// <summary>
		/// Stop-price
		/// </summary>
		public const string StopPriceKey = nameof(StopPrice);

		/// <summary>
		/// Stop-price
		/// </summary>
		public static string StopPrice => GetString(StopPriceKey);

		/// <summary>
		/// Stop-price value.
		/// </summary>
		public const string Str1693Key = nameof(Str1693);

		/// <summary>
		/// Stop-price value.
		/// </summary>
		public static string Str1693 => GetString(Str1693Key);

		/// <summary>
		/// Error registering for unknown order. Message '{0}'.
		/// </summary>
		public const string Str1694ParamsKey = nameof(Str1694Params);

		/// <summary>
		/// Error registering for unknown order. Message '{0}'.
		/// </summary>
		public static string Str1694Params => GetString(Str1694ParamsKey);

		/// <summary>
		/// Unknown type of execution {0}.
		/// </summary>
		public const string Str1695ParamsKey = nameof(Str1695Params);

		/// <summary>
		/// Unknown type of execution {0}.
		/// </summary>
		public static string Str1695Params => GetString(Str1695ParamsKey);

		/// <summary>
		/// Error cancelling order {0}. Text '{1}'.
		/// </summary>
		public const string Str1696ParamsKey = nameof(Str1696Params);

		/// <summary>
		/// Error cancelling order {0}. Text '{1}'.
		/// </summary>
		public static string Str1696Params => GetString(Str1696ParamsKey);

		/// <summary>
		/// Mass orders cancellation was not processed. Result '{0}'. Reason '{1}'.
		/// </summary>
		public const string Str1697ParamsKey = nameof(Str1697Params);

		/// <summary>
		/// Mass orders cancellation was not processed. Result '{0}'. Reason '{1}'.
		/// </summary>
		public static string Str1697Params => GetString(Str1697ParamsKey);

		/// <summary>
		/// Receiving positions for {0} was rejected. Error code {1}, error text {2}.
		/// </summary>
		public const string Str1698ParamsKey = nameof(Str1698Params);

		/// <summary>
		/// Receiving positions for {0} was rejected. Error code {1}, error text {2}.
		/// </summary>
		public static string Str1698Params => GetString(Str1698ParamsKey);

		/// <summary>
		/// Receiving positions for {0} was rejected. Error code {1}.
		/// </summary>
		public const string Str1699ParamsKey = nameof(Str1699Params);

		/// <summary>
		/// Receiving positions for {0} was rejected. Error code {1}.
		/// </summary>
		public static string Str1699Params => GetString(Str1699ParamsKey);

		/// <summary>
		/// Transaction ID {0} is out of range.
		/// </summary>
		public const string Str1700ParamsKey = nameof(Str1700Params);

		/// <summary>
		/// Transaction ID {0} is out of range.
		/// </summary>
		public static string Str1700Params => GetString(Str1700ParamsKey);

		/// <summary>
		/// Error code {0} Message {1}
		/// </summary>
		public const string Str1701ParamsKey = nameof(Str1701Params);

		/// <summary>
		/// Error code {0} Message {1}
		/// </summary>
		public static string Str1701Params => GetString(Str1701ParamsKey);

		/// <summary>
		/// For {0} no information was found.
		/// </summary>
		public const string Str1702ParamsKey = nameof(Str1702Params);

		/// <summary>
		/// For {0} no information was found.
		/// </summary>
		public static string Str1702Params => GetString(Str1702ParamsKey);

		/// <summary>
		/// Data for table '{0}' was exported in a smaller format. Value for column '{1}' was not found. The number of columns is equal to '{2}', column index '{3}'.
		/// </summary>
		public const string Str1703ParamsKey = nameof(Str1703Params);

		/// <summary>
		/// Data for table '{0}' was exported in a smaller format. Value for column '{1}' was not found. The number of columns is equal to '{2}', column index '{3}'.
		/// </summary>
		public static string Str1703Params => GetString(Str1703ParamsKey);

		/// <summary>
		/// Column {0} cannot be added to this table since it is being added to another.
		/// </summary>
		public const string Str1704ParamsKey = nameof(Str1704Params);

		/// <summary>
		/// Column {0} cannot be added to this table since it is being added to another.
		/// </summary>
		public static string Str1704Params => GetString(Str1704ParamsKey);

		/// <summary>
		/// Column {0} is already added.
		/// </summary>
		public const string Str1705ParamsKey = nameof(Str1705Params);

		/// <summary>
		/// Column {0} is already added.
		/// </summary>
		public static string Str1705Params => GetString(Str1705ParamsKey);

		/// <summary>
		/// You cannot delete required column {0}.
		/// </summary>
		public const string Str1706ParamsKey = nameof(Str1706Params);

		/// <summary>
		/// You cannot delete required column {0}.
		/// </summary>
		public static string Str1706Params => GetString(Str1706ParamsKey);

		/// <summary>
		/// You cannot delete all columns.
		/// </summary>
		public const string Str1707Key = nameof(Str1707);

		/// <summary>
		/// You cannot delete all columns.
		/// </summary>
		public static string Str1707 => GetString(Str1707Key);

		/// <summary>
		/// Missing a set of columns of type '{0}'
		/// </summary>
		public const string Str1708ParamsKey = nameof(Str1708Params);

		/// <summary>
		/// Missing a set of columns of type '{0}'
		/// </summary>
		public static string Str1708Params => GetString(Str1708ParamsKey);

		/// <summary>
		/// Column '{0}' is missing from a set of columns of type '{1}'.
		/// </summary>
		public const string Str1709ParamsKey = nameof(Str1709Params);

		/// <summary>
		/// Column '{0}' is missing from a set of columns of type '{1}'.
		/// </summary>
		public static string Str1709Params => GetString(Str1709ParamsKey);

		/// <summary>
		/// Path to directory, where Quik is installed, is not specified.
		/// </summary>
		public const string Str1710Key = nameof(Str1710);

		/// <summary>
		/// Path to directory, where Quik is installed, is not specified.
		/// </summary>
		public static string Str1710 => GetString(Str1710Key);

		/// <summary>
		/// For table '{0}' column '{1}' was not found.
		/// </summary>
		public const string Str1711ParamsKey = nameof(Str1711Params);

		/// <summary>
		/// For table '{0}' column '{1}' was not found.
		/// </summary>
		public static string Str1711Params => GetString(Str1711ParamsKey);

		/// <summary>
		/// Wrong value for order state.
		/// </summary>
		public const string Str1712Key = nameof(Str1712);

		/// <summary>
		/// Wrong value for order state.
		/// </summary>
		public static string Str1712 => GetString(Str1712Key);

		/// <summary>
		/// Wrong value for order direction.
		/// </summary>
		public const string Str1713Key = nameof(Str1713);

		/// <summary>
		/// Wrong value for order direction.
		/// </summary>
		public static string Str1713 => GetString(Str1713Key);

		/// <summary>
		/// For column {0} cannot cast value '{1}' to type {2}.
		/// </summary>
		public const string Str1714ParamsKey = nameof(Str1714Params);

		/// <summary>
		/// For column {0} cannot cast value '{1}' to type {2}.
		/// </summary>
		public static string Str1714Params => GetString(Str1714ParamsKey);

		/// <summary>
		/// Wrong value for column {0}.
		/// </summary>
		public const string Str1715ParamsKey = nameof(Str1715Params);

		/// <summary>
		/// Wrong value for column {0}.
		/// </summary>
		public static string Str1715Params => GetString(Str1715ParamsKey);

		/// <summary>
		/// Wrong value for column {0}.
		/// </summary>
		public const string Str1716ParamsKey = nameof(Str1716Params);

		/// <summary>
		/// Wrong value for column {0}.
		/// </summary>
		public static string Str1716Params => GetString(Str1716ParamsKey);

		/// <summary>
		/// Unsupported type of stop-order.
		/// </summary>
		public const string Str1717Key = nameof(Str1717);

		/// <summary>
		/// Unsupported type of stop-order.
		/// </summary>
		public static string Str1717 => GetString(Str1717Key);

		/// <summary>
		/// Wrong value for stop-order execution result.
		/// </summary>
		public const string Str1718Key = nameof(Str1718);

		/// <summary>
		/// Wrong value for stop-order execution result.
		/// </summary>
		public static string Str1718 => GetString(Str1718Key);

		/// <summary>
		/// Wrong value for limit type.
		/// </summary>
		public const string Str1719Key = nameof(Str1719);

		/// <summary>
		/// Wrong value for limit type.
		/// </summary>
		public static string Str1719 => GetString(Str1719Key);

		/// <summary>
		/// Incorrect type of limit {0}
		/// </summary>
		public const string Str1720ParamsKey = nameof(Str1720Params);

		/// <summary>
		/// Incorrect type of limit {0}
		/// </summary>
		public static string Str1720Params => GetString(Str1720ParamsKey);

		/// <summary>
		/// Error determining info.exe existence in given directory.
		/// </summary>
		public const string Str1721Key = nameof(Str1721);

		/// <summary>
		/// Error determining info.exe existence in given directory.
		/// </summary>
		public static string Str1721 => GetString(Str1721Key);

		/// <summary>
		/// Failed to connect to Quik. Invalid path '{0}' can have been specified.
		/// </summary>
		public const string Str1722ParamsKey = nameof(Str1722Params);

		/// <summary>
		/// Failed to connect to Quik. Invalid path '{0}' can have been specified.
		/// </summary>
		public static string Str1722Params => GetString(Str1722ParamsKey);

		/// <summary>
		/// Failed to connect to Quik. External transactions processing can be disabled in Quik.
		/// </summary>
		public const string Str1723Key = nameof(Str1723);

		/// <summary>
		/// Failed to connect to Quik. External transactions processing can be disabled in Quik.
		/// </summary>
		public static string Str1723 => GetString(Str1723Key);

		/// <summary>
		/// {0} with number '{1}' is doubled in received DDE package.
		/// </summary>
		public const string Str1724ParamsKey = nameof(Str1724Params);

		/// <summary>
		/// {0} with number '{1}' is doubled in received DDE package.
		/// </summary>
		public static string Str1724Params => GetString(Str1724ParamsKey);

		/// <summary>
		/// Name of table with market depth is incorrectly filled '{0}'.
		/// </summary>
		public const string Str1725ParamsKey = nameof(Str1725Params);

		/// <summary>
		/// Name of table with market depth is incorrectly filled '{0}'.
		/// </summary>
		public static string Str1725Params => GetString(Str1725ParamsKey);

		/// <summary>
		/// Error building market depth for {0}.
		/// </summary>
		public const string Str1726ParamsKey = nameof(Str1726Params);

		/// <summary>
		/// Error building market depth for {0}.
		/// </summary>
		public static string Str1726Params => GetString(Str1726ParamsKey);

		/// <summary>
		/// Insufficient funds to process an order that is placed by stop-order {0}.
		/// </summary>
		public const string Str1727ParamsKey = nameof(Str1727Params);

		/// <summary>
		/// Insufficient funds to process an order that is placed by stop-order {0}.
		/// </summary>
		public static string Str1727Params => GetString(Str1727ParamsKey);

		/// <summary>
		/// Order, placed by stop-order {0}, rejected by trading system.
		/// </summary>
		public const string Str1728ParamsKey = nameof(Str1728Params);

		/// <summary>
		/// Order, placed by stop-order {0}, rejected by trading system.
		/// </summary>
		public static string Str1728Params => GetString(Str1728ParamsKey);

		/// <summary>
		/// Order {0} was completely filled, but balance was not updated and is equal to {1}.
		/// </summary>
		public const string Str1729ParamsKey = nameof(Str1729Params);

		/// <summary>
		/// Order {0} was completely filled, but balance was not updated and is equal to {1}.
		/// </summary>
		public static string Str1729Params => GetString(Str1729ParamsKey);

		/// <summary>
		/// More or equal
		/// </summary>
		public const string Str1730Key = nameof(Str1730);

		/// <summary>
		/// More or equal
		/// </summary>
		public static string Str1730 => GetString(Str1730Key);

		/// <summary>
		/// Less than or equal
		/// </summary>
		public const string Str1731Key = nameof(Str1731);

		/// <summary>
		/// Less than or equal
		/// </summary>
		public static string Str1731 => GetString(Str1731Key);

		/// <summary>
		/// Linked
		/// </summary>
		public const string Str1732Key = nameof(Str1732);

		/// <summary>
		/// Linked
		/// </summary>
		public static string Str1732 => GetString(Str1732Key);

		/// <summary>
		/// Stop-limit
		/// </summary>
		public const string Str1733Key = nameof(Str1733);

		/// <summary>
		/// Stop-limit
		/// </summary>
		public static string Str1733 => GetString(Str1733Key);

		/// <summary>
		/// Take-profit + stop-limit
		/// </summary>
		public const string Str1735Key = nameof(Str1735);

		/// <summary>
		/// Take-profit + stop-limit
		/// </summary>
		public static string Str1735 => GetString(Str1735Key);

		/// <summary>
		/// Stop-order type
		/// </summary>
		public const string Str1737Key = nameof(Str1737);

		/// <summary>
		/// Stop-order type
		/// </summary>
		public static string Str1737 => GetString(Str1737Key);

		/// <summary>
		/// Result
		/// </summary>
		public const string Str1738Key = nameof(Str1738);

		/// <summary>
		/// Result
		/// </summary>
		public static string Str1738 => GetString(Str1738Key);

		/// <summary>
		/// Stop-order execution result.
		/// </summary>
		public const string Str1739Key = nameof(Str1739);

		/// <summary>
		/// Stop-order execution result.
		/// </summary>
		public static string Str1739 => GetString(Str1739Key);

		/// <summary>
		/// Security ID for stop-orders with a condition on other security.
		/// </summary>
		public const string Str1740Key = nameof(Str1740);

		/// <summary>
		/// Security ID for stop-orders with a condition on other security.
		/// </summary>
		public static string Str1740 => GetString(Str1740Key);

		/// <summary>
		/// Stop-price condition
		/// </summary>
		public const string Str1741Key = nameof(Str1741);

		/// <summary>
		/// Stop-price condition
		/// </summary>
		public static string Str1741 => GetString(Str1741Key);

		/// <summary>
		/// Stop-price condition. Used for orders of type «Other security stop-price».
		/// </summary>
		public const string Str1742Key = nameof(Str1742);

		/// <summary>
		/// Stop-price condition. Used for orders of type «Other security stop-price».
		/// </summary>
		public static string Str1742 => GetString(Str1742Key);

		/// <summary>
		/// Stop price
		/// </summary>
		public const string Str1743Key = nameof(Str1743);

		/// <summary>
		/// Stop price
		/// </summary>
		public static string Str1743 => GetString(Str1743Key);

		/// <summary>
		/// Stop price, which sets the condition of stop-order execution.
		/// </summary>
		public const string Str1744Key = nameof(Str1744);

		/// <summary>
		/// Stop price, which sets the condition of stop-order execution.
		/// </summary>
		public static string Str1744 => GetString(Str1744Key);

		/// <summary>
		/// Stop-limit price
		/// </summary>
		public const string Str1745Key = nameof(Str1745);

		/// <summary>
		/// Stop-limit price
		/// </summary>
		public static string Str1745 => GetString(Str1745Key);

		/// <summary>
		/// Stop-limit price. Analogous to Stop-price, but only used with «Take-profit and stop-limit» order types.
		/// </summary>
		public const string Str1746Key = nameof(Str1746);

		/// <summary>
		/// Stop-limit price. Analogous to Stop-price, but only used with «Take-profit and stop-limit» order types.
		/// </summary>
		public static string Str1746 => GetString(Str1746Key);

		/// <summary>
		/// Stop-limit at market price
		/// </summary>
		public const string Str1747Key = nameof(Str1747);

		/// <summary>
		/// Stop-limit at market price
		/// </summary>
		public static string Str1747 => GetString(Str1747Key);

		/// <summary>
		/// Sign that the «Stop-limit» was executed at the market price.
		/// </summary>
		public const string Str1748Key = nameof(Str1748);

		/// <summary>
		/// Sign that the «Stop-limit» was executed at the market price.
		/// </summary>
		public static string Str1748 => GetString(Str1748Key);

		/// <summary>
		/// Conditions checking interval
		/// </summary>
		public const string Str1749Key = nameof(Str1749);

		/// <summary>
		/// Conditions checking interval
		/// </summary>
		public static string Str1749 => GetString(Str1749Key);

		/// <summary>
		/// Order conditions check time only during the specified time period (if value is null, then do not check). Used for «Take-profit and stop-limit» and «Take-profit and stop-limit by order» order types.
		/// </summary>
		public const string Str1750Key = nameof(Str1750);

		/// <summary>
		/// Order conditions check time only during the specified time period (if value is null, then do not check). Used for «Take-profit and stop-limit» and «Take-profit and stop-limit by order» order types.
		/// </summary>
		public static string Str1750 => GetString(Str1750Key);

		/// <summary>
		/// On execution conditional order ID
		/// </summary>
		public const string Str1751Key = nameof(Str1751);

		/// <summary>
		/// On execution conditional order ID
		/// </summary>
		public static string Str1751 => GetString(Str1751Key);

		/// <summary>
		/// On filled conditional order direction
		/// </summary>
		public const string Str1753Key = nameof(Str1753);

		/// <summary>
		/// On filled conditional order direction
		/// </summary>
		public static string Str1753 => GetString(Str1753Key);

		/// <summary>
		/// On filled conditional order direction.
		/// </summary>
		public const string Str1754Key = nameof(Str1754);

		/// <summary>
		/// On filled conditional order direction.
		/// </summary>
		public static string Str1754 => GetString(Str1754Key);

		/// <summary>
		/// Activation in case of partial execution
		/// </summary>
		public const string Str1755Key = nameof(Str1755);

		/// <summary>
		/// Activation in case of partial execution
		/// </summary>
		public static string Str1755 => GetString(Str1755Key);

		/// <summary>
		/// Partial order filling is taken into account. «On execution» order will be activated when order-condition is partially met.
		/// </summary>
		public const string Str1756Key = nameof(Str1756);

		/// <summary>
		/// Partial order filling is taken into account. «On execution» order will be activated when order-condition is partially met.
		/// </summary>
		public static string Str1756 => GetString(Str1756Key);

		/// <summary>
		/// Filled volume
		/// </summary>
		public const string Str1757Key = nameof(Str1757);

		/// <summary>
		/// Filled volume
		/// </summary>
		public static string Str1757 => GetString(Str1757Key);

		/// <summary>
		/// Use filled order volume as quantity for the new stop-order being placed. Filled volume of order-condition is used as security quantity in «on execution» order.
		/// </summary>
		public const string Str1758Key = nameof(Str1758);

		/// <summary>
		/// Use filled order volume as quantity for the new stop-order being placed. Filled volume of order-condition is used as security quantity in «on execution» order.
		/// </summary>
		public static string Str1758 => GetString(Str1758Key);

		/// <summary>
		/// Price of linked order
		/// </summary>
		public const string Str1759Key = nameof(Str1759);

		/// <summary>
		/// Price of linked order
		/// </summary>
		public static string Str1759 => GetString(Str1759Key);

		/// <summary>
		/// Price of linked limit order.
		/// </summary>
		public const string Str1760Key = nameof(Str1760);

		/// <summary>
		/// Price of linked limit order.
		/// </summary>
		public static string Str1760 => GetString(Str1760Key);

		/// <summary>
		/// Cancellation when partially filled
		/// </summary>
		public const string Str1761Key = nameof(Str1761);

		/// <summary>
		/// Cancellation when partially filled
		/// </summary>
		public static string Str1761 => GetString(Str1761Key);

		/// <summary>
		/// Sign that the stop-order was cancelled when its linked limit order was partially filled.
		/// </summary>
		public const string Str1762Key = nameof(Str1762);

		/// <summary>
		/// Sign that the stop-order was cancelled when its linked limit order was partially filled.
		/// </summary>
		public static string Str1762 => GetString(Str1762Key);

		/// <summary>
		/// Offset from maximum
		/// </summary>
		public const string Str1763Key = nameof(Str1763);

		/// <summary>
		/// Offset from maximum
		/// </summary>
		public static string Str1763 => GetString(Str1763Key);

		/// <summary>
		/// Offset from maximum (minimum) price of last transaction.
		/// </summary>
		public const string Str1764Key = nameof(Str1764);

		/// <summary>
		/// Offset from maximum (minimum) price of last transaction.
		/// </summary>
		public static string Str1764 => GetString(Str1764Key);

		/// <summary>
		/// Protection spread size.
		/// </summary>
		public const string Str1766Key = nameof(Str1766);

		/// <summary>
		/// Protection spread size.
		/// </summary>
		public static string Str1766 => GetString(Str1766Key);

		/// <summary>
		/// Take-profit at market price
		/// </summary>
		public const string Str1767Key = nameof(Str1767);

		/// <summary>
		/// Take-profit at market price
		/// </summary>
		public static string Str1767 => GetString(Str1767Key);

		/// <summary>
		/// Sign that the «Take-profit» was executed at the market price.
		/// </summary>
		public const string Str1768Key = nameof(Str1768);

		/// <summary>
		/// Sign that the «Take-profit» was executed at the market price.
		/// </summary>
		public static string Str1768 => GetString(Str1768Key);

		/// <summary>
		/// Russia
		/// </summary>
		public const string RussiaKey = nameof(Russia);

		/// <summary>
		/// Russia
		/// </summary>
		public static string Russia => GetString(RussiaKey);

		/// <summary>
		/// Connection to {0}.
		/// </summary>
		public const string Str1770Key = nameof(Str1770);

		/// <summary>
		/// Connection to {0}.
		/// </summary>
		public static string Str1770 => GetString(Str1770Key);

		/// <summary>
		/// General (Quik)
		/// </summary>
		public const string Str1771Key = nameof(Str1771);

		/// <summary>
		/// General (Quik)
		/// </summary>
		public static string Str1771 => GetString(Str1771Key);

		/// <summary>
		/// Use for old DDE + Trans2Quik connection.
		/// </summary>
		public const string Str1772Key = nameof(Str1772);

		/// <summary>
		/// Use for old DDE + Trans2Quik connection.
		/// </summary>
		public static string Str1772 => GetString(Str1772Key);

		/// <summary>
		/// Path to Quik
		/// </summary>
		public const string Str1773Key = nameof(Str1773);

		/// <summary>
		/// Path to Quik
		/// </summary>
		public static string Str1773 => GetString(Str1773Key);

		/// <summary>
		/// Path to directory, where Quik is installed (or path to info.exe file).
		/// </summary>
		public const string Str1774Key = nameof(Str1774);

		/// <summary>
		/// Path to directory, where Quik is installed (or path to info.exe file).
		/// </summary>
		public static string Str1774 => GetString(Str1774Key);

		/// <summary>
		/// Load orders placed by hand
		/// </summary>
		public const string Str1775Key = nameof(Str1775);

		/// <summary>
		/// Load orders placed by hand
		/// </summary>
		public static string Str1775 => GetString(Str1775Key);

		/// <summary>
		/// Load orders sent to Quik by hand.
		/// </summary>
		public const string Str1776Key = nameof(Str1776);

		/// <summary>
		/// Load orders sent to Quik by hand.
		/// </summary>
		public static string Str1776 => GetString(Str1776Key);

		/// <summary>
		/// Dll file
		/// </summary>
		public const string Str1777Key = nameof(Str1777);

		/// <summary>
		/// Dll file
		/// </summary>
		public static string Str1777 => GetString(Str1777Key);

		/// <summary>
		/// Dll file, containing Quik API.
		/// </summary>
		public const string Str1778Key = nameof(Str1778);

		/// <summary>
		/// Dll file, containing Quik API.
		/// </summary>
		public static string Str1778 => GetString(Str1778Key);

		/// <summary>
		/// DDE server
		/// </summary>
		public const string Str1779Key = nameof(Str1779);

		/// <summary>
		/// DDE server
		/// </summary>
		public static string Str1779 => GetString(Str1779Key);

		/// <summary>
		/// DDE server name.
		/// </summary>
		public const string Str1780Key = nameof(Str1780);

		/// <summary>
		/// DDE server name.
		/// </summary>
		public static string Str1780 => GetString(Str1780Key);

		/// <summary>
		/// Asynchronous mode
		/// </summary>
		public const string Str1781Key = nameof(Str1781);

		/// <summary>
		/// Asynchronous mode
		/// </summary>
		public static string Str1781 => GetString(Str1781Key);

		/// <summary>
		/// Use asynchronous mode to send transaction (register, reregister and cancel orders).
		/// </summary>
		public const string Str1782Key = nameof(Str1782);

		/// <summary>
		/// Use asynchronous mode to send transaction (register, reregister and cancel orders).
		/// </summary>
		public static string Str1782 => GetString(Str1782Key);

		/// <summary>
		/// Load portfolios currencies
		/// </summary>
		public const string Str1783Key = nameof(Str1783);

		/// <summary>
		/// Load portfolios currencies
		/// </summary>
		public static string Str1783 => GetString(Str1783Key);

		/// <summary>
		/// Load history of securities changes from «Portfolios currencies» table.
		/// </summary>
		public const string Str1784Key = nameof(Str1784);

		/// <summary>
		/// Load history of securities changes from «Portfolios currencies» table.
		/// </summary>
		public static string Str1784 => GetString(Str1784Key);

		/// <summary>
		/// Load history of changes
		/// </summary>
		public const string Str1785Key = nameof(Str1785);

		/// <summary>
		/// Load history of changes
		/// </summary>
		public static string Str1785 => GetString(Str1785Key);

		/// <summary>
		/// Load history of securities changes from «Securities (changes)» table.
		/// </summary>
		public const string Str1786Key = nameof(Str1786);

		/// <summary>
		/// Load history of securities changes from «Securities (changes)» table.
		/// </summary>
		public static string Str1786 => GetString(Str1786Key);

		/// <summary>
		/// Securities DDE table settings.
		/// </summary>
		public const string Str1787Key = nameof(Str1787);

		/// <summary>
		/// Securities DDE table settings.
		/// </summary>
		public static string Str1787 => GetString(Str1787Key);

		/// <summary>
		/// Securities (changes)
		/// </summary>
		public const string Str1788Key = nameof(Str1788);

		/// <summary>
		/// Securities (changes)
		/// </summary>
		public static string Str1788 => GetString(Str1788Key);

		/// <summary>
		/// Securities (changes) DDE table settings.
		/// </summary>
		public const string Str1789Key = nameof(Str1789);

		/// <summary>
		/// Securities (changes) DDE table settings.
		/// </summary>
		public static string Str1789 => GetString(Str1789Key);

		/// <summary>
		/// Trades DDE table settings.
		/// </summary>
		public const string Str1790Key = nameof(Str1790);

		/// <summary>
		/// Trades DDE table settings.
		/// </summary>
		public static string Str1790 => GetString(Str1790Key);

		/// <summary>
		/// My Trades
		/// </summary>
		public const string Str1791Key = nameof(Str1791);

		/// <summary>
		/// My Trades
		/// </summary>
		public static string Str1791 => GetString(Str1791Key);

		/// <summary>
		/// My trades DDE table settings.
		/// </summary>
		public const string Str1792Key = nameof(Str1792);

		/// <summary>
		/// My trades DDE table settings.
		/// </summary>
		public static string Str1792 => GetString(Str1792Key);

		/// <summary>
		/// Orders DDE table settings.
		/// </summary>
		public const string Str1793Key = nameof(Str1793);

		/// <summary>
		/// Orders DDE table settings.
		/// </summary>
		public static string Str1793 => GetString(Str1793Key);

		/// <summary>
		/// Stop-orders DDE table settings.
		/// </summary>
		public const string Str1794Key = nameof(Str1794);

		/// <summary>
		/// Stop-orders DDE table settings.
		/// </summary>
		public static string Str1794 => GetString(Str1794Key);

		/// <summary>
		/// Market depth
		/// </summary>
		public const string MarketDepthKey = nameof(MarketDepth);

		/// <summary>
		/// Market depth
		/// </summary>
		public static string MarketDepth => GetString(MarketDepthKey);

		/// <summary>
		/// Market depth DDE table settings.
		/// </summary>
		public const string Str1796Key = nameof(Str1796);

		/// <summary>
		/// Market depth DDE table settings.
		/// </summary>
		public static string Str1796 => GetString(Str1796Key);

		/// <summary>
		/// Securities portfolio
		/// </summary>
		public const string Str1797Key = nameof(Str1797);

		/// <summary>
		/// Securities portfolio
		/// </summary>
		public static string Str1797 => GetString(Str1797Key);

		/// <summary>
		/// Securities portfolio DDE table settings.
		/// </summary>
		public const string Str1798Key = nameof(Str1798);

		/// <summary>
		/// Securities portfolio DDE table settings.
		/// </summary>
		public static string Str1798 => GetString(Str1798Key);

		/// <summary>
		/// Derivatives portfolio
		/// </summary>
		public const string Str1799Key = nameof(Str1799);

		/// <summary>
		/// Derivatives portfolio
		/// </summary>
		public static string Str1799 => GetString(Str1799Key);

		/// <summary>
		/// Derivatives portfolio DDE table settings.
		/// </summary>
		public const string Str1800Key = nameof(Str1800);

		/// <summary>
		/// Derivatives portfolio DDE table settings.
		/// </summary>
		public static string Str1800 => GetString(Str1800Key);

		/// <summary>
		/// Positions in securities
		/// </summary>
		public const string Str1801Key = nameof(Str1801);

		/// <summary>
		/// Positions in securities
		/// </summary>
		public static string Str1801 => GetString(Str1801Key);

		/// <summary>
		/// Securities positions DDE table settings.
		/// </summary>
		public const string Str1802Key = nameof(Str1802);

		/// <summary>
		/// Securities positions DDE table settings.
		/// </summary>
		public static string Str1802 => GetString(Str1802Key);

		/// <summary>
		/// Positions in derivatives
		/// </summary>
		public const string Str1803Key = nameof(Str1803);

		/// <summary>
		/// Positions in derivatives
		/// </summary>
		public static string Str1803 => GetString(Str1803Key);

		/// <summary>
		/// Derivatives positions DDE table settings.
		/// </summary>
		public const string Str1804Key = nameof(Str1804);

		/// <summary>
		/// Derivatives positions DDE table settings.
		/// </summary>
		public static string Str1804 => GetString(Str1804Key);

		/// <summary>
		/// Portfolios currencies
		/// </summary>
		public const string Str1805Key = nameof(Str1805);

		/// <summary>
		/// Portfolios currencies
		/// </summary>
		public static string Str1805 => GetString(Str1805Key);

		/// <summary>
		/// Portfolios currencies DDE table settings.
		/// </summary>
		public const string Str1806Key = nameof(Str1806);

		/// <summary>
		/// Portfolios currencies DDE table settings.
		/// </summary>
		public static string Str1806 => GetString(Str1806Key);

		/// <summary>
		/// QuikTrader for {0} is already registered.
		/// </summary>
		public const string Str1807ParamsKey = nameof(Str1807Params);

		/// <summary>
		/// QuikTrader for {0} is already registered.
		/// </summary>
		public static string Str1807Params => GetString(Str1807ParamsKey);

		/// <summary>
		/// Path = {0}
		/// </summary>
		public const string Str1808ParamsKey = nameof(Str1808Params);

		/// <summary>
		/// Path = {0}
		/// </summary>
		public static string Str1808Params => GetString(Str1808ParamsKey);

		/// <summary>
		/// Action is supported only in DDE mode.
		/// </summary>
		public const string Str1809Key = nameof(Str1809);

		/// <summary>
		/// Action is supported only in DDE mode.
		/// </summary>
		public static string Str1809 => GetString(Str1809Key);

		/// <summary>
		/// No launched terminal was found at {0}.
		/// </summary>
		public const string Str1810ParamsKey = nameof(Str1810Params);

		/// <summary>
		/// No launched terminal was found at {0}.
		/// </summary>
		public static string Str1810Params => GetString(Str1810ParamsKey);

		/// <summary>
		/// Quik window was not found.
		/// </summary>
		public const string Str1811Key = nameof(Str1811);

		/// <summary>
		/// Quik window was not found.
		/// </summary>
		public static string Str1811 => GetString(Str1811Key);

		/// <summary>
		/// Status window was not found.
		/// </summary>
		public const string Str1812Key = nameof(Str1812);

		/// <summary>
		/// Status window was not found.
		/// </summary>
		public static string Str1812 => GetString(Str1812Key);

		/// <summary>
		/// No launched terminal or its executable was found at {0}.
		/// </summary>
		public const string Str1813ParamsKey = nameof(Str1813Params);

		/// <summary>
		/// No launched terminal or its executable was found at {0}.
		/// </summary>
		public static string Str1813Params => GetString(Str1813ParamsKey);

		/// <summary>
		/// Terminal is already launched.
		/// </summary>
		public const string Str1814Key = nameof(Str1814);

		/// <summary>
		/// Terminal is already launched.
		/// </summary>
		public static string Str1814 => GetString(Str1814Key);

		/// <summary>
		/// Server address is unknown.
		/// </summary>
		public const string Str1815Key = nameof(Str1815);

		/// <summary>
		/// Server address is unknown.
		/// </summary>
		public static string Str1815 => GetString(Str1815Key);

		/// <summary>
		/// There is not associated QuikTrader connection with this terminal.
		/// </summary>
		public const string Str1816Key = nameof(Str1816);

		/// <summary>
		/// There is not associated QuikTrader connection with this terminal.
		/// </summary>
		public static string Str1816 => GetString(Str1816Key);

		/// <summary>
		/// Information about tables is missing.
		/// </summary>
		public const string Str1817Key = nameof(Str1817);

		/// <summary>
		/// Information about tables is missing.
		/// </summary>
		public static string Str1817 => GetString(Str1817Key);

		/// <summary>
		/// List of tables is undefined.
		/// </summary>
		public const string Str1818Key = nameof(Str1818);

		/// <summary>
		/// List of tables is undefined.
		/// </summary>
		public static string Str1818 => GetString(Str1818Key);

		/// <summary>
		/// Table export, describing the market depth, cannot be started.
		/// </summary>
		public const string Str1819Key = nameof(Str1819);

		/// <summary>
		/// Table export, describing the market depth, cannot be started.
		/// </summary>
		public static string Str1819 => GetString(Str1819Key);

		/// <summary>
		/// Failed to get messages Window
		/// </summary>
		public const string Str1820Key = nameof(Str1820);

		/// <summary>
		/// Failed to get messages Window
		/// </summary>
		public static string Str1820 => GetString(Str1820Key);

		/// <summary>
		/// For security {0} no information was found in table {1}.
		/// </summary>
		public const string Str1821ParamsKey = nameof(Str1821Params);

		/// <summary>
		/// For security {0} no information was found in table {1}.
		/// </summary>
		public static string Str1821Params => GetString(Str1821ParamsKey);

		/// <summary>
		/// For security {0} the market depth can already be open. Close it or configure it according to documentation.
		/// </summary>
		public const string Str1822ParamsKey = nameof(Str1822Params);

		/// <summary>
		/// For security {0} the market depth can already be open. Close it or configure it according to documentation.
		/// </summary>
		public static string Str1822Params => GetString(Str1822ParamsKey);

		/// <summary>
		/// Window not found.
		/// </summary>
		public const string Str1823Key = nameof(Str1823);

		/// <summary>
		/// Window not found.
		/// </summary>
		public static string Str1823 => GetString(Str1823Key);

		/// <summary>
		/// Window '{0}' has a wrong header for a market depth window.
		/// </summary>
		public const string Str1824ParamsKey = nameof(Str1824Params);

		/// <summary>
		/// Window '{0}' has a wrong header for a market depth window.
		/// </summary>
		public static string Str1824Params => GetString(Str1824ParamsKey);

		/// <summary>
		/// Unknown table.
		/// </summary>
		public const string Str1825Key = nameof(Str1825);

		/// <summary>
		/// Unknown table.
		/// </summary>
		public static string Str1825 => GetString(Str1825Key);

		/// <summary>
		/// Insufficient number of columns in table '{0}'. Must be no less than {1}.
		/// </summary>
		public const string Str1826ParamsKey = nameof(Str1826Params);

		/// <summary>
		/// Insufficient number of columns in table '{0}'. Must be no less than {1}.
		/// </summary>
		public static string Str1826Params => GetString(Str1826ParamsKey);

		/// <summary>
		/// In table '{0}' at index {1} instead of column '{2}' there is a compatible column '{3}'.
		/// </summary>
		public const string Str1827ParamsKey = nameof(Str1827Params);

		/// <summary>
		/// In table '{0}' at index {1} instead of column '{2}' there is a compatible column '{3}'.
		/// </summary>
		public static string Str1827Params => GetString(Str1827ParamsKey);

		/// <summary>
		/// In table '{0}' at index {1} must be column '{2}' instead of column '{3}'.
		/// </summary>
		public const string Str1828ParamsKey = nameof(Str1828Params);

		/// <summary>
		/// In table '{0}' at index {1} must be column '{2}' instead of column '{3}'.
		/// </summary>
		public static string Str1828Params => GetString(Str1828ParamsKey);

		/// <summary>
		/// Window with header '{0}' was not found.
		/// </summary>
		public const string Str1829ParamsKey = nameof(Str1829Params);

		/// <summary>
		/// Window with header '{0}' was not found.
		/// </summary>
		public static string Str1829Params => GetString(Str1829ParamsKey);

		/// <summary>
		/// Window with class '{0}' was not found.
		/// </summary>
		public const string Str1830ParamsKey = nameof(Str1830Params);

		/// <summary>
		/// Window with class '{0}' was not found.
		/// </summary>
		public static string Str1830Params => GetString(Str1830ParamsKey);

		/// <summary>
		/// No information about Quik main window. Connection can have been unsuccessful.
		/// </summary>
		public const string Str1831Key = nameof(Str1831);

		/// <summary>
		/// No information about Quik main window. Connection can have been unsuccessful.
		/// </summary>
		public static string Str1831 => GetString(Str1831Key);

		/// <summary>
		/// Quik main window was not found.
		/// </summary>
		public const string Str1832Key = nameof(Str1832);

		/// <summary>
		/// Quik main window was not found.
		/// </summary>
		public static string Str1832 => GetString(Str1832Key);

		/// <summary>
		/// Unsupported table {0}.
		/// </summary>
		public const string Str1833ParamsKey = nameof(Str1833Params);

		/// <summary>
		/// Unsupported table {0}.
		/// </summary>
		public static string Str1833Params => GetString(Str1833ParamsKey);

		/// <summary>
		/// Action '{0}' with Quik window exceeded the allowed time.
		/// </summary>
		public const string Str1834ParamsKey = nameof(Str1834Params);

		/// <summary>
		/// Action '{0}' with Quik window exceeded the allowed time.
		/// </summary>
		public static string Str1834Params => GetString(Str1834ParamsKey);

		/// <summary>
		/// Transaction contains wrong message about order.
		/// </summary>
		public const string Str1835Key = nameof(Str1835);

		/// <summary>
		/// Transaction contains wrong message about order.
		/// </summary>
		public static string Str1835 => GetString(Str1835Key);

		/// <summary>
		/// Transaction '{0}' was not registered. Reason '{1}'.
		/// </summary>
		public const string Str1836ParamsKey = nameof(Str1836Params);

		/// <summary>
		/// Transaction '{0}' was not registered. Reason '{1}'.
		/// </summary>
		public static string Str1836Params => GetString(Str1836ParamsKey);

		/// <summary>
		/// Terminal is not connected to server.
		/// </summary>
		public const string Str1837Key = nameof(Str1837);

		/// <summary>
		/// Terminal is not connected to server.
		/// </summary>
		public static string Str1837 => GetString(Str1837Key);

		/// <summary>
		/// Unknown connection '{0}' state.
		/// </summary>
		public const string Str1838ParamsKey = nameof(Str1838Params);

		/// <summary>
		/// Unknown connection '{0}' state.
		/// </summary>
		public static string Str1838Params => GetString(Str1838ParamsKey);

		/// <summary>
		/// Information for transaction {0} not found.
		/// </summary>
		public const string Str1839ParamsKey = nameof(Str1839Params);

		/// <summary>
		/// Information for transaction {0} not found.
		/// </summary>
		public static string Str1839Params => GetString(Str1839ParamsKey);

		/// <summary>
		/// Unsnupported type of transaction {0}.
		/// </summary>
		public const string Str1840ParamsKey = nameof(Str1840Params);

		/// <summary>
		/// Unsnupported type of transaction {0}.
		/// </summary>
		public static string Str1840Params => GetString(Str1840ParamsKey);

		/// <summary>
		/// Server for transaction '{0}' returned a wrong message '{1}' for moved orders.
		/// </summary>
		public const string Str1841ParamsKey = nameof(Str1841Params);

		/// <summary>
		/// Server for transaction '{0}' returned a wrong message '{1}' for moved orders.
		/// </summary>
		public static string Str1841Params => GetString(Str1841ParamsKey);

		/// <summary>
		/// Type {0} is not supported.
		/// </summary>
		public const string Str1844ParamsKey = nameof(Str1844Params);

		/// <summary>
		/// Type {0} is not supported.
		/// </summary>
		public static string Str1844Params => GetString(Str1844ParamsKey);

		/// <summary>
		/// Invalid value for order type.
		/// </summary>
		public const string Str1845Key = nameof(Str1845);

		/// <summary>
		/// Invalid value for order type.
		/// </summary>
		public static string Str1845 => GetString(Str1845Key);

		/// <summary>
		/// Invalid value for limit order execution condition.
		/// </summary>
		public const string Str1846Key = nameof(Str1846);

		/// <summary>
		/// Invalid value for limit order execution condition.
		/// </summary>
		public static string Str1846 => GetString(Str1846Key);

		/// <summary>
		/// Order being moved has unacceptable type.
		/// </summary>
		public const string Str1847Key = nameof(Str1847);

		/// <summary>
		/// Order being moved has unacceptable type.
		/// </summary>
		public static string Str1847 => GetString(Str1847Key);

		/// <summary>
		/// Failed to get depo account for client code {0}.
		/// </summary>
		public const string Str1848ParamsKey = nameof(Str1848Params);

		/// <summary>
		/// Failed to get depo account for client code {0}.
		/// </summary>
		public static string Str1848Params => GetString(Str1848ParamsKey);

		/// <summary>
		/// Type of order {0} is not supported.
		/// </summary>
		public const string Str1849ParamsKey = nameof(Str1849Params);

		/// <summary>
		/// Type of order {0} is not supported.
		/// </summary>
		public static string Str1849Params => GetString(Str1849ParamsKey);

		/// <summary>
		/// Underlying asset information is missing for security.
		/// </summary>
		public const string Str1850Key = nameof(Str1850);

		/// <summary>
		/// Underlying asset information is missing for security.
		/// </summary>
		public static string Str1850 => GetString(Str1850Key);

		/// <summary>
		/// Message contains wrong type of security {0}.
		/// </summary>
		public const string Str1851ParamsKey = nameof(Str1851Params);

		/// <summary>
		/// Message contains wrong type of security {0}.
		/// </summary>
		public static string Str1851Params => GetString(Str1851ParamsKey);

		/// <summary>
		/// Selected: {0}
		/// </summary>
		public const string Str1852ParamsKey = nameof(Str1852Params);

		/// <summary>
		/// Selected: {0}
		/// </summary>
		public static string Str1852Params => GetString(Str1852ParamsKey);

		/// <summary>
		/// Security {0} does not have a SmartCOM ID.
		/// </summary>
		public const string Str1853ParamsKey = nameof(Str1853Params);

		/// <summary>
		/// Security {0} does not have a SmartCOM ID.
		/// </summary>
		public static string Str1853Params => GetString(Str1853ParamsKey);

		/// <summary>
		/// SmartCOM does not support simultaneous search of securities on multiple queries.
		/// </summary>
		public const string Str1854Key = nameof(Str1854);

		/// <summary>
		/// SmartCOM does not support simultaneous search of securities on multiple queries.
		/// </summary>
		public static string Str1854 => GetString(Str1854Key);

		/// <summary>
		/// Unregistered candles series securityId = {0} timeFrame = {1}.
		/// </summary>
		public const string Str1855ParamsKey = nameof(Str1855Params);

		/// <summary>
		/// Unregistered candles series securityId = {0} timeFrame = {1}.
		/// </summary>
		public static string Str1855Params => GetString(Str1855ParamsKey);

		/// <summary>
		/// Connection was not successful.
		/// </summary>
		public const string Str1856Key = nameof(Str1856);

		/// <summary>
		/// Connection was not successful.
		/// </summary>
		public static string Str1856 => GetString(Str1856Key);

		/// <summary>
		/// Version API.
		/// </summary>
		public const string Str1860Key = nameof(Str1860);

		/// <summary>
		/// Version API.
		/// </summary>
		public static string Str1860 => GetString(Str1860Key);

		/// <summary>
		/// Server address
		/// </summary>
		public const string ServerAddressKey = nameof(ServerAddress);

		/// <summary>
		/// Server address
		/// </summary>
		public static string ServerAddress => GetString(ServerAddressKey);

		/// <summary>
		/// Client configuration
		/// </summary>
		public const string Str1862Key = nameof(Str1862);

		/// <summary>
		/// Client configuration
		/// </summary>
		public static string Str1862 => GetString(Str1862Key);

		/// <summary>
		/// SmartCOM 3.x client part configuration settings
		/// </summary>
		public const string Str1863Key = nameof(Str1863);

		/// <summary>
		/// SmartCOM 3.x client part configuration settings
		/// </summary>
		public static string Str1863 => GetString(Str1863Key);

		/// <summary>
		/// Server configuration
		/// </summary>
		public const string Str1864Key = nameof(Str1864);

		/// <summary>
		/// Server configuration
		/// </summary>
		public static string Str1864 => GetString(Str1864Key);

		/// <summary>
		/// SmartCOM 3.x server part configuration settings
		/// </summary>
		public const string Str1865Key = nameof(Str1865);

		/// <summary>
		/// SmartCOM 3.x server part configuration settings
		/// </summary>
		public static string Str1865 => GetString(Str1865Key);

		/// <summary>
		/// Login = {0} Address = {1}
		/// </summary>
		public const string Str1866ParamsKey = nameof(Str1866Params);

		/// <summary>
		/// Login = {0} Address = {1}
		/// </summary>
		public static string Str1866Params => GetString(Str1866ParamsKey);

		/// <summary>
		/// SmartCOM does not support execution condition {0}.
		/// </summary>
		public const string Str1867ParamsKey = nameof(Str1867Params);

		/// <summary>
		/// SmartCOM does not support execution condition {0}.
		/// </summary>
		public static string Str1867Params => GetString(Str1867ParamsKey);

		/// <summary>
		/// SmartCOM does not support simultaneous search of portfolios on multiple queries.
		/// </summary>
		public const string Str1868Key = nameof(Str1868);

		/// <summary>
		/// SmartCOM does not support simultaneous search of portfolios on multiple queries.
		/// </summary>
		public static string Str1868 => GetString(Str1868Key);

		/// <summary>
		/// Error moving order {0}.
		/// </summary>
		public const string Str1869ParamsKey = nameof(Str1869Params);

		/// <summary>
		/// Error moving order {0}.
		/// </summary>
		public static string Str1869Params => GetString(Str1869ParamsKey);

		/// <summary>
		/// Unknown error reason in order registration with transaction ID {0}.
		/// </summary>
		public const string Str1870ParamsKey = nameof(Str1870Params);

		/// <summary>
		/// Unknown error reason in order registration with transaction ID {0}.
		/// </summary>
		public static string Str1870Params => GetString(Str1870ParamsKey);

		/// <summary>
		/// Failed to cancel order {0}.
		/// </summary>
		public const string Str1871ParamsKey = nameof(Str1871Params);

		/// <summary>
		/// Failed to cancel order {0}.
		/// </summary>
		public static string Str1871Params => GetString(Str1871ParamsKey);

		/// <summary>
		/// Wrong direction {0} orders {0}/{1}.
		/// </summary>
		public const string Str1872ParamsKey = nameof(Str1872Params);

		/// <summary>
		/// Wrong direction {0} orders {0}/{1}.
		/// </summary>
		public static string Str1872Params => GetString(Str1872ParamsKey);

		/// <summary>
		/// Order {0} was not accepted by the system.
		/// </summary>
		public const string Str1873ParamsKey = nameof(Str1873Params);

		/// <summary>
		/// Order {0} was not accepted by the system.
		/// </summary>
		public static string Str1873Params => GetString(Str1873ParamsKey);

		/// <summary>
		/// No transaction with SmartCOM ID {0} found.
		/// </summary>
		public const string Str1874ParamsKey = nameof(Str1874Params);

		/// <summary>
		/// No transaction with SmartCOM ID {0} found.
		/// </summary>
		public static string Str1874Params => GetString(Str1874ParamsKey);

		/// <summary>
		/// Connection to SmartCOM is not initialized.
		/// </summary>
		public const string Str1875Key = nameof(Str1875);

		/// <summary>
		/// Connection to SmartCOM is not initialized.
		/// </summary>
		public static string Str1875 => GetString(Str1875Key);

		/// <summary>
		/// Connection timeout.
		/// </summary>
		public const string Str1876Key = nameof(Str1876);

		/// <summary>
		/// Connection timeout.
		/// </summary>
		public static string Str1876 => GetString(Str1876Key);

		/// <summary>
		/// Network error.
		/// </summary>
		public const string NetworkErrorKey = nameof(NetworkError);

		/// <summary>
		/// Network error.
		/// </summary>
		public static string NetworkError => GetString(NetworkErrorKey);

		/// <summary>
		/// Main
		/// </summary>
		public const string MainKey = nameof(Main);

		/// <summary>
		/// Main
		/// </summary>
		public static string Main => GetString(MainKey);

		/// <summary>
		/// The main UDP group
		/// </summary>
		public const string MainUDPKey = nameof(MainUDP);

		/// <summary>
		/// The main UDP group
		/// </summary>
		public static string MainUDP => GetString(MainUDPKey);

		/// <summary>
		/// Duplicate
		/// </summary>
		public const string DuplicateKey = nameof(Duplicate);

		/// <summary>
		/// Duplicate
		/// </summary>
		public static string Duplicate => GetString(DuplicateKey);

		/// <summary>
		/// Duplicate UDP group
		/// </summary>
		public const string DuplicateUDPKey = nameof(DuplicateUDP);

		/// <summary>
		/// Duplicate UDP group
		/// </summary>
		public static string DuplicateUDP => GetString(DuplicateUDPKey);

		/// <summary>
		/// Demo
		/// </summary>
		public const string DemoKey = nameof(Demo);

		/// <summary>
		/// Demo
		/// </summary>
		public static string Demo => GetString(DemoKey);

		/// <summary>
		/// Backup
		/// </summary>
		public const string BackupKey = nameof(Backup);

		/// <summary>
		/// Backup
		/// </summary>
		public static string Backup => GetString(BackupKey);

		/// <summary>
		/// Backup server
		/// </summary>
		public const string BackupServerKey = nameof(BackupServer);

		/// <summary>
		/// Backup server
		/// </summary>
		public static string BackupServer => GetString(BackupServerKey);

		/// <summary>
		/// Recovery
		/// </summary>
		public const string RecoveryKey = nameof(Recovery);

		/// <summary>
		/// Recovery
		/// </summary>
		public static string Recovery => GetString(RecoveryKey);

		/// <summary>
		/// Recovery server
		/// </summary>
		public const string RecoveryServerKey = nameof(RecoveryServer);

		/// <summary>
		/// Recovery server
		/// </summary>
		public static string RecoveryServer => GetString(RecoveryServerKey);

		/// <summary>
		/// Replay
		/// </summary>
		public const string ReplayKey = nameof(Replay);

		/// <summary>
		/// Replay
		/// </summary>
		public static string Replay => GetString(ReplayKey);

		/// <summary>
		/// Replay server
		/// </summary>
		public const string ReplayServerKey = nameof(ReplayServer);

		/// <summary>
		/// Replay server
		/// </summary>
		public static string ReplayServer => GetString(ReplayServerKey);

		/// <summary>
		/// Stalker
		/// </summary>
		public const string StalkerKey = nameof(Stalker);

		/// <summary>
		/// Stalker
		/// </summary>
		public static string Stalker => GetString(StalkerKey);

		/// <summary>
		/// Unknown value for order direction.
		/// </summary>
		public const string Str1882Key = nameof(Str1882);

		/// <summary>
		/// Unknown value for order direction.
		/// </summary>
		public static string Str1882 => GetString(Str1882Key);

		/// <summary>
		/// Unknown value for order type.
		/// </summary>
		public const string Str1883Key = nameof(Str1883);

		/// <summary>
		/// Unknown value for order type.
		/// </summary>
		public static string Str1883 => GetString(Str1883Key);

		/// <summary>
		/// Order stop-price
		/// </summary>
		public const string Str1885Key = nameof(Str1885);

		/// <summary>
		/// Order stop-price
		/// </summary>
		public static string Str1885 => GetString(Str1885Key);

		/// <summary>
		/// Order stop-price.
		/// </summary>
		public const string Str1886Key = nameof(Str1886);

		/// <summary>
		/// Order stop-price.
		/// </summary>
		public static string Str1886 => GetString(Str1886Key);

		/// <summary>
		/// {0} does not support candles of type {1}.
		/// </summary>
		public const string NotSupportCandleKey = nameof(NotSupportCandle);

		/// <summary>
		/// {0} does not support candles of type {1}.
		/// </summary>
		public static string NotSupportCandle => GetString(NotSupportCandleKey);

		/// <summary>
		/// Wrong parameter of candle {0}.
		/// </summary>
		public const string WrongCandleArgKey = nameof(WrongCandleArg);

		/// <summary>
		/// Wrong parameter of candle {0}.
		/// </summary>
		public static string WrongCandleArg => GetString(WrongCandleArgKey);

		/// <summary>
		/// Incorrect number of candles.
		/// </summary>
		public const string Str1890Key = nameof(Str1890);

		/// <summary>
		/// Incorrect number of candles.
		/// </summary>
		public static string Str1890 => GetString(Str1890Key);

		/// <summary>
		/// SmartCOM service stop.
		/// </summary>
		public const string Str1891Key = nameof(Str1891);

		/// <summary>
		/// SmartCOM service stop.
		/// </summary>
		public static string Str1891 => GetString(Str1891Key);

		/// <summary>
		/// SmartCOM service stopped.
		/// </summary>
		public const string Str1892Key = nameof(Str1892);

		/// <summary>
		/// SmartCOM service stopped.
		/// </summary>
		public static string Str1892 => GetString(Str1892Key);

		/// <summary>
		/// Launch SmartCOM service.
		/// </summary>
		public const string Str1893Key = nameof(Str1893);

		/// <summary>
		/// Launch SmartCOM service.
		/// </summary>
		public static string Str1893 => GetString(Str1893Key);

		/// <summary>
		/// SmartCOM service launched.
		/// </summary>
		public const string Str1894Key = nameof(Str1894);

		/// <summary>
		/// SmartCOM service launched.
		/// </summary>
		public static string Str1894 => GetString(Str1894Key);

		/// <summary>
		/// SmartCOM server address not specified.
		/// </summary>
		public const string Str1895Key = nameof(Str1895);

		/// <summary>
		/// SmartCOM server address not specified.
		/// </summary>
		public static string Str1895 => GetString(Str1895Key);

		/// <summary>
		/// Login is not specified.
		/// </summary>
		public const string Str1896Key = nameof(Str1896);

		/// <summary>
		/// Login is not specified.
		/// </summary>
		public static string Str1896 => GetString(Str1896Key);

		/// <summary>
		/// Password in not specified.
		/// </summary>
		public const string Str1897Key = nameof(Str1897);

		/// <summary>
		/// Password in not specified.
		/// </summary>
		public static string Str1897 => GetString(Str1897Key);

		/// <summary>
		/// Line
		/// </summary>
		public const string Str1898Key = nameof(Str1898);

		/// <summary>
		/// Line
		/// </summary>
		public static string Str1898 => GetString(Str1898Key);

		/// <summary>
		/// Pointer
		/// </summary>
		public const string Str1899Key = nameof(Str1899);

		/// <summary>
		/// Pointer
		/// </summary>
		public static string Str1899 => GetString(Str1899Key);

		/// <summary>
		/// Area
		/// </summary>
		public const string AreaKey = nameof(Area);

		/// <summary>
		/// Area
		/// </summary>
		public static string Area => GetString(AreaKey);

		/// <summary>
		/// Horizontal line
		/// </summary>
		public const string Str1901Key = nameof(Str1901);

		/// <summary>
		/// Horizontal line
		/// </summary>
		public static string Str1901 => GetString(Str1901Key);

		/// <summary>
		/// Vertical line
		/// </summary>
		public const string Str1902Key = nameof(Str1902);

		/// <summary>
		/// Vertical line
		/// </summary>
		public static string Str1902 => GetString(Str1902Key);

		/// <summary>
		/// Chart area
		/// </summary>
		public const string Str1903Key = nameof(Str1903);

		/// <summary>
		/// Chart area
		/// </summary>
		public static string Str1903 => GetString(Str1903Key);

		/// <summary>
		/// Chart axis with ID {0} was added earlier.
		/// </summary>
		public const string Str1904ParamsKey = nameof(Str1904Params);

		/// <summary>
		/// Chart axis with ID {0} was added earlier.
		/// </summary>
		public static string Str1904Params => GetString(Str1904ParamsKey);

		/// <summary>
		/// Chart area name.
		/// </summary>
		public const string Str1905Key = nameof(Str1905);

		/// <summary>
		/// Chart area name.
		/// </summary>
		public static string Str1905 => GetString(Str1905Key);

		/// <summary>
		/// By default
		/// </summary>
		public const string Str1910Key = nameof(Str1910);

		/// <summary>
		/// By default
		/// </summary>
		public static string Str1910 => GetString(Str1910Key);

		/// <summary>
		/// On the right
		/// </summary>
		public const string Str1911Key = nameof(Str1911);

		/// <summary>
		/// On the right
		/// </summary>
		public static string Str1911 => GetString(Str1911Key);

		/// <summary>
		/// On the left
		/// </summary>
		public const string Str1912Key = nameof(Str1912);

		/// <summary>
		/// On the left
		/// </summary>
		public static string Str1912 => GetString(Str1912Key);

		/// <summary>
		/// On top
		/// </summary>
		public const string Str1913Key = nameof(Str1913);

		/// <summary>
		/// On top
		/// </summary>
		public static string Str1913 => GetString(Str1913Key);

		/// <summary>
		/// Bottom
		/// </summary>
		public const string Str1914Key = nameof(Str1914);

		/// <summary>
		/// Bottom
		/// </summary>
		public static string Str1914 => GetString(Str1914Key);

		/// <summary>
		/// Time without breaks
		/// </summary>
		public const string Str1915Key = nameof(Str1915);

		/// <summary>
		/// Time without breaks
		/// </summary>
		public static string Str1915 => GetString(Str1915Key);

		/// <summary>
		/// ID
		/// </summary>
		public const string Str1916Key = nameof(Str1916);

		/// <summary>
		/// ID
		/// </summary>
		public static string Str1916 => GetString(Str1916Key);

		/// <summary>
		/// Unique ID.
		/// </summary>
		public const string Str1917Key = nameof(Str1917);

		/// <summary>
		/// Unique ID.
		/// </summary>
		public static string Str1917 => GetString(Str1917Key);

		/// <summary>
		/// Axis header.
		/// </summary>
		public const string Str1918Key = nameof(Str1918);

		/// <summary>
		/// Axis header.
		/// </summary>
		public static string Str1918 => GetString(Str1918Key);

		/// <summary>
		/// Group
		/// </summary>
		public const string GroupKey = nameof(Group);

		/// <summary>
		/// Group
		/// </summary>
		public static string Group => GetString(GroupKey);

		/// <summary>
		/// Group, used to synchronize the various axes.
		/// </summary>
		public const string Str1920Key = nameof(Str1920);

		/// <summary>
		/// Group, used to synchronize the various axes.
		/// </summary>
		public static string Str1920 => GetString(Str1920Key);

		/// <summary>
		/// Location
		/// </summary>
		public const string Str1921Key = nameof(Str1921);

		/// <summary>
		/// Location
		/// </summary>
		public static string Str1921 => GetString(Str1921Key);

		/// <summary>
		/// Axis location.
		/// </summary>
		public const string Str1922Key = nameof(Str1922);

		/// <summary>
		/// Axis location.
		/// </summary>
		public static string Str1922 => GetString(Str1922Key);

		/// <summary>
		/// Axis type.
		/// </summary>
		public const string Str1923Key = nameof(Str1923);

		/// <summary>
		/// Axis type.
		/// </summary>
		public static string Str1923 => GetString(Str1923Key);

		/// <summary>
		/// Auto range
		/// </summary>
		public const string Str1924Key = nameof(Str1924);

		/// <summary>
		/// Auto range
		/// </summary>
		public static string Str1924 => GetString(Str1924Key);

		/// <summary>
		/// Flip coordinates
		/// </summary>
		public const string Str1926Key = nameof(Str1926);

		/// <summary>
		/// Flip coordinates
		/// </summary>
		public static string Str1926 => GetString(Str1926Key);

		/// <summary>
		/// Lines on axis
		/// </summary>
		public const string Str1928Key = nameof(Str1928);

		/// <summary>
		/// Lines on axis
		/// </summary>
		public static string Str1928 => GetString(Str1928Key);

		/// <summary>
		/// Show main grid lines on the axis.
		/// </summary>
		public const string Str1929Key = nameof(Str1929);

		/// <summary>
		/// Show main grid lines on the axis.
		/// </summary>
		public static string Str1929 => GetString(Str1929Key);

		/// <summary>
		/// Grid lines
		/// </summary>
		public const string Str1930Key = nameof(Str1930);

		/// <summary>
		/// Grid lines
		/// </summary>
		public static string Str1930 => GetString(Str1930Key);

		/// <summary>
		/// Show main grid lines.
		/// </summary>
		public const string Str1931Key = nameof(Str1931);

		/// <summary>
		/// Show main grid lines.
		/// </summary>
		public static string Str1931 => GetString(Str1931Key);

		/// <summary>
		/// Extra lines on axis
		/// </summary>
		public const string Str1932Key = nameof(Str1932);

		/// <summary>
		/// Extra lines on axis
		/// </summary>
		public static string Str1932 => GetString(Str1932Key);

		/// <summary>
		/// Show extra grid lines on the axis.
		/// </summary>
		public const string Str1933Key = nameof(Str1933);

		/// <summary>
		/// Show extra grid lines on the axis.
		/// </summary>
		public static string Str1933 => GetString(Str1933Key);

		/// <summary>
		/// Extra grid lines
		/// </summary>
		public const string Str1934Key = nameof(Str1934);

		/// <summary>
		/// Extra grid lines
		/// </summary>
		public static string Str1934 => GetString(Str1934Key);

		/// <summary>
		/// Show extra grid lines.
		/// </summary>
		public const string Str1935Key = nameof(Str1935);

		/// <summary>
		/// Show extra grid lines.
		/// </summary>
		public static string Str1935 => GetString(Str1935Key);

		/// <summary>
		/// Axis labels
		/// </summary>
		public const string Str1936Key = nameof(Str1936);

		/// <summary>
		/// Axis labels
		/// </summary>
		public static string Str1936 => GetString(Str1936Key);

		/// <summary>
		/// Show labels on the axis.
		/// </summary>
		public const string Str1937Key = nameof(Str1937);

		/// <summary>
		/// Show labels on the axis.
		/// </summary>
		public static string Str1937 => GetString(Str1937Key);

		/// <summary>
		/// Labels format
		/// </summary>
		public const string Str1938Key = nameof(Str1938);

		/// <summary>
		/// Labels format
		/// </summary>
		public static string Str1938 => GetString(Str1938Key);

		/// <summary>
		/// Japanese candles
		/// </summary>
		public const string Str1940Key = nameof(Str1940);

		/// <summary>
		/// Japanese candles
		/// </summary>
		public static string Str1940 => GetString(Str1940Key);

		/// <summary>
		/// Bars
		/// </summary>
		public const string BarsKey = nameof(Bars);

		/// <summary>
		/// Bars
		/// </summary>
		public static string Bars => GetString(BarsKey);

		/// <summary>
		/// Candles settings
		/// </summary>
		public const string Str1942Key = nameof(Str1942);

		/// <summary>
		/// Candles settings
		/// </summary>
		public static string Str1942 => GetString(Str1942Key);

		/// <summary>
		/// Series header that will be shown on chart.
		/// </summary>
		public const string Str1945Key = nameof(Str1945);

		/// <summary>
		/// Series header that will be shown on chart.
		/// </summary>
		public static string Str1945 => GetString(Str1945Key);

		/// <summary>
		/// Style
		/// </summary>
		public const string Str1946Key = nameof(Str1946);

		/// <summary>
		/// Style
		/// </summary>
		public static string Str1946 => GetString(Str1946Key);

		/// <summary>
		/// Style of candles rendering.
		/// </summary>
		public const string Str1947Key = nameof(Str1947);

		/// <summary>
		/// Style of candles rendering.
		/// </summary>
		public static string Str1947 => GetString(Str1947Key);

		/// <summary>
		/// Decrease
		/// </summary>
		public const string Str1948Key = nameof(Str1948);

		/// <summary>
		/// Decrease
		/// </summary>
		public static string Str1948 => GetString(Str1948Key);

		/// <summary>
		/// Body color of decreasing candle.
		/// </summary>
		public const string Str1949Key = nameof(Str1949);

		/// <summary>
		/// Body color of decreasing candle.
		/// </summary>
		public static string Str1949 => GetString(Str1949Key);

		/// <summary>
		/// Increase
		/// </summary>
		public const string Str1950Key = nameof(Str1950);

		/// <summary>
		/// Increase
		/// </summary>
		public static string Str1950 => GetString(Str1950Key);

		/// <summary>
		/// Body color of increasing candle.
		/// </summary>
		public const string Str1951Key = nameof(Str1951);

		/// <summary>
		/// Body color of increasing candle.
		/// </summary>
		public static string Str1951 => GetString(Str1951Key);

		/// <summary>
		/// Decrease (contour)
		/// </summary>
		public const string Str1952Key = nameof(Str1952);

		/// <summary>
		/// Decrease (contour)
		/// </summary>
		public static string Str1952 => GetString(Str1952Key);

		/// <summary>
		/// Border color of decreasing candle.
		/// </summary>
		public const string Str1953Key = nameof(Str1953);

		/// <summary>
		/// Border color of decreasing candle.
		/// </summary>
		public static string Str1953 => GetString(Str1953Key);

		/// <summary>
		/// Increase (border)
		/// </summary>
		public const string Str1954Key = nameof(Str1954);

		/// <summary>
		/// Increase (border)
		/// </summary>
		public static string Str1954 => GetString(Str1954Key);

		/// <summary>
		/// Border color of increasing candle.
		/// </summary>
		public const string Str1955Key = nameof(Str1955);

		/// <summary>
		/// Border color of increasing candle.
		/// </summary>
		public static string Str1955 => GetString(Str1955Key);

		/// <summary>
		/// Line width
		/// </summary>
		public const string Str1956Key = nameof(Str1956);

		/// <summary>
		/// Line width
		/// </summary>
		public static string Str1956 => GetString(Str1956Key);

		/// <summary>
		/// Line width (bar or border), with which candle will be drawn on chart.
		/// </summary>
		public const string Str1957Key = nameof(Str1957);

		/// <summary>
		/// Line width (bar or border), with which candle will be drawn on chart.
		/// </summary>
		public static string Str1957 => GetString(Str1957Key);

		/// <summary>
		/// Value must be in the interval from 1 to 10.
		/// </summary>
		public const string Str1958Key = nameof(Str1958);

		/// <summary>
		/// Value must be in the interval from 1 to 10.
		/// </summary>
		public static string Str1958 => GetString(Str1958Key);

		/// <summary>
		/// Smoothing
		/// </summary>
		public const string Str1959Key = nameof(Str1959);

		/// <summary>
		/// Smoothing
		/// </summary>
		public static string Str1959 => GetString(Str1959Key);

		/// <summary>
		/// Candles rendering smoothing (enabled by default).
		/// </summary>
		public const string Str1960Key = nameof(Str1960);

		/// <summary>
		/// Candles rendering smoothing (enabled by default).
		/// </summary>
		public static string Str1960 => GetString(Str1960Key);

		/// <summary>
		/// Marker
		/// </summary>
		public const string Str1961Key = nameof(Str1961);

		/// <summary>
		/// Marker
		/// </summary>
		public static string Str1961 => GetString(Str1961Key);

		/// <summary>
		/// Show Y-axis market.
		/// </summary>
		public const string Str1962Key = nameof(Str1962);

		/// <summary>
		/// Show Y-axis market.
		/// </summary>
		public static string Str1962 => GetString(Str1962Key);

		/// <summary>
		/// Type
		/// </summary>
		public const string Str1963Key = nameof(Str1963);

		/// <summary>
		/// Type
		/// </summary>
		public static string Str1963 => GetString(Str1963Key);

		/// <summary>
		/// Legend
		/// </summary>
		public const string Str1964Key = nameof(Str1964);

		/// <summary>
		/// Legend
		/// </summary>
		public static string Str1964 => GetString(Str1964Key);

		/// <summary>
		/// Should legend be shown on chart.
		/// </summary>
		public const string Str1965Key = nameof(Str1965);

		/// <summary>
		/// Should legend be shown on chart.
		/// </summary>
		public static string Str1965 => GetString(Str1965Key);

		/// <summary>
		/// X-axis
		/// </summary>
		public const string Str1966Key = nameof(Str1966);

		/// <summary>
		/// X-axis
		/// </summary>
		public static string Str1966 => GetString(Str1966Key);

		/// <summary>
		/// X-axis.
		/// </summary>
		public const string Str1967Key = nameof(Str1967);

		/// <summary>
		/// X-axis.
		/// </summary>
		public static string Str1967 => GetString(Str1967Key);

		/// <summary>
		/// Y-axis
		/// </summary>
		public const string Str1968Key = nameof(Str1968);

		/// <summary>
		/// Y-axis
		/// </summary>
		public static string Str1968 => GetString(Str1968Key);

		/// <summary>
		/// Y-axis.
		/// </summary>
		public const string Str1969Key = nameof(Str1969);

		/// <summary>
		/// Y-axis.
		/// </summary>
		public static string Str1969 => GetString(Str1969Key);

		/// <summary>
		/// Unknown type of chart {0}.
		/// </summary>
		public const string Str1970ParamsKey = nameof(Str1970Params);

		/// <summary>
		/// Unknown type of chart {0}.
		/// </summary>
		public static string Str1970Params => GetString(Str1970ParamsKey);

		/// <summary>
		/// Line (no gaps)
		/// </summary>
		public const string Str1972Key = nameof(Str1972);

		/// <summary>
		/// Line (no gaps)
		/// </summary>
		public static string Str1972 => GetString(Str1972Key);

		/// <summary>
		/// Stepped line
		/// </summary>
		public const string Str1973Key = nameof(Str1973);

		/// <summary>
		/// Stepped line
		/// </summary>
		public static string Str1973 => GetString(Str1973Key);

		/// <summary>
		/// Band
		/// </summary>
		public const string Str1974Key = nameof(Str1974);

		/// <summary>
		/// Band
		/// </summary>
		public static string Str1974 => GetString(Str1974Key);

		/// <summary>
		/// Band (one value)
		/// </summary>
		public const string Str1974Key_2 = nameof(Str1974_2);

		/// <summary>
		/// Band (one value)
		/// </summary>
		public static string Str1974_2 => GetString(Str1974Key_2);

		/// <summary>
		/// Points
		/// </summary>
		public const string Str1975Key = nameof(Str1975);

		/// <summary>
		/// Points
		/// </summary>
		public static string Str1975 => GetString(Str1975Key);

		/// <summary>
		/// Histogram
		/// </summary>
		public const string Str1976Key = nameof(Str1976);

		/// <summary>
		/// Histogram
		/// </summary>
		public static string Str1976 => GetString(Str1976Key);

		/// <summary>
		/// Bubble
		/// </summary>
		public const string Str1977Key = nameof(Str1977);

		/// <summary>
		/// Bubble
		/// </summary>
		public static string Str1977 => GetString(Str1977Key);

		/// <summary>
		/// Stacked bar chart
		/// </summary>
		public const string Str1978Key = nameof(Str1978);

		/// <summary>
		/// Stacked bar chart
		/// </summary>
		public static string Str1978 => GetString(Str1978Key);

		/// <summary>
		/// Indicator settings
		/// </summary>
		public const string Str1979Key = nameof(Str1979);

		/// <summary>
		/// Indicator settings
		/// </summary>
		public static string Str1979 => GetString(Str1979Key);

		/// <summary>
		/// Indicator
		/// </summary>
		public const string Str1981Key = nameof(Str1981);

		/// <summary>
		/// Indicator
		/// </summary>
		public static string Str1981 => GetString(Str1981Key);

		/// <summary>
		/// Indicator header that will be shown on chart.
		/// </summary>
		public const string Str1983Key = nameof(Str1983);

		/// <summary>
		/// Indicator header that will be shown on chart.
		/// </summary>
		public static string Str1983 => GetString(Str1983Key);

		/// <summary>
		/// Color
		/// </summary>
		public const string Str1984Key = nameof(Str1984);

		/// <summary>
		/// Color
		/// </summary>
		public static string Str1984 => GetString(Str1984Key);

		/// <summary>
		/// Line color (bars, etc.), with which the indicator will be drawn on chart.
		/// </summary>
		public const string Str1985Key = nameof(Str1985);

		/// <summary>
		/// Line color (bars, etc.), with which the indicator will be drawn on chart.
		/// </summary>
		public static string Str1985 => GetString(Str1985Key);

		/// <summary>
		/// Additional color
		/// </summary>
		public const string Str1986Key = nameof(Str1986);

		/// <summary>
		/// Additional color
		/// </summary>
		public static string Str1986 => GetString(Str1986Key);

		/// <summary>
		/// Additional line color (bars, etc.), which will be drawn on the chart indicator.
		/// </summary>
		public const string Str1987Key = nameof(Str1987);

		/// <summary>
		/// Additional line color (bars, etc.), which will be drawn on the chart indicator.
		/// </summary>
		public static string Str1987 => GetString(Str1987Key);

		/// <summary>
		/// Line width (bars, etc.), with which indicator will be drawn on chart.
		/// </summary>
		public const string Str1988Key = nameof(Str1988);

		/// <summary>
		/// Line width (bars, etc.), with which indicator will be drawn on chart.
		/// </summary>
		public static string Str1988 => GetString(Str1988Key);

		/// <summary>
		/// Value must be above or equal to 1.
		/// </summary>
		public const string Str1989Key = nameof(Str1989);

		/// <summary>
		/// Value must be above or equal to 1.
		/// </summary>
		public static string Str1989 => GetString(Str1989Key);

		/// <summary>
		/// Renderer
		/// </summary>
		public const string Str1990Key = nameof(Str1990);

		/// <summary>
		/// Renderer
		/// </summary>
		public static string Str1990 => GetString(Str1990Key);

		/// <summary>
		/// Renderer for extended indicator rendering.
		/// </summary>
		public const string Str1991Key = nameof(Str1991);

		/// <summary>
		/// Renderer for extended indicator rendering.
		/// </summary>
		public static string Str1991 => GetString(Str1991Key);

		/// <summary>
		/// Style of indicator rendering.
		/// </summary>
		public const string Str1992Key = nameof(Str1992);

		/// <summary>
		/// Style of indicator rendering.
		/// </summary>
		public static string Str1992 => GetString(Str1992Key);

		/// <summary>
		/// Template
		/// </summary>
		public const string TemplateKey = nameof(Template);

		/// <summary>
		/// Template
		/// </summary>
		public static string Template => GetString(TemplateKey);

		/// <summary>
		/// Rendering template for Dot style.
		/// </summary>
		public const string Str1994Key = nameof(Str1994);

		/// <summary>
		/// Rendering template for Dot style.
		/// </summary>
		public static string Str1994 => GetString(Str1994Key);

		/// <summary>
		/// Indicator smoothing.
		/// </summary>
		public const string Str1995Key = nameof(Str1995);

		/// <summary>
		/// Indicator smoothing.
		/// </summary>
		public static string Str1995 => GetString(Str1995Key);

		/// <summary>
		/// Security, for which orders from chart will be placed. If not specified, then strategy security is used.
		/// </summary>
		public const string Str1996Key = nameof(Str1996);

		/// <summary>
		/// Security, for which orders from chart will be placed. If not specified, then strategy security is used.
		/// </summary>
		public static string Str1996 => GetString(Str1996Key);

		/// <summary>
		/// Portfolio, which will be used for placing orders. If not specified, then strategy portfolio is used.
		/// </summary>
		public const string Str1997Key = nameof(Str1997);

		/// <summary>
		/// Portfolio, which will be used for placing orders. If not specified, then strategy portfolio is used.
		/// </summary>
		public static string Str1997 => GetString(Str1997Key);

		/// <summary>
		/// Auto-publishing
		/// </summary>
		public const string Str1998Key = nameof(Str1998);

		/// <summary>
		/// Auto-publishing
		/// </summary>
		public static string Str1998 => GetString(Str1998Key);

		/// <summary>
		/// Activate automatic chart publication on Yandex.Disk.
		/// </summary>
		public const string Str1999Key = nameof(Str1999);

		/// <summary>
		/// Activate automatic chart publication on Yandex.Disk.
		/// </summary>
		public static string Str1999 => GetString(Str1999Key);

		/// <summary>
		/// Chart publishing period.
		/// </summary>
		public const string Str2000Key = nameof(Str2000);

		/// <summary>
		/// Chart publishing period.
		/// </summary>
		public static string Str2000 => GetString(Str2000Key);

		/// <summary>
		/// Period must be greater than 0.
		/// </summary>
		public const string Str2001Key = nameof(Str2001);

		/// <summary>
		/// Period must be greater than 0.
		/// </summary>
		public static string Str2001 => GetString(Str2001Key);

		/// <summary>
		/// File name
		/// </summary>
		public const string Str2002Key = nameof(Str2002);

		/// <summary>
		/// File name
		/// </summary>
		public static string Str2002 => GetString(Str2002Key);

		/// <summary>
		/// File name, where an image on Yandex.Disk will be saved.
		/// </summary>
		public const string Str2003Key = nameof(Str2003);

		/// <summary>
		/// File name, where an image on Yandex.Disk will be saved.
		/// </summary>
		public static string Str2003 => GetString(Str2003Key);

		/// <summary>
		/// Chart does not contain any candle series.
		/// </summary>
		public const string Str2004Key = nameof(Str2004);

		/// <summary>
		/// Chart does not contain any candle series.
		/// </summary>
		public static string Str2004 => GetString(Str2004Key);

		/// <summary>
		/// Buy color
		/// </summary>
		public const string Str2006Key = nameof(Str2006);

		/// <summary>
		/// Buy color
		/// </summary>
		public static string Str2006 => GetString(Str2006Key);

		/// <summary>
		/// Color of graphics element on chart, indicating buy.
		/// </summary>
		public const string Str2007Key = nameof(Str2007);

		/// <summary>
		/// Color of graphics element on chart, indicating buy.
		/// </summary>
		public static string Str2007 => GetString(Str2007Key);

		/// <summary>
		/// Buy border color
		/// </summary>
		public const string Str2008Key = nameof(Str2008);

		/// <summary>
		/// Buy border color
		/// </summary>
		public static string Str2008 => GetString(Str2008Key);

		/// <summary>
		/// Border color of graphics element on chart, indicating buy.
		/// </summary>
		public const string Str2009Key = nameof(Str2009);

		/// <summary>
		/// Border color of graphics element on chart, indicating buy.
		/// </summary>
		public static string Str2009 => GetString(Str2009Key);

		/// <summary>
		/// Sell color
		/// </summary>
		public const string Str2010Key = nameof(Str2010);

		/// <summary>
		/// Sell color
		/// </summary>
		public static string Str2010 => GetString(Str2010Key);

		/// <summary>
		/// Color of graphics element on chart, indicating sell.
		/// </summary>
		public const string Str2011Key = nameof(Str2011);

		/// <summary>
		/// Color of graphics element on chart, indicating sell.
		/// </summary>
		public static string Str2011 => GetString(Str2011Key);

		/// <summary>
		/// Sell border color
		/// </summary>
		public const string Str2012Key = nameof(Str2012);

		/// <summary>
		/// Sell border color
		/// </summary>
		public static string Str2012 => GetString(Str2012Key);

		/// <summary>
		/// Border color of graphics element on chart, indicating sell.
		/// </summary>
		public const string Str2013Key = nameof(Str2013);

		/// <summary>
		/// Border color of graphics element on chart, indicating sell.
		/// </summary>
		public static string Str2013 => GetString(Str2013Key);

		/// <summary>
		/// New X value {0} is less than earlier added {1}.
		/// </summary>
		public const string Str2014ParamsKey = nameof(Str2014Params);

		/// <summary>
		/// New X value {0} is less than earlier added {1}.
		/// </summary>
		public static string Str2014Params => GetString(Str2014ParamsKey);

		/// <summary>
		/// Data deletion is not supported.
		/// </summary>
		public const string Str2015Key = nameof(Str2015);

		/// <summary>
		/// Data deletion is not supported.
		/// </summary>
		public static string Str2015 => GetString(Str2015Key);

		/// <summary>
		/// Incorrect data collection type.
		/// </summary>
		public const string Str2016Key = nameof(Str2016);

		/// <summary>
		/// Incorrect data collection type.
		/// </summary>
		public static string Str2016 => GetString(Str2016Key);

		/// <summary>
		/// Lips color
		/// </summary>
		public const string Str2017Key = nameof(Str2017);

		/// <summary>
		/// Lips color
		/// </summary>
		public static string Str2017 => GetString(Str2017Key);

		/// <summary>
		/// Lips line color.
		/// </summary>
		public const string Str2018Key = nameof(Str2018);

		/// <summary>
		/// Lips line color.
		/// </summary>
		public static string Str2018 => GetString(Str2018Key);

		/// <summary>
		/// Teeth color
		/// </summary>
		public const string Str2019Key = nameof(Str2019);

		/// <summary>
		/// Teeth color
		/// </summary>
		public static string Str2019 => GetString(Str2019Key);

		/// <summary>
		/// Teeth line color.
		/// </summary>
		public const string Str2020Key = nameof(Str2020);

		/// <summary>
		/// Teeth line color.
		/// </summary>
		public static string Str2020 => GetString(Str2020Key);

		/// <summary>
		/// Jaw color
		/// </summary>
		public const string Str2021Key = nameof(Str2021);

		/// <summary>
		/// Jaw color
		/// </summary>
		public static string Str2021 => GetString(Str2021Key);

		/// <summary>
		/// Jaw line color.
		/// </summary>
		public const string Str2022Key = nameof(Str2022);

		/// <summary>
		/// Jaw line color.
		/// </summary>
		public static string Str2022 => GetString(Str2022Key);

		/// <summary>
		/// DI+ color
		/// </summary>
		public const string Str2023Key = nameof(Str2023);

		/// <summary>
		/// DI+ color
		/// </summary>
		public static string Str2023 => GetString(Str2023Key);

		/// <summary>
		/// DI+ line color.
		/// </summary>
		public const string Str2024Key = nameof(Str2024);

		/// <summary>
		/// DI+ line color.
		/// </summary>
		public static string Str2024 => GetString(Str2024Key);

		/// <summary>
		/// DI- color
		/// </summary>
		public const string Str2025Key = nameof(Str2025);

		/// <summary>
		/// DI- color
		/// </summary>
		public static string Str2025 => GetString(Str2025Key);

		/// <summary>
		/// DI- line color.
		/// </summary>
		public const string Str2026Key = nameof(Str2026);

		/// <summary>
		/// DI- line color.
		/// </summary>
		public static string Str2026 => GetString(Str2026Key);

		/// <summary>
		/// ADX color
		/// </summary>
		public const string Str2027Key = nameof(Str2027);

		/// <summary>
		/// ADX color
		/// </summary>
		public static string Str2027 => GetString(Str2027Key);

		/// <summary>
		/// ADX line color.
		/// </summary>
		public const string Str2028Key = nameof(Str2028);

		/// <summary>
		/// ADX line color.
		/// </summary>
		public static string Str2028 => GetString(Str2028Key);

		/// <summary>
		/// UpBand color
		/// </summary>
		public const string Str2029Key = nameof(Str2029);

		/// <summary>
		/// UpBand color
		/// </summary>
		public static string Str2029 => GetString(Str2029Key);

		/// <summary>
		/// Color of the upper indicator line.
		/// </summary>
		public const string Str2030Key = nameof(Str2030);

		/// <summary>
		/// Color of the upper indicator line.
		/// </summary>
		public static string Str2030 => GetString(Str2030Key);

		/// <summary>
		/// LowBand color
		/// </summary>
		public const string Str2031Key = nameof(Str2031);

		/// <summary>
		/// LowBand color
		/// </summary>
		public static string Str2031 => GetString(Str2031Key);

		/// <summary>
		/// Color of the lower indicator line.
		/// </summary>
		public const string Str2032Key = nameof(Str2032);

		/// <summary>
		/// Color of the lower indicator line.
		/// </summary>
		public static string Str2032 => GetString(Str2032Key);

		/// <summary>
		/// Color of average
		/// </summary>
		public const string Str2033Key = nameof(Str2033);

		/// <summary>
		/// Color of average
		/// </summary>
		public static string Str2033 => GetString(Str2033Key);

		/// <summary>
		/// Color of average line.
		/// </summary>
		public const string Str2034Key = nameof(Str2034);

		/// <summary>
		/// Color of average line.
		/// </summary>
		public static string Str2034 => GetString(Str2034Key);

		/// <summary>
		/// Up color
		/// </summary>
		public const string Str2035Key = nameof(Str2035);

		/// <summary>
		/// Up color
		/// </summary>
		public static string Str2035 => GetString(Str2035Key);

		/// <summary>
		/// Up line color.
		/// </summary>
		public const string Str2036Key = nameof(Str2036);

		/// <summary>
		/// Up line color.
		/// </summary>
		public static string Str2036 => GetString(Str2036Key);

		/// <summary>
		/// Down color
		/// </summary>
		public const string Str2037Key = nameof(Str2037);

		/// <summary>
		/// Down color
		/// </summary>
		public static string Str2037 => GetString(Str2037Key);

		/// <summary>
		/// Down line color.
		/// </summary>
		public const string Str2038Key = nameof(Str2038);

		/// <summary>
		/// Down line color.
		/// </summary>
		public static string Str2038 => GetString(Str2038Key);

		/// <summary>
		/// Tenkan color
		/// </summary>
		public const string Str2039Key = nameof(Str2039);

		/// <summary>
		/// Tenkan color
		/// </summary>
		public static string Str2039 => GetString(Str2039Key);

		/// <summary>
		/// Tenkan line color.
		/// </summary>
		public const string Str2040Key = nameof(Str2040);

		/// <summary>
		/// Tenkan line color.
		/// </summary>
		public static string Str2040 => GetString(Str2040Key);

		/// <summary>
		/// Kijun color
		/// </summary>
		public const string Str2041Key = nameof(Str2041);

		/// <summary>
		/// Kijun color
		/// </summary>
		public static string Str2041 => GetString(Str2041Key);

		/// <summary>
		/// Kijun line color.
		/// </summary>
		public const string Str2042Key = nameof(Str2042);

		/// <summary>
		/// Kijun line color.
		/// </summary>
		public static string Str2042 => GetString(Str2042Key);

		/// <summary>
		/// SenkouA color
		/// </summary>
		public const string Str2043Key = nameof(Str2043);

		/// <summary>
		/// SenkouA color
		/// </summary>
		public static string Str2043 => GetString(Str2043Key);

		/// <summary>
		/// SenkouA line color.
		/// </summary>
		public const string Str2044Key = nameof(Str2044);

		/// <summary>
		/// SenkouA line color.
		/// </summary>
		public static string Str2044 => GetString(Str2044Key);

		/// <summary>
		/// SenkouB color
		/// </summary>
		public const string Str2045Key = nameof(Str2045);

		/// <summary>
		/// SenkouB color
		/// </summary>
		public static string Str2045 => GetString(Str2045Key);

		/// <summary>
		/// SenkouB line color.
		/// </summary>
		public const string Str2046Key = nameof(Str2046);

		/// <summary>
		/// SenkouB line color.
		/// </summary>
		public static string Str2046 => GetString(Str2046Key);

		/// <summary>
		/// Chinkou color
		/// </summary>
		public const string Str2047Key = nameof(Str2047);

		/// <summary>
		/// Chinkou color
		/// </summary>
		public static string Str2047 => GetString(Str2047Key);

		/// <summary>
		/// Chinkou line color.
		/// </summary>
		public const string Str2048Key = nameof(Str2048);

		/// <summary>
		/// Chinkou line color.
		/// </summary>
		public static string Str2048 => GetString(Str2048Key);

		/// <summary>
		/// Color of increasing candle.
		/// </summary>
		public const string Str2049Key = nameof(Str2049);

		/// <summary>
		/// Color of increasing candle.
		/// </summary>
		public static string Str2049 => GetString(Str2049Key);

		/// <summary>
		/// Color of decreasing candle.
		/// </summary>
		public const string Str2050Key = nameof(Str2050);

		/// <summary>
		/// Color of decreasing candle.
		/// </summary>
		public static string Str2050 => GetString(Str2050Key);

		/// <summary>
		/// Auto zoom
		/// </summary>
		public const string Str2051Key = nameof(Str2051);

		/// <summary>
		/// Auto zoom
		/// </summary>
		public static string Str2051 => GetString(Str2051Key);

		/// <summary>
		/// Use automatic scaling «Bubble» mode.
		/// </summary>
		public const string Str2052Key = nameof(Str2052);

		/// <summary>
		/// Use automatic scaling «Bubble» mode.
		/// </summary>
		public static string Str2052 => GetString(Str2052Key);

		/// <summary>
		/// Scale
		/// </summary>
		public const string Str2053Key = nameof(Str2053);

		/// <summary>
		/// Scale
		/// </summary>
		public static string Str2053 => GetString(Str2053Key);

		/// <summary>
		/// Manual scale for "Bubble" mode.
		/// </summary>
		public const string Str2054Key = nameof(Str2054);

		/// <summary>
		/// Manual scale for "Bubble" mode.
		/// </summary>
		public static string Str2054 => GetString(Str2054Key);

		/// <summary>
		/// Line settings
		/// </summary>
		public const string Str2055Key = nameof(Str2055);

		/// <summary>
		/// Line settings
		/// </summary>
		public static string Str2055 => GetString(Str2055Key);

		/// <summary>
		/// Line color (bars, etc.), with which it will be drawn on chart.
		/// </summary>
		public const string Str2056Key = nameof(Str2056);

		/// <summary>
		/// Line color (bars, etc.), with which it will be drawn on chart.
		/// </summary>
		public static string Str2056 => GetString(Str2056Key);

		/// <summary>
		/// Additional line color (bars, etc.), with which it will be drawn on the chart.
		/// </summary>
		public const string Str2057Key = nameof(Str2057);

		/// <summary>
		/// Additional line color (bars, etc.), with which it will be drawn on the chart.
		/// </summary>
		public static string Str2057 => GetString(Str2057Key);

		/// <summary>
		/// Line width (bars, etc.), with which it will be drawn on chart.
		/// </summary>
		public const string Str2058Key = nameof(Str2058);

		/// <summary>
		/// Line width (bars, etc.), with which it will be drawn on chart.
		/// </summary>
		public static string Str2058 => GetString(Str2058Key);

		/// <summary>
		/// Line smoothing.
		/// </summary>
		public const string Str2059Key = nameof(Str2059);

		/// <summary>
		/// Line smoothing.
		/// </summary>
		public static string Str2059 => GetString(Str2059Key);

		/// <summary>
		/// Delete
		/// </summary>
		public const string Str2060Key = nameof(Str2060);

		/// <summary>
		/// Delete
		/// </summary>
		public static string Str2060 => GetString(Str2060Key);

		/// <summary>
		/// Unknown type of annotation {0}.
		/// </summary>
		public const string Str2061ParamsKey = nameof(Str2061Params);

		/// <summary>
		/// Unknown type of annotation {0}.
		/// </summary>
		public static string Str2061Params => GetString(Str2061ParamsKey);

		/// <summary>
		/// Unknown element of chart {0}.
		/// </summary>
		public const string Str2062ParamsKey = nameof(Str2062Params);

		/// <summary>
		/// Unknown element of chart {0}.
		/// </summary>
		public static string Str2062Params => GetString(Str2062ParamsKey);

		/// <summary>
		/// Type of line {0} is not supported.
		/// </summary>
		public const string Str2063ParamsKey = nameof(Str2063Params);

		/// <summary>
		/// Type of line {0} is not supported.
		/// </summary>
		public static string Str2063Params => GetString(Str2063ParamsKey);

		/// <summary>
		/// Cannot change candle value for date {0} last added value is for date {1}.
		/// </summary>
		public const string Str2064ParamsKey = nameof(Str2064Params);

		/// <summary>
		/// Cannot change candle value for date {0} last added value is for date {1}.
		/// </summary>
		public static string Str2064Params => GetString(Str2064ParamsKey);

		/// <summary>
		/// Rendering of indicators with Band line type is only possible with IchartIndicatorPainter.
		/// </summary>
		public const string Str2065Key = nameof(Str2065);

		/// <summary>
		/// Rendering of indicators with Band line type is only possible with IchartIndicatorPainter.
		/// </summary>
		public static string Str2065 => GetString(Str2065Key);

		/// <summary>
		/// Selected style of rendering is not supported for this indicator.
		/// </summary>
		public const string Str2066Key = nameof(Str2066);

		/// <summary>
		/// Selected style of rendering is not supported for this indicator.
		/// </summary>
		public static string Str2066 => GetString(Str2066Key);

		/// <summary>
		/// Cannot change value of element {0} for date {1} last added value is for date {2}.
		/// </summary>
		public const string Str2067ParamsKey = nameof(Str2067Params);

		/// <summary>
		/// Cannot change value of element {0} for date {1} last added value is for date {2}.
		/// </summary>
		public static string Str2067Params => GetString(Str2067ParamsKey);

		/// <summary>
		/// Cannot change type of axis {0} that is used to display series on a chart.
		/// </summary>
		public const string Str2069ParamsKey = nameof(Str2069Params);

		/// <summary>
		/// Cannot change type of axis {0} that is used to display series on a chart.
		/// </summary>
		public static string Str2069Params => GetString(Str2069ParamsKey);

		/// <summary>
		/// Cannot delete axis {0} which is used to display series on chart.
		/// </summary>
		public const string Str2070ParamsKey = nameof(Str2070Params);

		/// <summary>
		/// Cannot delete axis {0} which is used to display series on chart.
		/// </summary>
		public static string Str2070Params => GetString(Str2070ParamsKey);

		/// <summary>
		/// Group for axis {0} not found.
		/// </summary>
		public const string Str2071ParamsKey = nameof(Str2071Params);

		/// <summary>
		/// Group for axis {0} not found.
		/// </summary>
		public static string Str2071Params => GetString(Str2071ParamsKey);

		/// <summary>
		/// Group range {0} not found.
		/// </summary>
		public const string Str2072ParamsKey = nameof(Str2072Params);

		/// <summary>
		/// Group range {0} not found.
		/// </summary>
		public static string Str2072Params => GetString(Str2072ParamsKey);

		/// <summary>
		/// Number of fields is equal to {0} instead of the expected {1}.
		/// </summary>
		public const string Str2076ParamsKey = nameof(Str2076Params);

		/// <summary>
		/// Number of fields is equal to {0} instead of the expected {1}.
		/// </summary>
		public static string Str2076Params => GetString(Str2076ParamsKey);

		/// <summary>
		/// Unknown time-frame.
		/// </summary>
		public const string Str2077Key = nameof(Str2077);

		/// <summary>
		/// Unknown time-frame.
		/// </summary>
		public static string Str2077 => GetString(Str2077Key);

		/// <summary>
		/// Server returned error {0} for date {1}.
		/// </summary>
		public const string Str2078ParamsKey = nameof(Str2078Params);

		/// <summary>
		/// Server returned error {0} for date {1}.
		/// </summary>
		public static string Str2078Params => GetString(Str2078ParamsKey);

		/// <summary>
		/// Time-frame is out of range.
		/// </summary>
		public const string Str2079Key = nameof(Str2079);

		/// <summary>
		/// Time-frame is out of range.
		/// </summary>
		public static string Str2079 => GetString(Str2079Key);

		/// <summary>
		/// Session with ID {0} not found.
		/// </summary>
		public const string Str2080ParamsKey = nameof(Str2080Params);

		/// <summary>
		/// Session with ID {0} not found.
		/// </summary>
		public static string Str2080Params => GetString(Str2080ParamsKey);

		/// <summary>
		/// Session {0} does not have the rights for {1} for {2} {3} ({4}) {5}.
		/// </summary>
		public const string Str2081ParamsKey = nameof(Str2081Params);

		/// <summary>
		/// Session {0} does not have the rights for {1} for {2} {3} ({4}) {5}.
		/// </summary>
		public static string Str2081Params => GetString(Str2081ParamsKey);

		/// <summary>
		/// Type of data {0} is not supported.
		/// </summary>
		public const string Str2082ParamsKey = nameof(Str2082Params);

		/// <summary>
		/// Type of data {0} is not supported.
		/// </summary>
		public static string Str2082Params => GetString(Str2082ParamsKey);

		/// <summary>
		/// HydraServer is not available.
		/// </summary>
		public const string Str2083Key = nameof(Str2083);

		/// <summary>
		/// HydraServer is not available.
		/// </summary>
		public static string Str2083 => GetString(Str2083Key);

		/// <summary>
		/// Session {0}. Created for user {1} (product={2}, version={3}).
		/// </summary>
		public const string Str2084ParamsKey = nameof(Str2084Params);

		/// <summary>
		/// Session {0}. Created for user {1} (product={2}, version={3}).
		/// </summary>
		public static string Str2084Params => GetString(Str2084ParamsKey);

		/// <summary>
		/// Session {0}. End.
		/// </summary>
		public const string Str2085ParamsKey = nameof(Str2085Params);

		/// <summary>
		/// Session {0}. End.
		/// </summary>
		public static string Str2085Params => GetString(Str2085ParamsKey);

		/// <summary>
		/// Session {0}. Securities search.
		/// </summary>
		public const string Str2086ParamsKey = nameof(Str2086Params);

		/// <summary>
		/// Session {0}. Securities search.
		/// </summary>
		public static string Str2086Params => GetString(Str2086ParamsKey);

		/// <summary>
		/// Session {0}. Filtered securities search.
		/// </summary>
		public const string Str2087ParamsKey = nameof(Str2087Params);

		/// <summary>
		/// Session {0}. Filtered securities search.
		/// </summary>
		public static string Str2087Params => GetString(Str2087ParamsKey);

		/// <summary>
		/// Session {0}. Receiving securities.
		/// </summary>
		public const string Str2088ParamsKey = nameof(Str2088Params);

		/// <summary>
		/// Session {0}. Receiving securities.
		/// </summary>
		public static string Str2088Params => GetString(Str2088ParamsKey);

		/// <summary>
		/// Session {0}. Receiving dates for {1} {2} {3}.
		/// </summary>
		public const string Str2089ParamsKey = nameof(Str2089Params);

		/// <summary>
		/// Session {0}. Receiving dates for {1} {2} {3}.
		/// </summary>
		public static string Str2089Params => GetString(Str2089ParamsKey);

		/// <summary>
		/// Session {0}. Receiving data types for {1}.
		/// </summary>
		public const string Str2090ParamsKey = nameof(Str2090Params);

		/// <summary>
		/// Session {0}. Receiving data types for {1}.
		/// </summary>
		public static string Str2090Params => GetString(Str2090ParamsKey);

		/// <summary>
		/// Session {0}. Saving for {1} {2} {3} for {4}.
		/// </summary>
		public const string Str2091ParamsKey = nameof(Str2091Params);

		/// <summary>
		/// Session {0}. Saving for {1} {2} {3} for {4}.
		/// </summary>
		public static string Str2091Params => GetString(Str2091ParamsKey);

		/// <summary>
		/// Session {0}. Deleting for {1} {2} {3} for {4}.
		/// </summary>
		public const string Str2092ParamsKey = nameof(Str2092Params);

		/// <summary>
		/// Session {0}. Deleting for {1} {2} {3} for {4}.
		/// </summary>
		public static string Str2092Params => GetString(Str2092ParamsKey);

		/// <summary>
		/// Session {0}. Loading stream or {1} {2} {3} for {4}.
		/// </summary>
		public const string Str2093ParamsKey = nameof(Str2093Params);

		/// <summary>
		/// Session {0}. Loading stream or {1} {2} {3} for {4}.
		/// </summary>
		public static string Str2093Params => GetString(Str2093ParamsKey);

		/// <summary>
		/// Wrong security code {0}.
		/// </summary>
		public const string Str2094ParamsKey = nameof(Str2094Params);

		/// <summary>
		/// Wrong security code {0}.
		/// </summary>
		public static string Str2094Params => GetString(Str2094ParamsKey);

		/// <summary>
		/// Wrong type of security. Must be either futures or options contract.
		/// </summary>
		public const string Str2095Key = nameof(Str2095);

		/// <summary>
		/// Wrong type of security. Must be either futures or options contract.
		/// </summary>
		public static string Str2095 => GetString(Str2095Key);

		/// <summary>
		/// Wrong type of security. Must be an index, stock, futures or options contract.
		/// </summary>
		public const string Str2096Key = nameof(Str2096);

		/// <summary>
		/// Wrong type of security. Must be an index, stock, futures or options contract.
		/// </summary>
		public static string Str2096 => GetString(Str2096Key);

		/// <summary>
		/// Wrong security board.
		/// </summary>
		public const string Str2097Key = nameof(Str2097);

		/// <summary>
		/// Wrong security board.
		/// </summary>
		public static string Str2097 => GetString(Str2097Key);

		/// <summary>
		/// File '{0}' was not successfullu parsed and was deleted. Wrong row of file '{1}'.
		/// </summary>
		public const string Str2098ParamsKey = nameof(Str2098Params);

		/// <summary>
		/// File '{0}' was not successfullu parsed and was deleted. Wrong row of file '{1}'.
		/// </summary>
		public static string Str2098Params => GetString(Str2098ParamsKey);

		/// <summary>
		/// Security {0} does not contain {1} identifier.
		/// </summary>
		public const string Str2099ParamsKey = nameof(Str2099Params);

		/// <summary>
		/// Security {0} does not contain {1} identifier.
		/// </summary>
		public static string Str2099Params => GetString(Str2099ParamsKey);

		/// <summary>
		/// Security {0} contains an incorrect {1} identifier {2}.
		/// </summary>
		public const string Str2100ParamsKey = nameof(Str2100Params);

		/// <summary>
		/// Security {0} contains an incorrect {1} identifier {2}.
		/// </summary>
		public static string Str2100Params => GetString(Str2100ParamsKey);

		/// <summary>
		/// TimeFrame must be 0, 1, 5, 10, 15, 30, 60 mins or 1 day.
		/// </summary>
		public const string Str2101Key = nameof(Str2101);

		/// <summary>
		/// TimeFrame must be 0, 1, 5, 10, 15, 30, 60 mins or 1 day.
		/// </summary>
		public static string Str2101 => GetString(Str2101Key);

		/// <summary>
		/// Wrong time-frame.
		/// </summary>
		public const string Str2102Key = nameof(Str2102);

		/// <summary>
		/// Wrong time-frame.
		/// </summary>
		public static string Str2102 => GetString(Str2102Key);

		/// <summary>
		/// Unknown day of a competition.
		/// </summary>
		public const string Str2105Key = nameof(Str2105);

		/// <summary>
		/// Unknown day of a competition.
		/// </summary>
		public static string Str2105 => GetString(Str2105Key);

		/// <summary>
		/// Unknown participant {0}.
		/// </summary>
		public const string Str2106ParamsKey = nameof(Str2106Params);

		/// <summary>
		/// Unknown participant {0}.
		/// </summary>
		public static string Str2106Params => GetString(Str2106ParamsKey);

		/// <summary>
		/// File {0} does not contain header.
		/// </summary>
		public const string Str2107ParamsKey = nameof(Str2107Params);

		/// <summary>
		/// File {0} does not contain header.
		/// </summary>
		public static string Str2107Params => GetString(Str2107ParamsKey);

		/// <summary>
		/// Wrong trade ID {0}.
		/// </summary>
		public const string Str2108ParamsKey = nameof(Str2108Params);

		/// <summary>
		/// Wrong trade ID {0}.
		/// </summary>
		public static string Str2108Params => GetString(Str2108ParamsKey);

		/// <summary>
		/// Security with name {0} not found for trade {1}.
		/// </summary>
		public const string Str2109ParamsKey = nameof(Str2109Params);

		/// <summary>
		/// Security with name {0} not found for trade {1}.
		/// </summary>
		public static string Str2109Params => GetString(Str2109ParamsKey);

		/// <summary>
		/// Security {0} has an unacceptable price step {1}. Underlying asset {2} price step is equal {3}.
		/// </summary>
		public const string Str2110ParamsKey = nameof(Str2110Params);

		/// <summary>
		/// Security {0} has an unacceptable price step {1}. Underlying asset {2} price step is equal {3}.
		/// </summary>
		public static string Str2110Params => GetString(Str2110ParamsKey);

		/// <summary>
		/// Failed to get data.
		/// </summary>
		public const string Str2112Key = nameof(Str2112);

		/// <summary>
		/// Failed to get data.
		/// </summary>
		public static string Str2112 => GetString(Str2112Key);

		/// <summary>
		/// Wrong name of file {0}.
		/// </summary>
		public const string Str2113ParamsKey = nameof(Str2113Params);

		/// <summary>
		/// Wrong name of file {0}.
		/// </summary>
		public static string Str2113Params => GetString(Str2113ParamsKey);

		/// <summary>
		/// Wrong trade ID {0}.
		/// </summary>
		public const string Str2114ParamsKey = nameof(Str2114Params);

		/// <summary>
		/// Wrong trade ID {0}.
		/// </summary>
		public static string Str2114Params => GetString(Str2114ParamsKey);

		/// <summary>
		/// List {0} was not found in file {1}.
		/// </summary>
		public const string Str2115ParamsKey = nameof(Str2115Params);

		/// <summary>
		/// List {0} was not found in file {1}.
		/// </summary>
		public static string Str2115Params => GetString(Str2115ParamsKey);

		/// <summary>
		/// Default value is not specified.
		/// </summary>
		public const string Str2116Key = nameof(Str2116);

		/// <summary>
		/// Default value is not specified.
		/// </summary>
		public static string Str2116 => GetString(Str2116Key);

		/// <summary>
		/// Wrong type of security.
		/// </summary>
		public const string Str2117Key = nameof(Str2117);

		/// <summary>
		/// Wrong type of security.
		/// </summary>
		public static string Str2117 => GetString(Str2117Key);

		/// <summary>
		/// Wrong type of security {0}.
		/// </summary>
		public const string Str2118ParamsKey = nameof(Str2118Params);

		/// <summary>
		/// Wrong type of security {0}.
		/// </summary>
		public static string Str2118Params => GetString(Str2118ParamsKey);

		/// <summary>
		/// America
		/// </summary>
		public const string AmericaKey = nameof(America);

		/// <summary>
		/// America
		/// </summary>
		public static string America => GetString(AmericaKey);

		/// <summary>
		/// Additional
		/// </summary>
		public const string Str2121Key = nameof(Str2121);

		/// <summary>
		/// Additional
		/// </summary>
		public static string Str2121 => GetString(Str2121Key);

		/// <summary>
		/// Level1 server
		/// </summary>
		public const string Str2122Key = nameof(Str2122);

		/// <summary>
		/// Level1 server
		/// </summary>
		public static string Str2122 => GetString(Str2122Key);

		/// <summary>
		/// Address for obtaining data on Level1.
		/// </summary>
		public const string Str2123Key = nameof(Str2123);

		/// <summary>
		/// Address for obtaining data on Level1.
		/// </summary>
		public static string Str2123 => GetString(Str2123Key);

		/// <summary>
		/// Level2 server
		/// </summary>
		public const string Str2124Key = nameof(Str2124);

		/// <summary>
		/// Level2 server
		/// </summary>
		public static string Str2124 => GetString(Str2124Key);

		/// <summary>
		/// Address for obtaining data on Level2.
		/// </summary>
		public const string Str2125Key = nameof(Str2125);

		/// <summary>
		/// Address for obtaining data on Level2.
		/// </summary>
		public static string Str2125 => GetString(Str2125Key);

		/// <summary>
		/// Lookup server
		/// </summary>
		public const string Str2126Key = nameof(Str2126);

		/// <summary>
		/// Lookup server
		/// </summary>
		public static string Str2126 => GetString(Str2126Key);

		/// <summary>
		/// Address for obtaining history data.
		/// </summary>
		public const string Str2127Key = nameof(Str2127);

		/// <summary>
		/// Address for obtaining history data.
		/// </summary>
		public static string Str2127 => GetString(Str2127Key);

		/// <summary>
		/// Admin server
		/// </summary>
		public const string Str2128Key = nameof(Str2128);

		/// <summary>
		/// Admin server
		/// </summary>
		public static string Str2128 => GetString(Str2128Key);

		/// <summary>
		/// Address for obtaining service data.
		/// </summary>
		public const string Str2129Key = nameof(Str2129);

		/// <summary>
		/// Address for obtaining service data.
		/// </summary>
		public static string Str2129 => GetString(Str2129Key);

		/// <summary>
		/// Address for obtaining derivative data.
		/// </summary>
		public const string Str2130Key = nameof(Str2130);

		/// <summary>
		/// Address for obtaining derivative data.
		/// </summary>
		public static string Str2130 => GetString(Str2130Key);

		/// <summary>
		/// Data for Level1
		/// </summary>
		public const string Str2131Key = nameof(Str2131);

		/// <summary>
		/// Data for Level1
		/// </summary>
		public static string Str2131 => GetString(Str2131Key);

		/// <summary>
		/// All types of data for Level1, which have to be translated.
		/// </summary>
		public const string Str2132Key = nameof(Str2132);

		/// <summary>
		/// All types of data for Level1, which have to be translated.
		/// </summary>
		public static string Str2132 => GetString(Str2132Key);

		/// <summary>
		/// Data type
		/// </summary>
		public const string Str2133Key = nameof(Str2133);

		/// <summary>
		/// Data type
		/// </summary>
		public static string Str2133 => GetString(Str2133Key);

		/// <summary>
		/// Securities types, for which data must be received.
		/// </summary>
		public const string Str2134Key = nameof(Str2134);

		/// <summary>
		/// Securities types, for which data must be received.
		/// </summary>
		public static string Str2134 => GetString(Str2134Key);

		/// <summary>
		/// Load securities
		/// </summary>
		public const string Str2135Key = nameof(Str2135);

		/// <summary>
		/// Load securities
		/// </summary>
		public static string Str2135 => GetString(Str2135Key);

		/// <summary>
		/// Should the whole set of securities be loaded from IQFeed website archive.
		/// </summary>
		public const string Str2136Key = nameof(Str2136);

		/// <summary>
		/// Should the whole set of securities be loaded from IQFeed website archive.
		/// </summary>
		public static string Str2136 => GetString(Str2136Key);

		/// <summary>
		/// File with securities
		/// </summary>
		public const string Str2137Key = nameof(Str2137);

		/// <summary>
		/// File with securities
		/// </summary>
		public static string Str2137 => GetString(Str2137Key);

		/// <summary>
		/// Path to file with IQFeed list of securities, downloaded from the website. If path is specified, then secondary download from website does not occur, and only the local copy gets parsed.
		/// </summary>
		public const string Str2138Key = nameof(Str2138);

		/// <summary>
		/// Path to file with IQFeed list of securities, downloaded from the website. If path is specified, then secondary download from website does not occur, and only the local copy gets parsed.
		/// </summary>
		public static string Str2138 => GetString(Str2138Key);

		/// <summary>
		/// Interval {0} isn't supported.
		/// </summary>
		public const string Str2139ParamsKey = nameof(Str2139Params);

		/// <summary>
		/// Interval {0} isn't supported.
		/// </summary>
		public static string Str2139Params => GetString(Str2139ParamsKey);

		/// <summary>
		/// Unknown type of security '{0}'.
		/// </summary>
		public const string Str2140ParamsKey = nameof(Str2140Params);

		/// <summary>
		/// Unknown type of security '{0}'.
		/// </summary>
		public static string Str2140Params => GetString(Str2140ParamsKey);

		/// <summary>
		/// Error parsing string '{0}'.
		/// </summary>
		public const string Str2141ParamsKey = nameof(Str2141Params);

		/// <summary>
		/// Error parsing string '{0}'.
		/// </summary>
		public static string Str2141Params => GetString(Str2141ParamsKey);

		/// <summary>
		/// Unknown type of message '{0}'.
		/// </summary>
		public const string Str2142ParamsKey = nameof(Str2142Params);

		/// <summary>
		/// Unknown type of message '{0}'.
		/// </summary>
		public static string Str2142Params => GetString(Str2142ParamsKey);

		/// <summary>
		/// Message type {0} is not supported by IQFeed.
		/// </summary>
		public const string Str2143ParamsKey = nameof(Str2143Params);

		/// <summary>
		/// Message type {0} is not supported by IQFeed.
		/// </summary>
		public static string Str2143Params => GetString(Str2143ParamsKey);

		/// <summary>
		/// Receiving ticks {0} {1}.
		/// </summary>
		public const string Str2144ParamsKey = nameof(Str2144Params);

		/// <summary>
		/// Receiving ticks {0} {1}.
		/// </summary>
		public static string Str2144Params => GetString(Str2144ParamsKey);

		/// <summary>
		/// Receiving ticks {0} from {1} to {2}.
		/// </summary>
		public const string Str2145ParamsKey = nameof(Str2145Params);

		/// <summary>
		/// Receiving ticks {0} from {1} to {2}.
		/// </summary>
		public static string Str2145Params => GetString(Str2145ParamsKey);

		/// <summary>
		/// Receiving candles {0} {1}.
		/// </summary>
		public const string Str2146ParamsKey = nameof(Str2146Params);

		/// <summary>
		/// Receiving candles {0} {1}.
		/// </summary>
		public static string Str2146Params => GetString(Str2146ParamsKey);

		/// <summary>
		/// Starting date must be less than end date.
		/// </summary>
		public const string Str2147Key = nameof(Str2147);

		/// <summary>
		/// Starting date must be less than end date.
		/// </summary>
		public static string Str2147 => GetString(Str2147Key);

		/// <summary>
		/// Receiving candles {0} from {1} to {2}.
		/// </summary>
		public const string Str2148ParamsKey = nameof(Str2148Params);

		/// <summary>
		/// Receiving candles {0} from {1} to {2}.
		/// </summary>
		public static string Str2148Params => GetString(Str2148ParamsKey);

		/// <summary>
		/// Unknown end of L1 stream {0}.
		/// </summary>
		public const string Str2149ParamsKey = nameof(Str2149Params);

		/// <summary>
		/// Unknown end of L1 stream {0}.
		/// </summary>
		public static string Str2149Params => GetString(Str2149ParamsKey);

		/// <summary>
		/// Gap in candles {0}.
		/// </summary>
		public const string Str2150ParamsKey = nameof(Str2150Params);

		/// <summary>
		/// Gap in candles {0}.
		/// </summary>
		public static string Str2150Params => GetString(Str2150ParamsKey);

		/// <summary>
		/// Gap in ticks {0}.
		/// </summary>
		public const string Str2151ParamsKey = nameof(Str2151Params);

		/// <summary>
		/// Gap in ticks {0}.
		/// </summary>
		public static string Str2151Params => GetString(Str2151ParamsKey);

		/// <summary>
		/// Connection was not stopped from previous connection.
		/// </summary>
		public const string Str2152Key = nameof(Str2152);

		/// <summary>
		/// Connection was not stopped from previous connection.
		/// </summary>
		public static string Str2152 => GetString(Str2152Key);

		/// <summary>
		/// Connection was not established.
		/// </summary>
		public const string Str2153Key = nameof(Str2153);

		/// <summary>
		/// Connection was not established.
		/// </summary>
		public static string Str2153 => GetString(Str2153Key);

		/// <summary>
		/// [{0}] Export cycle end.
		/// </summary>
		public const string Str2154ParamsKey = nameof(Str2154Params);

		/// <summary>
		/// [{0}] Export cycle end.
		/// </summary>
		public static string Str2154Params => GetString(Str2154ParamsKey);

		/// <summary>
		/// Connection closed.
		/// </summary>
		public const string Str2155Key = nameof(Str2155);

		/// <summary>
		/// Connection closed.
		/// </summary>
		public static string Str2155 => GetString(Str2155Key);

		/// <summary>
		/// [{0}] Export stream end.
		/// </summary>
		public const string Str2156ParamsKey = nameof(Str2156Params);

		/// <summary>
		/// [{0}] Export stream end.
		/// </summary>
		public static string Str2156Params => GetString(Str2156ParamsKey);

		/// <summary>
		/// Error sending command: {0}
		/// </summary>
		public const string Str2157ParamsKey = nameof(Str2157Params);

		/// <summary>
		/// Error sending command: {0}
		/// </summary>
		public static string Str2157Params => GetString(Str2157ParamsKey);

		/// <summary>
		/// Connected successfully.
		/// </summary>
		public const string Str2169Key = nameof(Str2169);

		/// <summary>
		/// Connected successfully.
		/// </summary>
		public static string Str2169 => GetString(Str2169Key);

		/// <summary>
		/// Connecting...
		/// </summary>
		public const string Str2170Key = nameof(Str2170);

		/// <summary>
		/// Connecting...
		/// </summary>
		public static string Str2170 => GetString(Str2170Key);

		/// <summary>
		/// Portfolio {0} has become available.
		/// </summary>
		public const string Str2171ParamsKey = nameof(Str2171Params);

		/// <summary>
		/// Portfolio {0} has become available.
		/// </summary>
		public static string Str2171Params => GetString(Str2171ParamsKey);

		/// <summary>
		/// Security appeared.
		/// </summary>
		public const string Str2172Key = nameof(Str2172);

		/// <summary>
		/// Security appeared.
		/// </summary>
		public static string Str2172 => GetString(Str2172Key);

		/// <summary>
		/// Trade {0} at price {1} for security {2} with volume {3} in {4}.
		/// </summary>
		public const string Str2173ParamsKey = nameof(Str2173Params);

		/// <summary>
		/// Trade {0} at price {1} for security {2} with volume {3} in {4}.
		/// </summary>
		public static string Str2173Params => GetString(Str2173ParamsKey);

		/// <summary>
		/// Waiting for security and portfolio {0} to appear in the program...
		/// </summary>
		public const string Str2174ParamsKey = nameof(Str2174Params);

		/// <summary>
		/// Waiting for security and portfolio {0} to appear in the program...
		/// </summary>
		public static string Str2174Params => GetString(Str2174ParamsKey);

		/// <summary>
		/// Waiting for security data to update...
		/// </summary>
		public const string Str2175Key = nameof(Str2175);

		/// <summary>
		/// Waiting for security data to update...
		/// </summary>
		public static string Str2175 => GetString(Str2175Key);

		/// <summary>
		/// Current value of spread middle {0:0.##}
		/// </summary>
		public const string Str2176ParamsKey = nameof(Str2176Params);

		/// <summary>
		/// Current value of spread middle {0:0.##}
		/// </summary>
		public static string Str2176Params => GetString(Str2176ParamsKey);

		/// <summary>
		/// Received security {0}.
		/// </summary>
		public const string Str2188ParamsKey = nameof(Str2188Params);

		/// <summary>
		/// Received security {0}.
		/// </summary>
		public static string Str2188Params => GetString(Str2188ParamsKey);

		/// <summary>
		/// Task state cannot be changed from {0} to {1}.
		/// </summary>
		public const string Str2189ParamsKey = nameof(Str2189Params);

		/// <summary>
		/// Task state cannot be changed from {0} to {1}.
		/// </summary>
		public static string Str2189Params => GetString(Str2189ParamsKey);

		/// <summary>
		/// Moved into state {0}.
		/// </summary>
		public const string Str2190ParamsKey = nameof(Str2190Params);

		/// <summary>
		/// Moved into state {0}.
		/// </summary>
		public static string Str2190Params => GetString(Str2190ParamsKey);

		/// <summary>
		/// When source was launched a maximum timeout occurred. Source will be stopped.
		/// </summary>
		public const string Str2191Key = nameof(Str2191);

		/// <summary>
		/// When source was launched a maximum timeout occurred. Source will be stopped.
		/// </summary>
		public static string Str2191 => GetString(Str2191Key);

		/// <summary>
		/// Error launching source. Source will be stopped.
		/// </summary>
		public const string Str2192Key = nameof(Str2192);

		/// <summary>
		/// Error launching source. Source will be stopped.
		/// </summary>
		public static string Str2192 => GetString(Str2192Key);

		/// <summary>
		/// During source work a maximum number of errors occurred. Source will be stopped.
		/// </summary>
		public const string Str2193Key = nameof(Str2193);

		/// <summary>
		/// During source work a maximum number of errors occurred. Source will be stopped.
		/// </summary>
		public static string Str2193 => GetString(Str2193Key);

		/// <summary>
		/// Next start at {0}.
		/// </summary>
		public const string Str2197ParamsKey = nameof(Str2197Params);

		/// <summary>
		/// Next start at {0}.
		/// </summary>
		public static string Str2197Params => GetString(Str2197ParamsKey);

		/// <summary>
		/// For {0} impossible to save {1} {2} because '{3}'.
		/// </summary>
		public const string Str2198ParamsKey = nameof(Str2198Params);

		/// <summary>
		/// For {0} impossible to save {1} {2} because '{3}'.
		/// </summary>
		public static string Str2198Params => GetString(Str2198ParamsKey);

		/// <summary>
		/// Price is less than or equal to zero.
		/// </summary>
		public const string Str2199Key = nameof(Str2199);

		/// <summary>
		/// Price is less than or equal to zero.
		/// </summary>
		public static string Str2199 => GetString(Str2199Key);

		/// <summary>
		/// Trade price is not a multiple of security price step. Price step is '{0}', trade is '{1}'.
		/// </summary>
		public const string TradePriceNotMultipleKey = nameof(TradePriceNotMultiple);

		/// <summary>
		/// Trade price is not a multiple of security price step. Price step is '{0}', trade is '{1}'.
		/// </summary>
		public static string TradePriceNotMultiple => GetString(TradePriceNotMultipleKey);

		/// <summary>
		/// Trade volume is not a multiple of security volume step. Volume step is '{0}', trade is '{1}'.
		/// </summary>
		public const string TradeVolumeNotMultipleKey = nameof(TradeVolumeNotMultiple);

		/// <summary>
		/// Trade volume is not a multiple of security volume step. Volume step is '{0}', trade is '{1}'.
		/// </summary>
		public static string TradeVolumeNotMultiple => GetString(TradeVolumeNotMultipleKey);

		/// <summary>
		/// Best bid price is greater than best ask price.
		/// </summary>
		public const string Str2201Key = nameof(Str2201);

		/// <summary>
		/// Best bid price is greater than best ask price.
		/// </summary>
		public static string Str2201 => GetString(Str2201Key);

		/// <summary>
		/// Some quotes in the market depth have zero or negative price.
		/// </summary>
		public const string Str2202Key = nameof(Str2202);

		/// <summary>
		/// Some quotes in the market depth have zero or negative price.
		/// </summary>
		public static string Str2202 => GetString(Str2202Key);

		/// <summary>
		/// Open price is not a multiple of security price step. Price step is '{0}', O is '{1}'.
		/// </summary>
		public const string Str2203Key = nameof(Str2203);

		/// <summary>
		/// Open price is not a multiple of security price step. Price step is '{0}', O is '{1}'.
		/// </summary>
		public static string Str2203 => GetString(Str2203Key);

		/// <summary>
		/// High price is not a multiple of security price step. Price step is '{0}', H is '{1}'.
		/// </summary>
		public const string Str2204Key = nameof(Str2204);

		/// <summary>
		/// High price is not a multiple of security price step. Price step is '{0}', H is '{1}'.
		/// </summary>
		public static string Str2204 => GetString(Str2204Key);

		/// <summary>
		/// Low price is not a multiple of security price step. Price step is '{0}', L is '{1}'.
		/// </summary>
		public const string Str2205Key = nameof(Str2205);

		/// <summary>
		/// Low price is not a multiple of security price step. Price step is '{0}', L is '{1}'.
		/// </summary>
		public static string Str2205 => GetString(Str2205Key);

		/// <summary>
		/// Close price is not a multiple of security price step. Price step is '{0}', H is '{1}'.
		/// </summary>
		public const string Str2206Key = nameof(Str2206);

		/// <summary>
		/// Close price is not a multiple of security price step. Price step is '{0}', H is '{1}'.
		/// </summary>
		public static string Str2206 => GetString(Str2206Key);

		/// <summary>
		/// Candle volume is not a multiple of security volume step. Volume step is '{0}', candle is '{1}'.
		/// </summary>
		public const string CandleVolumeNotMultipleKey = nameof(CandleVolumeNotMultiple);

		/// <summary>
		/// Candle volume is not a multiple of security volume step. Volume step is '{0}', candle is '{1}'.
		/// </summary>
		public static string CandleVolumeNotMultiple => GetString(CandleVolumeNotMultipleKey);

		/// <summary>
		/// Loaded {0} {1}.
		/// </summary>
		public const string Str2207ParamsKey = nameof(Str2207Params);

		/// <summary>
		/// Loaded {0} {1}.
		/// </summary>
		public static string Str2207Params => GetString(Str2207ParamsKey);

		/// <summary>
		/// For {0} {1} {2} were loaded.
		/// </summary>
		public const string Str2208ParamsKey = nameof(Str2208Params);

		/// <summary>
		/// For {0} {1} {2} were loaded.
		/// </summary>
		public static string Str2208Params => GetString(Str2208ParamsKey);

		/// <summary>
		/// New connection...
		/// </summary>
		public const string Str2209Key = nameof(Str2209);

		/// <summary>
		/// New connection...
		/// </summary>
		public static string Str2209 => GetString(Str2209Key);

		/// <summary>
		/// Select path...
		/// </summary>
		public const string Str2210Key = nameof(Str2210);

		/// <summary>
		/// Select path...
		/// </summary>
		public static string Str2210 => GetString(Str2210Key);

		/// <summary>
		/// S#.Data settings
		/// </summary>
		public const string Str2211Key = nameof(Str2211);

		/// <summary>
		/// S#.Data settings
		/// </summary>
		public static string Str2211 => GetString(Str2211Key);

		/// <summary>
		/// Server mode
		/// </summary>
		public const string Str2212Key = nameof(Str2212);

		/// <summary>
		/// Server mode
		/// </summary>
		public static string Str2212 => GetString(Str2212Key);

		/// <summary>
		/// Change S#.Data to server mode.
		/// </summary>
		public const string Str2213Key = nameof(Str2213);

		/// <summary>
		/// Change S#.Data to server mode.
		/// </summary>
		public static string Str2213 => GetString(Str2213Key);

		/// <summary>
		/// Number of securities
		/// </summary>
		public const string Str2214Key = nameof(Str2214);

		/// <summary>
		/// Number of securities
		/// </summary>
		public static string Str2214 => GetString(Str2214Key);

		/// <summary>
		/// Maximum number of securities which can be requested from the server.
		/// </summary>
		public const string Str2215Key = nameof(Str2215);

		/// <summary>
		/// Maximum number of securities which can be requested from the server.
		/// </summary>
		public static string Str2215 => GetString(Str2215Key);

		/// <summary>
		/// Authorization for access to S#.Data server.
		/// </summary>
		public const string Str2216Key = nameof(Str2216);

		/// <summary>
		/// Authorization for access to S#.Data server.
		/// </summary>
		public static string Str2216 => GetString(Str2216Key);

		/// <summary>
		/// Autostart
		/// </summary>
		public const string Str2217Key = nameof(Str2217);

		/// <summary>
		/// Autostart
		/// </summary>
		public static string Str2217 => GetString(Str2217Key);

		/// <summary>
		/// Autostart of quotes downloading at startup.
		/// </summary>
		public const string Str2218Key = nameof(Str2218);

		/// <summary>
		/// Autostart of quotes downloading at startup.
		/// </summary>
		public static string Str2218 => GetString(Str2218Key);

		/// <summary>
		/// Tray
		/// </summary>
		public const string Str2219Key = nameof(Str2219);

		/// <summary>
		/// Tray
		/// </summary>
		public static string Str2219 => GetString(Str2219Key);

		/// <summary>
		/// Collapse to tray.
		/// </summary>
		public const string Str2220Key = nameof(Str2220);

		/// <summary>
		/// Collapse to tray.
		/// </summary>
		public static string Str2220 => GetString(Str2220Key);

		/// <summary>
		/// Autostop
		/// </summary>
		public const string Str2221Key = nameof(Str2221);

		/// <summary>
		/// Autostop
		/// </summary>
		public static string Str2221 => GetString(Str2221Key);

		/// <summary>
		/// Stop work on time.
		/// </summary>
		public const string Str2222Key = nameof(Str2222);

		/// <summary>
		/// Stop work on time.
		/// </summary>
		public static string Str2222 => GetString(Str2222Key);

		/// <summary>
		/// Time for autostop
		/// </summary>
		public const string Str2223Key = nameof(Str2223);

		/// <summary>
		/// Time for autostop
		/// </summary>
		public static string Str2223 => GetString(Str2223Key);

		/// <summary>
		/// Errors (quantity)
		/// </summary>
		public const string Str2225Key = nameof(Str2225);

		/// <summary>
		/// Errors (quantity)
		/// </summary>
		public static string Str2225 => GetString(Str2225Key);

		/// <summary>
		/// Errors count, after which an email about the error will be sent. Value of 0 means a disabled.
		/// </summary>
		public const string Str2226Key = nameof(Str2226);

		/// <summary>
		/// Errors count, after which an email about the error will be sent. Value of 0 means a disabled.
		/// </summary>
		public static string Str2226 => GetString(Str2226Key);

		/// <summary>
		/// Errors (email)
		/// </summary>
		public const string Str2227Key = nameof(Str2227);

		/// <summary>
		/// Errors (email)
		/// </summary>
		public static string Str2227 => GetString(Str2227Key);

		/// <summary>
		/// E-mail, where a message will be sent about exceeding the maximum number of errors.
		/// </summary>
		public const string Str2228Key = nameof(Str2228);

		/// <summary>
		/// E-mail, where a message will be sent about exceeding the maximum number of errors.
		/// </summary>
		public static string Str2228 => GetString(Str2228Key);

		/// <summary>
		/// Active
		/// </summary>
		public const string Str2229Key = nameof(Str2229);

		/// <summary>
		/// Active
		/// </summary>
		public static string Str2229 => GetString(Str2229Key);

		/// <summary>
		/// Is task on.
		/// </summary>
		public const string Str2230Key = nameof(Str2230);

		/// <summary>
		/// Is task on.
		/// </summary>
		public static string Str2230 => GetString(Str2230Key);

		/// <summary>
		/// Work from
		/// </summary>
		public const string Str2231Key = nameof(Str2231);

		/// <summary>
		/// Work from
		/// </summary>
		public static string Str2231 => GetString(Str2231Key);

		/// <summary>
		/// Work start time.
		/// </summary>
		public const string Str2232Key = nameof(Str2232);

		/// <summary>
		/// Work start time.
		/// </summary>
		public static string Str2232 => GetString(Str2232Key);

		/// <summary>
		/// Work until
		/// </summary>
		public const string Str2233Key = nameof(Str2233);

		/// <summary>
		/// Work until
		/// </summary>
		public static string Str2233 => GetString(Str2233Key);

		/// <summary>
		/// End of work time.
		/// </summary>
		public const string Str2234Key = nameof(Str2234);

		/// <summary>
		/// End of work time.
		/// </summary>
		public static string Str2234 => GetString(Str2234Key);

		/// <summary>
		/// Work interval
		/// </summary>
		public const string Str2235Key = nameof(Str2235);

		/// <summary>
		/// Work interval
		/// </summary>
		public static string Str2235 => GetString(Str2235Key);

		/// <summary>
		/// Data directory
		/// </summary>
		public const string Str2237Key = nameof(Str2237);

		/// <summary>
		/// Data directory
		/// </summary>
		public static string Str2237 => GetString(Str2237Key);

		/// <summary>
		/// Data directory where resulting files in the StockSharp format will be saved.
		/// </summary>
		public const string Str2238Key = nameof(Str2238);

		/// <summary>
		/// Data directory where resulting files in the StockSharp format will be saved.
		/// </summary>
		public static string Str2238 => GetString(Str2238Key);

		/// <summary>
		/// Format
		/// </summary>
		public const string Str2239Key = nameof(Str2239);

		/// <summary>
		/// Format
		/// </summary>
		public static string Str2239 => GetString(Str2239Key);

		/// <summary>
		/// Data format.
		/// </summary>
		public const string Str2240Key = nameof(Str2240);

		/// <summary>
		/// Data format.
		/// </summary>
		public static string Str2240 => GetString(Str2240Key);

		/// <summary>
		/// Dependency
		/// </summary>
		public const string Str2241Key = nameof(Str2241);

		/// <summary>
		/// Dependency
		/// </summary>
		public static string Str2241 => GetString(Str2241Key);

		/// <summary>
		/// Task that has to performed before launching the current task.
		/// </summary>
		public const string Str2242Key = nameof(Str2242);

		/// <summary>
		/// Task that has to performed before launching the current task.
		/// </summary>
		public static string Str2242 => GetString(Str2242Key);

		/// <summary>
		/// Cyclic dependency of task '{0}'.
		/// </summary>
		public const string Str2243ParamsKey = nameof(Str2243Params);

		/// <summary>
		/// Cyclic dependency of task '{0}'.
		/// </summary>
		public static string Str2243Params => GetString(Str2243ParamsKey);

		/// <summary>
		/// Max. errors
		/// </summary>
		public const string Str2244Key = nameof(Str2244);

		/// <summary>
		/// Max. errors
		/// </summary>
		public static string Str2244 => GetString(Str2244Key);

		/// <summary>
		/// Maximum error count, exceeding which a task will be stopped. By default equal to zero, which means error count is ignored.
		/// </summary>
		public const string Str2245Key = nameof(Str2245);

		/// <summary>
		/// Maximum error count, exceeding which a task will be stopped. By default equal to zero, which means error count is ignored.
		/// </summary>
		public static string Str2245 => GetString(Str2245Key);

		/// <summary>
		/// Level1 fields
		/// </summary>
		public const string Str2246Key = nameof(Str2246);

		/// <summary>
		/// Level1 fields
		/// </summary>
		public static string Str2246 => GetString(Str2246Key);

		/// <summary>
		/// Supported fields of level one market-data.
		/// </summary>
		public const string Str2247Key = nameof(Str2247);

		/// <summary>
		/// Supported fields of level one market-data.
		/// </summary>
		public static string Str2247 => GetString(Str2247Key);

		/// <summary>
		/// Task header.
		/// </summary>
		public const string Str2248Key = nameof(Str2248);

		/// <summary>
		/// Task header.
		/// </summary>
		public static string Str2248 => GetString(Str2248Key);

		/// <summary>
		/// Connection control settings.
		/// </summary>
		public const string Str2249Key = nameof(Str2249);

		/// <summary>
		/// Connection control settings.
		/// </summary>
		public static string Str2249 => GetString(Str2249Key);

		/// <summary>
		/// News
		/// </summary>
		public const string NewsKey = nameof(News);

		/// <summary>
		/// News
		/// </summary>
		public static string News => GetString(NewsKey);

		/// <summary>
		/// Download news.
		/// </summary>
		public const string Str2251Key = nameof(Str2251);

		/// <summary>
		/// Download news.
		/// </summary>
		public static string Str2251 => GetString(Str2251Key);

		/// <summary>
		/// Order {0} does not have an exchange ID.
		/// </summary>
		public const string Str2252ParamsKey = nameof(Str2252Params);

		/// <summary>
		/// Order {0} does not have an exchange ID.
		/// </summary>
		public static string Str2252Params => GetString(Str2252ParamsKey);

		/// <summary>
		/// Security {0} does not have an AlfaDirect ID.
		/// </summary>
		public const string Str2253ParamsKey = nameof(Str2253Params);

		/// <summary>
		/// Security {0} does not have an AlfaDirect ID.
		/// </summary>
		public static string Str2253Params => GetString(Str2253ParamsKey);

		/// <summary>
		/// Connection with Alfa-Direct is disconnected
		/// </summary>
		public const string Str2254Key = nameof(Str2254);

		/// <summary>
		/// Connection with Alfa-Direct is disconnected
		/// </summary>
		public static string Str2254 => GetString(Str2254Key);

		/// <summary>
		/// Connection with Alfa-Direct established
		/// </summary>
		public const string Str2255Key = nameof(Str2255);

		/// <summary>
		/// Connection with Alfa-Direct established
		/// </summary>
		public static string Str2255 => GetString(Str2255Key);

		/// <summary>
		/// Non-empty row in the news table, which could not be parsed: {0}
		/// </summary>
		public const string Str2257ParamsKey = nameof(Str2257Params);

		/// <summary>
		/// Non-empty row in the news table, which could not be parsed: {0}
		/// </summary>
		public static string Str2257Params => GetString(Str2257ParamsKey);

		/// <summary>
		/// Error registering order with transaction ID {0}. {1}
		/// </summary>
		public const string Str2258ParamsKey = nameof(Str2258Params);

		/// <summary>
		/// Error registering order with transaction ID {0}. {1}
		/// </summary>
		public static string Str2258Params => GetString(Str2258ParamsKey);

		/// <summary>
		/// Trade with ID {0} has zero number of initialized order
		/// </summary>
		public const string Str2259ParamsKey = nameof(Str2259Params);

		/// <summary>
		/// Trade with ID {0} has zero number of initialized order
		/// </summary>
		public static string Str2259Params => GetString(Str2259ParamsKey);

		/// <summary>
		/// Alfa-Direct terminal login.
		/// </summary>
		public const string Str2261Key = nameof(Str2261);

		/// <summary>
		/// Alfa-Direct terminal login.
		/// </summary>
		public static string Str2261 => GetString(Str2261Key);

		/// <summary>
		/// Password to enter the terminal.
		/// </summary>
		public const string Str2262Key = nameof(Str2262);

		/// <summary>
		/// Password to enter the terminal.
		/// </summary>
		public static string Str2262 => GetString(Str2262Key);

		/// <summary>
		/// Login = {0}
		/// </summary>
		public const string Str2263ParamsKey = nameof(Str2263Params);

		/// <summary>
		/// Login = {0}
		/// </summary>
		public static string Str2263Params => GetString(Str2263ParamsKey);

		/// <summary>
		/// Orders condition for {0}
		/// </summary>
		public const string Str2264Key = nameof(Str2264);

		/// <summary>
		/// Orders condition for {0}
		/// </summary>
		public static string Str2264 => GetString(Str2264Key);

		/// <summary>
		/// Slippage.
		/// </summary>
		public const string Str2265Key = nameof(Str2265);

		/// <summary>
		/// Slippage.
		/// </summary>
		public static string Str2265 => GetString(Str2265Key);

		/// <summary>
		/// Price of fixing profits
		/// </summary>
		public const string Str2266Key = nameof(Str2266);

		/// <summary>
		/// Price of fixing profits
		/// </summary>
		public static string Str2266 => GetString(Str2266Key);

		/// <summary>
		/// Price of fixing profits.
		/// </summary>
		public const string Str2267Key = nameof(Str2267);

		/// <summary>
		/// Price of fixing profits.
		/// </summary>
		public static string Str2267 => GetString(Str2267Key);

		/// <summary>
		/// Maximum deviation
		/// </summary>
		public const string Str2268Key = nameof(Str2268);

		/// <summary>
		/// Maximum deviation
		/// </summary>
		public static string Str2268 => GetString(Str2268Key);

		/// <summary>
		/// Maximum deviation in the opposite direction.
		/// </summary>
		public const string Str2269Key = nameof(Str2269);

		/// <summary>
		/// Maximum deviation in the opposite direction.
		/// </summary>
		public static string Str2269 => GetString(Str2269Key);

		/// <summary>
		/// System locale {0}.
		/// </summary>
		public const string Str2270ParamsKey = nameof(Str2270Params);

		/// <summary>
		/// System locale {0}.
		/// </summary>
		public static string Str2270Params => GetString(Str2270ParamsKey);

		/// <summary>
		/// Exception in AlfaDirect processing stream (OnTableChanged). {0}
		/// </summary>
		public const string Str2271ParamsKey = nameof(Str2271Params);

		/// <summary>
		/// Exception in AlfaDirect processing stream (OnTableChanged). {0}
		/// </summary>
		public static string Str2271Params => GetString(Str2271ParamsKey);

		/// <summary>
		/// Exception in AlfaDirect processing stream (OnConnectionChanged). {0}
		/// </summary>
		public const string Str2273ParamsKey = nameof(Str2273Params);

		/// <summary>
		/// Exception in AlfaDirect processing stream (OnConnectionChanged). {0}
		/// </summary>
		public static string Str2273Params => GetString(Str2273ParamsKey);

		/// <summary>
		/// place_code for order {0} not found.
		/// </summary>
		public const string Str2274ParamsKey = nameof(Str2274Params);

		/// <summary>
		/// place_code for order {0} not found.
		/// </summary>
		public static string Str2274Params => GetString(Str2274ParamsKey);

		/// <summary>
		/// Market orders not supported.
		/// </summary>
		public const string Str2275Key = nameof(Str2275);

		/// <summary>
		/// Market orders not supported.
		/// </summary>
		public static string Str2275 => GetString(Str2275Key);

		/// <summary>
		/// API returned zero order ID (transactionId={0}). msg={1}
		/// </summary>
		public const string Str2276ParamsKey = nameof(Str2276Params);

		/// <summary>
		/// API returned zero order ID (transactionId={0}). msg={1}
		/// </summary>
		public static string Str2276Params => GetString(Str2276ParamsKey);

		/// <summary>
		/// Failed to determine the account number to cancel orders (portfolio={0})
		/// </summary>
		public const string Str2277ParamsKey = nameof(Str2277Params);

		/// <summary>
		/// Failed to determine the account number to cancel orders (portfolio={0})
		/// </summary>
		public static string Str2277Params => GetString(Str2277ParamsKey);

		/// <summary>
		/// place_code for group cancellation not found.
		/// </summary>
		public const string Str2278Key = nameof(Str2278);

		/// <summary>
		/// place_code for group cancellation not found.
		/// </summary>
		public static string Str2278 => GetString(Str2278Key);

		/// <summary>
		/// place_code for candles request not found.
		/// </summary>
		public const string Str2279Key = nameof(Str2279);

		/// <summary>
		/// place_code for candles request not found.
		/// </summary>
		public static string Str2279 => GetString(Str2279Key);

		/// <summary>
		/// Exception in AlfaDirect processing stream (OrderConfirmed). {0}
		/// </summary>
		public const string Str2280ParamsKey = nameof(Str2280Params);

		/// <summary>
		/// Exception in AlfaDirect processing stream (OrderConfirmed). {0}
		/// </summary>
		public static string Str2280Params => GetString(Str2280ParamsKey);

		/// <summary>
		/// Source is designed to get market-data from {0}.
		/// </summary>
		public const string Str2281ParamsKey = nameof(Str2281Params);

		/// <summary>
		/// Source is designed to get market-data from {0}.
		/// </summary>
		public static string Str2281Params => GetString(Str2281ParamsKey);

		/// <summary>
		/// Start date
		/// </summary>
		public const string Str2282Key = nameof(Str2282);

		/// <summary>
		/// Start date
		/// </summary>
		public static string Str2282 => GetString(Str2282Key);

		/// <summary>
		/// From what date to begin downloading data.
		/// </summary>
		public const string Str2283Key = nameof(Str2283);

		/// <summary>
		/// From what date to begin downloading data.
		/// </summary>
		public static string Str2283 => GetString(Str2283Key);

		/// <summary>
		/// Time offset
		/// </summary>
		public const string Str2284Key = nameof(Str2284);

		/// <summary>
		/// Time offset
		/// </summary>
		public static string Str2284 => GetString(Str2284Key);

		/// <summary>
		/// Time offset in days from current date, which is necessary to stop incomplete data for the current trading session being downloaded.
		/// </summary>
		public const string Str2285Key = nameof(Str2285);

		/// <summary>
		/// Time offset in days from current date, which is necessary to stop incomplete data for the current trading session being downloaded.
		/// </summary>
		public static string Str2285 => GetString(Str2285Key);

		/// <summary>
		/// Weekend
		/// </summary>
		public const string Str2286Key = nameof(Str2286);

		/// <summary>
		/// Weekend
		/// </summary>
		public static string Str2286 => GetString(Str2286Key);

		/// <summary>
		/// Ignore weekends and holidays (do not download data).
		/// </summary>
		public const string Str2287Key = nameof(Str2287);

		/// <summary>
		/// Ignore weekends and holidays (do not download data).
		/// </summary>
		public static string Str2287 => GetString(Str2287Key);

		/// <summary>
		/// Source is designed to get history data from website {0}.
		/// </summary>
		public const string Str2288ParamsKey = nameof(Str2288Params);

		/// <summary>
		/// Source is designed to get history data from website {0}.
		/// </summary>
		public static string Str2288Params => GetString(Str2288ParamsKey);

		/// <summary>
		/// No securities selected. Downloading all that are available.
		/// </summary>
		public const string Str2289Key = nameof(Str2289);

		/// <summary>
		/// No securities selected. Downloading all that are available.
		/// </summary>
		public static string Str2289 => GetString(Str2289Key);

		/// <summary>
		/// Synchronizing with {0}.
		/// </summary>
		public const string Str2290Key = nameof(Str2290);

		/// <summary>
		/// Synchronizing with {0}.
		/// </summary>
		public static string Str2290 => GetString(Str2290Key);

		/// <summary>
		/// Security {0} does not contain {1} identifier and it will be removed from the downloads list.
		/// </summary>
		public const string Str2291ParamsKey = nameof(Str2291Params);

		/// <summary>
		/// Security {0} does not contain {1} identifier and it will be removed from the downloads list.
		/// </summary>
		public static string Str2291Params => GetString(Str2291ParamsKey);

		/// <summary>
		/// No securities.
		/// </summary>
		public const string Str2292Key = nameof(Str2292);

		/// <summary>
		/// No securities.
		/// </summary>
		public static string Str2292 => GetString(Str2292Key);

		/// <summary>
		/// No unsaved days to load trades until {0}.
		/// </summary>
		public const string Str2293ParamsKey = nameof(Str2293Params);

		/// <summary>
		/// No unsaved days to load trades until {0}.
		/// </summary>
		public static string Str2293Params => GetString(Str2293ParamsKey);

		/// <summary>
		/// Start downloading trades for {0} for {1}.
		/// </summary>
		public const string Str2294ParamsKey = nameof(Str2294Params);

		/// <summary>
		/// Start downloading trades for {0} for {1}.
		/// </summary>
		public static string Str2294Params => GetString(Str2294ParamsKey);

		/// <summary>
		/// Error loading trades for {0} for {1}.
		/// </summary>
		public const string Str2295ParamsKey = nameof(Str2295Params);

		/// <summary>
		/// Error loading trades for {0} for {1}.
		/// </summary>
		public static string Str2295Params => GetString(Str2295ParamsKey);

		/// <summary>
		/// Candles series {0} is not supported.
		/// </summary>
		public const string Str2296ParamsKey = nameof(Str2296Params);

		/// <summary>
		/// Candles series {0} is not supported.
		/// </summary>
		public static string Str2296Params => GetString(Str2296ParamsKey);

		/// <summary>
		/// No unsaved days to load {0} candles until {1}.
		/// </summary>
		public const string Str2297ParamsKey = nameof(Str2297Params);

		/// <summary>
		/// No unsaved days to load {0} candles until {1}.
		/// </summary>
		public static string Str2297Params => GetString(Str2297ParamsKey);

		/// <summary>
		/// Start downloading {0} candles for {1:d}-{2:d} date range and {3} security.
		/// </summary>
		public const string Str2298ParamsKey = nameof(Str2298Params);

		/// <summary>
		/// Start downloading {0} candles for {1:d}-{2:d} date range and {3} security.
		/// </summary>
		public static string Str2298Params => GetString(Str2298ParamsKey);

		/// <summary>
		/// Error loading {0} candles for {1} for {2}.
		/// </summary>
		public const string Str2299ParamsKey = nameof(Str2299Params);

		/// <summary>
		/// Error loading {0} candles for {1} for {2}.
		/// </summary>
		public static string Str2299Params => GetString(Str2299ParamsKey);

		/// <summary>
		/// End of iteration.
		/// </summary>
		public const string Str2300Key = nameof(Str2300);

		/// <summary>
		/// End of iteration.
		/// </summary>
		public static string Str2300 => GetString(Str2300Key);

		/// <summary>
		/// Login. Required if server authorization is on.
		/// </summary>
		public const string Str2302Key = nameof(Str2302);

		/// <summary>
		/// Login. Required if server authorization is on.
		/// </summary>
		public static string Str2302 => GetString(Str2302Key);

		/// <summary>
		/// Password. Require when server authorization is enabled.
		/// </summary>
		public const string Str2303Key = nameof(Str2303);

		/// <summary>
		/// Password. Require when server authorization is enabled.
		/// </summary>
		public static string Str2303 => GetString(Str2303Key);

		/// <summary>
		/// Receiving new securities.
		/// </summary>
		public const string Str2305Key = nameof(Str2305);

		/// <summary>
		/// Receiving new securities.
		/// </summary>
		public static string Str2305 => GetString(Str2305Key);

		/// <summary>
		/// Start from {0}.
		/// </summary>
		public const string Str2306ParamsKey = nameof(Str2306Params);

		/// <summary>
		/// Start from {0}.
		/// </summary>
		public static string Str2306Params => GetString(Str2306ParamsKey);

		/// <summary>
		/// Processing security {0}.
		/// </summary>
		public const string Str2307ParamsKey = nameof(Str2307Params);

		/// <summary>
		/// Processing security {0}.
		/// </summary>
		public static string Str2307Params => GetString(Str2307ParamsKey);

		/// <summary>
		/// Files processing for type {0}.
		/// </summary>
		public const string Str2308ParamsKey = nameof(Str2308Params);

		/// <summary>
		/// Files processing for type {0}.
		/// </summary>
		public static string Str2308Params => GetString(Str2308ParamsKey);

		/// <summary>
		/// File written in {0}.
		/// </summary>
		public const string Str2309ParamsKey = nameof(Str2309Params);

		/// <summary>
		/// File written in {0}.
		/// </summary>
		public static string Str2309Params => GetString(Str2309ParamsKey);

		/// <summary>
		/// Parameter with key {0} not found.
		/// </summary>
		public const string Str2311ParamsKey = nameof(Str2311Params);

		/// <summary>
		/// Parameter with key {0} not found.
		/// </summary>
		public static string Str2311Params => GetString(Str2311ParamsKey);

		/// <summary>
		/// Market on close
		/// </summary>
		public const string Str2312Key = nameof(Str2312);

		/// <summary>
		/// Market on close
		/// </summary>
		public static string Str2312 => GetString(Str2312Key);

		/// <summary>
		/// Limit on close
		/// </summary>
		public const string LimitOnCloseKey = nameof(LimitOnClose);

		/// <summary>
		/// Limit on close
		/// </summary>
		public static string LimitOnClose => GetString(LimitOnCloseKey);

		/// <summary>
		/// At best price
		/// </summary>
		public const string Str2314Key = nameof(Str2314);

		/// <summary>
		/// At best price
		/// </summary>
		public static string Str2314 => GetString(Str2314Key);

		/// <summary>
		/// Trailing
		/// </summary>
		public const string TrailingKey = nameof(Trailing);

		/// <summary>
		/// Trailing
		/// </summary>
		public static string Trailing => GetString(TrailingKey);

		/// <summary>
		/// With offset
		/// </summary>
		public const string Str2316Key = nameof(Str2316);

		/// <summary>
		/// With offset
		/// </summary>
		public static string Str2316 => GetString(Str2316Key);

		/// <summary>
		/// Trailing stop-limit
		/// </summary>
		public const string TrailingStopLimitKey = nameof(TrailingStopLimit);

		/// <summary>
		/// Trailing stop-limit
		/// </summary>
		public static string TrailingStopLimit => GetString(TrailingStopLimitKey);

		/// <summary>
		/// Volatility
		/// </summary>
		public const string VolatilityKey = nameof(Volatility);

		/// <summary>
		/// Volatility
		/// </summary>
		public static string Volatility => GetString(VolatilityKey);

		/// <summary>
		/// By default
		/// </summary>
		public const string Str2319Key = nameof(Str2319);

		/// <summary>
		/// By default
		/// </summary>
		public static string Str2319 => GetString(Str2319Key);

		/// <summary>
		/// Variable
		/// </summary>
		public const string Str2320Key = nameof(Str2320);

		/// <summary>
		/// Variable
		/// </summary>
		public static string Str2320 => GetString(Str2320Key);

		/// <summary>
		/// Market on touch
		/// </summary>
		public const string MarketOnTouchKey = nameof(MarketOnTouch);

		/// <summary>
		/// Market on touch
		/// </summary>
		public static string MarketOnTouch => GetString(MarketOnTouchKey);

		/// <summary>
		/// Limit-On-Touch
		/// </summary>
		public const string LimitOnTouchKey = nameof(LimitOnTouch);

		/// <summary>
		/// Limit-On-Touch
		/// </summary>
		public static string LimitOnTouch => GetString(LimitOnTouchKey);

		/// <summary>
		/// Cancel all
		/// </summary>
		public const string CancelAllKey = nameof(CancelAll);

		/// <summary>
		/// Cancel all
		/// </summary>
		public static string CancelAll => GetString(CancelAllKey);

		/// <summary>
		/// Proportion
		/// </summary>
		public const string Str2324Key = nameof(Str2324);

		/// <summary>
		/// Proportion
		/// </summary>
		public static string Str2324 => GetString(Str2324Key);

		/// <summary>
		/// Proportion (outside element)
		/// </summary>
		public const string Str2325Key = nameof(Str2325);

		/// <summary>
		/// Proportion (outside element)
		/// </summary>
		public static string Str2325 => GetString(Str2325Key);

		/// <summary>
		/// Group ID
		/// </summary>
		public const string GroupIdKey = nameof(GroupId);

		/// <summary>
		/// Group ID
		/// </summary>
		public static string GroupId => GetString(GroupIdKey);

		/// <summary>
		/// Group type
		/// </summary>
		public const string GroupTypeKey = nameof(GroupType);

		/// <summary>
		/// Group type
		/// </summary>
		public static string GroupType => GetString(GroupTypeKey);

		/// <summary>
		/// Quote (double)
		/// </summary>
		public const string Str2330Key = nameof(Str2330);

		/// <summary>
		/// Quote (double)
		/// </summary>
		public static string Str2330 => GetString(Str2330Key);

		/// <summary>
		/// Last
		/// </summary>
		public const string Str2331Key = nameof(Str2331);

		/// <summary>
		/// Last
		/// </summary>
		public static string Str2331 => GetString(Str2331Key);

		/// <summary>
		/// Last (double)
		/// </summary>
		public const string Str2332Key = nameof(Str2332);

		/// <summary>
		/// Last (double)
		/// </summary>
		public static string Str2332 => GetString(Str2332Key);

		/// <summary>
		/// Any
		/// </summary>
		public const string Str2333Key = nameof(Str2333);

		/// <summary>
		/// Any
		/// </summary>
		public static string Str2333 => GetString(Str2333Key);

		/// <summary>
		/// Private trader
		/// </summary>
		public const string Str2334Key = nameof(Str2334);

		/// <summary>
		/// Private trader
		/// </summary>
		public static string Str2334 => GetString(Str2334Key);

		/// <summary>
		/// Agency
		/// </summary>
		public const string AgencyKey = nameof(Agency);

		/// <summary>
		/// Agency
		/// </summary>
		public static string Agency => GetString(AgencyKey);

		/// <summary>
		/// Agency of other type
		/// </summary>
		public const string Str2336Key = nameof(Str2336);

		/// <summary>
		/// Agency of other type
		/// </summary>
		public static string Str2336 => GetString(Str2336Key);

		/// <summary>
		/// Individual PTIA
		/// </summary>
		public const string Str2337Key = nameof(Str2337);

		/// <summary>
		/// Individual PTIA
		/// </summary>
		public static string Str2337 => GetString(Str2337Key);

		/// <summary>
		/// Agency PTIA
		/// </summary>
		public const string Str2338Key = nameof(Str2338);

		/// <summary>
		/// Agency PTIA
		/// </summary>
		public static string Str2338 => GetString(Str2338Key);

		/// <summary>
		/// Agency of other type PTIA
		/// </summary>
		public const string Str2339Key = nameof(Str2339);

		/// <summary>
		/// Agency of other type PTIA
		/// </summary>
		public static string Str2339 => GetString(Str2339Key);

		/// <summary>
		/// Individual PT
		/// </summary>
		public const string Str2340Key = nameof(Str2340);

		/// <summary>
		/// Individual PT
		/// </summary>
		public static string Str2340 => GetString(Str2340Key);

		/// <summary>
		/// Agency PT
		/// </summary>
		public const string Str2341Key = nameof(Str2341);

		/// <summary>
		/// Agency PT
		/// </summary>
		public static string Str2341 => GetString(Str2341Key);

		/// <summary>
		/// Agency of other type PT
		/// </summary>
		public const string Str2342Key = nameof(Str2342);

		/// <summary>
		/// Agency of other type PT
		/// </summary>
		public static string Str2342 => GetString(Str2342Key);

		/// <summary>
		/// Percentage
		/// </summary>
		public const string Str2343Key = nameof(Str2343);

		/// <summary>
		/// Percentage
		/// </summary>
		public static string Str2343 => GetString(Str2343Key);

		/// <summary>
		/// Equity
		/// </summary>
		public const string EquityKey = nameof(Equity);

		/// <summary>
		/// Equity
		/// </summary>
		public static string Equity => GetString(EquityKey);

		/// <summary>
		/// Liquidity
		/// </summary>
		public const string Str2345Key = nameof(Str2345);

		/// <summary>
		/// Liquidity
		/// </summary>
		public static string Str2345 => GetString(Str2345Key);

		/// <summary>
		/// Profile
		/// </summary>
		public const string ProfileKey = nameof(Profile);

		/// <summary>
		/// Profile
		/// </summary>
		public static string Profile => GetString(ProfileKey);

		/// <summary>
		/// Calculation method
		/// </summary>
		public const string Str2349Key = nameof(Str2349);

		/// <summary>
		/// Calculation method
		/// </summary>
		public static string Str2349 => GetString(Str2349Key);

		/// <summary>
		/// Ration percentage to filled volume
		/// </summary>
		public const string Str2351Key = nameof(Str2351);

		/// <summary>
		/// Ration percentage to filled volume
		/// </summary>
		public static string Str2351 => GetString(Str2351Key);

		/// <summary>
		/// Client
		/// </summary>
		public const string ClientKey = nameof(Client);

		/// <summary>
		/// Client
		/// </summary>
		public static string Client => GetString(ClientKey);

		/// <summary>
		/// Firm
		/// </summary>
		public const string FirmKey = nameof(Firm);

		/// <summary>
		/// Firm
		/// </summary>
		public static string Firm => GetString(FirmKey);

		/// <summary>
		/// Match
		/// </summary>
		public const string Str2355Key = nameof(Str2355);

		/// <summary>
		/// Match
		/// </summary>
		public static string Str2355 => GetString(Str2355Key);

		/// <summary>
		/// Better
		/// </summary>
		public const string BetterKey = nameof(Better);

		/// <summary>
		/// Better
		/// </summary>
		public static string Better => GetString(BetterKey);

		/// <summary>
		/// Transparent
		/// </summary>
		public const string TransparentKey = nameof(Transparent);

		/// <summary>
		/// Transparent
		/// </summary>
		public static string Transparent => GetString(TransparentKey);

		/// <summary>
		/// Daily
		/// </summary>
		public const string DailyKey = nameof(Daily);

		/// <summary>
		/// Daily
		/// </summary>
		public static string Daily => GetString(DailyKey);

		/// <summary>
		/// Average annual
		/// </summary>
		public const string Str2359Key = nameof(Str2359);

		/// <summary>
		/// Average annual
		/// </summary>
		public static string Str2359 => GetString(Str2359Key);

		/// <summary>
		/// Refresh limit price
		/// </summary>
		public const string Str2360Key = nameof(Str2360);

		/// <summary>
		/// Refresh limit price
		/// </summary>
		public static string Str2360 => GetString(Str2360Key);

		/// <summary>
		/// Refresh limit price if underlying asset price has changed.
		/// </summary>
		public const string Str2361Key = nameof(Str2361);

		/// <summary>
		/// Refresh limit price if underlying asset price has changed.
		/// </summary>
		public static string Str2361 => GetString(Str2361Key);

		/// <summary>
		/// Average best price
		/// </summary>
		public const string Str2362Key = nameof(Str2362);

		/// <summary>
		/// Average best price
		/// </summary>
		public static string Str2362 => GetString(Str2362Key);

		/// <summary>
		/// Average best price or best price.
		/// </summary>
		public const string Str2363Key = nameof(Str2363);

		/// <summary>
		/// Average best price or best price.
		/// </summary>
		public static string Str2363 => GetString(Str2363Key);

		/// <summary>
		/// Volatility time-frame
		/// </summary>
		public const string Str2365Key = nameof(Str2365);

		/// <summary>
		/// Volatility time-frame
		/// </summary>
		public static string Str2365 => GetString(Str2365Key);

		/// <summary>
		/// Volatility time-frame.
		/// </summary>
		public const string Str2366Key = nameof(Str2366);

		/// <summary>
		/// Volatility time-frame.
		/// </summary>
		public static string Str2366 => GetString(Str2366Key);

		/// <summary>
		/// Extended type of order
		/// </summary>
		public const string Str2368Key = nameof(Str2368);

		/// <summary>
		/// Extended type of order
		/// </summary>
		public static string Str2368 => GetString(Str2368Key);

		/// <summary>
		/// Extended type of order.
		/// </summary>
		public const string Str2369Key = nameof(Str2369);

		/// <summary>
		/// Extended type of order.
		/// </summary>
		public static string Str2369 => GetString(Str2369Key);

		/// <summary>
		/// Clearing account
		/// </summary>
		public const string Str2372Key = nameof(Str2372);

		/// <summary>
		/// Clearing account
		/// </summary>
		public static string Str2372 => GetString(Str2372Key);

		/// <summary>
		/// Clearing chain
		/// </summary>
		public const string Str2374Key = nameof(Str2374);

		/// <summary>
		/// Clearing chain
		/// </summary>
		public static string Str2374 => GetString(Str2374Key);

		/// <summary>
		/// Short sale
		/// </summary>
		public const string Str2376Key = nameof(Str2376);

		/// <summary>
		/// Short sale
		/// </summary>
		public static string Str2376 => GetString(Str2376Key);

		/// <summary>
		/// Is the order a short sell.
		/// </summary>
		public const string Str2377Key = nameof(Str2377);

		/// <summary>
		/// Is the order a short sell.
		/// </summary>
		public static string Str2377 => GetString(Str2377Key);

		/// <summary>
		/// Condition for short sales
		/// </summary>
		public const string Str2378Key = nameof(Str2378);

		/// <summary>
		/// Condition for short sales
		/// </summary>
		public static string Str2378 => GetString(Str2378Key);

		/// <summary>
		/// Condition for short sales of combined legs.
		/// </summary>
		public const string Str2379Key = nameof(Str2379);

		/// <summary>
		/// Condition for short sales of combined legs.
		/// </summary>
		public static string Str2379 => GetString(Str2379Key);

		/// <summary>
		/// Clearing
		/// </summary>
		public const string ClearingKey = nameof(Clearing);

		/// <summary>
		/// Clearing
		/// </summary>
		public static string Clearing => GetString(ClearingKey);

		/// <summary>
		/// Other
		/// </summary>
		public const string Str2381Key = nameof(Str2381);

		/// <summary>
		/// Other
		/// </summary>
		public static string Str2381 => GetString(Str2381Key);

		/// <summary>
		/// Basic points
		/// </summary>
		public const string Str2382Key = nameof(Str2382);

		/// <summary>
		/// Basic points
		/// </summary>
		public static string Str2382 => GetString(Str2382Key);

		/// <summary>
		/// Legs description
		/// </summary>
		public const string Str2386Key = nameof(Str2386);

		/// <summary>
		/// Legs description
		/// </summary>
		public static string Str2386 => GetString(Str2386Key);

		/// <summary>
		/// Legs prices
		/// </summary>
		public const string Str2388Key = nameof(Str2388);

		/// <summary>
		/// Legs prices
		/// </summary>
		public static string Str2388 => GetString(Str2388Key);

		/// <summary>
		/// Condition for short sales.
		/// </summary>
		public const string Str2390Key = nameof(Str2390);

		/// <summary>
		/// Condition for short sales.
		/// </summary>
		public static string Str2390 => GetString(Str2390Key);

		/// <summary>
		/// Price shift range
		/// </summary>
		public const string Str2391Key = nameof(Str2391);

		/// <summary>
		/// Price shift range
		/// </summary>
		public static string Str2391 => GetString(Str2391Key);

		/// <summary>
		/// Order price shift range.
		/// </summary>
		public const string Str2392Key = nameof(Str2392);

		/// <summary>
		/// Order price shift range.
		/// </summary>
		public static string Str2392 => GetString(Str2392Key);

		/// <summary>
		/// Electronic trading
		/// </summary>
		public const string ElectronicTradingKey = nameof(ElectronicTrading);

		/// <summary>
		/// Electronic trading
		/// </summary>
		public static string ElectronicTrading => GetString(ElectronicTradingKey);

		/// <summary>
		/// Company quotes
		/// </summary>
		public const string Str2395Key = nameof(Str2395);

		/// <summary>
		/// Company quotes
		/// </summary>
		public static string Str2395 => GetString(Str2395Key);

		/// <summary>
		/// Max offset from best pairs
		/// </summary>
		public const string Str2397Key = nameof(Str2397);

		/// <summary>
		/// Max offset from best pairs
		/// </summary>
		public static string Str2397 => GetString(Str2397Key);

		/// <summary>
		/// Maximum offset from best pairs.
		/// </summary>
		public const string Str2398Key = nameof(Str2398);

		/// <summary>
		/// Maximum offset from best pairs.
		/// </summary>
		public static string Str2398 => GetString(Str2398Key);

		/// <summary>
		/// Keep in market depth
		/// </summary>
		public const string Str2399Key = nameof(Str2399);

		/// <summary>
		/// Keep in market depth
		/// </summary>
		public static string Str2399 => GetString(Str2399Key);

		/// <summary>
		/// Keep in market depth. Only for IBDARK stock exchange.
		/// </summary>
		public const string Str2400Key = nameof(Str2400);

		/// <summary>
		/// Keep in market depth. Only for IBDARK stock exchange.
		/// </summary>
		public static string Str2400 => GetString(Str2400Key);

		/// <summary>
		/// Direct sending of ASX
		/// </summary>
		public const string Str2401Key = nameof(Str2401);

		/// <summary>
		/// Direct sending of ASX
		/// </summary>
		public static string Str2401 => GetString(Str2401Key);

		/// <summary>
		/// Direct sending of ASX orders.
		/// </summary>
		public const string Str2402Key = nameof(Str2402);

		/// <summary>
		/// Direct sending of ASX orders.
		/// </summary>
		public static string Str2402 => GetString(Str2402Key);

		/// <summary>
		/// Parameters.
		/// </summary>
		public const string Str2403Key = nameof(Str2403);

		/// <summary>
		/// Parameters.
		/// </summary>
		public static string Str2403 => GetString(Str2403Key);

		/// <summary>
		/// Pair
		/// </summary>
		public const string PairKey = nameof(Pair);

		/// <summary>
		/// Pair
		/// </summary>
		public static string Pair => GetString(PairKey);

		/// <summary>
		/// Parameter type
		/// </summary>
		public const string ParameterTypeKey = nameof(ParameterType);

		/// <summary>
		/// Parameter type
		/// </summary>
		public static string ParameterType => GetString(ParameterTypeKey);

		/// <summary>
		/// Parameter type for hedging.
		/// </summary>
		public const string Str2406Key = nameof(Str2406);

		/// <summary>
		/// Parameter type for hedging.
		/// </summary>
		public static string Str2406 => GetString(Str2406Key);

		/// <summary>
		/// Parameter
		/// </summary>
		public const string ParameterKey = nameof(Parameter);

		/// <summary>
		/// Parameter
		/// </summary>
		public static string Parameter => GetString(ParameterKey);

		/// <summary>
		/// Broker
		/// </summary>
		public const string BrokerKey = nameof(Broker);

		/// <summary>
		/// Broker
		/// </summary>
		public static string Broker => GetString(BrokerKey);

		/// <summary>
		/// Positioning
		/// </summary>
		public const string Str2411Key = nameof(Str2411);

		/// <summary>
		/// Positioning
		/// </summary>
		public static string Str2411 => GetString(Str2411Key);

		/// <summary>
		/// Account
		/// </summary>
		public const string AccountKey = nameof(Account);

		/// <summary>
		/// Account
		/// </summary>
		public static string Account => GetString(AccountKey);

		/// <summary>
		/// Account (clearing)
		/// </summary>
		public const string Str2414Key = nameof(Str2414);

		/// <summary>
		/// Account (clearing)
		/// </summary>
		public static string Str2414 => GetString(Str2414Key);

		/// <summary>
		/// Aim
		/// </summary>
		public const string Str2415Key = nameof(Str2415);

		/// <summary>
		/// Aim
		/// </summary>
		public static string Str2415 => GetString(Str2415Key);

		/// <summary>
		/// Aim of clearing.
		/// </summary>
		public const string Str2416Key = nameof(Str2416);

		/// <summary>
		/// Aim of clearing.
		/// </summary>
		public static string Str2416 => GetString(Str2416Key);

		/// <summary>
		/// Exercise
		/// </summary>
		public const string Str2417Key = nameof(Str2417);

		/// <summary>
		/// Exercise
		/// </summary>
		public static string Str2417 => GetString(Str2417Key);

		/// <summary>
		/// Exercise the option.
		/// </summary>
		public const string Str2418Key = nameof(Str2418);

		/// <summary>
		/// Exercise the option.
		/// </summary>
		public static string Str2418 => GetString(Str2418Key);

		/// <summary>
		/// Replace
		/// </summary>
		public const string Str2419Key = nameof(Str2419);

		/// <summary>
		/// Replace
		/// </summary>
		public static string Str2419 => GetString(Str2419Key);

		/// <summary>
		/// Replace action.
		/// </summary>
		public const string Str2420Key = nameof(Str2420);

		/// <summary>
		/// Replace action.
		/// </summary>
		public static string Str2420 => GetString(Str2420Key);

		/// <summary>
		/// Start
		/// </summary>
		public const string Str2421Key = nameof(Str2421);

		/// <summary>
		/// Start
		/// </summary>
		public static string Str2421 => GetString(Str2421Key);

		/// <summary>
		/// Start time.
		/// </summary>
		public const string Str2422Key = nameof(Str2422);

		/// <summary>
		/// Start time.
		/// </summary>
		public static string Str2422 => GetString(Str2422Key);

		/// <summary>
		/// Extended condition
		/// </summary>
		public const string Str2424Key = nameof(Str2424);

		/// <summary>
		/// Extended condition
		/// </summary>
		public static string Str2424 => GetString(Str2424Key);

		/// <summary>
		/// Extended condition.
		/// </summary>
		public const string Str2425Key = nameof(Str2425);

		/// <summary>
		/// Extended condition.
		/// </summary>
		public static string Str2425 => GetString(Str2425Key);

		/// <summary>
		/// At trading opening
		/// </summary>
		public const string Str2426Key = nameof(Str2426);

		/// <summary>
		/// At trading opening
		/// </summary>
		public static string Str2426 => GetString(Str2426Key);

		/// <summary>
		/// At trading opening.
		/// </summary>
		public const string Str2427Key = nameof(Str2427);

		/// <summary>
		/// At trading opening.
		/// </summary>
		public static string Str2427 => GetString(Str2427Key);

		/// <summary>
		/// OCA settings
		/// </summary>
		public const string Str2428Key = nameof(Str2428);

		/// <summary>
		/// OCA settings
		/// </summary>
		public static string Str2428 => GetString(Str2428Key);

		/// <summary>
		/// OCA (One-Cancels All) settings.
		/// </summary>
		public const string Str2429Key = nameof(Str2429);

		/// <summary>
		/// OCA (One-Cancels All) settings.
		/// </summary>
		public static string Str2429 => GetString(Str2429Key);

		/// <summary>
		/// Send in TWS
		/// </summary>
		public const string Str2430Key = nameof(Str2430);

		/// <summary>
		/// Send in TWS
		/// </summary>
		public static string Str2430 => GetString(Str2430Key);

		/// <summary>
		/// Send order in TWS.
		/// </summary>
		public const string Str2431Key = nameof(Str2431);

		/// <summary>
		/// Send order in TWS.
		/// </summary>
		public static string Str2431 => GetString(Str2431Key);

		/// <summary>
		/// Parent order
		/// </summary>
		public const string Str2432Key = nameof(Str2432);

		/// <summary>
		/// Parent order
		/// </summary>
		public static string Str2432 => GetString(Str2432Key);

		/// <summary>
		/// Parent order ID.
		/// </summary>
		public const string Str2433Key = nameof(Str2433);

		/// <summary>
		/// Parent order ID.
		/// </summary>
		public static string Str2433 => GetString(Str2433Key);

		/// <summary>
		/// Split volume
		/// </summary>
		public const string Str2434Key = nameof(Str2434);

		/// <summary>
		/// Split volume
		/// </summary>
		public static string Str2434 => GetString(Str2434Key);

		/// <summary>
		/// Split order volume.
		/// </summary>
		public const string Str2435Key = nameof(Str2435);

		/// <summary>
		/// Split order volume.
		/// </summary>
		public static string Str2435 => GetString(Str2435Key);

		/// <summary>
		/// At best price.
		/// </summary>
		public const string Str2436Key = nameof(Str2436);

		/// <summary>
		/// At best price.
		/// </summary>
		public static string Str2436 => GetString(Str2436Key);

		/// <summary>
		/// Activation condition
		/// </summary>
		public const string Str2437Key = nameof(Str2437);

		/// <summary>
		/// Activation condition
		/// </summary>
		public static string Str2437 => GetString(Str2437Key);

		/// <summary>
		/// Stop-order activation condition.
		/// </summary>
		public const string Str2438Key = nameof(Str2438);

		/// <summary>
		/// Stop-order activation condition.
		/// </summary>
		public static string Str2438 => GetString(Str2438Key);

		/// <summary>
		/// Activation outside of trading
		/// </summary>
		public const string Str2439Key = nameof(Str2439);

		/// <summary>
		/// Activation outside of trading
		/// </summary>
		public static string Str2439 => GetString(Str2439Key);

		/// <summary>
		/// Allow to activate a stop-order outside of trading time.
		/// </summary>
		public const string Str2440Key = nameof(Str2440);

		/// <summary>
		/// Allow to activate a stop-order outside of trading time.
		/// </summary>
		public static string Str2440 => GetString(Str2440Key);

		/// <summary>
		/// Hide order in market depth
		/// </summary>
		public const string Str2441Key = nameof(Str2441);

		/// <summary>
		/// Hide order in market depth
		/// </summary>
		public static string Str2441 => GetString(Str2441Key);

		/// <summary>
		/// Hide order in market depth. Only possible when sending order to ISLAND stock exchange.
		/// </summary>
		public const string Str2442Key = nameof(Str2442);

		/// <summary>
		/// Hide order in market depth. Only possible when sending order to ISLAND stock exchange.
		/// </summary>
		public static string Str2442 => GetString(Str2442Key);

		/// <summary>
		/// Activate after
		/// </summary>
		public const string Str2443Key = nameof(Str2443);

		/// <summary>
		/// Activate after
		/// </summary>
		public static string Str2443 => GetString(Str2443Key);

		/// <summary>
		/// Activate after given time.
		/// </summary>
		public const string Str2444Key = nameof(Str2444);

		/// <summary>
		/// Activate after given time.
		/// </summary>
		public static string Str2444 => GetString(Str2444Key);

		/// <summary>
		/// Cancel with wrong price
		/// </summary>
		public const string Str2445Key = nameof(Str2445);

		/// <summary>
		/// Cancel with wrong price
		/// </summary>
		public static string Str2445 => GetString(Str2445Key);

		/// <summary>
		/// Cancel orders with wrong price.
		/// </summary>
		public const string Str2446Key = nameof(Str2446);

		/// <summary>
		/// Cancel orders with wrong price.
		/// </summary>
		public static string Str2446 => GetString(Str2446Key);

		/// <summary>
		/// Trader ID
		/// </summary>
		public const string Str2447Key = nameof(Str2447);

		/// <summary>
		/// Trader ID
		/// </summary>
		public static string Str2447 => GetString(Str2447Key);

		/// <summary>
		/// Trader ID.
		/// </summary>
		public const string Str2448Key = nameof(Str2448);

		/// <summary>
		/// Trader ID.
		/// </summary>
		public static string Str2448 => GetString(Str2448Key);

		/// <summary>
		/// Wait for required volume
		/// </summary>
		public const string Str2449Key = nameof(Str2449);

		/// <summary>
		/// Wait for required volume
		/// </summary>
		public static string Str2449 => GetString(Str2449Key);

		/// <summary>
		/// Wait for required volume to appear.
		/// </summary>
		public const string Str2450Key = nameof(Str2450);

		/// <summary>
		/// Wait for required volume to appear.
		/// </summary>
		public static string Str2450 => GetString(Str2450Key);

		/// <summary>
		/// Minimum volume
		/// </summary>
		public const string Str2451Key = nameof(Str2451);

		/// <summary>
		/// Minimum volume
		/// </summary>
		public static string Str2451 => GetString(Str2451Key);

		/// <summary>
		/// Minimum order volume.
		/// </summary>
		public const string Str2452Key = nameof(Str2452);

		/// <summary>
		/// Minimum order volume.
		/// </summary>
		public static string Str2452 => GetString(Str2452Key);

		/// <summary>
		/// Shift in price
		/// </summary>
		public const string Str2453Key = nameof(Str2453);

		/// <summary>
		/// Shift in price
		/// </summary>
		public static string Str2453 => GetString(Str2453Key);

		/// <summary>
		/// Shift in price for order of Relative type.
		/// </summary>
		public const string Str2454Key = nameof(Str2454);

		/// <summary>
		/// Shift in price for order of Relative type.
		/// </summary>
		public static string Str2454 => GetString(Str2454Key);

		/// <summary>
		/// Activation price
		/// </summary>
		public const string Str2455Key = nameof(Str2455);

		/// <summary>
		/// Activation price
		/// </summary>
		public static string Str2455 => GetString(Str2455Key);

		/// <summary>
		/// Moving stop activation price.
		/// </summary>
		public const string Str2456Key = nameof(Str2456);

		/// <summary>
		/// Moving stop activation price.
		/// </summary>
		public static string Str2456 => GetString(Str2456Key);

		/// <summary>
		/// Trailing stop volume
		/// </summary>
		public const string Str2457Key = nameof(Str2457);

		/// <summary>
		/// Trailing stop volume
		/// </summary>
		public static string Str2457 => GetString(Str2457Key);

		/// <summary>
		/// Trailing stop volume as percentage.
		/// </summary>
		public const string Str2458Key = nameof(Str2458);

		/// <summary>
		/// Trailing stop volume as percentage.
		/// </summary>
		public static string Str2458 => GetString(Str2458Key);

		/// <summary>
		/// Auto volume calculation
		/// </summary>
		public const string Str2459Key = nameof(Str2459);

		/// <summary>
		/// Auto volume calculation
		/// </summary>
		public static string Str2459 => GetString(Str2459Key);

		/// <summary>
		/// Settings for automatic order volume calculation.
		/// </summary>
		public const string Str2460Key = nameof(Str2460);

		/// <summary>
		/// Settings for automatic order volume calculation.
		/// </summary>
		public static string Str2460 => GetString(Str2460Key);

		/// <summary>
		/// Opening order
		/// </summary>
		public const string Str2461Key = nameof(Str2461);

		/// <summary>
		/// Opening order
		/// </summary>
		public static string Str2461 => GetString(Str2461Key);

		/// <summary>
		/// Is order an open or close order. Only for institutional clients.
		/// </summary>
		public const string Str2462Key = nameof(Str2462);

		/// <summary>
		/// Is order an open or close order. Only for institutional clients.
		/// </summary>
		public static string Str2462 => GetString(Str2462Key);

		/// <summary>
		/// Sender. Only for institutional clients.
		/// </summary>
		public const string Str2463Key = nameof(Str2463);

		/// <summary>
		/// Sender. Only for institutional clients.
		/// </summary>
		public static string Str2463 => GetString(Str2463Key);

		/// <summary>
		/// Type of trading
		/// </summary>
		public const string Str2464Key = nameof(Str2464);

		/// <summary>
		/// Type of trading
		/// </summary>
		public static string Str2464 => GetString(Str2464Key);

		/// <summary>
		/// Type of trading. Only for BOX stock exchange.
		/// </summary>
		public const string Str2465Key = nameof(Str2465);

		/// <summary>
		/// Type of trading. Only for BOX stock exchange.
		/// </summary>
		public static string Str2465 => GetString(Str2465Key);

		/// <summary>
		/// Starting price
		/// </summary>
		public const string Str2466Key = nameof(Str2466);

		/// <summary>
		/// Starting price
		/// </summary>
		public static string Str2466 => GetString(Str2466Key);

		/// <summary>
		/// Starting price. Only for BOX stock exchange.
		/// </summary>
		public const string Str2467Key = nameof(Str2467);

		/// <summary>
		/// Starting price. Only for BOX stock exchange.
		/// </summary>
		public static string Str2467 => GetString(Str2467Key);

		/// <summary>
		/// Underlying asset price
		/// </summary>
		public const string Str2468Key = nameof(Str2468);

		/// <summary>
		/// Underlying asset price
		/// </summary>
		public static string Str2468 => GetString(Str2468Key);

		/// <summary>
		/// Underlying asset price.
		/// </summary>
		public const string Str2469Key = nameof(Str2469);

		/// <summary>
		/// Underlying asset price.
		/// </summary>
		public static string Str2469 => GetString(Str2469Key);

		/// <summary>
		/// Underlying asset delta
		/// </summary>
		public const string Str2470Key = nameof(Str2470);

		/// <summary>
		/// Underlying asset delta
		/// </summary>
		public static string Str2470 => GetString(Str2470Key);

		/// <summary>
		/// Min price of asset
		/// </summary>
		public const string Str2472Key = nameof(Str2472);

		/// <summary>
		/// Min price of asset
		/// </summary>
		public static string Str2472 => GetString(Str2472Key);

		/// <summary>
		/// Minimum price of underlying asset.
		/// </summary>
		public const string Str2473Key = nameof(Str2473);

		/// <summary>
		/// Minimum price of underlying asset.
		/// </summary>
		public static string Str2473 => GetString(Str2473Key);

		/// <summary>
		/// Max price of an underlying asset.
		/// </summary>
		public const string Str2474Key = nameof(Str2474);

		/// <summary>
		/// Max price of an underlying asset.
		/// </summary>
		public static string Str2474 => GetString(Str2474Key);

		/// <summary>
		/// Maximum price of underlying asset.
		/// </summary>
		public const string Str2475Key = nameof(Str2475);

		/// <summary>
		/// Maximum price of underlying asset.
		/// </summary>
		public static string Str2475 => GetString(Str2475Key);

		/// <summary>
		/// Condition for Volatility
		/// </summary>
		public const string Str2476Key = nameof(Str2476);

		/// <summary>
		/// Condition for Volatility
		/// </summary>
		public static string Str2476 => GetString(Str2476Key);

		/// <summary>
		/// Condition for orders of type Volatility.
		/// </summary>
		public const string Str2477Key = nameof(Str2477);

		/// <summary>
		/// Condition for orders of type Volatility.
		/// </summary>
		public static string Str2477 => GetString(Str2477Key);

		/// <summary>
		/// Condition for Smart
		/// </summary>
		public const string Str2478Key = nameof(Str2478);

		/// <summary>
		/// Condition for Smart
		/// </summary>
		public static string Str2478 => GetString(Str2478Key);

		/// <summary>
		/// Condition for orders, sent to Smart stock exchange.
		/// </summary>
		public const string Str2479Key = nameof(Str2479);

		/// <summary>
		/// Condition for orders, sent to Smart stock exchange.
		/// </summary>
		public static string Str2479 => GetString(Str2479Key);

		/// <summary>
		/// Condition for EFP
		/// </summary>
		public const string Str2480Key = nameof(Str2480);

		/// <summary>
		/// Condition for EFP
		/// </summary>
		public static string Str2480 => GetString(Str2480Key);

		/// <summary>
		/// Condition for EFP orders.
		/// </summary>
		public const string Str2481Key = nameof(Str2481);

		/// <summary>
		/// Condition for EFP orders.
		/// </summary>
		public static string Str2481 => GetString(Str2481Key);

		/// <summary>
		/// Condition for Scale
		/// </summary>
		public const string Str2482Key = nameof(Str2482);

		/// <summary>
		/// Condition for Scale
		/// </summary>
		public static string Str2482 => GetString(Str2482Key);

		/// <summary>
		/// Condition for order being changed.
		/// </summary>
		public const string Str2483Key = nameof(Str2483);

		/// <summary>
		/// Condition for order being changed.
		/// </summary>
		public static string Str2483 => GetString(Str2483Key);

		/// <summary>
		/// Condition for Clearing
		/// </summary>
		public const string Str2484Key = nameof(Str2484);

		/// <summary>
		/// Condition for Clearing
		/// </summary>
		public static string Str2484 => GetString(Str2484Key);

		/// <summary>
		/// Condition for clearing information.
		/// </summary>
		public const string Str2485Key = nameof(Str2485);

		/// <summary>
		/// Condition for clearing information.
		/// </summary>
		public static string Str2485 => GetString(Str2485Key);

		/// <summary>
		/// Condition for Algo
		/// </summary>
		public const string Str2486Key = nameof(Str2486);

		/// <summary>
		/// Condition for Algo
		/// </summary>
		public static string Str2486 => GetString(Str2486Key);

		/// <summary>
		/// Condition for algo-orders.
		/// </summary>
		public const string Str2487Key = nameof(Str2487);

		/// <summary>
		/// Condition for algo-orders.
		/// </summary>
		public static string Str2487 => GetString(Str2487Key);

		/// <summary>
		/// Information about commission
		/// </summary>
		public const string Str2488Key = nameof(Str2488);

		/// <summary>
		/// Information about commission
		/// </summary>
		public static string Str2488 => GetString(Str2488Key);

		/// <summary>
		/// For order return information about commission and margin.
		/// </summary>
		public const string Str2489Key = nameof(Str2489);

		/// <summary>
		/// For order return information about commission and margin.
		/// </summary>
		public static string Str2489 => GetString(Str2489Key);

		/// <summary>
		/// Algorithm
		/// </summary>
		public const string Str2490Key = nameof(Str2490);

		/// <summary>
		/// Algorithm
		/// </summary>
		public static string Str2490 => GetString(Str2490Key);

		/// <summary>
		/// Algorithm ID.
		/// </summary>
		public const string Str2491Key = nameof(Str2491);

		/// <summary>
		/// Algorithm ID.
		/// </summary>
		public static string Str2491 => GetString(Str2491Key);

		/// <summary>
		/// Additional parameters.
		/// </summary>
		public const string Str2492Key = nameof(Str2492);

		/// <summary>
		/// Additional parameters.
		/// </summary>
		public static string Str2492 => GetString(Str2492Key);

		/// <summary>
		/// Condition for Hedge
		/// </summary>
		public const string Str2493Key = nameof(Str2493);

		/// <summary>
		/// Condition for Hedge
		/// </summary>
		public static string Str2493 => GetString(Str2493Key);

		/// <summary>
		/// Condition for hedge-orders.
		/// </summary>
		public const string Str2494Key = nameof(Str2494);

		/// <summary>
		/// Condition for hedge-orders.
		/// </summary>
		public static string Str2494 => GetString(Str2494Key);

		/// <summary>
		/// Condition for Execute
		/// </summary>
		public const string Str2495Key = nameof(Str2495);

		/// <summary>
		/// Condition for Execute
		/// </summary>
		public static string Str2495 => GetString(Str2495Key);

		/// <summary>
		/// Condition for orders of type Execute.
		/// </summary>
		public const string Str2496Key = nameof(Str2496);

		/// <summary>
		/// Condition for orders of type Execute.
		/// </summary>
		public static string Str2496 => GetString(Str2496Key);

		/// <summary>
		/// Condition for Active
		/// </summary>
		public const string Str2497Key = nameof(Str2497);

		/// <summary>
		/// Condition for Active
		/// </summary>
		public static string Str2497 => GetString(Str2497Key);

		/// <summary>
		/// Condition for GTC orders.
		/// </summary>
		public const string Str2498Key = nameof(Str2498);

		/// <summary>
		/// Condition for GTC orders.
		/// </summary>
		public static string Str2498 => GetString(Str2498Key);

		/// <summary>
		/// Type of security {0} is not supported.
		/// </summary>
		public const string Str2499ParamsKey = nameof(Str2499Params);

		/// <summary>
		/// Type of security {0} is not supported.
		/// </summary>
		public static string Str2499Params => GetString(Str2499ParamsKey);

		/// <summary>
		/// Unknown type of extended order.
		/// </summary>
		public const string Str2500Key = nameof(Str2500);

		/// <summary>
		/// Unknown type of extended order.
		/// </summary>
		public static string Str2500 => GetString(Str2500Key);

		/// <summary>
		/// Unsupported type of order {0}.
		/// </summary>
		public const string Str2501ParamsKey = nameof(Str2501Params);

		/// <summary>
		/// Unsupported type of order {0}.
		/// </summary>
		public static string Str2501Params => GetString(Str2501ParamsKey);

		/// <summary>
		/// Unknown type '{0}' of security.
		/// </summary>
		public const string Str2502ParamsKey = nameof(Str2502Params);

		/// <summary>
		/// Unknown type '{0}' of security.
		/// </summary>
		public static string Str2502Params => GetString(Str2502ParamsKey);

		/// <summary>
		/// Unknown status of order {0}.
		/// </summary>
		public const string Str2503ParamsKey = nameof(Str2503Params);

		/// <summary>
		/// Unknown status of order {0}.
		/// </summary>
		public static string Str2503Params => GetString(Str2503ParamsKey);

		/// <summary>
		/// Unknown type of order {0}.
		/// </summary>
		public const string Str2504ParamsKey = nameof(Str2504Params);

		/// <summary>
		/// Unknown type of order {0}.
		/// </summary>
		public static string Str2504Params => GetString(Str2504ParamsKey);

		/// <summary>
		/// Unknown type of method {0}.
		/// </summary>
		public const string Str2505ParamsKey = nameof(Str2505Params);

		/// <summary>
		/// Unknown type of method {0}.
		/// </summary>
		public static string Str2505Params => GetString(Str2505ParamsKey);

		/// <summary>
		/// Unknown order {0} direction.
		/// </summary>
		public const string Str2506ParamsKey = nameof(Str2506Params);

		/// <summary>
		/// Unknown order {0} direction.
		/// </summary>
		public static string Str2506Params => GetString(Str2506ParamsKey);

		/// <summary>
		/// Unknown type of trader {0}.
		/// </summary>
		public const string Str2507ParamsKey = nameof(Str2507Params);

		/// <summary>
		/// Unknown type of trader {0}.
		/// </summary>
		public static string Str2507Params => GetString(Str2507ParamsKey);

		/// <summary>
		/// Unknown type of parameter {0}.
		/// </summary>
		public const string Str2508ParamsKey = nameof(Str2508Params);

		/// <summary>
		/// Unknown type of parameter {0}.
		/// </summary>
		public static string Str2508Params => GetString(Str2508ParamsKey);

		/// <summary>
		/// Unknown type of ID {0}.
		/// </summary>
		public const string Str2509ParamsKey = nameof(Str2509Params);

		/// <summary>
		/// Unknown type of ID {0}.
		/// </summary>
		public static string Str2509Params => GetString(Str2509ParamsKey);

		/// <summary>
		/// Unknown type of clearing aim {0}.
		/// </summary>
		public const string Str2510ParamsKey = nameof(Str2510Params);

		/// <summary>
		/// Unknown type of clearing aim {0}.
		/// </summary>
		public static string Str2510Params => GetString(Str2510ParamsKey);

		/// <summary>
		/// Session was not created.
		/// </summary>
		public const string Str2511Key = nameof(Str2511);

		/// <summary>
		/// Session was not created.
		/// </summary>
		public static string Str2511 => GetString(Str2511Key);

		/// <summary>
		/// Minimum server version must be {0}, whilst it is {1}.
		/// </summary>
		public const string Str2512ParamsKey = nameof(Str2512Params);

		/// <summary>
		/// Minimum server version must be {0}, whilst it is {1}.
		/// </summary>
		public static string Str2512Params => GetString(Str2512ParamsKey);

		/// <summary>
		/// Minimum server version {0} does not correspond to the required {1}.
		/// </summary>
		public const string Str2513ParamsKey = nameof(Str2513Params);

		/// <summary>
		/// Minimum server version {0} does not correspond to the required {1}.
		/// </summary>
		public static string Str2513Params => GetString(Str2513ParamsKey);

		/// <summary>
		/// Order {0} does not have extended information.
		/// </summary>
		public const string Str2514ParamsKey = nameof(Str2514Params);

		/// <summary>
		/// Order {0} does not have extended information.
		/// </summary>
		public static string Str2514Params => GetString(Str2514ParamsKey);

		/// <summary>
		/// Unknown order {0} duration time.
		/// </summary>
		public const string Str2515ParamsKey = nameof(Str2515Params);

		/// <summary>
		/// Unknown order {0} duration time.
		/// </summary>
		public static string Str2515Params => GetString(Str2515ParamsKey);

		/// <summary>
		/// Unique ID. Used when several clients are connected to one terminal or gateway.
		/// </summary>
		public const string Str2518Key = nameof(Str2518);

		/// <summary>
		/// Unique ID. Used when several clients are connected to one terminal or gateway.
		/// </summary>
		public static string Str2518 => GetString(Str2518Key);

		/// <summary>
		/// Real-time
		/// </summary>
		public const string RealTimeKey = nameof(RealTime);

		/// <summary>
		/// Real-time
		/// </summary>
		public static string RealTime => GetString(RealTimeKey);

		/// <summary>
		/// Should real-time or 'frozen' on broker server data be used.
		/// </summary>
		public const string Str2520Key = nameof(Str2520);

		/// <summary>
		/// Should real-time or 'frozen' on broker server data be used.
		/// </summary>
		public static string Str2520 => GetString(Str2520Key);

		/// <summary>
		/// Server messages logging level.
		/// </summary>
		public const string Str2521Key = nameof(Str2521);

		/// <summary>
		/// Server messages logging level.
		/// </summary>
		public static string Str2521 => GetString(Str2521Key);

		/// <summary>
		/// Market data fields
		/// </summary>
		public const string Str2522Key = nameof(Str2522);

		/// <summary>
		/// Market data fields
		/// </summary>
		public static string Str2522 => GetString(Str2522Key);

		/// <summary>
		/// Market data fields, which will be received with subscribed to Level1 messages.
		/// </summary>
		public const string Str2523Key = nameof(Str2523);

		/// <summary>
		/// Market data fields, which will be received with subscribed to Level1 messages.
		/// </summary>
		public static string Str2523 => GetString(Str2523Key);

		/// <summary>
		/// Socked did not return data.
		/// </summary>
		public const string Str2524Key = nameof(Str2524);

		/// <summary>
		/// Socked did not return data.
		/// </summary>
		public static string Str2524 => GetString(Str2524Key);

		/// <summary>
		/// {0} Number {1} Code {2}
		/// </summary>
		public const string Str2525ParamsKey = nameof(Str2525Params);

		/// <summary>
		/// {0} Number {1} Code {2}
		/// </summary>
		public static string Str2525Params => GetString(Str2525ParamsKey);

		/// <summary>
		/// Address = {0}
		/// </summary>
		public const string Str2526ParamsKey = nameof(Str2526Params);

		/// <summary>
		/// Address = {0}
		/// </summary>
		public static string Str2526Params => GetString(Str2526ParamsKey);

		/// <summary>
		/// Unknown status {0}.
		/// </summary>
		public const string Str2527ParamsKey = nameof(Str2527Params);

		/// <summary>
		/// Unknown status {0}.
		/// </summary>
		public static string Str2527Params => GetString(Str2527ParamsKey);

		/// <summary>
		/// Numeric value {0} is out of range.
		/// </summary>
		public const string Str2528ParamsKey = nameof(Str2528Params);

		/// <summary>
		/// Numeric value {0} is out of range.
		/// </summary>
		public static string Str2528Params => GetString(Str2528ParamsKey);

		/// <summary>
		/// System
		/// </summary>
		public const string Str2529Key = nameof(Str2529);

		/// <summary>
		/// System
		/// </summary>
		public static string Str2529 => GetString(Str2529Key);

		/// <summary>
		/// Interactive Brokers does not support timeframe equal {0}.
		/// </summary>
		public const string Str2531ParamsKey = nameof(Str2531Params);

		/// <summary>
		/// Interactive Brokers does not support timeframe equal {0}.
		/// </summary>
		public static string Str2531Params => GetString(Str2531ParamsKey);

		/// <summary>
		/// TWS address.
		/// </summary>
		public const string Str2532Key = nameof(Str2532);

		/// <summary>
		/// TWS address.
		/// </summary>
		public static string Str2532 => GetString(Str2532Key);

		/// <summary>
		/// Real-time data
		/// </summary>
		public const string Str2535Key = nameof(Str2535);

		/// <summary>
		/// Real-time data
		/// </summary>
		public static string Str2535 => GetString(Str2535Key);

		/// <summary>
		/// Load real-time or history data.
		/// </summary>
		public const string Str2536Key = nameof(Str2536);

		/// <summary>
		/// Load real-time or history data.
		/// </summary>
		public static string Str2536 => GetString(Str2536Key);

		/// <summary>
		/// Load securities from IQFeed website
		/// </summary>
		public const string Str2537Key = nameof(Str2537);

		/// <summary>
		/// Load securities from IQFeed website
		/// </summary>
		public static string Str2537 => GetString(Str2537Key);

		/// <summary>
		/// Should the whole set of securities be loaded from IQFeed website archive. If switched off, securities have to be searched through Search.
		/// </summary>
		public const string Str2538Key = nameof(Str2538);

		/// <summary>
		/// Should the whole set of securities be loaded from IQFeed website archive. If switched off, securities have to be searched through Search.
		/// </summary>
		public static string Str2538 => GetString(Str2538Key);

		/// <summary>
		/// Securities types
		/// </summary>
		public const string Str2539Key = nameof(Str2539);

		/// <summary>
		/// Securities types
		/// </summary>
		public static string Str2539 => GetString(Str2539Key);

		/// <summary>
		/// List of securities types for receiving data.
		/// </summary>
		public const string Str2540Key = nameof(Str2540);

		/// <summary>
		/// List of securities types for receiving data.
		/// </summary>
		public static string Str2540 => GetString(Str2540Key);

		/// <summary>
		/// Address Level1
		/// </summary>
		public const string Str2541Key = nameof(Str2541);

		/// <summary>
		/// Address Level1
		/// </summary>
		public static string Str2541 => GetString(Str2541Key);

		/// <summary>
		/// Server address for obtaining data on Level1.
		/// </summary>
		public const string Str2542Key = nameof(Str2542);

		/// <summary>
		/// Server address for obtaining data on Level1.
		/// </summary>
		public static string Str2542 => GetString(Str2542Key);

		/// <summary>
		/// Address Level2
		/// </summary>
		public const string Str2543Key = nameof(Str2543);

		/// <summary>
		/// Address Level2
		/// </summary>
		public static string Str2543 => GetString(Str2543Key);

		/// <summary>
		/// Server address for obtaining data on Level2.
		/// </summary>
		public const string Str2544Key = nameof(Str2544);

		/// <summary>
		/// Server address for obtaining data on Level2.
		/// </summary>
		public static string Str2544 => GetString(Str2544Key);

		/// <summary>
		/// Address Lookup
		/// </summary>
		public const string Str2545Key = nameof(Str2545);

		/// <summary>
		/// Address Lookup
		/// </summary>
		public static string Str2545 => GetString(Str2545Key);

		/// <summary>
		/// Server address for obtaining history data.
		/// </summary>
		public const string Str2546Key = nameof(Str2546);

		/// <summary>
		/// Server address for obtaining history data.
		/// </summary>
		public static string Str2546 => GetString(Str2546Key);

		/// <summary>
		/// Address Admin
		/// </summary>
		public const string Str2547Key = nameof(Str2547);

		/// <summary>
		/// Address Admin
		/// </summary>
		public static string Str2547 => GetString(Str2547Key);

		/// <summary>
		/// Server address for obtaining service data.
		/// </summary>
		public const string Str2548Key = nameof(Str2548);

		/// <summary>
		/// Server address for obtaining service data.
		/// </summary>
		public static string Str2548 => GetString(Str2548Key);

		/// <summary>
		/// Source does not support data download for all securities.
		/// </summary>
		public const string Str2549Key = nameof(Str2549);

		/// <summary>
		/// Source does not support data download for all securities.
		/// </summary>
		public static string Str2549 => GetString(Str2549Key);

		/// <summary>
		/// Download has been interrupted.
		/// </summary>
		public const string Str2550Key = nameof(Str2550);

		/// <summary>
		/// Download has been interrupted.
		/// </summary>
		public static string Str2550 => GetString(Str2550Key);

		/// <summary>
		/// Unexpected disconnection.
		/// </summary>
		public const string Str2551Key = nameof(Str2551);

		/// <summary>
		/// Unexpected disconnection.
		/// </summary>
		public static string Str2551 => GetString(Str2551Key);

		/// <summary>
		/// OEC logging is incompatible with Remoting in Secondary mode. Logging is disabled.
		/// </summary>
		public const string Str2552Key = nameof(Str2552);

		/// <summary>
		/// OEC logging is incompatible with Remoting in Secondary mode. Logging is disabled.
		/// </summary>
		public static string Str2552 => GetString(Str2552Key);

		/// <summary>
		/// Stop type is incorrect ({0})
		/// </summary>
		public const string Str2553ParamsKey = nameof(Str2553Params);

		/// <summary>
		/// Stop type is incorrect ({0})
		/// </summary>
		public static string Str2553Params => GetString(Str2553ParamsKey);

		/// <summary>
		/// Trailing stops are only supported for contracts of equity or future types.
		/// </summary>
		public const string Str2554Key = nameof(Str2554);

		/// <summary>
		/// Trailing stops are only supported for contracts of equity or future types.
		/// </summary>
		public static string Str2554 => GetString(Str2554Key);

		/// <summary>
		/// Asset type is incorrect ({0})
		/// </summary>
		public const string Str2555ParamsKey = nameof(Str2555Params);

		/// <summary>
		/// Asset type is incorrect ({0})
		/// </summary>
		public static string Str2555Params => GetString(Str2555ParamsKey);

		/// <summary>
		/// Order did not pass verification for the following fields: {0}
		/// </summary>
		public const string Str2556ParamsKey = nameof(Str2556Params);

		/// <summary>
		/// Order did not pass verification for the following fields: {0}
		/// </summary>
		public static string Str2556Params => GetString(Str2556ParamsKey);

		/// <summary>
		/// Unexpected state of order: {0}
		/// </summary>
		public const string Str2557ParamsKey = nameof(Str2557Params);

		/// <summary>
		/// Unexpected state of order: {0}
		/// </summary>
		public static string Str2557Params => GetString(Str2557ParamsKey);

		/// <summary>
		/// Disabled
		/// </summary>
		public const string Str2558Key = nameof(Str2558);

		/// <summary>
		/// Disabled
		/// </summary>
		public static string Str2558 => GetString(Str2558Key);

		/// <summary>
		/// Automatically
		/// </summary>
		public const string Str2559Key = nameof(Str2559);

		/// <summary>
		/// Automatically
		/// </summary>
		public static string Str2559 => GetString(Str2559Key);

		/// <summary>
		/// Secondary
		/// </summary>
		public const string Str2560Key = nameof(Str2560);

		/// <summary>
		/// Secondary
		/// </summary>
		public static string Str2560 => GetString(Str2560Key);

		/// <summary>
		/// Unique software ID.
		/// </summary>
		public const string Str2565Key = nameof(Str2565);

		/// <summary>
		/// Unique software ID.
		/// </summary>
		public static string Str2565 => GetString(Str2565Key);

		/// <summary>
		/// Required mode of connection to the terminal.
		/// </summary>
		public const string Str2566Key = nameof(Str2566);

		/// <summary>
		/// Required mode of connection to the terminal.
		/// </summary>
		public static string Str2566 => GetString(Str2566Key);

		/// <summary>
		/// Use "native" reconnection mechanism.
		/// </summary>
		public const string Str2567Key = nameof(Str2567);

		/// <summary>
		/// Use "native" reconnection mechanism.
		/// </summary>
		public static string Str2567 => GetString(Str2567Key);

		/// <summary>
		/// Use OpenECry API logging.
		/// </summary>
		public const string Str2568Key = nameof(Str2568);

		/// <summary>
		/// Use OpenECry API logging.
		/// </summary>
		public static string Str2568 => GetString(Str2568Key);

		/// <summary>
		/// Stop type
		/// </summary>
		public const string Str2570Key = nameof(Str2570);

		/// <summary>
		/// Stop type
		/// </summary>
		public static string Str2570 => GetString(Str2570Key);

		/// <summary>
		/// Stop type.
		/// </summary>
		public const string Str2571Key = nameof(Str2571);

		/// <summary>
		/// Stop type.
		/// </summary>
		public static string Str2571 => GetString(Str2571Key);

		/// <summary>
		/// Trailing stop follows the market if price change is larger than {0}.
		/// </summary>
		public const string Str2572Key = nameof(Str2572);

		/// <summary>
		/// Trailing stop follows the market if price change is larger than {0}.
		/// </summary>
		public static string Str2572 => GetString(Str2572Key);

		/// <summary>
		/// Delta percentage
		/// </summary>
		public const string Str2573Key = nameof(Str2573);

		/// <summary>
		/// Delta percentage
		/// </summary>
		public static string Str2573 => GetString(Str2573Key);

		/// <summary>
		/// Delta expressed as a percentage.
		/// </summary>
		public const string Str2574Key = nameof(Str2574);

		/// <summary>
		/// Delta expressed as a percentage.
		/// </summary>
		public static string Str2574 => GetString(Str2574Key);

		/// <summary>
		/// Trigger field
		/// </summary>
		public const string Str2575Key = nameof(Str2575);

		/// <summary>
		/// Trigger field
		/// </summary>
		public static string Str2575 => GetString(Str2575Key);

		/// <summary>
		/// Trigger field.
		/// </summary>
		public const string Str2576Key = nameof(Str2576);

		/// <summary>
		/// Trigger field.
		/// </summary>
		public static string Str2576 => GetString(Str2576Key);

		/// <summary>
		/// Trailing stop begins tracking once the price reaches {0}.
		/// </summary>
		public const string Str2577Key = nameof(Str2577);

		/// <summary>
		/// Trailing stop begins tracking once the price reaches {0}.
		/// </summary>
		public static string Str2577 => GetString(Str2577Key);

		/// <summary>
		/// Order '{0}' direction is not supported.
		/// </summary>
		public const string Str2578ParamsKey = nameof(Str2578Params);

		/// <summary>
		/// Order '{0}' direction is not supported.
		/// </summary>
		public static string Str2578Params => GetString(Str2578ParamsKey);

		/// <summary>
		/// Incorrect type of order '{0}'.
		/// </summary>
		public const string Str2579ParamsKey = nameof(Str2579Params);

		/// <summary>
		/// Incorrect type of order '{0}'.
		/// </summary>
		public static string Str2579Params => GetString(Str2579ParamsKey);

		/// <summary>
		/// Wrong data received.
		/// </summary>
		public const string Str2580Key = nameof(Str2580);

		/// <summary>
		/// Wrong data received.
		/// </summary>
		public static string Str2580 => GetString(Str2580Key);

		/// <summary>
		/// User blocked.
		/// </summary>
		public const string Str2581Key = nameof(Str2581);

		/// <summary>
		/// User blocked.
		/// </summary>
		public static string Str2581 => GetString(Str2581Key);

		/// <summary>
		/// Session was closed by user.
		/// </summary>
		public const string Str2582Key = nameof(Str2582);

		/// <summary>
		/// Session was closed by user.
		/// </summary>
		public static string Str2582 => GetString(Str2582Key);

		/// <summary>
		/// User account expired.
		/// </summary>
		public const string Str2583Key = nameof(Str2583);

		/// <summary>
		/// User account expired.
		/// </summary>
		public static string Str2583 => GetString(Str2583Key);

		/// <summary>
		/// Client version out of date. Update required.
		/// </summary>
		public const string Str2584Key = nameof(Str2584);

		/// <summary>
		/// Client version out of date. Update required.
		/// </summary>
		public static string Str2584 => GetString(Str2584Key);

		/// <summary>
		/// Incorrect login or password.
		/// </summary>
		public const string Str2585Key = nameof(Str2585);

		/// <summary>
		/// Incorrect login or password.
		/// </summary>
		public static string Str2585 => GetString(Str2585Key);

		/// <summary>
		/// User temporarily blocked.
		/// </summary>
		public const string Str2586Key = nameof(Str2586);

		/// <summary>
		/// User temporarily blocked.
		/// </summary>
		public static string Str2586 => GetString(Str2586Key);

		/// <summary>
		/// Connection is not allowed for current software.
		/// </summary>
		public const string Str2587Key = nameof(Str2587);

		/// <summary>
		/// Connection is not allowed for current software.
		/// </summary>
		public static string Str2587 => GetString(Str2587Key);

		/// <summary>
		/// User with same name is already connected to server.
		/// </summary>
		public const string Str2588Key = nameof(Str2588);

		/// <summary>
		/// User with same name is already connected to server.
		/// </summary>
		public static string Str2588 => GetString(Str2588Key);

		/// <summary>
		/// Quote for {0} have zero volume.
		/// </summary>
		public const string Str2590ParamsKey = nameof(Str2590Params);

		/// <summary>
		/// Quote for {0} have zero volume.
		/// </summary>
		public static string Str2590Params => GetString(Str2590ParamsKey);

		/// <summary>
		/// Price of best bid {0} is greater or equal to the price of best ask {1} for security {2}.
		/// </summary>
		public const string Str2591ParamsKey = nameof(Str2591Params);

		/// <summary>
		/// Price of best bid {0} is greater or equal to the price of best ask {1} for security {2}.
		/// </summary>
		public static string Str2591Params => GetString(Str2591ParamsKey);

		/// <summary>
		/// Additional
		/// </summary>
		public const string Str2593Key = nameof(Str2593);

		/// <summary>
		/// Additional
		/// </summary>
		public static string Str2593 => GetString(Str2593Key);

		/// <summary>
		/// Name prefix
		/// </summary>
		public const string Str2595Key = nameof(Str2595);

		/// <summary>
		/// Name prefix
		/// </summary>
		public static string Str2595 => GetString(Str2595Key);

		/// <summary>
		/// Prefix in name of Plaza connection program.
		/// </summary>
		public const string Str2596Key = nameof(Str2596);

		/// <summary>
		/// Prefix in name of Plaza connection program.
		/// </summary>
		public static string Str2596 => GetString(Str2596Key);

		/// <summary>
		/// Use CGate
		/// </summary>
		public const string UseCGateKey = nameof(UseCGate);

		/// <summary>
		/// Use CGate
		/// </summary>
		public static string UseCGate => GetString(UseCGateKey);

		/// <summary>
		/// Should CGate be used to trade through Plaza or use old COM.
		/// </summary>
		public const string Str2598Key = nameof(Str2598);

		/// <summary>
		/// Should CGate be used to trade through Plaza or use old COM.
		/// </summary>
		public static string Str2598 => GetString(Str2598Key);

		/// <summary>
		/// Software ID
		/// </summary>
		public const string SoftwareIdKey = nameof(SoftwareId);

		/// <summary>
		/// Software ID
		/// </summary>
		public static string SoftwareId => GetString(SoftwareIdKey);

		/// <summary>
		/// Login. Used in case of an authorized router connection.
		/// </summary>
		public const string Str2601Key = nameof(Str2601);

		/// <summary>
		/// Login. Used in case of an authorized router connection.
		/// </summary>
		public static string Str2601 => GetString(Str2601Key);

		/// <summary>
		/// Password. Used in case of authorized router connection.
		/// </summary>
		public const string Str2602Key = nameof(Str2602);

		/// <summary>
		/// Password. Used in case of authorized router connection.
		/// </summary>
		public static string Str2602 => GetString(Str2602Key);

		/// <summary>
		/// Time, during which messages from data stream are expected to be received or transactions are expected to be sent.
		/// </summary>
		public const string Str2603Key = nameof(Str2603);

		/// <summary>
		/// Time, during which messages from data stream are expected to be received or transactions are expected to be sent.
		/// </summary>
		public static string Str2603 => GetString(Str2603Key);

		/// <summary>
		/// Local protocol
		/// </summary>
		public const string Str2604Key = nameof(Str2604);

		/// <summary>
		/// Local protocol
		/// </summary>
		public static string Str2604 => GetString(Str2604Key);

		/// <summary>
		/// Use SharedMem protocol when connecting to local router. By default it is not used.
		/// </summary>
		public const string Str2605Key = nameof(Str2605);

		/// <summary>
		/// Use SharedMem protocol when connecting to local router. By default it is not used.
		/// </summary>
		public static string Str2605 => GetString(Str2605Key);

		/// <summary>
		/// Tables
		/// </summary>
		public const string Str2606Key = nameof(Str2606);

		/// <summary>
		/// Tables
		/// </summary>
		public static string Str2606 => GetString(Str2606Key);

		/// <summary>
		/// List of tables for receiving data.
		/// </summary>
		public const string Str2607Key = nameof(Str2607);

		/// <summary>
		/// List of tables for receiving data.
		/// </summary>
		public static string Str2607 => GetString(Str2607Key);

		/// <summary>
		/// Transaction time-out
		/// </summary>
		public const string Str2608Key = nameof(Str2608);

		/// <summary>
		/// Transaction time-out
		/// </summary>
		public static string Str2608 => GetString(Str2608Key);

		/// <summary>
		/// Time, during which an answer for transaction is expected. By default equal to 5 seconds.
		/// </summary>
		public const string Str2609Key = nameof(Str2609);

		/// <summary>
		/// Time, during which an answer for transaction is expected. By default equal to 5 seconds.
		/// </summary>
		public static string Str2609 => GetString(Str2609Key);

		/// <summary>
		/// Transactional threads
		/// </summary>
		public const string Str2610Key = nameof(Str2610);

		/// <summary>
		/// Transactional threads
		/// </summary>
		public static string Str2610 => GetString(Str2610Key);

		/// <summary>
		/// Number of transactional threads. Default value is 1.
		/// </summary>
		public const string Str2611Key = nameof(Str2611);

		/// <summary>
		/// Number of transactional threads. Default value is 1.
		/// </summary>
		public static string Str2611 => GetString(Str2611Key);

		/// <summary>
		/// Number of transactional threads cannot be less than 1.
		/// </summary>
		public const string Str2612Key = nameof(Str2612);

		/// <summary>
		/// Number of transactional threads cannot be less than 1.
		/// </summary>
		public static string Str2612 => GetString(Str2612Key);

		/// <summary>
		/// Trades from OL
		/// </summary>
		public const string Str2613Key = nameof(Str2613);

		/// <summary>
		/// Trades from OL
		/// </summary>
		public static string Str2613 => GetString(Str2613Key);

		/// <summary>
		/// Use orders log to create ticks. Disabled by default.
		/// </summary>
		public const string Str2614Key = nameof(Str2614);

		/// <summary>
		/// Use orders log to create ticks. Disabled by default.
		/// </summary>
		public static string Str2614 => GetString(Str2614Key);

		/// <summary>
		/// Market depths from OL
		/// </summary>
		public const string Str2615Key = nameof(Str2615);

		/// <summary>
		/// Market depths from OL
		/// </summary>
		public static string Str2615 => GetString(Str2615Key);

		/// <summary>
		/// Use orders log to create market depths. Disabled by default.
		/// </summary>
		public const string Str2616Key = nameof(Str2616);

		/// <summary>
		/// Use orders log to create market depths. Disabled by default.
		/// </summary>
		public static string Str2616 => GetString(Str2616Key);

		/// <summary>
		/// System trades
		/// </summary>
		public const string Str2617Key = nameof(Str2617);

		/// <summary>
		/// System trades
		/// </summary>
		public static string Str2617 => GetString(Str2617Key);

		/// <summary>
		/// Transmit only system trades. By default equal true.
		/// </summary>
		public const string Str2618Key = nameof(Str2618);

		/// <summary>
		/// Transmit only system trades. By default equal true.
		/// </summary>
		public static string Str2618 => GetString(Str2618Key);

		/// <summary>
		/// Broker firm code.
		/// </summary>
		public const string Str2619Key = nameof(Str2619);

		/// <summary>
		/// Broker firm code.
		/// </summary>
		public static string Str2619 => GetString(Str2619Key);

		/// <summary>
		/// Configuration
		/// </summary>
		public const string Str2620Key = nameof(Str2620);

		/// <summary>
		/// Configuration
		/// </summary>
		public static string Str2620 => GetString(Str2620Key);

		/// <summary>
		/// Path to directory, where Plaza streams schemas will be stored.
		/// </summary>
		public const string Str2621Key = nameof(Str2621);

		/// <summary>
		/// Path to directory, where Plaza streams schemas will be stored.
		/// </summary>
		public static string Str2621 => GetString(Str2621Key);

		/// <summary>
		/// Revisions
		/// </summary>
		public const string Str2622Key = nameof(Str2622);

		/// <summary>
		/// Revisions
		/// </summary>
		public static string Str2622 => GetString(Str2622Key);

		/// <summary>
		/// Path to directory, where revisions will be saved.
		/// </summary>
		public const string Str2623Key = nameof(Str2623);

		/// <summary>
		/// Path to directory, where revisions will be saved.
		/// </summary>
		public static string Str2623 => GetString(Str2623Key);

		/// <summary>
		/// Path to directory, where Plaza SDK will be saved
		/// </summary>
		public const string Str2624Key = nameof(Str2624);

		/// <summary>
		/// Path to directory, where Plaza SDK will be saved
		/// </summary>
		public static string Str2624 => GetString(Str2624Key);

		/// <summary>
		/// {0} is not a stream of aggregated futures market depths.
		/// </summary>
		public const string Str2625ParamsKey = nameof(Str2625Params);

		/// <summary>
		/// {0} is not a stream of aggregated futures market depths.
		/// </summary>
		public static string Str2625Params => GetString(Str2625ParamsKey);

		/// <summary>
		/// {0} is not a stream of aggregated options market depths.
		/// </summary>
		public const string Str2626ParamsKey = nameof(Str2626Params);

		/// <summary>
		/// {0} is not a stream of aggregated options market depths.
		/// </summary>
		public static string Str2626Params => GetString(Str2626ParamsKey);

		/// <summary>
		/// Data tables collection is empty.
		/// </summary>
		public const string Str2627Key = nameof(Str2627);

		/// <summary>
		/// Data tables collection is empty.
		/// </summary>
		public static string Str2627 => GetString(Str2627Key);

		/// <summary>
		/// Streams of market depths with varying depth cannot be simultaneously exported.
		/// </summary>
		public const string Str2628Key = nameof(Str2628);

		/// <summary>
		/// Streams of market depths with varying depth cannot be simultaneously exported.
		/// </summary>
		public static string Str2628 => GetString(Str2628Key);

		/// <summary>
		/// Unknown order action {0}.
		/// </summary>
		public const string Str2629ParamsKey = nameof(Str2629Params);

		/// <summary>
		/// Unknown order action {0}.
		/// </summary>
		public static string Str2629Params => GetString(Str2629ParamsKey);

		/// <summary>
		/// Error connecting to Plaza server.
		/// </summary>
		public const string Str2630Key = nameof(Str2630);

		/// <summary>
		/// Error connecting to Plaza server.
		/// </summary>
		public static string Str2630 => GetString(Str2630Key);

		/// <summary>
		/// Connection lost. Connection state {0}.
		/// </summary>
		public const string Str2631ParamsKey = nameof(Str2631Params);

		/// <summary>
		/// Connection lost. Connection state {0}.
		/// </summary>
		public static string Str2631Params => GetString(Str2631ParamsKey);

		/// <summary>
		/// Unknown connection {0} state.
		/// </summary>
		public const string Str2632ParamsKey = nameof(Str2632Params);

		/// <summary>
		/// Unknown connection {0} state.
		/// </summary>
		public static string Str2632Params => GetString(Str2632ParamsKey);

		/// <summary>
		/// Plaza error.
		/// </summary>
		public const string Str2633Key = nameof(Str2633);

		/// <summary>
		/// Plaza error.
		/// </summary>
		public static string Str2633 => GetString(Str2633Key);

		/// <summary>
		/// Connection pool was not stopped in the allocated time.
		/// </summary>
		public const string Str2634Key = nameof(Str2634);

		/// <summary>
		/// Connection pool was not stopped in the allocated time.
		/// </summary>
		public static string Str2634 => GetString(Str2634Key);

		/// <summary>
		/// Futures: orders log
		/// </summary>
		public const string Str2635Key = nameof(Str2635);

		/// <summary>
		/// Futures: orders log
		/// </summary>
		public static string Str2635 => GetString(Str2635Key);

		/// <summary>
		/// Futures and options: trades log
		/// </summary>
		public const string Str2636Key = nameof(Str2636);

		/// <summary>
		/// Futures and options: trades log
		/// </summary>
		public static string Str2636 => GetString(Str2636Key);

		/// <summary>
		/// Futures: multileg trades log
		/// </summary>
		public const string Str2637Key = nameof(Str2637);

		/// <summary>
		/// Futures: multileg trades log
		/// </summary>
		public static string Str2637 => GetString(Str2637Key);

		/// <summary>
		/// Futures: multileg orders log
		/// </summary>
		public const string Str2638Key = nameof(Str2638);

		/// <summary>
		/// Futures: multileg orders log
		/// </summary>
		public static string Str2638 => GetString(Str2638Key);

		/// <summary>
		/// Futures: utility table of server hours
		/// </summary>
		public const string Str2639Key = nameof(Str2639);

		/// <summary>
		/// Futures: utility table of server hours
		/// </summary>
		public static string Str2639 => GetString(Str2639Key);

		/// <summary>
		/// Events table
		/// </summary>
		public const string Str2640Key = nameof(Str2640);

		/// <summary>
		/// Events table
		/// </summary>
		public static string Str2640 => GetString(Str2640Key);

		/// <summary>
		/// Options: orders log
		/// </summary>
		public const string Str2641Key = nameof(Str2641);

		/// <summary>
		/// Options: orders log
		/// </summary>
		public static string Str2641 => GetString(Str2641Key);

		/// <summary>
		/// Options: trades log
		/// </summary>
		public const string Str2642Key = nameof(Str2642);

		/// <summary>
		/// Options: trades log
		/// </summary>
		public static string Str2642 => GetString(Str2642Key);

		/// <summary>
		/// Options: server hours utility table
		/// </summary>
		public const string Str2643Key = nameof(Str2643);

		/// <summary>
		/// Options: server hours utility table
		/// </summary>
		public static string Str2643 => GetString(Str2643Key);

		/// <summary>
		/// Order log. Anonymous order_log
		/// </summary>
		public const string Str2644Key = nameof(Str2644);

		/// <summary>
		/// Order log. Anonymous order_log
		/// </summary>
		public static string Str2644 => GetString(Str2644Key);

		/// <summary>
		/// Order log (multileg). Anonymous order_log
		/// </summary>
		public const string Str2645Key = nameof(Str2645);

		/// <summary>
		/// Order log (multileg). Anonymous order_log
		/// </summary>
		public static string Str2645 => GetString(Str2645Key);

		/// <summary>
		/// Market depth shapshot. Orders log table.
		/// </summary>
		public const string Str2646Key = nameof(Str2646);

		/// <summary>
		/// Market depth shapshot. Orders log table.
		/// </summary>
		public static string Str2646 => GetString(Str2646Key);

		/// <summary>
		/// Market depth shapshot. Information about market depths.
		/// </summary>
		public const string Str2647Key = nameof(Str2647);

		/// <summary>
		/// Market depth shapshot. Information about market depths.
		/// </summary>
		public static string Str2647 => GetString(Str2647Key);

		/// <summary>
		/// Futures: market depth shapshot (market depths information)
		/// </summary>
		public const string Str2648Key = nameof(Str2648);

		/// <summary>
		/// Futures: market depth shapshot (market depths information)
		/// </summary>
		public static string Str2648 => GetString(Str2648Key);

		/// <summary>
		/// Futures: market depth shapshot (orders log table)
		/// </summary>
		public const string Str2649Key = nameof(Str2649);

		/// <summary>
		/// Futures: market depth shapshot (orders log table)
		/// </summary>
		public static string Str2649 => GetString(Str2649Key);

		/// <summary>
		/// Options: market depth shapshot (information about market depths)
		/// </summary>
		public const string Str2650Key = nameof(Str2650);

		/// <summary>
		/// Options: market depth shapshot (information about market depths)
		/// </summary>
		public static string Str2650 => GetString(Str2650Key);

		/// <summary>
		/// Options: market depth shapshot (orders log table)
		/// </summary>
		public const string Str2651Key = nameof(Str2651);

		/// <summary>
		/// Options: market depth shapshot (orders log table)
		/// </summary>
		public static string Str2651 => GetString(Str2651Key);

		/// <summary>
		/// Futures: general session information
		/// </summary>
		public const string Str2652Key = nameof(Str2652);

		/// <summary>
		/// Futures: general session information
		/// </summary>
		public static string Str2652 => GetString(Str2652Key);

		/// <summary>
		/// Options: general session information
		/// </summary>
		public const string Str2653Key = nameof(Str2653);

		/// <summary>
		/// Options: general session information
		/// </summary>
		public static string Str2653 => GetString(Str2653Key);

		/// <summary>
		/// Futures and options: 20 quotes deep market depth
		/// </summary>
		public const string Str2654Key = nameof(Str2654);

		/// <summary>
		/// Futures and options: 20 quotes deep market depth
		/// </summary>
		public static string Str2654 => GetString(Str2654Key);

		/// <summary>
		/// Options: 20 quotes deep market depth
		/// </summary>
		public const string Str2655Key = nameof(Str2655);

		/// <summary>
		/// Options: 20 quotes deep market depth
		/// </summary>
		public static string Str2655 => GetString(Str2655Key);

		/// <summary>
		/// Futures and options: 50 quotes deep market depth
		/// </summary>
		public const string Str2656Key = nameof(Str2656);

		/// <summary>
		/// Futures and options: 50 quotes deep market depth
		/// </summary>
		public static string Str2656 => GetString(Str2656Key);

		/// <summary>
		/// Options: 50 quotes deep market depth
		/// </summary>
		public const string Str2657Key = nameof(Str2657);

		/// <summary>
		/// Options: 50 quotes deep market depth
		/// </summary>
		public static string Str2657 => GetString(Str2657Key);

		/// <summary>
		/// Futures and options: 5 quotes deep market depth
		/// </summary>
		public const string Str2658Key = nameof(Str2658);

		/// <summary>
		/// Futures and options: 5 quotes deep market depth
		/// </summary>
		public static string Str2658 => GetString(Str2658Key);

		/// <summary>
		/// Options: 5 quotes deep market depth
		/// </summary>
		public const string Str2659Key = nameof(Str2659);

		/// <summary>
		/// Options: 5 quotes deep market depth
		/// </summary>
		public static string Str2659 => GetString(Str2659Key);

		/// <summary>
		/// Clients positions
		/// </summary>
		public const string Str2660Key = nameof(Str2660);

		/// <summary>
		/// Clients positions
		/// </summary>
		public static string Str2660 => GetString(Str2660Key);

		/// <summary>
		/// Clients' money and limits
		/// </summary>
		public const string Str2661Key = nameof(Str2661);

		/// <summary>
		/// Clients' money and limits
		/// </summary>
		public static string Str2661 => GetString(Str2661Key);

		/// <summary>
		/// Futures: deliveries report
		/// </summary>
		public const string Str2662Key = nameof(Str2662);

		/// <summary>
		/// Futures: deliveries report
		/// </summary>
		public static string Str2662 => GetString(Str2662Key);

		/// <summary>
		/// Futures: orders rejected during clearing
		/// </summary>
		public const string Str2663Key = nameof(Str2663);

		/// <summary>
		/// Futures: orders rejected during clearing
		/// </summary>
		public static string Str2663 => GetString(Str2663Key);

		/// <summary>
		/// Futures: information about VM, calculated using intermediate clearing results
		/// </summary>
		public const string Str2664Key = nameof(Str2664);

		/// <summary>
		/// Futures: information about VM, calculated using intermediate clearing results
		/// </summary>
		public static string Str2664 => GetString(Str2664Key);

		/// <summary>
		/// Futures: bonds parameters reference guide
		/// </summary>
		public const string Str2665Key = nameof(Str2665);

		/// <summary>
		/// Futures: bonds parameters reference guide
		/// </summary>
		public static string Str2665 => GetString(Str2665Key);

		/// <summary>
		/// Futures: bonds securities reference guide
		/// </summary>
		public const string Str2666Key = nameof(Str2666);

		/// <summary>
		/// Futures: bonds securities reference guide
		/// </summary>
		public static string Str2666 => GetString(Str2666Key);

		/// <summary>
		/// Futures: accrued coupon interest on coupon payment dates
		/// </summary>
		public const string Str2667Key = nameof(Str2667);

		/// <summary>
		/// Futures: accrued coupon interest on coupon payment dates
		/// </summary>
		public static string Str2667 => GetString(Str2667Key);

		/// <summary>
		/// Futures: payment size of nominal bond price
		/// </summary>
		public const string Str2668Key = nameof(Str2668);

		/// <summary>
		/// Futures: payment size of nominal bond price
		/// </summary>
		public static string Str2668 => GetString(Str2668Key);

		/// <summary>
		/// Transmission of USD rate
		/// </summary>
		public const string Str2669Key = nameof(Str2669);

		/// <summary>
		/// Transmission of USD rate
		/// </summary>
		public static string Str2669 => GetString(Str2669Key);

		/// <summary>
		/// Futures
		/// </summary>
		public const string FuturesKey = nameof(Futures);

		/// <summary>
		/// Futures
		/// </summary>
		public static string Futures => GetString(FuturesKey);

		/// <summary>
		/// Futures: information about trading session
		/// </summary>
		public const string Str2671Key = nameof(Str2671);

		/// <summary>
		/// Futures: information about trading session
		/// </summary>
		public static string Str2671 => GetString(Str2671Key);

		/// <summary>
		/// Multileg reference guide
		/// </summary>
		public const string Str2672Key = nameof(Str2672);

		/// <summary>
		/// Multileg reference guide
		/// </summary>
		public static string Str2672 => GetString(Str2672Key);

		/// <summary>
		/// Futures: traded securities reference guide
		/// </summary>
		public const string Str2673Key = nameof(Str2673);

		/// <summary>
		/// Futures: traded securities reference guide
		/// </summary>
		public static string Str2673 => GetString(Str2673Key);

		/// <summary>
		/// Securities reference guide
		/// </summary>
		public const string Str2674Key = nameof(Str2674);

		/// <summary>
		/// Securities reference guide
		/// </summary>
		public static string Str2674 => GetString(Str2674Key);

		/// <summary>
		/// Firm name reference guide
		/// </summary>
		public const string Str2675Key = nameof(Str2675);

		/// <summary>
		/// Firm name reference guide
		/// </summary>
		public static string Str2675 => GetString(Str2675Key);

		/// <summary>
		/// Clients reference guide
		/// </summary>
		public const string Str2676Key = nameof(Str2676);

		/// <summary>
		/// Clients reference guide
		/// </summary>
		public static string Str2676 => GetString(Str2676Key);

		/// <summary>
		/// Futures: clearing results — settlement prices
		/// </summary>
		public const string Str2677Key = nameof(Str2677);

		/// <summary>
		/// Futures: clearing results — settlement prices
		/// </summary>
		public static string Str2677 => GetString(Str2677Key);

		/// <summary>
		/// System messages
		/// </summary>
		public const string Str2678Key = nameof(Str2678);

		/// <summary>
		/// System messages
		/// </summary>
		public static string Str2678 => GetString(Str2678Key);

		/// <summary>
		/// Options: orders rejected during clearing
		/// </summary>
		public const string Str2679Key = nameof(Str2679);

		/// <summary>
		/// Options: orders rejected during clearing
		/// </summary>
		public static string Str2679 => GetString(Str2679Key);

		/// <summary>
		/// Options: information about VM, calculated using intermediate clearing results
		/// </summary>
		public const string Str2680Key = nameof(Str2680);

		/// <summary>
		/// Options: information about VM, calculated using intermediate clearing results
		/// </summary>
		public static string Str2680 => GetString(Str2680Key);

		/// <summary>
		/// Options: expiration orders
		/// </summary>
		public const string Str2681Key = nameof(Str2681);

		/// <summary>
		/// Options: expiration orders
		/// </summary>
		public static string Str2681 => GetString(Str2681Key);

		/// <summary>
		/// Options: traded securities manual
		/// </summary>
		public const string Str2682Key = nameof(Str2682);

		/// <summary>
		/// Options: traded securities manual
		/// </summary>
		public static string Str2682 => GetString(Str2682Key);

		/// <summary>
		/// Options: clearing results — volatility and theoretical prices
		/// </summary>
		public const string Str2683Key = nameof(Str2683);

		/// <summary>
		/// Options: clearing results — volatility and theoretical prices
		/// </summary>
		public static string Str2683 => GetString(Str2683Key);

		/// <summary>
		/// Table with volatility coefficient
		/// </summary>
		public const string Str2684Key = nameof(Str2684);

		/// <summary>
		/// Table with volatility coefficient
		/// </summary>
		public static string Str2684 => GetString(Str2684Key);

		/// <summary>
		/// Market maker obligations in futures
		/// </summary>
		public const string Str2685Key = nameof(Str2685);

		/// <summary>
		/// Market maker obligations in futures
		/// </summary>
		public static string Str2685 => GetString(Str2685Key);

		/// <summary>
		/// Market maker obligations in options
		/// </summary>
		public const string Str2686Key = nameof(Str2686);

		/// <summary>
		/// Market maker obligations in options
		/// </summary>
		public static string Str2686 => GetString(Str2686Key);

		/// <summary>
		/// Client's money in clearing
		/// </summary>
		public const string Str2687Key = nameof(Str2687);

		/// <summary>
		/// Client's money in clearing
		/// </summary>
		public static string Str2687 => GetString(Str2687Key);

		/// <summary>
		/// Currencies and indexes exchange rates
		/// </summary>
		public const string Str2688Key = nameof(Str2688);

		/// <summary>
		/// Currencies and indexes exchange rates
		/// </summary>
		public static string Str2688 => GetString(Str2688Key);

		/// <summary>
		/// Information about positional state at the time of futures evening clearing
		/// </summary>
		public const string Str2689Key = nameof(Str2689);

		/// <summary>
		/// Information about positional state at the time of futures evening clearing
		/// </summary>
		public static string Str2689 => GetString(Str2689Key);

		/// <summary>
		/// Information about positional state at the time of options evening clearing
		/// </summary>
		public const string Str2690Key = nameof(Str2690);

		/// <summary>
		/// Information about positional state at the time of options evening clearing
		/// </summary>
		public static string Str2690 => GetString(Str2690Key);

		/// <summary>
		/// Indexes
		/// </summary>
		public const string Str2691Key = nameof(Str2691);

		/// <summary>
		/// Indexes
		/// </summary>
		public static string Str2691 => GetString(Str2691Key);

		/// <summary>
		/// Indexes values history
		/// </summary>
		public const string Str2692Key = nameof(Str2692);

		/// <summary>
		/// Indexes values history
		/// </summary>
		public static string Str2692 => GetString(Str2692Key);

		/// <summary>
		/// Futures variation margin
		/// </summary>
		public const string Str2693Key = nameof(Str2693);

		/// <summary>
		/// Futures variation margin
		/// </summary>
		public static string Str2693 => GetString(Str2693Key);

		/// <summary>
		/// Options variation margin
		/// </summary>
		public const string Str2694Key = nameof(Str2694);

		/// <summary>
		/// Options variation margin
		/// </summary>
		public static string Str2694 => GetString(Str2694Key);

		/// <summary>
		/// Parameters of underlying contracts
		/// </summary>
		public const string Str2695Key = nameof(Str2695);

		/// <summary>
		/// Parameters of underlying contracts
		/// </summary>
		public static string Str2695 => GetString(Str2695Key);

		/// <summary>
		/// Futures parameters
		/// </summary>
		public const string Str2696Key = nameof(Str2696);

		/// <summary>
		/// Futures parameters
		/// </summary>
		public static string Str2696 => GetString(Str2696Key);

		/// <summary>
		/// Virtual futures parameters
		/// </summary>
		public const string Str2697Key = nameof(Str2697);

		/// <summary>
		/// Virtual futures parameters
		/// </summary>
		public static string Str2697 => GetString(Str2697Key);

		/// <summary>
		/// Options parameters
		/// </summary>
		public const string Str2698Key = nameof(Str2698);

		/// <summary>
		/// Options parameters
		/// </summary>
		public static string Str2698 => GetString(Str2698Key);

		/// <summary>
		/// Information about companies' parameters
		/// </summary>
		public const string Str2699Key = nameof(Str2699);

		/// <summary>
		/// Information about companies' parameters
		/// </summary>
		public static string Str2699 => GetString(Str2699Key);

		/// <summary>
		/// Information about clients' parameters
		/// </summary>
		public const string Str2700Key = nameof(Str2700);

		/// <summary>
		/// Information about clients' parameters
		/// </summary>
		public static string Str2700 => GetString(Str2700Key);

		/// <summary>
		/// Information about the number of added points
		/// </summary>
		public const string Str2701Key = nameof(Str2701);

		/// <summary>
		/// Information about the number of added points
		/// </summary>
		public static string Str2701 => GetString(Str2701Key);

		/// <summary>
		/// Detailed information on the number of incorrect transactions
		/// </summary>
		public const string Str2702Key = nameof(Str2702);

		/// <summary>
		/// Detailed information on the number of incorrect transactions
		/// </summary>
		public static string Str2702 => GetString(Str2702Key);

		/// <summary>
		/// Currencies exchange rates values
		/// </summary>
		public const string Str2703Key = nameof(Str2703);

		/// <summary>
		/// Currencies exchange rates values
		/// </summary>
		public static string Str2703 => GetString(Str2703Key);

		/// <summary>
		/// Stock market: all trades
		/// </summary>
		public const string Str2704Key = nameof(Str2704);

		/// <summary>
		/// Stock market: all trades
		/// </summary>
		public static string Str2704 => GetString(Str2704Key);

		/// <summary>
		/// Foreign exchange market: all trades
		/// </summary>
		public const string Str2705Key = nameof(Str2705);

		/// <summary>
		/// Foreign exchange market: all trades
		/// </summary>
		public static string Str2705 => GetString(Str2705Key);

		/// <summary>
		/// Stock market: general information about securities
		/// </summary>
		public const string Str2706Key = nameof(Str2706);

		/// <summary>
		/// Stock market: general information about securities
		/// </summary>
		public static string Str2706 => GetString(Str2706Key);

		/// <summary>
		/// Foreign exchange market: general information about securities
		/// </summary>
		public const string Str2707Key = nameof(Str2707);

		/// <summary>
		/// Foreign exchange market: general information about securities
		/// </summary>
		public static string Str2707 => GetString(Str2707Key);

		/// <summary>
		/// Stock market: securities quotes
		/// </summary>
		public const string Str2708Key = nameof(Str2708);

		/// <summary>
		/// Stock market: securities quotes
		/// </summary>
		public static string Str2708 => GetString(Str2708Key);

		/// <summary>
		/// Foreign exchange market: securities quotes
		/// </summary>
		public const string Str2709Key = nameof(Str2709);

		/// <summary>
		/// Foreign exchange market: securities quotes
		/// </summary>
		public static string Str2709 => GetString(Str2709Key);

		/// <summary>
		/// Stock market: securities parameters
		/// </summary>
		public const string Str2710Key = nameof(Str2710);

		/// <summary>
		/// Stock market: securities parameters
		/// </summary>
		public static string Str2710 => GetString(Str2710Key);

		/// <summary>
		/// Foreign exchange market: securities parameters
		/// </summary>
		public const string Str2711Key = nameof(Str2711);

		/// <summary>
		/// Foreign exchange market: securities parameters
		/// </summary>
		public static string Str2711 => GetString(Str2711Key);

		/// <summary>
		/// Stock market: currencies reference guide
		/// </summary>
		public const string Str2712Key = nameof(Str2712);

		/// <summary>
		/// Stock market: currencies reference guide
		/// </summary>
		public static string Str2712 => GetString(Str2712Key);

		/// <summary>
		/// Foreign exchange market: currencies directory
		/// </summary>
		public const string Str2713Key = nameof(Str2713);

		/// <summary>
		/// Foreign exchange market: currencies directory
		/// </summary>
		public static string Str2713 => GetString(Str2713Key);

		/// <summary>
		/// Stock market: trading regimes
		/// </summary>
		public const string Str2714Key = nameof(Str2714);

		/// <summary>
		/// Stock market: trading regimes
		/// </summary>
		public static string Str2714 => GetString(Str2714Key);

		/// <summary>
		/// Foreign exchange market: trading modes
		/// </summary>
		public const string Str2715Key = nameof(Str2715);

		/// <summary>
		/// Foreign exchange market: trading modes
		/// </summary>
		public static string Str2715 => GetString(Str2715Key);

		/// <summary>
		/// Stock market: markets
		/// </summary>
		public const string Str2716Key = nameof(Str2716);

		/// <summary>
		/// Stock market: markets
		/// </summary>
		public static string Str2716 => GetString(Str2716Key);

		/// <summary>
		/// Foreign exchange market: markets
		/// </summary>
		public const string Str2717Key = nameof(Str2717);

		/// <summary>
		/// Foreign exchange market: markets
		/// </summary>
		public static string Str2717 => GetString(Str2717Key);

		/// <summary>
		/// Stock market: calculations codes
		/// </summary>
		public const string Str2718Key = nameof(Str2718);

		/// <summary>
		/// Stock market: calculations codes
		/// </summary>
		public static string Str2718 => GetString(Str2718Key);

		/// <summary>
		/// Currency exchange market: calculations codes
		/// </summary>
		public const string Str2719Key = nameof(Str2719);

		/// <summary>
		/// Currency exchange market: calculations codes
		/// </summary>
		public static string Str2719 => GetString(Str2719Key);

		/// <summary>
		/// Stock market: trade server system time
		/// </summary>
		public const string Str2720Key = nameof(Str2720);

		/// <summary>
		/// Stock market: trade server system time
		/// </summary>
		public static string Str2720 => GetString(Str2720Key);

		/// <summary>
		/// Foreign exchange market: trading server system time
		/// </summary>
		public const string Str2721Key = nameof(Str2721);

		/// <summary>
		/// Foreign exchange market: trading server system time
		/// </summary>
		public static string Str2721 => GetString(Str2721Key);

		/// <summary>
		/// Stock market: trading schedule
		/// </summary>
		public const string Str2722Key = nameof(Str2722);

		/// <summary>
		/// Stock market: trading schedule
		/// </summary>
		public static string Str2722 => GetString(Str2722Key);

		/// <summary>
		/// Currency exchange market: trading schedule
		/// </summary>
		public const string Str2723Key = nameof(Str2723);

		/// <summary>
		/// Currency exchange market: trading schedule
		/// </summary>
		public static string Str2723 => GetString(Str2723Key);

		/// <summary>
		/// Stock market: messages
		/// </summary>
		public const string Str2724Key = nameof(Str2724);

		/// <summary>
		/// Stock market: messages
		/// </summary>
		public static string Str2724 => GetString(Str2724Key);

		/// <summary>
		/// Foreign exchange market: messages
		/// </summary>
		public const string Str2725Key = nameof(Str2725);

		/// <summary>
		/// Foreign exchange market: messages
		/// </summary>
		public static string Str2725 => GetString(Str2725Key);

		/// <summary>
		/// Stock market: information about trade server
		/// </summary>
		public const string Str2726Key = nameof(Str2726);

		/// <summary>
		/// Stock market: information about trade server
		/// </summary>
		public static string Str2726 => GetString(Str2726Key);

		/// <summary>
		/// Foreign exchange market: trade server information
		/// </summary>
		public const string Str2727Key = nameof(Str2727);

		/// <summary>
		/// Foreign exchange market: trade server information
		/// </summary>
		public static string Str2727 => GetString(Str2727Key);

		/// <summary>
		/// Stock market: trading schedule events types
		/// </summary>
		public const string Str2728Key = nameof(Str2728);

		/// <summary>
		/// Stock market: trading schedule events types
		/// </summary>
		public static string Str2728 => GetString(Str2728Key);

		/// <summary>
		/// Currency exchange market: trading schedule events types
		/// </summary>
		public const string Str2729Key = nameof(Str2729);

		/// <summary>
		/// Currency exchange market: trading schedule events types
		/// </summary>
		public static string Str2729 => GetString(Str2729Key);

		/// <summary>
		/// Stock market: accumulated income and REPO rates on settlement date
		/// </summary>
		public const string Str2730Key = nameof(Str2730);

		/// <summary>
		/// Stock market: accumulated income and REPO rates on settlement date
		/// </summary>
		public static string Str2730 => GetString(Str2730Key);

		/// <summary>
		/// Foreign exchange market: accumulated income and repo rates on settlement date
		/// </summary>
		public const string Str2731Key = nameof(Str2731);

		/// <summary>
		/// Foreign exchange market: accumulated income and repo rates on settlement date
		/// </summary>
		public static string Str2731 => GetString(Str2731Key);

		/// <summary>
		/// Table {0} not found.
		/// </summary>
		public const string Str2732ParamsKey = nameof(Str2732Params);

		/// <summary>
		/// Table {0} not found.
		/// </summary>
		public static string Str2732Params => GetString(Str2732ParamsKey);

		/// <summary>
		/// Conditional orders are not supported by Plaza2 protocol.
		/// </summary>
		public const string Str2733Key = nameof(Str2733);

		/// <summary>
		/// Conditional orders are not supported by Plaza2 protocol.
		/// </summary>
		public static string Str2733 => GetString(Str2733Key);

		/// <summary>
		/// Error cancelling a group of transaction.
		/// </summary>
		public const string Str2734Key = nameof(Str2734);

		/// <summary>
		/// Error cancelling a group of transaction.
		/// </summary>
		public static string Str2734 => GetString(Str2734Key);

		/// <summary>
		/// Failed to register order {0}.
		/// </summary>
		public const string Str2735ParamsKey = nameof(Str2735Params);

		/// <summary>
		/// Failed to register order {0}.
		/// </summary>
		public static string Str2735Params => GetString(Str2735ParamsKey);

		/// <summary>
		/// Incorrect ID value.
		/// </summary>
		public const string Str2736Key = nameof(Str2736);

		/// <summary>
		/// Incorrect ID value.
		/// </summary>
		public static string Str2736 => GetString(Str2736Key);

		/// <summary>
		/// Comment cannot be longer than 20 symbols.
		/// </summary>
		public const string Str2737Key = nameof(Str2737);

		/// <summary>
		/// Comment cannot be longer than 20 symbols.
		/// </summary>
		public static string Str2737 => GetString(Str2737Key);

		/// <summary>
		/// Path in registry {0} is missing.
		/// </summary>
		public const string Str2738ParamsKey = nameof(Str2738Params);

		/// <summary>
		/// Path in registry {0} is missing.
		/// </summary>
		public static string Str2738Params => GetString(Str2738ParamsKey);

		/// <summary>
		/// Path {0} does not contain file name.
		/// </summary>
		public const string Str2739ParamsKey = nameof(Str2739Params);

		/// <summary>
		/// Path {0} does not contain file name.
		/// </summary>
		public static string Str2739Params => GetString(Str2739ParamsKey);

		/// <summary>
		/// Router installed as a Windows service.
		/// </summary>
		public const string Str2740Key = nameof(Str2740);

		/// <summary>
		/// Router installed as a Windows service.
		/// </summary>
		public static string Str2740 => GetString(Str2740Key);

		/// <summary>
		/// Failed to stop router process.
		/// </summary>
		public const string Str2741Key = nameof(Str2741);

		/// <summary>
		/// Failed to stop router process.
		/// </summary>
		public static string Str2741 => GetString(Str2741Key);

		/// <summary>
		/// Column {0} already has an index.
		/// </summary>
		public const string Str2742ParamsKey = nameof(Str2742Params);

		/// <summary>
		/// Column {0} already has an index.
		/// </summary>
		public static string Str2742Params => GetString(Str2742ParamsKey);

		/// <summary>
		/// Column {0} belongs to table {1}, whilst the table's system name is {2}.
		/// </summary>
		public const string Str2743ParamsKey = nameof(Str2743Params);

		/// <summary>
		/// Column {0} belongs to table {1}, whilst the table's system name is {2}.
		/// </summary>
		public static string Str2743Params => GetString(Str2743ParamsKey);

		/// <summary>
		/// Error occurred.
		/// </summary>
		public const string Str2744Key = nameof(Str2744);

		/// <summary>
		/// Error occurred.
		/// </summary>
		public static string Str2744 => GetString(Str2744Key);

		/// <summary>
		/// {0} Code {1}, description '{2}'.
		/// </summary>
		public const string Str2745ParamsKey = nameof(Str2745Params);

		/// <summary>
		/// {0} Code {1}, description '{2}'.
		/// </summary>
		public static string Str2745Params => GetString(Str2745ParamsKey);

		/// <summary>
		/// Unknown type of state.
		/// </summary>
		public const string Str2746Key = nameof(Str2746);

		/// <summary>
		/// Unknown type of state.
		/// </summary>
		public static string Str2746 => GetString(Str2746Key);

		/// <summary>
		/// Column {0} of table {1} with index {2} is missing in the data.
		/// </summary>
		public const string Str2747ParamsKey = nameof(Str2747Params);

		/// <summary>
		/// Column {0} of table {1} with index {2} is missing in the data.
		/// </summary>
		public static string Str2747Params => GetString(Str2747ParamsKey);

		/// <summary>
		/// Column {0} of table {1} has type '{2}'. Impossible to cast to type '{3}'.
		/// </summary>
		public const string Str2748ParamsKey = nameof(Str2748Params);

		/// <summary>
		/// Column {0} of table {1} has type '{2}'. Impossible to cast to type '{3}'.
		/// </summary>
		public static string Str2748Params => GetString(Str2748ParamsKey);

		/// <summary>
		/// Stream '{0}' is not initialized.
		/// </summary>
		public const string Str2749ParamsKey = nameof(Str2749Params);

		/// <summary>
		/// Stream '{0}' is not initialized.
		/// </summary>
		public static string Str2749Params => GetString(Str2749ParamsKey);

		/// <summary>
		/// Stream was not deinitialized from the previous launch.
		/// </summary>
		public const string Str2750Key = nameof(Str2750);

		/// <summary>
		/// Stream was not deinitialized from the previous launch.
		/// </summary>
		public static string Str2750 => GetString(Str2750Key);

		/// <summary>
		/// Configuration file not specified.
		/// </summary>
		public const string Str2751Key = nameof(Str2751);

		/// <summary>
		/// Configuration file not specified.
		/// </summary>
		public static string Str2751 => GetString(Str2751Key);

		/// <summary>
		/// Streams of data were not stopped from the previous launch.
		/// </summary>
		public const string Str2752Key = nameof(Str2752);

		/// <summary>
		/// Streams of data were not stopped from the previous launch.
		/// </summary>
		public static string Str2752 => GetString(Str2752Key);

		/// <summary>
		/// Stream closing.
		/// </summary>
		public const string Str2753Key = nameof(Str2753);

		/// <summary>
		/// Stream closing.
		/// </summary>
		public static string Str2753 => GetString(Str2753Key);

		/// <summary>
		/// State of stream {0}.
		/// </summary>
		public const string Str2754ParamsKey = nameof(Str2754Params);

		/// <summary>
		/// State of stream {0}.
		/// </summary>
		public static string Str2754Params => GetString(Str2754ParamsKey);

		/// <summary>
		/// Stream {0}.
		/// </summary>
		public const string Str2755ParamsKey = nameof(Str2755Params);

		/// <summary>
		/// Stream {0}.
		/// </summary>
		public static string Str2755Params => GetString(Str2755ParamsKey);

		/// <summary>
		/// opening
		/// </summary>
		public const string Str2756Key = nameof(Str2756);

		/// <summary>
		/// opening
		/// </summary>
		public static string Str2756 => GetString(Str2756Key);

		/// <summary>
		/// reopening
		/// </summary>
		public const string Str2757Key = nameof(Str2757);

		/// <summary>
		/// reopening
		/// </summary>
		public static string Str2757 => GetString(Str2757Key);

		/// <summary>
		/// Stream '{0}' completed its work. Opening stream '{1}'
		/// </summary>
		public const string Str2758ParamsKey = nameof(Str2758Params);

		/// <summary>
		/// Stream '{0}' completed its work. Opening stream '{1}'
		/// </summary>
		public static string Str2758Params => GetString(Str2758ParamsKey);

		/// <summary>
		/// Stream initialization.
		/// </summary>
		public const string Str2759Key = nameof(Str2759);

		/// <summary>
		/// Stream initialization.
		/// </summary>
		public static string Str2759 => GetString(Str2759Key);

		/// <summary>
		/// Stream is stopping.
		/// </summary>
		public const string Str2760Key = nameof(Str2760);

		/// <summary>
		/// Stream is stopping.
		/// </summary>
		public static string Str2760 => GetString(Str2760Key);

		/// <summary>
		/// Stream stopped.
		/// </summary>
		public const string Str2761Key = nameof(Str2761);

		/// <summary>
		/// Stream stopped.
		/// </summary>
		public static string Str2761 => GetString(Str2761Key);

		/// <summary>
		/// Stream {0} threw an error.
		/// </summary>
		public const string Str2762ParamsKey = nameof(Str2762Params);

		/// <summary>
		/// Stream {0} threw an error.
		/// </summary>
		public static string Str2762Params => GetString(Str2762ParamsKey);

		/// <summary>
		/// New entry for table {0} has wrong revision {1}.
		/// </summary>
		public const string Str2763ParamsKey = nameof(Str2763Params);

		/// <summary>
		/// New entry for table {0} has wrong revision {1}.
		/// </summary>
		public static string Str2763Params => GetString(Str2763ParamsKey);

		/// <summary>
		/// Unacceptable type of data: {0}
		/// </summary>
		public const string Str2764ParamsKey = nameof(Str2764Params);

		/// <summary>
		/// Unacceptable type of data: {0}
		/// </summary>
		public static string Str2764Params => GetString(Str2764ParamsKey);

		/// <summary>
		/// Incorrect format: {0}
		/// </summary>
		public const string Str2765ParamsKey = nameof(Str2765Params);

		/// <summary>
		/// Incorrect format: {0}
		/// </summary>
		public static string Str2765Params => GetString(Str2765ParamsKey);

		/// <summary>
		/// Transactional threads were not stopped since the previous run.
		/// </summary>
		public const string Str2766Key = nameof(Str2766);

		/// <summary>
		/// Transactional threads were not stopped since the previous run.
		/// </summary>
		public static string Str2766 => GetString(Str2766Key);

		/// <summary>
		/// Wrong conversion to decimal.
		/// </summary>
		public const string Str2767Key = nameof(Str2767);

		/// <summary>
		/// Wrong conversion to decimal.
		/// </summary>
		public static string Str2767 => GetString(Str2767Key);

		/// <summary>
		/// Unknown type for column {0}.
		/// </summary>
		public const string Str2768ParamsKey = nameof(Str2768Params);

		/// <summary>
		/// Unknown type for column {0}.
		/// </summary>
		public static string Str2768Params => GetString(Str2768ParamsKey);

		/// <summary>
		/// Time-out.
		/// </summary>
		public const string Str2769Key = nameof(Str2769);

		/// <summary>
		/// Time-out.
		/// </summary>
		public static string Str2769 => GetString(Str2769Key);

		/// <summary>
		/// Unknown type of message.
		/// </summary>
		public const string Str2770Key = nameof(Str2770);

		/// <summary>
		/// Unknown type of message.
		/// </summary>
		public static string Str2770 => GetString(Str2770Key);

		/// <summary>
		/// Error initializing CGate.
		/// </summary>
		public const string Str2771Key = nameof(Str2771);

		/// <summary>
		/// Error initializing CGate.
		/// </summary>
		public static string Str2771 => GetString(Str2771Key);

		/// <summary>
		/// Error closing CGate.
		/// </summary>
		public const string Str2772Key = nameof(Str2772);

		/// <summary>
		/// Error closing CGate.
		/// </summary>
		public static string Str2772 => GetString(Str2772Key);

		/// <summary>
		/// Error creating connection '{0}'.
		/// </summary>
		public const string Str2773ParamsKey = nameof(Str2773Params);

		/// <summary>
		/// Error creating connection '{0}'.
		/// </summary>
		public static string Str2773Params => GetString(Str2773ParamsKey);

		/// <summary>
		/// Error receiving state of connection '{0}'.
		/// </summary>
		public const string Str2774ParamsKey = nameof(Str2774Params);

		/// <summary>
		/// Error receiving state of connection '{0}'.
		/// </summary>
		public static string Str2774Params => GetString(Str2774ParamsKey);

		/// <summary>
		/// Error opening connection '{0}'.
		/// </summary>
		public const string Str2775ParamsKey = nameof(Str2775Params);

		/// <summary>
		/// Error opening connection '{0}'.
		/// </summary>
		public static string Str2775Params => GetString(Str2775ParamsKey);

		/// <summary>
		/// Error closing connection '{0}'.
		/// </summary>
		public const string Str2776ParamsKey = nameof(Str2776Params);

		/// <summary>
		/// Error closing connection '{0}'.
		/// </summary>
		public static string Str2776Params => GetString(Str2776ParamsKey);

		/// <summary>
		/// Error processing connection {0}.
		/// </summary>
		public const string Str2777ParamsKey = nameof(Str2777Params);

		/// <summary>
		/// Error processing connection {0}.
		/// </summary>
		public static string Str2777Params => GetString(Str2777ParamsKey);

		/// <summary>
		/// Error destroying connection '{0}'.
		/// </summary>
		public const string Str2778ParamsKey = nameof(Str2778Params);

		/// <summary>
		/// Error destroying connection '{0}'.
		/// </summary>
		public static string Str2778Params => GetString(Str2778ParamsKey);

		/// <summary>
		/// Error creating stream '{0}'.
		/// </summary>
		public const string Str2779ParamsKey = nameof(Str2779Params);

		/// <summary>
		/// Error creating stream '{0}'.
		/// </summary>
		public static string Str2779Params => GetString(Str2779ParamsKey);

		/// <summary>
		/// Error receiving state of stream '{0}'.
		/// </summary>
		public const string Str2780ParamsKey = nameof(Str2780Params);

		/// <summary>
		/// Error receiving state of stream '{0}'.
		/// </summary>
		public static string Str2780Params => GetString(Str2780ParamsKey);

		/// <summary>
		/// Error receiving schema of stream '{0}'.
		/// </summary>
		public const string Str2781ParamsKey = nameof(Str2781Params);

		/// <summary>
		/// Error receiving schema of stream '{0}'.
		/// </summary>
		public static string Str2781Params => GetString(Str2781ParamsKey);

		/// <summary>
		/// Error closing stream '{0}'.
		/// </summary>
		public const string Str2782ParamsKey = nameof(Str2782Params);

		/// <summary>
		/// Error closing stream '{0}'.
		/// </summary>
		public static string Str2782Params => GetString(Str2782ParamsKey);

		/// <summary>
		/// Error destroying stream '{0}'.
		/// </summary>
		public const string Str2783ParamsKey = nameof(Str2783Params);

		/// <summary>
		/// Error destroying stream '{0}'.
		/// </summary>
		public static string Str2783Params => GetString(Str2783ParamsKey);

		/// <summary>
		/// Error creating publisher '{0}'.
		/// </summary>
		public const string Str2784ParamsKey = nameof(Str2784Params);

		/// <summary>
		/// Error creating publisher '{0}'.
		/// </summary>
		public static string Str2784Params => GetString(Str2784ParamsKey);

		/// <summary>
		/// Error receiving state of publisher '{0}'.
		/// </summary>
		public const string Str2785ParamsKey = nameof(Str2785Params);

		/// <summary>
		/// Error receiving state of publisher '{0}'.
		/// </summary>
		public static string Str2785Params => GetString(Str2785ParamsKey);

		/// <summary>
		/// Error opening publisher '{0}'.
		/// </summary>
		public const string Str2786ParamsKey = nameof(Str2786Params);

		/// <summary>
		/// Error opening publisher '{0}'.
		/// </summary>
		public static string Str2786Params => GetString(Str2786ParamsKey);

		/// <summary>
		/// Error closing publisher '{0}'.
		/// </summary>
		public const string Str2787ParamsKey = nameof(Str2787Params);

		/// <summary>
		/// Error closing publisher '{0}'.
		/// </summary>
		public static string Str2787Params => GetString(Str2787ParamsKey);

		/// <summary>
		/// Error receiving schema of publisher '{0}'.
		/// </summary>
		public const string Str2788ParamsKey = nameof(Str2788Params);

		/// <summary>
		/// Error receiving schema of publisher '{0}'.
		/// </summary>
		public static string Str2788Params => GetString(Str2788ParamsKey);

		/// <summary>
		/// Error creating message '{0}' of publisher '{1}'.
		/// </summary>
		public const string Str2789ParamsKey = nameof(Str2789Params);

		/// <summary>
		/// Error creating message '{0}' of publisher '{1}'.
		/// </summary>
		public static string Str2789Params => GetString(Str2789ParamsKey);

		/// <summary>
		/// Transaction '{0}' is not supported.
		/// </summary>
		public const string Str2790ParamsKey = nameof(Str2790Params);

		/// <summary>
		/// Transaction '{0}' is not supported.
		/// </summary>
		public static string Str2790Params => GetString(Str2790ParamsKey);

		/// <summary>
		/// Error sending message '{0}' of publisher '{1}'.
		/// </summary>
		public const string Str2791ParamsKey = nameof(Str2791Params);

		/// <summary>
		/// Error sending message '{0}' of publisher '{1}'.
		/// </summary>
		public static string Str2791Params => GetString(Str2791ParamsKey);

		/// <summary>
		/// Error deleting message '{0}' of publisher '{1}'.
		/// </summary>
		public const string Str2792ParamsKey = nameof(Str2792Params);

		/// <summary>
		/// Error deleting message '{0}' of publisher '{1}'.
		/// </summary>
		public static string Str2792Params => GetString(Str2792ParamsKey);

		/// <summary>
		/// Error destroying publisher '{0}'.
		/// </summary>
		public const string Str2793ParamsKey = nameof(Str2793Params);

		/// <summary>
		/// Error destroying publisher '{0}'.
		/// </summary>
		public static string Str2793Params => GetString(Str2793ParamsKey);

		/// <summary>
		/// Unknown type of reply '{0}'.
		/// </summary>
		public const string Str2794ParamsKey = nameof(Str2794Params);

		/// <summary>
		/// Unknown type of reply '{0}'.
		/// </summary>
		public static string Str2794Params => GetString(Str2794ParamsKey);

		/// <summary>
		/// Unknown stream {0} state.
		/// </summary>
		public const string Str2795ParamsKey = nameof(Str2795Params);

		/// <summary>
		/// Unknown stream {0} state.
		/// </summary>
		public static string Str2795Params => GetString(Str2795ParamsKey);

		/// <summary>
		/// Parameter value cannot be less than zero.
		/// </summary>
		public const string Str2796Key = nameof(Str2796);

		/// <summary>
		/// Parameter value cannot be less than zero.
		/// </summary>
		public static string Str2796 => GetString(Str2796Key);

		/// <summary>
		/// Unknown error.
		/// </summary>
		public const string Str2797Key = nameof(Str2797);

		/// <summary>
		/// Unknown error.
		/// </summary>
		public static string Str2797 => GetString(Str2797Key);

		/// <summary>
		/// Connect through CGate.
		/// </summary>
		public const string Str2798Key = nameof(Str2798);

		/// <summary>
		/// Connect through CGate.
		/// </summary>
		public static string Str2798 => GetString(Str2798Key);

		/// <summary>
		/// Transmit only system trades.
		/// </summary>
		public const string Str2800Key = nameof(Str2800);

		/// <summary>
		/// Transmit only system trades.
		/// </summary>
		public static string Str2800 => GetString(Str2800Key);

		/// <summary>
		/// Fast replication
		/// </summary>
		public const string Str2801Key = nameof(Str2801);

		/// <summary>
		/// Fast replication
		/// </summary>
		public static string Str2801 => GetString(Str2801Key);

		/// <summary>
		/// Is fast replication being used.
		/// </summary>
		public const string Str2802Key = nameof(Str2802);

		/// <summary>
		/// Is fast replication being used.
		/// </summary>
		public static string Str2802 => GetString(Str2802Key);

		/// <summary>
		/// Use for old DDE connection.
		/// </summary>
		public const string Str2803Key = nameof(Str2803);

		/// <summary>
		/// Use for old DDE connection.
		/// </summary>
		public static string Str2803 => GetString(Str2803Key);

		/// <summary>
		/// Path
		/// </summary>
		public const string Str2804Key = nameof(Str2804);

		/// <summary>
		/// Path
		/// </summary>
		public static string Str2804 => GetString(Str2804Key);

		/// <summary>
		/// Path to directory, where Quik is installed.
		/// </summary>
		public const string Str2805Key = nameof(Str2805);

		/// <summary>
		/// Path to directory, where Quik is installed.
		/// </summary>
		public static string Str2805 => GetString(Str2805Key);

		/// <summary>
		/// Extra columns
		/// </summary>
		public const string Str2806Key = nameof(Str2806);

		/// <summary>
		/// Extra columns
		/// </summary>
		public static string Str2806 => GetString(Str2806Key);

		/// <summary>
		/// List of extra columns for exporting changes from table "Securities".
		/// </summary>
		public const string Str2807Key = nameof(Str2807);

		/// <summary>
		/// List of extra columns for exporting changes from table "Securities".
		/// </summary>
		public static string Str2807 => GetString(Str2807Key);

		/// <summary>
		/// Extra columns history
		/// </summary>
		public const string Str2808Key = nameof(Str2808);

		/// <summary>
		/// Extra columns history
		/// </summary>
		public static string Str2808 => GetString(Str2808Key);

		/// <summary>
		/// List of extra columns for exporting changes from table "Securities (changes)".
		/// </summary>
		public const string Str2809Key = nameof(Str2809);

		/// <summary>
		/// List of extra columns for exporting changes from table "Securities (changes)".
		/// </summary>
		public static string Str2809 => GetString(Str2809Key);

		/// <summary>
		/// History of changes
		/// </summary>
		public const string Str2810Key = nameof(Str2810);

		/// <summary>
		/// History of changes
		/// </summary>
		public static string Str2810 => GetString(Str2810Key);

		/// <summary>
		/// Message type {0} is not supported.
		/// </summary>
		public const string Str2811ParamsKey = nameof(Str2811Params);

		/// <summary>
		/// Message type {0} is not supported.
		/// </summary>
		public static string Str2811Params => GetString(Str2811ParamsKey);

		/// <summary>
		/// All securities data loading is only possible in DDE mode.
		/// </summary>
		public const string Str2812Key = nameof(Str2812);

		/// <summary>
		/// All securities data loading is only possible in DDE mode.
		/// </summary>
		public static string Str2812 => GetString(Str2812Key);

		/// <summary>
		/// Should only system trades be loaded.
		/// </summary>
		public const string Str2813Key = nameof(Str2813);

		/// <summary>
		/// Should only system trades be loaded.
		/// </summary>
		public static string Str2813 => GetString(Str2813Key);

		/// <summary>
		/// Evening session
		/// </summary>
		public const string Str2814Key = nameof(Str2814);

		/// <summary>
		/// Evening session
		/// </summary>
		public static string Str2814 => GetString(Str2814Key);

		/// <summary>
		/// Download evening session data.
		/// </summary>
		public const string Str2815Key = nameof(Str2815);

		/// <summary>
		/// Download evening session data.
		/// </summary>
		public static string Str2815 => GetString(Str2815Key);

		/// <summary>
		/// Should an indicative rate of USD/RUR be loaded.
		/// </summary>
		public const string Str2817Key = nameof(Str2817);

		/// <summary>
		/// Should an indicative rate of USD/RUR be loaded.
		/// </summary>
		public static string Str2817 => GetString(Str2817Key);

		/// <summary>
		/// From what date to begin downloading data for USD/RUR.
		/// </summary>
		public const string Str2818Key = nameof(Str2818);

		/// <summary>
		/// From what date to begin downloading data for USD/RUR.
		/// </summary>
		public static string Str2818 => GetString(Str2818Key);

		/// <summary>
		/// Download data for RTS Standard securities.
		/// </summary>
		public const string Str2819Key = nameof(Str2819);

		/// <summary>
		/// Download data for RTS Standard securities.
		/// </summary>
		public static string Str2819 => GetString(Str2819Key);

		/// <summary>
		/// Glue
		/// </summary>
		public const string Str2820Key = nameof(Str2820);

		/// <summary>
		/// Glue
		/// </summary>
		public static string Str2820 => GetString(Str2820Key);

		/// <summary>
		/// Glue trades for RTS Standard securities (trades for T+N are not split to folders).
		/// </summary>
		public const string Str2821Key = nameof(Str2821);

		/// <summary>
		/// Glue trades for RTS Standard securities (trades for T+N are not split to folders).
		/// </summary>
		public static string Str2821 => GetString(Str2821Key);

		/// <summary>
		/// Source of market-data from MOEX FTP-server.
		/// </summary>
		public const string Str2822Key = nameof(Str2822);

		/// <summary>
		/// Source of market-data from MOEX FTP-server.
		/// </summary>
		public static string Str2822 => GetString(Str2822Key);

		/// <summary>
		/// Start downloading trades for {0}.
		/// </summary>
		public const string Str2823ParamsKey = nameof(Str2823Params);

		/// <summary>
		/// Start downloading trades for {0}.
		/// </summary>
		public static string Str2823Params => GetString(Str2823ParamsKey);

		/// <summary>
		/// USD-RUR exchange rate
		/// </summary>
		public const string Str2824Key = nameof(Str2824);

		/// <summary>
		/// USD-RUR exchange rate
		/// </summary>
		public static string Str2824 => GetString(Str2824Key);

		/// <summary>
		/// BPI
		/// </summary>
		public const string Str2825Key = nameof(Str2825);

		/// <summary>
		/// BPI
		/// </summary>
		public static string Str2825 => GetString(Str2825Key);

		/// <summary>
		/// Source is designed to obtain data about the Best Private Investor contest.
		/// </summary>
		public const string Str2826Key = nameof(Str2826);

		/// <summary>
		/// Source is designed to obtain data about the Best Private Investor contest.
		/// </summary>
		public static string Str2826 => GetString(Str2826Key);

		/// <summary>
		/// Move to year {0}.
		/// </summary>
		public const string Str2827ParamsKey = nameof(Str2827Params);

		/// <summary>
		/// Move to year {0}.
		/// </summary>
		public static string Str2827Params => GetString(Str2827ParamsKey);

		/// <summary>
		/// Date {0} is out of range.
		/// </summary>
		public const string Str2828ParamsKey = nameof(Str2828Params);

		/// <summary>
		/// Date {0} is out of range.
		/// </summary>
		public static string Str2828Params => GetString(Str2828ParamsKey);

		/// <summary>
		/// UX (website)
		/// </summary>
		public const string Str2830Key = nameof(Str2830);

		/// <summary>
		/// UX (website)
		/// </summary>
		public static string Str2830 => GetString(Str2830Key);

		/// <summary>
		/// Boards
		/// </summary>
		public const string Str2831Key = nameof(Str2831);

		/// <summary>
		/// Boards
		/// </summary>
		public static string Str2831 => GetString(Str2831Key);

		/// <summary>
		/// Some associations do not have a filled in string value.
		/// </summary>
		public const string Str2832Key = nameof(Str2832);

		/// <summary>
		/// Some associations do not have a filled in string value.
		/// </summary>
		public static string Str2832 => GetString(Str2832Key);

		/// <summary>
		/// Some associations do not have a filled in S# value.
		/// </summary>
		public const string Str2833Key = nameof(Str2833);

		/// <summary>
		/// Some associations do not have a filled in S# value.
		/// </summary>
		public static string Str2833 => GetString(Str2833Key);

		/// <summary>
		/// Securities search in progress. Wait...
		/// </summary>
		public const string Str2834Key = nameof(Str2834);

		/// <summary>
		/// Securities search in progress. Wait...
		/// </summary>
		public static string Str2834 => GetString(Str2834Key);

		/// <summary>
		/// All securities
		/// </summary>
		public const string Str2835Key = nameof(Str2835);

		/// <summary>
		/// All securities
		/// </summary>
		public static string Str2835 => GetString(Str2835Key);

		/// <summary>
		/// Script parameters.
		/// </summary>
		public const string Str2836Key = nameof(Str2836);

		/// <summary>
		/// Script parameters.
		/// </summary>
		public static string Str2836 => GetString(Str2836Key);

		/// <summary>
		/// Path to data.
		/// </summary>
		public const string Str2838Key = nameof(Str2838);

		/// <summary>
		/// Path to data.
		/// </summary>
		public static string Str2838 => GetString(Str2838Key);

		/// <summary>
		/// Intraday volume
		/// </summary>
		public const string Str2839Key = nameof(Str2839);

		/// <summary>
		/// Intraday volume
		/// </summary>
		public static string Str2839 => GetString(Str2839Key);

		/// <summary>
		/// Volume profile
		/// </summary>
		public const string VolumeProfileKey = nameof(VolumeProfile);

		/// <summary>
		/// Volume profile
		/// </summary>
		public static string VolumeProfile => GetString(VolumeProfileKey);

		/// <summary>
		/// Calculate volume profile. Tick market data is required.
		/// </summary>
		public const string VolumeProfileCalcKey = nameof(VolumeProfileCalc);

		/// <summary>
		/// Calculate volume profile. Tick market data is required.
		/// </summary>
		public static string VolumeProfileCalc => GetString(VolumeProfileCalcKey);

		/// <summary>
		/// Import settings from CSV
		/// </summary>
		public const string Str2842Key = nameof(Str2842);

		/// <summary>
		/// Import settings from CSV
		/// </summary>
		public static string Str2842 => GetString(Str2842Key);

		/// <summary>
		/// Full path to CSV file.
		/// </summary>
		public const string Str2843Key = nameof(Str2843);

		/// <summary>
		/// Full path to CSV file.
		/// </summary>
		public static string Str2843 => GetString(Str2843Key);

		/// <summary>
		/// Column separator
		/// </summary>
		public const string Str2844Key = nameof(Str2844);

		/// <summary>
		/// Column separator
		/// </summary>
		public static string Str2844 => GetString(Str2844Key);

		/// <summary>
		/// Column separator. Tabulation is denoted by TAB.
		/// </summary>
		public const string Str2845Key = nameof(Str2845);

		/// <summary>
		/// Column separator. Tabulation is denoted by TAB.
		/// </summary>
		public static string Str2845 => GetString(Str2845Key);

		/// <summary>
		/// Skip lines
		/// </summary>
		public const string Str2846Key = nameof(Str2846);

		/// <summary>
		/// Skip lines
		/// </summary>
		public static string Str2846 => GetString(Str2846Key);

		/// <summary>
		/// Number of lines to be skipped from the beginning of the file (if they contain meta information).
		/// </summary>
		public const string Str2847Key = nameof(Str2847);

		/// <summary>
		/// Number of lines to be skipped from the beginning of the file (if they contain meta information).
		/// </summary>
		public static string Str2847 => GetString(Str2847Key);

		/// <summary>
		/// Format of storage, where data needs to be imported.
		/// </summary>
		public const string Str2848Key = nameof(Str2848);

		/// <summary>
		/// Format of storage, where data needs to be imported.
		/// </summary>
		public static string Str2848 => GetString(Str2848Key);

		/// <summary>
		/// Imported candles parameters.
		/// </summary>
		public const string Str2849Key = nameof(Str2849);

		/// <summary>
		/// Imported candles parameters.
		/// </summary>
		public static string Str2849 => GetString(Str2849Key);

		/// <summary>
		/// Security code. Must be completed, if the data file does not contain the security code.
		/// </summary>
		public const string Str2850Key = nameof(Str2850);

		/// <summary>
		/// Security code. Must be completed, if the data file does not contain the security code.
		/// </summary>
		public static string Str2850 => GetString(Str2850Key);

		/// <summary>
		/// Board code. Must be completed, if the data file does not contain the board code.
		/// </summary>
		public const string Str2851Key = nameof(Str2851);

		/// <summary>
		/// Board code. Must be completed, if the data file does not contain the board code.
		/// </summary>
		public static string Str2851 => GetString(Str2851Key);

		/// <summary>
		/// Date. Column can contain just a date or date with time.
		/// </summary>
		public const string Str2852Key = nameof(Str2852);

		/// <summary>
		/// Date. Column can contain just a date or date with time.
		/// </summary>
		public static string Str2852 => GetString(Str2852Key);

		/// <summary>
		/// Time. This column is optional and is only necessary in case the date and time are separate in file being exported.
		/// </summary>
		public const string Str2853Key = nameof(Str2853);

		/// <summary>
		/// Time. This column is optional and is only necessary in case the date and time are separate in file being exported.
		/// </summary>
		public static string Str2853 => GetString(Str2853Key);

		/// <summary>
		/// Number (string)
		/// </summary>
		public const string Str2856Key = nameof(Str2856);

		/// <summary>
		/// Number (string)
		/// </summary>
		public static string Str2856 => GetString(Str2856Key);

		/// <summary>
		/// Date
		/// </summary>
		public const string DateKey = nameof(Date);

		/// <summary>
		/// Date
		/// </summary>
		public static string Date => GetString(DateKey);

		/// <summary>
		/// orders log
		/// </summary>
		public const string Str2858Key = nameof(Str2858);

		/// <summary>
		/// orders log
		/// </summary>
		public static string Str2858 => GetString(Str2858Key);

		/// <summary>
		/// candles
		/// </summary>
		public const string Str2859Key = nameof(Str2859);

		/// <summary>
		/// candles
		/// </summary>
		public static string Str2859 => GetString(Str2859Key);

		/// <summary>
		/// Time (opening)
		/// </summary>
		public const string Str2860Key = nameof(Str2860);

		/// <summary>
		/// Time (opening)
		/// </summary>
		public static string Str2860 => GetString(Str2860Key);

		/// <summary>
		/// Time (closing)
		/// </summary>
		public const string Str2861Key = nameof(Str2861);

		/// <summary>
		/// Time (closing)
		/// </summary>
		public static string Str2861 => GetString(Str2861Key);

		/// <summary>
		/// market depths
		/// </summary>
		public const string Str2862Key = nameof(Str2862);

		/// <summary>
		/// market depths
		/// </summary>
		public static string Str2862 => GetString(Str2862Key);

		/// <summary>
		/// news
		/// </summary>
		public const string Str2863Key = nameof(Str2863);

		/// <summary>
		/// news
		/// </summary>
		public static string Str2863 => GetString(Str2863Key);

		/// <summary>
		/// Import
		/// </summary>
		public const string Str2864Key = nameof(Str2864);

		/// <summary>
		/// Import
		/// </summary>
		public static string Str2864 => GetString(Str2864Key);

		/// <summary>
		/// File path not specified.
		/// </summary>
		public const string Str2865Key = nameof(Str2865);

		/// <summary>
		/// File path not specified.
		/// </summary>
		public static string Str2865 => GetString(Str2865Key);

		/// <summary>
		/// File {0} does not exist.
		/// </summary>
		public const string Str2866ParamsKey = nameof(Str2866Params);

		/// <summary>
		/// File {0} does not exist.
		/// </summary>
		public static string Str2866Params => GetString(Str2866ParamsKey);

		/// <summary>
		/// Field {0} is required. It must be given a default value or an ordinal number.
		/// </summary>
		public const string Str2867ParamsKey = nameof(Str2867Params);

		/// <summary>
		/// Field {0} is required. It must be given a default value or an ordinal number.
		/// </summary>
		public static string Str2867Params => GetString(Str2867ParamsKey);

		/// <summary>
		/// Field {0} is an enumeration. You have to set up corresponding values for it.
		/// </summary>
		public const string Str2868ParamsKey = nameof(Str2868Params);

		/// <summary>
		/// Field {0} is an enumeration. You have to set up corresponding values for it.
		/// </summary>
		public static string Str2868Params => GetString(Str2868ParamsKey);

		/// <summary>
		/// Field '{0}' has index {1}, which is greater than length {2} of values array.
		/// </summary>
		public const string Str2869ParamsKey = nameof(Str2869Params);

		/// <summary>
		/// Field '{0}' has index {1}, which is greater than length {2} of values array.
		/// </summary>
		public static string Str2869Params => GetString(Str2869ParamsKey);

		/// <summary>
		/// Import '{0}' of type '{1}'.
		/// </summary>
		public const string Str2870ParamsKey = nameof(Str2870Params);

		/// <summary>
		/// Import '{0}' of type '{1}'.
		/// </summary>
		public static string Str2870Params => GetString(Str2870ParamsKey);

		/// <summary>
		/// Creating security '{0}'.
		/// </summary>
		public const string Str2871ParamsKey = nameof(Str2871Params);

		/// <summary>
		/// Creating security '{0}'.
		/// </summary>
		public static string Str2871Params => GetString(Str2871ParamsKey);

		/// <summary>
		/// Unsupported type '{0}'.
		/// </summary>
		public const string Str2872ParamsKey = nameof(Str2872Params);

		/// <summary>
		/// Unsupported type '{0}'.
		/// </summary>
		public static string Str2872Params => GetString(Str2872ParamsKey);

		/// <summary>
		/// Cannot authorize, because authorization module was not found.
		/// </summary>
		public const string Str2873Key = nameof(Str2873);

		/// <summary>
		/// Cannot authorize, because authorization module was not found.
		/// </summary>
		public static string Str2873 => GetString(Str2873Key);

		/// <summary>
		/// Unknown item {0} of candle formation.
		/// </summary>
		public const string Str2874ParamsKey = nameof(Str2874Params);

		/// <summary>
		/// Unknown item {0} of candle formation.
		/// </summary>
		public static string Str2874Params => GetString(Str2874ParamsKey);

		/// <summary>
		/// Security must be selected.
		/// </summary>
		public const string Str2875Key = nameof(Str2875);

		/// <summary>
		/// Security must be selected.
		/// </summary>
		public static string Str2875 => GetString(Str2875Key);

		/// <summary>
		/// Path to copied data in bin format should not be same as path to source data.
		/// </summary>
		public const string Str2876Key = nameof(Str2876);

		/// <summary>
		/// Path to copied data in bin format should not be same as path to source data.
		/// </summary>
		public static string Str2876 => GetString(Str2876Key);

		/// <summary>
		/// Data erasing
		/// </summary>
		public const string Str2879Key = nameof(Str2879);

		/// <summary>
		/// Data erasing
		/// </summary>
		public static string Str2879 => GetString(Str2879Key);

		/// <summary>
		/// Select at least one security.
		/// </summary>
		public const string Str2881Key = nameof(Str2881);

		/// <summary>
		/// Select at least one security.
		/// </summary>
		public static string Str2881 => GetString(Str2881Key);

		/// <summary>
		/// for all securities
		/// </summary>
		public const string Str2882Key = nameof(Str2882);

		/// <summary>
		/// for all securities
		/// </summary>
		public static string Str2882 => GetString(Str2882Key);

		/// <summary>
		/// Do you really want to delete {0} data?
		/// </summary>
		public const string Str2884ParamsKey = nameof(Str2884Params);

		/// <summary>
		/// Do you really want to delete {0} data?
		/// </summary>
		public static string Str2884Params => GetString(Str2884ParamsKey);

		/// <summary>
		/// Must select type of data being glued.
		/// </summary>
		public const string Str2887Key = nameof(Str2887);

		/// <summary>
		/// Must select type of data being glued.
		/// </summary>
		public static string Str2887 => GetString(Str2887Key);

		/// <summary>
		/// Continuous futures contract must be created.
		/// </summary>
		public const string Str2888Key = nameof(Str2888);

		/// <summary>
		/// Continuous futures contract must be created.
		/// </summary>
		public static string Str2888 => GetString(Str2888Key);

		/// <summary>
		/// No data to combine.
		/// </summary>
		public const string Str2889Key = nameof(Str2889);

		/// <summary>
		/// No data to combine.
		/// </summary>
		public static string Str2889 => GetString(Str2889Key);

		/// <summary>
		/// Stop
		/// </summary>
		public const string Str2890Key = nameof(Str2890);

		/// <summary>
		/// Stop
		/// </summary>
		public static string Str2890 => GetString(Str2890Key);

		/// <summary>
		/// Glue
		/// </summary>
		public const string Str2891Key = nameof(Str2891);

		/// <summary>
		/// Glue
		/// </summary>
		public static string Str2891 => GetString(Str2891Key);

		/// <summary>
		/// Gluing data
		/// </summary>
		public const string Str2892Key = nameof(Str2892);

		/// <summary>
		/// Gluing data
		/// </summary>
		public static string Str2892 => GetString(Str2892Key);

		/// <summary>
		/// Cannot determine path to database.
		/// </summary>
		public const string Str2895Key = nameof(Str2895);

		/// <summary>
		/// Cannot determine path to database.
		/// </summary>
		public static string Str2895 => GetString(Str2895Key);

		/// <summary>
		/// Error updating databases.
		/// </summary>
		public const string Str2896Key = nameof(Str2896);

		/// <summary>
		/// Error updating databases.
		/// </summary>
		public static string Str2896 => GetString(Str2896Key);

		/// <summary>
		/// File {0} is not a .NET assembly.
		/// </summary>
		public const string Str2897ParamsKey = nameof(Str2897Params);

		/// <summary>
		/// File {0} is not a .NET assembly.
		/// </summary>
		public static string Str2897Params => GetString(Str2897ParamsKey);

		/// <summary>
		/// Unknown type of task {0}. Data will be deleted.
		/// </summary>
		public const string Str2899ParamsKey = nameof(Str2899Params);

		/// <summary>
		/// Unknown type of task {0}. Data will be deleted.
		/// </summary>
		public static string Str2899Params => GetString(Str2899ParamsKey);

		/// <summary>
		/// Task {0} not found.
		/// </summary>
		public const string Str2900ParamsKey = nameof(Str2900Params);

		/// <summary>
		/// Task {0} not found.
		/// </summary>
		public static string Str2900Params => GetString(Str2900ParamsKey);

		/// <summary>
		/// License does not support simultaneous work of several copies '{0}'.
		/// </summary>
		public const string Str2903ParamsKey = nameof(Str2903Params);

		/// <summary>
		/// License does not support simultaneous work of several copies '{0}'.
		/// </summary>
		public static string Str2903Params => GetString(Str2903ParamsKey);

		/// <summary>
		/// Add task {0}...
		/// </summary>
		public const string Str2904ParamsKey = nameof(Str2904Params);

		/// <summary>
		/// Add task {0}...
		/// </summary>
		public static string Str2904Params => GetString(Str2904ParamsKey);

		/// <summary>
		/// Task settings match default settings. Task will be disabled.
		/// </summary>
		public const string Str2905Key = nameof(Str2905);

		/// <summary>
		/// Task settings match default settings. Task will be disabled.
		/// </summary>
		public static string Str2905 => GetString(Str2905Key);

		/// <summary>
		/// Initializing.
		/// </summary>
		public const string Str2906Key = nameof(Str2906);

		/// <summary>
		/// Initializing.
		/// </summary>
		public static string Str2906 => GetString(Str2906Key);

		/// <summary>
		/// Task has no selected securities.
		/// </summary>
		public const string Str2907Key = nameof(Str2907);

		/// <summary>
		/// Task has no selected securities.
		/// </summary>
		public static string Str2907 => GetString(Str2907Key);

		/// <summary>
		/// Unknown type of export '{0}'.
		/// </summary>
		public const string Str2910ParamsKey = nameof(Str2910Params);

		/// <summary>
		/// Unknown type of export '{0}'.
		/// </summary>
		public static string Str2910Params => GetString(Str2910ParamsKey);

		/// <summary>
		/// Too much data to display
		/// </summary>
		public const string Str2911Key = nameof(Str2911);

		/// <summary>
		/// Too much data to display
		/// </summary>
		public static string Str2911 => GetString(Str2911Key);

		/// <summary>
		/// Uploaded {0} of {1}
		/// </summary>
		public const string Str2912ParamsKey = nameof(Str2912Params);

		/// <summary>
		/// Uploaded {0} of {1}
		/// </summary>
		public static string Str2912Params => GetString(Str2912ParamsKey);

		/// <summary>
		/// No data
		/// </summary>
		public const string Str2913Key = nameof(Str2913);

		/// <summary>
		/// No data
		/// </summary>
		public static string Str2913 => GetString(Str2913Key);

		/// <summary>
		/// Unknown error during stream task processing.
		/// </summary>
		public const string Str2914Key = nameof(Str2914);

		/// <summary>
		/// Unknown error during stream task processing.
		/// </summary>
		public static string Str2914 => GetString(Str2914Key);

		/// <summary>
		/// S#.Data — error.
		/// </summary>
		public const string Str2915Key = nameof(Str2915);

		/// <summary>
		/// S#.Data — error.
		/// </summary>
		public static string Str2915 => GetString(Str2915Key);

		/// <summary>
		/// Open data folder
		/// </summary>
		public const string Str2916Key = nameof(Str2916);

		/// <summary>
		/// Open data folder
		/// </summary>
		public static string Str2916 => GetString(Str2916Key);

		/// <summary>
		/// Cannot open data storage directory. Error '{0}'. Path can be incorrect in settings: '{1}'
		/// </summary>
		public const string Str2917ParamsKey = nameof(Str2917Params);

		/// <summary>
		/// Cannot open data storage directory. Error '{0}'. Path can be incorrect in settings: '{1}'
		/// </summary>
		public static string Str2917Params => GetString(Str2917ParamsKey);

		/// <summary>
		/// {0:0} day(-s)
		/// </summary>
		public const string Str2918ParamsKey = nameof(Str2918Params);

		/// <summary>
		/// {0:0} day(-s)
		/// </summary>
		public static string Str2918Params => GetString(Str2918ParamsKey);

		/// <summary>
		/// {0:0} hour(-s)
		/// </summary>
		public const string Str2919ParamsKey = nameof(Str2919Params);

		/// <summary>
		/// {0:0} hour(-s)
		/// </summary>
		public static string Str2919Params => GetString(Str2919ParamsKey);

		/// <summary>
		/// {0:0} min(-s)
		/// </summary>
		public const string Str2920ParamsKey = nameof(Str2920Params);

		/// <summary>
		/// {0:0} min(-s)
		/// </summary>
		public static string Str2920Params => GetString(Str2920ParamsKey);

		/// <summary>
		/// Create security
		/// </summary>
		public const string Str2921Key = nameof(Str2921);

		/// <summary>
		/// Create security
		/// </summary>
		public static string Str2921 => GetString(Str2921Key);

		/// <summary>
		/// Change security
		/// </summary>
		public const string Str2922Key = nameof(Str2922);

		/// <summary>
		/// Change security
		/// </summary>
		public static string Str2922 => GetString(Str2922Key);

		/// <summary>
		/// Security code is not filled.
		/// </summary>
		public const string Str2923Key = nameof(Str2923);

		/// <summary>
		/// Security code is not filled.
		/// </summary>
		public static string Str2923 => GetString(Str2923Key);

		/// <summary>
		/// Volume step is not filled.
		/// </summary>
		public const string Str2924Key = nameof(Str2924);

		/// <summary>
		/// Volume step is not filled.
		/// </summary>
		public static string Str2924 => GetString(Str2924Key);

		/// <summary>
		/// Price step is not filled.
		/// </summary>
		public const string Str2925Key = nameof(Str2925);

		/// <summary>
		/// Price step is not filled.
		/// </summary>
		public static string Str2925 => GetString(Str2925Key);

		/// <summary>
		/// Board is not specified.
		/// </summary>
		public const string Str2926Key = nameof(Str2926);

		/// <summary>
		/// Board is not specified.
		/// </summary>
		public static string Str2926 => GetString(Str2926Key);

		/// <summary>
		/// Security {0} already exists in the database.
		/// </summary>
		public const string Str2927ParamsKey = nameof(Str2927Params);

		/// <summary>
		/// Security {0} already exists in the database.
		/// </summary>
		public static string Str2927Params => GetString(Str2927ParamsKey);

		/// <summary>
		/// Process must be stopped. Would you like to do it now?
		/// </summary>
		public const string Str2928Key = nameof(Str2928);

		/// <summary>
		/// Process must be stopped. Would you like to do it now?
		/// </summary>
		public static string Str2928 => GetString(Str2928Key);

		/// <summary>
		/// Fi le{0} has wrong format.
		/// </summary>
		public const string Str2929ParamsKey = nameof(Str2929Params);

		/// <summary>
		/// Fi le{0} has wrong format.
		/// </summary>
		public static string Str2929Params => GetString(Str2929ParamsKey);

		/// <summary>
		/// New security added {0}.
		/// </summary>
		public const string Str2930ParamsKey = nameof(Str2930Params);

		/// <summary>
		/// New security added {0}.
		/// </summary>
		public static string Str2930Params => GetString(Str2930ParamsKey);

		/// <summary>
		/// Dates cache for security {0} in directory '{1}' was reset.
		/// </summary>
		public const string Str2931ParamsKey = nameof(Str2931Params);

		/// <summary>
		/// Dates cache for security {0} in directory '{1}' was reset.
		/// </summary>
		public static string Str2931Params => GetString(Str2931ParamsKey);

		/// <summary>
		/// Start
		/// </summary>
		public const string Str2932Key = nameof(Str2932);

		/// <summary>
		/// Start
		/// </summary>
		public static string Str2932 => GetString(Str2932Key);

		/// <summary>
		/// Show
		/// </summary>
		public const string Str2933Key = nameof(Str2933);

		/// <summary>
		/// Show
		/// </summary>
		public static string Str2933 => GetString(Str2933Key);

		/// <summary>
		/// At least one change must be selected.
		/// </summary>
		public const string Str2935Key = nameof(Str2935);

		/// <summary>
		/// At least one change must be selected.
		/// </summary>
		public static string Str2935 => GetString(Str2935Key);

		/// <summary>
		/// One of the fields in incorrectly set.
		/// </summary>
		public const string Str2938Key = nameof(Str2938);

		/// <summary>
		/// One of the fields in incorrectly set.
		/// </summary>
		public static string Str2938 => GetString(Str2938Key);

		/// <summary>
		/// Errors count exceeded {0}.
		/// </summary>
		public const string Str2940ParamsKey = nameof(Str2940Params);

		/// <summary>
		/// Errors count exceeded {0}.
		/// </summary>
		public static string Str2940Params => GetString(Str2940ParamsKey);

		/// <summary>
		/// Loading...
		/// </summary>
		public const string Str2941Key = nameof(Str2941);

		/// <summary>
		/// Loading...
		/// </summary>
		public static string Str2941 => GetString(Str2941Key);

		/// <summary>
		/// '{0}' loading
		/// </summary>
		public const string Str2942Key = nameof(Str2942);

		/// <summary>
		/// '{0}' loading
		/// </summary>
		public static string Str2942 => GetString(Str2942Key);

		/// <summary>
		/// S#.Data — database error.
		/// </summary>
		public const string Str2943Key = nameof(Str2943);

		/// <summary>
		/// S#.Data — database error.
		/// </summary>
		public static string Str2943 => GetString(Str2943Key);

		/// <summary>
		/// S#.Data is working. Stop data download?
		/// </summary>
		public const string Str2944Key = nameof(Str2944);

		/// <summary>
		/// S#.Data is working. Stop data download?
		/// </summary>
		public static string Str2944 => GetString(Str2944Key);

		/// <summary>
		/// {0}At least one task must be switched on.
		/// </summary>
		public const string Str2946ParamsKey = nameof(Str2946Params);

		/// <summary>
		/// {0}At least one task must be switched on.
		/// </summary>
		public static string Str2946Params => GetString(Str2946ParamsKey);

		/// <summary>
		/// Autostart of quotes downloading is impossible.
		/// </summary>
		public const string Str2947Key = nameof(Str2947);

		/// <summary>
		/// Autostart of quotes downloading is impossible.
		/// </summary>
		public static string Str2947 => GetString(Str2947Key);

		/// <summary>
		/// Continue?
		/// </summary>
		public const string Str2949Key = nameof(Str2949);

		/// <summary>
		/// Continue?
		/// </summary>
		public static string Str2949 => GetString(Str2949Key);

		/// <summary>
		/// Autostart of quotes downloading was successful.
		/// </summary>
		public const string Str2950Key = nameof(Str2950);

		/// <summary>
		/// Autostart of quotes downloading was successful.
		/// </summary>
		public static string Str2950 => GetString(Str2950Key);

		/// <summary>
		/// No task was launched. Detailed information is available in the log.
		/// </summary>
		public const string Str2951Key = nameof(Str2951);

		/// <summary>
		/// No task was launched. Detailed information is available in the log.
		/// </summary>
		public static string Str2951 => GetString(Str2951Key);

		/// <summary>
		/// You must restart {0} to apply these changes. Restart now?
		/// </summary>
		public const string Str2952ParamsKey = nameof(Str2952Params);

		/// <summary>
		/// You must restart {0} to apply these changes. Restart now?
		/// </summary>
		public static string Str2952Params => GetString(Str2952ParamsKey);

		/// <summary>
		/// App settings will be reset. This operation is irreversible. Are you sure you want to continue?
		/// </summary>
		public const string Str2954ParamsKey = nameof(Str2954Params);

		/// <summary>
		/// App settings will be reset. This operation is irreversible. Are you sure you want to continue?
		/// </summary>
		public static string Str2954Params => GetString(Str2954ParamsKey);

		/// <summary>
		/// Data processing error
		/// </summary>
		public const string Str2955Key = nameof(Str2955);

		/// <summary>
		/// Data processing error
		/// </summary>
		public static string Str2955 => GetString(Str2955Key);

		/// <summary>
		/// Error subscribing to {0} for {1}
		/// </summary>
		public const string Str2956ParamsKey = nameof(Str2956Params);

		/// <summary>
		/// Error subscribing to {0} for {1}
		/// </summary>
		public static string Str2956Params => GetString(Str2956ParamsKey);

		/// <summary>
		/// Connection restored.
		/// </summary>
		public const string Str2958Key = nameof(Str2958);

		/// <summary>
		/// Connection restored.
		/// </summary>
		public static string Str2958 => GetString(Str2958Key);

		/// <summary>
		/// Error connection
		/// </summary>
		public const string Str2959Key = nameof(Str2959);

		/// <summary>
		/// Error connection
		/// </summary>
		public static string Str2959 => GetString(Str2959Key);

		/// <summary>
		/// Disconnect
		/// </summary>
		public const string DisconnectKey = nameof(Disconnect);

		/// <summary>
		/// Disconnect
		/// </summary>
		public static string Disconnect => GetString(DisconnectKey);

		/// <summary>
		/// Connect
		/// </summary>
		public const string ConnectKey = nameof(Connect);

		/// <summary>
		/// Connect
		/// </summary>
		public static string Connect => GetString(ConnectKey);

		/// <summary>
		/// Connected
		/// </summary>
		public const string ConnectedKey = nameof(Connected);

		/// <summary>
		/// Connected
		/// </summary>
		public static string Connected => GetString(ConnectedKey);

		/// <summary>
		/// Disconnected
		/// </summary>
		public const string DisconnectedKey = nameof(Disconnected);

		/// <summary>
		/// Disconnected
		/// </summary>
		public static string Disconnected => GetString(DisconnectedKey);

		/// <summary>
		/// Connecting
		/// </summary>
		public const string ConnectingKey = nameof(Connecting);

		/// <summary>
		/// Connecting
		/// </summary>
		public static string Connecting => GetString(ConnectingKey);

		/// <summary>
		/// Disconnecting
		/// </summary>
		public const string DisconnectingKey = nameof(Disconnecting);

		/// <summary>
		/// Disconnecting
		/// </summary>
		public static string Disconnecting => GetString(DisconnectingKey);

		/// <summary>
		/// Failed
		/// </summary>
		public const string FailedKey = nameof(Failed);

		/// <summary>
		/// Failed
		/// </summary>
		public static string Failed => GetString(FailedKey);

		/// <summary>
		/// Reconnecting
		/// </summary>
		public const string ReconnectingKey = nameof(Reconnecting);

		/// <summary>
		/// Reconnecting
		/// </summary>
		public static string Reconnecting => GetString(ReconnectingKey);

		/// <summary>
		/// Smart login is not specified.
		/// </summary>
		public const string Str2965Key = nameof(Str2965);

		/// <summary>
		/// Smart login is not specified.
		/// </summary>
		public static string Str2965 => GetString(Str2965Key);

		/// <summary>
		/// Smart password is not specified.
		/// </summary>
		public const string Str2966Key = nameof(Str2966);

		/// <summary>
		/// Smart password is not specified.
		/// </summary>
		public static string Str2966 => GetString(Str2966Key);

		/// <summary>
		/// Path to Quik is not specified.
		/// </summary>
		public const string Str2967Key = nameof(Str2967);

		/// <summary>
		/// Path to Quik is not specified.
		/// </summary>
		public static string Str2967 => GetString(Str2967Key);

		/// <summary>
		/// Trade № {0}: {1}
		/// </summary>
		public const string Str2968ParamsKey = nameof(Str2968Params);

		/// <summary>
		/// Trade № {0}: {1}
		/// </summary>
		public static string Str2968Params => GetString(Str2968ParamsKey);

		/// <summary>
		/// Path to Quik not selected
		/// </summary>
		public const string Str2969Key = nameof(Str2969);

		/// <summary>
		/// Path to Quik not selected
		/// </summary>
		public static string Str2969 => GetString(Str2969Key);

		/// <summary>
		/// No connection is selected.
		/// </summary>
		public const string Str2971Key = nameof(Str2971);

		/// <summary>
		/// No connection is selected.
		/// </summary>
		public static string Str2971 => GetString(Str2971Key);

		/// <summary>
		/// Connect!
		/// </summary>
		public const string Str2972Key = nameof(Str2972);

		/// <summary>
		/// Connect!
		/// </summary>
		public static string Str2972 => GetString(Str2972Key);

		/// <summary>
		/// 5 secs
		/// </summary>
		public const string Str2973Key = nameof(Str2973);

		/// <summary>
		/// 5 secs
		/// </summary>
		public static string Str2973 => GetString(Str2973Key);

		/// <summary>
		/// Login is not specified.
		/// </summary>
		public const string Str2974Key = nameof(Str2974);

		/// <summary>
		/// Login is not specified.
		/// </summary>
		public static string Str2974 => GetString(Str2974Key);

		/// <summary>
		/// Password is not specified.
		/// </summary>
		public const string Str2975Key = nameof(Str2975);

		/// <summary>
		/// Password is not specified.
		/// </summary>
		public static string Str2975 => GetString(Str2975Key);

		/// <summary>
		/// Reregistration of order №{0}
		/// </summary>
		public const string Str2976ParamsKey = nameof(Str2976Params);

		/// <summary>
		/// Reregistration of order №{0}
		/// </summary>
		public static string Str2976Params => GetString(Str2976ParamsKey);

		/// <summary>
		/// Quik Fix server address not specified
		/// </summary>
		public const string Str2977Key = nameof(Str2977);

		/// <summary>
		/// Quik Fix server address not specified
		/// </summary>
		public static string Str2977 => GetString(Str2977Key);

		/// <summary>
		/// Login is not specified
		/// </summary>
		public const string Str2978Key = nameof(Str2978);

		/// <summary>
		/// Login is not specified
		/// </summary>
		public static string Str2978 => GetString(Str2978Key);

		/// <summary>
		/// Password in not specified
		/// </summary>
		public const string Str2979Key = nameof(Str2979);

		/// <summary>
		/// Password in not specified
		/// </summary>
		public static string Str2979 => GetString(Str2979Key);

		/// <summary>
		/// Error cancelling order
		/// </summary>
		public const string Str2981Key = nameof(Str2981);

		/// <summary>
		/// Error cancelling order
		/// </summary>
		public static string Str2981 => GetString(Str2981Key);

		/// <summary>
		/// Order is not registered
		/// </summary>
		public const string Str2982Key = nameof(Str2982);

		/// <summary>
		/// Order is not registered
		/// </summary>
		public static string Str2982 => GetString(Str2982Key);

		/// <summary>
		/// Path to Quik not selected.
		/// </summary>
		public const string Str2983Key = nameof(Str2983);

		/// <summary>
		/// Path to Quik not selected.
		/// </summary>
		public static string Str2983 => GetString(Str2983Key);

		/// <summary>
		/// No launched Quik found
		/// </summary>
		public const string Str2984Key = nameof(Str2984);

		/// <summary>
		/// No launched Quik found
		/// </summary>
		public static string Str2984 => GetString(Str2984Key);

		/// <summary>
		/// Running Quik found at '{0}'.
		/// </summary>
		public const string Str2985Key = nameof(Str2985);

		/// <summary>
		/// Running Quik found at '{0}'.
		/// </summary>
		public static string Str2985 => GetString(Str2985Key);

		/// <summary>
		/// Enter client code which will be used to send the order:
		/// </summary>
		public const string Str2986Key = nameof(Str2986);

		/// <summary>
		/// Enter client code which will be used to send the order:
		/// </summary>
		public static string Str2986 => GetString(Str2986Key);

		/// <summary>
		/// Lukoil security appeared.
		/// </summary>
		public const string Str2987Key = nameof(Str2987);

		/// <summary>
		/// Lukoil security appeared.
		/// </summary>
		public static string Str2987 => GetString(Str2987Key);

		/// <summary>
		/// Lukoil market depth received.
		/// </summary>
		public const string Str2988Key = nameof(Str2988);

		/// <summary>
		/// Lukoil market depth received.
		/// </summary>
		public static string Str2988 => GetString(Str2988Key);

		/// <summary>
		/// Waiting for Lukoil security and portfolio {0} to appear in the program...
		/// </summary>
		public const string Str2989ParamsKey = nameof(Str2989Params);

		/// <summary>
		/// Waiting for Lukoil security and portfolio {0} to appear in the program...
		/// </summary>
		public static string Str2989Params => GetString(Str2989ParamsKey);

		/// <summary>
		/// No better bid to quote.
		/// </summary>
		public const string Str2990Key = nameof(Str2990);

		/// <summary>
		/// No better bid to quote.
		/// </summary>
		public static string Str2990 => GetString(Str2990Key);

		/// <summary>
		/// Initial value of spread middle {0:0.##}
		/// </summary>
		public const string Str2991ParamsKey = nameof(Str2991Params);

		/// <summary>
		/// Initial value of spread middle {0:0.##}
		/// </summary>
		public static string Str2991Params => GetString(Str2991ParamsKey);

		/// <summary>
		/// Enter account number through which an order will be placed in First Quik:
		/// </summary>
		public const string Str2992Key = nameof(Str2992);

		/// <summary>
		/// Enter account number through which an order will be placed in First Quik:
		/// </summary>
		public static string Str2992 => GetString(Str2992Key);

		/// <summary>
		/// Enter account number through which an order will be placed in Second Quik:
		/// </summary>
		public const string Str2993Key = nameof(Str2993);

		/// <summary>
		/// Enter account number through which an order will be placed in Second Quik:
		/// </summary>
		public static string Str2993 => GetString(Str2993Key);

		/// <summary>
		/// {0} is connected.
		/// </summary>
		public const string Str2994ParamsKey = nameof(Str2994Params);

		/// <summary>
		/// {0} is connected.
		/// </summary>
		public static string Str2994Params => GetString(Str2994ParamsKey);

		/// <summary>
		/// Waiting for securities and portfolios to appear...
		/// </summary>
		public const string Str2995Key = nameof(Str2995);

		/// <summary>
		/// Waiting for securities and portfolios to appear...
		/// </summary>
		public static string Str2995 => GetString(Str2995Key);

		/// <summary>
		/// Information received. Performing orders registration...
		/// </summary>
		public const string Str2996Key = nameof(Str2996);

		/// <summary>
		/// Information received. Performing orders registration...
		/// </summary>
		public static string Str2996 => GetString(Str2996Key);

		/// <summary>
		/// Order for LKOH is registered
		/// </summary>
		public const string Str2997Key = nameof(Str2997);

		/// <summary>
		/// Order for LKOH is registered
		/// </summary>
		public static string Str2997 => GetString(Str2997Key);

		/// <summary>
		/// Order for RIZ0 is registered
		/// </summary>
		public const string Str2998Key = nameof(Str2998);

		/// <summary>
		/// Order for RIZ0 is registered
		/// </summary>
		public static string Str2998 => GetString(Str2998Key);

		/// <summary>
		/// Enter path to Quik directory:
		/// </summary>
		public const string Str2999Key = nameof(Str2999);

		/// <summary>
		/// Enter path to Quik directory:
		/// </summary>
		public static string Str2999 => GetString(Str2999Key);

		/// <summary>
		/// Enter login
		/// </summary>
		public const string EnterLoginKey = nameof(EnterLogin);

		/// <summary>
		/// Enter login
		/// </summary>
		public static string EnterLogin => GetString(EnterLoginKey);

		/// <summary>
		/// Enter password
		/// </summary>
		public const string EnterPasswordKey = nameof(EnterPassword);

		/// <summary>
		/// Enter password
		/// </summary>
		public static string EnterPassword => GetString(EnterPasswordKey);

		/// <summary>
		/// Quik starting...
		/// </summary>
		public const string QuikStartingKey = nameof(QuikStarting);

		/// <summary>
		/// Quik starting...
		/// </summary>
		public static string QuikStarting => GetString(QuikStartingKey);

		/// <summary>
		/// Quik launched.
		/// </summary>
		public const string QuikLaunchedKey = nameof(QuikLaunched);

		/// <summary>
		/// Quik launched.
		/// </summary>
		public static string QuikLaunched => GetString(QuikLaunchedKey);

		/// <summary>
		/// Quik found.
		/// </summary>
		public const string QuikFoundKey = nameof(QuikFound);

		/// <summary>
		/// Quik found.
		/// </summary>
		public static string QuikFound => GetString(QuikFoundKey);

		/// <summary>
		/// Authorization successful.
		/// </summary>
		public const string AuthorizationSuccessfulKey = nameof(AuthorizationSuccessful);

		/// <summary>
		/// Authorization successful.
		/// </summary>
		public static string AuthorizationSuccessful => GetString(AuthorizationSuccessfulKey);

		/// <summary>
		/// Press Enter to switch on Quik...
		/// </summary>
		public const string PressEnterKey = nameof(PressEnter);

		/// <summary>
		/// Press Enter to switch on Quik...
		/// </summary>
		public static string PressEnter => GetString(PressEnterKey);

		/// <summary>
		/// Quik is disconnected from trading.
		/// </summary>
		public const string QuikDisconnectedKey = nameof(QuikDisconnected);

		/// <summary>
		/// Quik is disconnected from trading.
		/// </summary>
		public static string QuikDisconnected => GetString(QuikDisconnectedKey);

		/// <summary>
		/// Quik is off.
		/// </summary>
		public const string Str3008Key = nameof(Str3008);

		/// <summary>
		/// Quik is off.
		/// </summary>
		public static string Str3008 => GetString(Str3008Key);

		/// <summary>
		/// Portfolio not selected.
		/// </summary>
		public const string Str3009Key = nameof(Str3009);

		/// <summary>
		/// Portfolio not selected.
		/// </summary>
		public static string Str3009 => GetString(Str3009Key);

		/// <summary>
		/// Long
		/// </summary>
		public const string LongKey = nameof(Long);

		/// <summary>
		/// Long
		/// </summary>
		public static string Long => GetString(LongKey);

		/// <summary>
		/// Short
		/// </summary>
		public const string ShortKey = nameof(Short);

		/// <summary>
		/// Short
		/// </summary>
		public static string Short => GetString(ShortKey);

		/// <summary>
		/// Wrong path.
		/// </summary>
		public const string Str3014Key = nameof(Str3014);

		/// <summary>
		/// Wrong path.
		/// </summary>
		public static string Str3014 => GetString(Str3014Key);

		/// <summary>
		/// Already launched.
		/// </summary>
		public const string Str3015Key = nameof(Str3015);

		/// <summary>
		/// Already launched.
		/// </summary>
		public static string Str3015 => GetString(Str3015Key);

		/// <summary>
		/// Security ID incorrectly specified.
		/// </summary>
		public const string Str3016Key = nameof(Str3016);

		/// <summary>
		/// Security ID incorrectly specified.
		/// </summary>
		public static string Str3016 => GetString(Str3016Key);


		/// <summary>
		/// Subaccount name.
		/// </summary>
		public const string Str3017Key = nameof(Str3017);

		/// <summary>
		/// Subaccount name.
		/// </summary>
		public static string Str3017 => GetString(Str3017Key);

		/// <summary>
		/// P&amp;L (unrealized)
		/// </summary>
		public const string PnLUnrealKey = nameof(PnLUnreal);

		/// <summary>
		/// P&amp;L (unrealized)
		/// </summary>
		public static string PnLUnreal => GetString(PnLUnrealKey);

		/// <summary>
		/// Completed in {0}.
		/// </summary>
		public const string Str3024Key = nameof(Str3024);

		/// <summary>
		/// Completed in {0}.
		/// </summary>
		public static string Str3024 => GetString(Str3024Key);

		/// <summary>
		/// cancelled
		/// </summary>
		public const string cancelledKey = nameof(cancelled);

		/// <summary>
		/// cancelled
		/// </summary>
		public static string cancelled => GetString(cancelledKey);

		/// <summary>
		/// Long {0} Short {1}
		/// </summary>
		public const string Str3026ParamsKey = nameof(Str3026Params);

		/// <summary>
		/// Long {0} Short {1}
		/// </summary>
		public static string Str3026Params => GetString(Str3026ParamsKey);

		/// <summary>
		/// Obtaining license...
		/// </summary>
		public const string ObtainingLicenseKey = nameof(ObtainingLicense);

		/// <summary>
		/// Obtaining license...
		/// </summary>
		public static string ObtainingLicense => GetString(ObtainingLicenseKey);

		/// <summary>
		/// Invalid process.
		/// </summary>
		public const string InvalidProcessKey = nameof(InvalidProcess);

		/// <summary>
		/// Invalid process.
		/// </summary>
		public static string InvalidProcess => GetString(InvalidProcessKey);

		/// <summary>
		/// DDE export. {0}
		/// </summary>
		public const string Str3030ParamsKey = nameof(Str3030Params);

		/// <summary>
		/// DDE export. {0}
		/// </summary>
		public static string Str3030Params => GetString(Str3030ParamsKey);

		/// <summary>
		/// Table {0}. {1}
		/// </summary>
		public const string Str3031ParamsKey = nameof(Str3031Params);

		/// <summary>
		/// Table {0}. {1}
		/// </summary>
		public static string Str3031Params => GetString(Str3031ParamsKey);

		/// <summary>
		/// Warning
		/// </summary>
		public const string WarningKey = nameof(Warning);

		/// <summary>
		/// Warning
		/// </summary>
		public static string Warning => GetString(WarningKey);

		/// <summary>
		/// Alert. At {0} '{1}'.{2}
		/// </summary>
		public const string Str3033ParamsKey = nameof(Str3033Params);

		/// <summary>
		/// Alert. At {0} '{1}'.{2}
		/// </summary>
		public static string Str3033Params => GetString(Str3033ParamsKey);

		/// <summary>
		/// Select
		/// </summary>
		public const string SelectKey = nameof(Select);

		/// <summary>
		/// Select
		/// </summary>
		public static string Select => GetString(SelectKey);

		/// <summary>
		/// RI open interest exceeded a value of 100 000 contracts.
		/// </summary>
		public const string Str3035Key = nameof(Str3035);

		/// <summary>
		/// RI open interest exceeded a value of 100 000 contracts.
		/// </summary>
		public static string Str3035 => GetString(Str3035Key);

		/// <summary>
		/// Not authorized
		/// </summary>
		public const string NotAuthorizedKey = nameof(NotAuthorized);

		/// <summary>
		/// Not authorized
		/// </summary>
		public static string NotAuthorized => GetString(NotAuthorizedKey);

		/// <summary>
		/// Some rules have no data source.
		/// </summary>
		public const string SomeRuleNoSourceKey = nameof(SomeRuleNoSource);

		/// <summary>
		/// Some rules have no data source.
		/// </summary>
		public static string SomeRuleNoSource => GetString(SomeRuleNoSourceKey);

		/// <summary>
		/// For rule {0} value is not set.
		/// </summary>
		public const string ForRuleNotSetValueKey = nameof(ForRuleNotSetValue);

		/// <summary>
		/// For rule {0} value is not set.
		/// </summary>
		public static string ForRuleNotSetValue => GetString(ForRuleNotSetValueKey);

		/// <summary>
		/// Composite element
		/// </summary>
		public const string CompositeElementKey = nameof(CompositeElement);

		/// <summary>
		/// Composite element
		/// </summary>
		public static string CompositeElement => GetString(CompositeElementKey);

		/// <summary>
		/// Diagram parameters
		/// </summary>
		public const string Str3041Key = nameof(Str3041);

		/// <summary>
		/// Diagram parameters
		/// </summary>
		public static string Str3041 => GetString(Str3041Key);

		/// <summary>
		/// Element name description.
		/// </summary>
		public const string Str3042Key = nameof(Str3042);

		/// <summary>
		/// Element name description.
		/// </summary>
		public static string Str3042 => GetString(Str3042Key);

		/// <summary>
		/// Element with the same name is already on the diagram.
		/// </summary>
		public const string Str3043Key = nameof(Str3043);

		/// <summary>
		/// Element with the same name is already on the diagram.
		/// </summary>
		public static string Str3043 => GetString(Str3043Key);

		/// <summary>
		/// Diagram contains errors.
		/// </summary>
		public const string Str3044Key = nameof(Str3044);

		/// <summary>
		/// Diagram contains errors.
		/// </summary>
		public static string Str3044 => GetString(Str3044Key);

		/// <summary>
		/// Error deleting composite element {0}. Element is used in the following diagrams: {1}.
		/// </summary>
		public const string Str3045ParamsKey = nameof(Str3045Params);

		/// <summary>
		/// Error deleting composite element {0}. Element is used in the following diagrams: {1}.
		/// </summary>
		public static string Str3045Params => GetString(Str3045ParamsKey);

		/// <summary>
		/// Error loading diagram component: {0}
		/// </summary>
		public const string Str3046ParamsKey = nameof(Str3046Params);

		/// <summary>
		/// Error loading diagram component: {0}
		/// </summary>
		public static string Str3046Params => GetString(Str3046ParamsKey);

		/// <summary>
		/// Element with type '{0}' not found.
		/// </summary>
		public const string Str3047ParamsKey = nameof(Str3047Params);

		/// <summary>
		/// Element with type '{0}' not found.
		/// </summary>
		public static string Str3047Params => GetString(Str3047ParamsKey);

		/// <summary>
		/// Notifying
		/// </summary>
		public const string InformKey = nameof(Inform);

		/// <summary>
		/// Notifying
		/// </summary>
		public static string Inform => GetString(InformKey);

		/// <summary>
		/// Data sources
		/// </summary>
		public const string SourcesKey = nameof(Sources);

		/// <summary>
		/// Data sources
		/// </summary>
		public static string Sources => GetString(SourcesKey);

		/// <summary>
		/// Composite elements
		/// </summary>
		public const string CompositionKey = nameof(Composition);

		/// <summary>
		/// Composite elements
		/// </summary>
		public static string Composition => GetString(CompositionKey);

		/// <summary>
		/// Converters
		/// </summary>
		public const string ConverterKey = nameof(Converter);

		/// <summary>
		/// Converters
		/// </summary>
		public static string Converter => GetString(ConverterKey);

		/// <summary>
		/// Diagram element name.
		/// </summary>
		public const string Str3052Key = nameof(Str3052);

		/// <summary>
		/// Diagram element name.
		/// </summary>
		public static string Str3052 => GetString(Str3052Key);

		/// <summary>
		/// Element logging level.
		/// </summary>
		public const string Str3053Key = nameof(Str3053);

		/// <summary>
		/// Element logging level.
		/// </summary>
		public static string Str3053 => GetString(Str3053Key);

		/// <summary>
		/// Show element parameters in higher order elements.
		/// </summary>
		public const string Str3054Key = nameof(Str3054);

		/// <summary>
		/// Show element parameters in higher order elements.
		/// </summary>
		public static string Str3054 => GetString(Str3054Key);

		/// <summary>
		/// No socket with ID {0} found
		/// </summary>
		public const string Str3055ParamsKey = nameof(Str3055Params);

		/// <summary>
		/// No socket with ID {0} found
		/// </summary>
		public static string Str3055Params => GetString(Str3055ParamsKey);

		/// <summary>
		/// Element {0} already binded with {1} through {2}.
		/// </summary>
		public const string Str3056ParamsKey = nameof(Str3056Params);

		/// <summary>
		/// Element {0} already binded with {1} through {2}.
		/// </summary>
		public static string Str3056Params => GetString(Str3056ParamsKey);

		/// <summary>
		/// Current values of diagram element parameters
		/// </summary>
		public const string Str3057Key = nameof(Str3057);

		/// <summary>
		/// Current values of diagram element parameters
		/// </summary>
		public static string Str3057 => GetString(Str3057Key);

		/// <summary>
		/// Input
		/// </summary>
		public const string InputKey = nameof(Input);

		/// <summary>
		/// Input
		/// </summary>
		public static string Input => GetString(InputKey);

		/// <summary>
		/// Output
		/// </summary>
		public const string OutputKey = nameof(Output);

		/// <summary>
		/// Output
		/// </summary>
		public static string Output => GetString(OutputKey);

		/// <summary>
		/// Exit
		/// </summary>
		public const string ExitKey = nameof(Exit);

		/// <summary>
		/// Exit
		/// </summary>
		public static string Exit => GetString(ExitKey);

		/// <summary>
		/// Element for diagram element is already specified.
		/// </summary>
		public const string Str3060Key = nameof(Str3060);

		/// <summary>
		/// Element for diagram element is already specified.
		/// </summary>
		public static string Str3060 => GetString(Str3060Key);

		/// <summary>
		/// Element {0} not loaded.
		/// </summary>
		public const string ElementNotLoadedKey = nameof(ElementNotLoaded);

		/// <summary>
		/// Element {0} not loaded.
		/// </summary>
		public static string ElementNotLoaded => GetString(ElementNotLoadedKey);

		/// <summary>
		/// Socket does not contain value.
		/// </summary>
		public const string SocketNoValueKey = nameof(SocketNoValue);

		/// <summary>
		/// Socket does not contain value.
		/// </summary>
		public static string SocketNoValue => GetString(SocketNoValueKey);

		/// <summary>
		/// Any data
		/// </summary>
		public const string AnyDataKey = nameof(AnyData);

		/// <summary>
		/// Any data
		/// </summary>
		public static string AnyData => GetString(AnyDataKey);

		/// <summary>
		/// Indicator value
		/// </summary>
		public const string IndicatorValueKey = nameof(IndicatorValue);

		/// <summary>
		/// Indicator value
		/// </summary>
		public static string IndicatorValue => GetString(IndicatorValueKey);

		/// <summary>
		/// Own trade
		/// </summary>
		public const string OwnTradeKey = nameof(OwnTrade);

		/// <summary>
		/// Own trade
		/// </summary>
		public static string OwnTrade => GetString(OwnTradeKey);

		/// <summary>
		/// Flag
		/// </summary>
		public const string FlagKey = nameof(Flag);

		/// <summary>
		/// Flag
		/// </summary>
		public static string Flag => GetString(FlagKey);

		/// <summary>
		/// Numeric value
		/// </summary>
		public const string NumericValueKey = nameof(NumericValue);

		/// <summary>
		/// Numeric value
		/// </summary>
		public static string NumericValue => GetString(NumericValueKey);

		/// <summary>
		/// Comparison
		/// </summary>
		public const string ComparisonKey = nameof(Comparison);

		/// <summary>
		/// Comparison
		/// </summary>
		public static string Comparison => GetString(ComparisonKey);

		/// <summary>
		/// Strategy diagram is not set.
		/// </summary>
		public const string DiagramNotSetKey = nameof(DiagramNotSet);

		/// <summary>
		/// Strategy diagram is not set.
		/// </summary>
		public static string DiagramNotSet => GetString(DiagramNotSetKey);

		/// <summary>
		/// Strategy diagram contains errors.
		/// </summary>
		public const string DiagramContainsErrorsKey = nameof(DiagramContainsErrors);

		/// <summary>
		/// Strategy diagram contains errors.
		/// </summary>
		public static string DiagramContainsErrors => GetString(DiagramContainsErrorsKey);

		/// <summary>
		/// Candles source element.
		/// </summary>
		public const string Str3071Key = nameof(Str3071);

		/// <summary>
		/// Candles source element.
		/// </summary>
		public static string Str3071 => GetString(Str3071Key);

		/// <summary>
		/// Series
		/// </summary>
		public const string SeriesKey = nameof(Series);

		/// <summary>
		/// Series
		/// </summary>
		public static string Series => GetString(SeriesKey);

		/// <summary>
		/// Candles series
		/// </summary>
		public const string CandlesSeriesKey = nameof(CandlesSeries);

		/// <summary>
		/// Candles series
		/// </summary>
		public static string CandlesSeries => GetString(CandlesSeriesKey);

		/// <summary>
		/// Only formed
		/// </summary>
		public const string OnlyFormedKey = nameof(OnlyFormed);

		/// <summary>
		/// Only formed
		/// </summary>
		public static string OnlyFormed => GetString(OnlyFormedKey);

		/// <summary>
		/// Send only formed candles.
		/// </summary>
		public const string ProcessOnlyFormedKey = nameof(ProcessOnlyFormed);

		/// <summary>
		/// Send only formed candles.
		/// </summary>
		public static string ProcessOnlyFormed => GetString(ProcessOnlyFormedKey);

		/// <summary>
		/// Perform profile volume calculation.
		/// </summary>
		public const string Str3077Key = nameof(Str3077);

		/// <summary>
		/// Perform profile volume calculation.
		/// </summary>
		public static string Str3077 => GetString(Str3077Key);

		/// <summary>
		/// Chart panel
		/// </summary>
		public const string ChartPanelKey = nameof(ChartPanel);

		/// <summary>
		/// Chart panel
		/// </summary>
		public static string ChartPanel => GetString(ChartPanelKey);

		/// <summary>
		/// Chart panel element (candles display area, indicators, orders and trades).
		/// </summary>
		public const string ChartPanelElementKey = nameof(ChartPanelElement);

		/// <summary>
		/// Chart panel element (candles display area, indicators, orders and trades).
		/// </summary>
		public static string ChartPanelElement => GetString(ChartPanelElementKey);

		/// <summary>
		/// Panel
		/// </summary>
		public const string PanelKey = nameof(Panel);

		/// <summary>
		/// Panel
		/// </summary>
		public static string Panel => GetString(PanelKey);

		/// <summary>
		/// Panel name
		/// </summary>
		public const string PanelNameKey = nameof(PanelName);

		/// <summary>
		/// Panel name
		/// </summary>
		public static string PanelName => GetString(PanelNameKey);

		/// <summary>
		/// For sender {0} there is no registered element.
		/// </summary>
		public const string Str3082ParamsKey = nameof(Str3082Params);

		/// <summary>
		/// For sender {0} there is no registered element.
		/// </summary>
		public static string Str3082Params => GetString(Str3082ParamsKey);

		/// <summary>
		/// Working time
		/// </summary>
		public const string WorkingTimeKey = nameof(WorkingTime);

		/// <summary>
		/// Working time
		/// </summary>
		public static string WorkingTime => GetString(WorkingTimeKey);

		/// <summary>
		/// Working time verification element for a specified security.
		/// </summary>
		public const string Str3085Key = nameof(Str3085);

		/// <summary>
		/// Working time verification element for a specified security.
		/// </summary>
		public static string Str3085 => GetString(Str3085Key);

		/// <summary>
		/// Trigger
		/// </summary>
		public const string TriggerKey = nameof(Trigger);

		/// <summary>
		/// Trigger
		/// </summary>
		public static string Trigger => GetString(TriggerKey);

		/// <summary>
		/// Two values comparison element.
		/// </summary>
		public const string TwoValuesComparisonElementKey = nameof(TwoValuesComparisonElement);

		/// <summary>
		/// Two values comparison element.
		/// </summary>
		public static string TwoValuesComparisonElement => GetString(TwoValuesComparisonElementKey);

		/// <summary>
		/// Signal
		/// </summary>
		public const string SignalKey = nameof(Signal);

		/// <summary>
		/// Signal
		/// </summary>
		public static string Signal => GetString(SignalKey);

		/// <summary>
		/// Left
		/// </summary>
		public const string LeftKey = nameof(Left);

		/// <summary>
		/// Left
		/// </summary>
		public static string Left => GetString(LeftKey);

		/// <summary>
		/// Left operand.
		/// </summary>
		public const string LeftOperandKey = nameof(LeftOperand);

		/// <summary>
		/// Left operand.
		/// </summary>
		public static string LeftOperand => GetString(LeftOperandKey);

		/// <summary>
		/// Operator
		/// </summary>
		public const string OperatorKey = nameof(Operator);

		/// <summary>
		/// Operator
		/// </summary>
		public static string Operator => GetString(OperatorKey);

		/// <summary>
		/// Equality operator.
		/// </summary>
		public const string EqualityOperatorKey = nameof(EqualityOperator);

		/// <summary>
		/// Equality operator.
		/// </summary>
		public static string EqualityOperator => GetString(EqualityOperatorKey);

		/// <summary>
		/// Right
		/// </summary>
		public const string RightKey = nameof(Right);

		/// <summary>
		/// Right
		/// </summary>
		public static string Right => GetString(RightKey);

		/// <summary>
		/// Right operand.
		/// </summary>
		public const string RightOperandKey = nameof(RightOperand);

		/// <summary>
		/// Right operand.
		/// </summary>
		public static string RightOperand => GetString(RightOperandKey);

		/// <summary>
		/// Indexer
		/// </summary>
		public const string IndexerKey = nameof(Indexer);

		/// <summary>
		/// Indexer
		/// </summary>
		public static string Indexer => GetString(IndexerKey);

		/// <summary>
		/// Collection or dictionary element.
		/// </summary>
		public const string CollectionOrDictElemKey = nameof(CollectionOrDictElem);

		/// <summary>
		/// Collection or dictionary element.
		/// </summary>
		public static string CollectionOrDictElem => GetString(CollectionOrDictElemKey);

		/// <summary>
		/// Value
		/// </summary>
		public const string Str3099Key = nameof(Str3099);

		/// <summary>
		/// Value
		/// </summary>
		public static string Str3099 => GetString(Str3099Key);

		/// <summary>
		/// Index value.
		/// </summary>
		public const string IndexValueKey = nameof(IndexValue);

		/// <summary>
		/// Index value.
		/// </summary>
		public static string IndexValue => GetString(IndexValueKey);

		/// <summary>
		/// Indicator element.
		/// </summary>
		public const string IndicatorElemKey = nameof(IndicatorElem);

		/// <summary>
		/// Indicator element.
		/// </summary>
		public static string IndicatorElem => GetString(IndicatorElemKey);

		/// <summary>
		/// Indicator type.
		/// </summary>
		public const string IndicatorTypeKey = nameof(IndicatorType);

		/// <summary>
		/// Indicator type.
		/// </summary>
		public static string IndicatorType => GetString(IndicatorTypeKey);

		/// <summary>
		/// For diagram '{0}' element, indicator type is not specified.
		/// </summary>
		public const string Str3105ParamsKey = nameof(Str3105Params);

		/// <summary>
		/// For diagram '{0}' element, indicator type is not specified.
		/// </summary>
		public static string Str3105Params => GetString(Str3105ParamsKey);

		/// <summary>
		/// Indicator does not work with data type '{0}'.
		/// </summary>
		public const string Str3106ParamsKey = nameof(Str3106Params);

		/// <summary>
		/// Indicator does not work with data type '{0}'.
		/// </summary>
		public static string Str3106Params => GetString(Str3106ParamsKey);

		/// <summary>
		/// Logical condition
		/// </summary>
		public const string LogicalConditionKey = nameof(LogicalCondition);

		/// <summary>
		/// Logical condition
		/// </summary>
		public static string LogicalCondition => GetString(LogicalConditionKey);

		/// <summary>
		/// Logical condition element.
		/// </summary>
		public const string Str3108Key = nameof(Str3108);

		/// <summary>
		/// Logical condition element.
		/// </summary>
		public static string Str3108 => GetString(Str3108Key);

		/// <summary>
		/// AND
		/// </summary>
		public const string Str3109Key = nameof(Str3109);

		/// <summary>
		/// AND
		/// </summary>
		public static string Str3109 => GetString(Str3109Key);

		/// <summary>
		/// OR
		/// </summary>
		public const string Str3110Key = nameof(Str3110);

		/// <summary>
		/// OR
		/// </summary>
		public static string Str3110 => GetString(Str3110Key);

		/// <summary>
		/// Exclusive OR
		/// </summary>
		public const string Str3111Key = nameof(Str3111);

		/// <summary>
		/// Exclusive OR
		/// </summary>
		public static string Str3111 => GetString(Str3111Key);

		/// <summary>
		/// Logical condition.
		/// </summary>
		public const string Str3112Key = nameof(Str3112);

		/// <summary>
		/// Logical condition.
		/// </summary>
		public static string Str3112 => GetString(Str3112Key);

		/// <summary>
		/// Logic function with one argument
		/// </summary>
		public const string Str3113Key = nameof(Str3113);

		/// <summary>
		/// Logic function with one argument
		/// </summary>
		public static string Str3113 => GetString(Str3113Key);

		/// <summary>
		/// Logical function with one argument element
		/// </summary>
		public const string Str3114Key = nameof(Str3114);

		/// <summary>
		/// Logical function with one argument element
		/// </summary>
		public static string Str3114 => GetString(Str3114Key);

		/// <summary>
		/// Formula
		/// </summary>
		public const string Str3115Key = nameof(Str3115);

		/// <summary>
		/// Formula
		/// </summary>
		public static string Str3115 => GetString(Str3115Key);

		/// <summary>
		/// Logic function with one argument.
		/// </summary>
		public const string Str3116Key = nameof(Str3116);

		/// <summary>
		/// Logic function with one argument.
		/// </summary>
		public static string Str3116 => GetString(Str3116Key);

		/// <summary>
		/// Security market depth changes receiving element.
		/// </summary>
		public const string Str3117Key = nameof(Str3117);

		/// <summary>
		/// Security market depth changes receiving element.
		/// </summary>
		public static string Str3117 => GetString(Str3117Key);

		/// <summary>
		/// Formula with a single argument
		/// </summary>
		public const string Str3118Key = nameof(Str3118);

		/// <summary>
		/// Formula with a single argument
		/// </summary>
		public static string Str3118 => GetString(Str3118Key);

		/// <summary>
		/// Formula with one argument element.
		/// </summary>
		public const string Str3119Key = nameof(Str3119);

		/// <summary>
		/// Formula with one argument element.
		/// </summary>
		public static string Str3119 => GetString(Str3119Key);

		/// <summary>
		/// Formula with a single argument.
		/// </summary>
		public const string Str3120Key = nameof(Str3120);

		/// <summary>
		/// Formula with a single argument.
		/// </summary>
		public static string Str3120 => GetString(Str3120Key);

		/// <summary>
		/// Formula with two arguments
		/// </summary>
		public const string Str3121Key = nameof(Str3121);

		/// <summary>
		/// Formula with two arguments
		/// </summary>
		public static string Str3121 => GetString(Str3121Key);

		/// <summary>
		/// Formula with two arguments element.
		/// </summary>
		public const string Str3122Key = nameof(Str3122);

		/// <summary>
		/// Formula with two arguments element.
		/// </summary>
		public static string Str3122 => GetString(Str3122Key);

		/// <summary>
		/// Order registering
		/// </summary>
		public const string Str3123Key = nameof(Str3123);

		/// <summary>
		/// Order registering
		/// </summary>
		public static string Str3123 => GetString(Str3123Key);

		/// <summary>
		/// Order registering element.
		/// </summary>
		public const string Str3124Key = nameof(Str3124);

		/// <summary>
		/// Order registering element.
		/// </summary>
		public static string Str3124 => GetString(Str3124Key);

		/// <summary>
		/// Portfolio, in which the position will be created. If the value is not specified, then strategy portfolio will be used.
		/// </summary>
		public const string Str3125Key = nameof(Str3125);

		/// <summary>
		/// Portfolio, in which the position will be created. If the value is not specified, then strategy portfolio will be used.
		/// </summary>
		public static string Str3125 => GetString(Str3125Key);

		/// <summary>
		/// Position direction (short or long).
		/// </summary>
		public const string Str3126Key = nameof(Str3126);

		/// <summary>
		/// Position direction (short or long).
		/// </summary>
		public static string Str3126 => GetString(Str3126Key);

		/// <summary>
		/// Should position be created with a market order.
		/// </summary>
		public const string Str3127Key = nameof(Str3127);

		/// <summary>
		/// Should position be created with a market order.
		/// </summary>
		public static string Str3127 => GetString(Str3127Key);

		/// <summary>
		/// Security for position opening is not specified.
		/// </summary>
		public const string Str3128Key = nameof(Str3128);

		/// <summary>
		/// Security for position opening is not specified.
		/// </summary>
		public static string Str3128 => GetString(Str3128Key);

		/// <summary>
		/// Trades for order
		/// </summary>
		public const string Str3129Key = nameof(Str3129);

		/// <summary>
		/// Trades for order
		/// </summary>
		public static string Str3129 => GetString(Str3129Key);

		/// <summary>
		/// Trades per order element.
		/// </summary>
		public const string Str3130Key = nameof(Str3130);

		/// <summary>
		/// Trades per order element.
		/// </summary>
		public static string Str3130 => GetString(Str3130Key);

		/// <summary>
		/// Converter
		/// </summary>
		public const string Str3131Key = nameof(Str3131);

		/// <summary>
		/// Converter
		/// </summary>
		public static string Str3131 => GetString(Str3131Key);

		/// <summary>
		/// Composite value of a complex object receiving element.
		/// </summary>
		public const string Str3132Key = nameof(Str3132);

		/// <summary>
		/// Composite value of a complex object receiving element.
		/// </summary>
		public static string Str3132 => GetString(Str3132Key);

		/// <summary>
		/// Property
		/// </summary>
		public const string Str3133Key = nameof(Str3133);

		/// <summary>
		/// Property
		/// </summary>
		public static string Str3133 => GetString(Str3133Key);

		/// <summary>
		/// Object property, from which a value must be obtained.
		/// </summary>
		public const string Str3134Key = nameof(Str3134);

		/// <summary>
		/// Object property, from which a value must be obtained.
		/// </summary>
		public static string Str3134 => GetString(Str3134Key);

		/// <summary>
		/// Combination
		/// </summary>
		public const string Str3135Key = nameof(Str3135);

		/// <summary>
		/// Combination
		/// </summary>
		public static string Str3135 => GetString(Str3135Key);

		/// <summary>
		/// Combined values element.
		/// </summary>
		public const string Str3136Key = nameof(Str3136);

		/// <summary>
		/// Combined values element.
		/// </summary>
		public static string Str3136 => GetString(Str3136Key);

		/// <summary>
		/// Position element (for security and money) for the specified portfolio.
		/// </summary>
		public const string Str3137Key = nameof(Str3137);

		/// <summary>
		/// Position element (for security and money) for the specified portfolio.
		/// </summary>
		public static string Str3137 => GetString(Str3137Key);

		/// <summary>
		/// Portfolio, for which position size must be obtained. If value is not specified, then strategy portfolio will be used.
		/// </summary>
		public const string Str3138Key = nameof(Str3138);

		/// <summary>
		/// Portfolio, for which position size must be obtained. If value is not specified, then strategy portfolio will be used.
		/// </summary>
		public static string Str3138 => GetString(Str3138Key);

		/// <summary>
		/// Whether to receive cash position or security position.
		/// </summary>
		public const string Str3139Key = nameof(Str3139);

		/// <summary>
		/// Whether to receive cash position or security position.
		/// </summary>
		public static string Str3139 => GetString(Str3139Key);

		/// <summary>
		/// Previous value
		/// </summary>
		public const string Str3140Key = nameof(Str3140);

		/// <summary>
		/// Previous value
		/// </summary>
		public static string Str3140 => GetString(Str3140Key);

		/// <summary>
		/// Previous value receiving element.
		/// </summary>
		public const string Str3141Key = nameof(Str3141);

		/// <summary>
		/// Previous value receiving element.
		/// </summary>
		public static string Str3141 => GetString(Str3141Key);

		/// <summary>
		/// Offset size.
		/// </summary>
		public const string Str3142Key = nameof(Str3142);

		/// <summary>
		/// Offset size.
		/// </summary>
		public static string Str3142 => GetString(Str3142Key);

		/// <summary>
		/// Connection
		/// </summary>
		public const string Str3143Key = nameof(Str3143);

		/// <summary>
		/// Connection
		/// </summary>
		public static string Str3143 => GetString(Str3143Key);

		/// <summary>
		/// Connection type.
		/// </summary>
		public const string Str3144Key = nameof(Str3144);

		/// <summary>
		/// Connection type.
		/// </summary>
		public static string Str3144 => GetString(Str3144Key);

		/// <summary>
		/// Position protection
		/// </summary>
		public const string Str3145Key = nameof(Str3145);

		/// <summary>
		/// Position protection
		/// </summary>
		public static string Str3145 => GetString(Str3145Key);

		/// <summary>
		/// Open position protection element.
		/// </summary>
		public const string Str3146Key = nameof(Str3146);

		/// <summary>
		/// Open position protection element.
		/// </summary>
		public static string Str3146 => GetString(Str3146Key);

		/// <summary>
		/// Order (out)
		/// </summary>
		public const string Str3147Key = nameof(Str3147);

		/// <summary>
		/// Order (out)
		/// </summary>
		public static string Str3147 => GetString(Str3147Key);

		/// <summary>
		/// Active
		/// </summary>
		public const string Str3148Key = nameof(Str3148);

		/// <summary>
		/// Active
		/// </summary>
		public static string Str3148 => GetString(Str3148Key);

		/// <summary>
		/// Is take-profit active.
		/// </summary>
		public const string Str3149Key = nameof(Str3149);

		/// <summary>
		/// Is take-profit active.
		/// </summary>
		public static string Str3149 => GetString(Str3149Key);

		/// <summary>
		/// Protection level for take-profit.
		/// </summary>
		public const string Str3150Key = nameof(Str3150);

		/// <summary>
		/// Protection level for take-profit.
		/// </summary>
		public static string Str3150 => GetString(Str3150Key);

		/// <summary>
		/// Is stop-loss active.
		/// </summary>
		public const string Str3151Key = nameof(Str3151);

		/// <summary>
		/// Is stop-loss active.
		/// </summary>
		public static string Str3151 => GetString(Str3151Key);

		/// <summary>
		/// Protection level for stop-loss.
		/// </summary>
		public const string Str3152Key = nameof(Str3152);

		/// <summary>
		/// Protection level for stop-loss.
		/// </summary>
		public static string Str3152 => GetString(Str3152Key);

		/// <summary>
		/// Security changes receiving element.
		/// </summary>
		public const string Str3153Key = nameof(Str3153);

		/// <summary>
		/// Security changes receiving element.
		/// </summary>
		public static string Str3153 => GetString(Str3153Key);

		/// <summary>
		/// Change
		/// </summary>
		public const string Str3154Key = nameof(Str3154);

		/// <summary>
		/// Change
		/// </summary>
		public static string Str3154 => GetString(Str3154Key);

		/// <summary>
		/// Strategy trades
		/// </summary>
		public const string Str3155Key = nameof(Str3155);

		/// <summary>
		/// Strategy trades
		/// </summary>
		public static string Str3155 => GetString(Str3155Key);

		/// <summary>
		/// Strategy trades element.
		/// </summary>
		public const string Str3156Key = nameof(Str3156);

		/// <summary>
		/// Strategy trades element.
		/// </summary>
		public static string Str3156 => GetString(Str3156Key);

		/// <summary>
		/// Data type.
		/// </summary>
		public const string Str3157Key = nameof(Str3157);

		/// <summary>
		/// Data type.
		/// </summary>
		public static string Str3157 => GetString(Str3157Key);

		/// <summary>
		/// Connection {0} not found.
		/// </summary>
		public const string Str3158ParamsKey = nameof(Str3158Params);

		/// <summary>
		/// Connection {0} not found.
		/// </summary>
		public static string Str3158Params => GetString(Str3158ParamsKey);

		/// <summary>
		/// Variable
		/// </summary>
		public const string Str3159Key = nameof(Str3159);

		/// <summary>
		/// Variable
		/// </summary>
		public static string Str3159 => GetString(Str3159Key);

		/// <summary>
		/// Value storage element.
		/// </summary>
		public const string Str3160Key = nameof(Str3160);

		/// <summary>
		/// Value storage element.
		/// </summary>
		public static string Str3160 => GetString(Str3160Key);

		/// <summary>
		/// Element value.
		/// </summary>
		public const string Str3161Key = nameof(Str3161);

		/// <summary>
		/// Element value.
		/// </summary>
		public static string Str3161 => GetString(Str3161Key);

		/// <summary>
		/// Notification
		/// </summary>
		public const string Str3162Key = nameof(Str3162);

		/// <summary>
		/// Notification
		/// </summary>
		public static string Str3162 => GetString(Str3162Key);

		/// <summary>
		/// Notification element (sound, window etc.) for specific market events.
		/// </summary>
		public const string Str3163Key = nameof(Str3163);

		/// <summary>
		/// Notification element (sound, window etc.) for specific market events.
		/// </summary>
		public static string Str3163 => GetString(Str3163Key);

		/// <summary>
		/// Signal type (sound, window etc.).
		/// </summary>
		public const string Str3164Key = nameof(Str3164);

		/// <summary>
		/// Signal type (sound, window etc.).
		/// </summary>
		public static string Str3164 => GetString(Str3164Key);

		/// <summary>
		/// Signal header.
		/// </summary>
		public const string Str3165Key = nameof(Str3165);

		/// <summary>
		/// Signal header.
		/// </summary>
		public static string Str3165 => GetString(Str3165Key);

		/// <summary>
		/// Message
		/// </summary>
		public const string Str3166Key = nameof(Str3166);

		/// <summary>
		/// Message
		/// </summary>
		public static string Str3166 => GetString(Str3166Key);

		/// <summary>
		/// Message text.
		/// </summary>
		public const string Str3167Key = nameof(Str3167);

		/// <summary>
		/// Message text.
		/// </summary>
		public static string Str3167 => GetString(Str3167Key);

		/// <summary>
		/// Container
		/// </summary>
		public const string Str3169Key = nameof(Str3169);

		/// <summary>
		/// Container
		/// </summary>
		public static string Str3169 => GetString(Str3169Key);

		/// <summary>
		/// Container for S# Studio strategies.
		/// </summary>
		public const string Str3170Key = nameof(Str3170);

		/// <summary>
		/// Container for S# Studio strategies.
		/// </summary>
		public static string Str3170 => GetString(Str3170Key);

		/// <summary>
		/// - Test
		/// </summary>
		public const string Str3171Key = nameof(Str3171);

		/// <summary>
		/// - Test
		/// </summary>
		public static string Str3171 => GetString(Str3171Key);

		/// <summary>
		/// Days of history data
		/// </summary>
		public const string Str3172Key = nameof(Str3172);

		/// <summary>
		/// Days of history data
		/// </summary>
		public static string Str3172 => GetString(Str3172Key);

		/// <summary>
		/// Number of history days for strategy initialization.
		/// </summary>
		public const string Str3173Key = nameof(Str3173);

		/// <summary>
		/// Number of history days for strategy initialization.
		/// </summary>
		public static string Str3173 => GetString(Str3173Key);

		/// <summary>
		/// Strategy not compiled.
		/// </summary>
		public const string Str3174Key = nameof(Str3174);

		/// <summary>
		/// Strategy not compiled.
		/// </summary>
		public static string Str3174 => GetString(Str3174Key);

		/// <summary>
		/// Error initializing strategy diagram: {0}
		/// </summary>
		public const string Str3175ParamsKey = nameof(Str3175Params);

		/// <summary>
		/// Error initializing strategy diagram: {0}
		/// </summary>
		public static string Str3175Params => GetString(Str3175ParamsKey);

		/// <summary>
		/// Real
		/// </summary>
		public const string Str3176Key = nameof(Str3176);

		/// <summary>
		/// Real
		/// </summary>
		public static string Str3176 => GetString(Str3176Key);

		/// <summary>
		/// Optimization
		/// </summary>
		public const string Str3177Key = nameof(Str3177);

		/// <summary>
		/// Optimization
		/// </summary>
		public static string Str3177 => GetString(Str3177Key);

		/// <summary>
		/// Stopped
		/// </summary>
		public const string Str3178Key = nameof(Str3178);

		/// <summary>
		/// Stopped
		/// </summary>
		public static string Str3178 => GetString(Str3178Key);

		/// <summary>
		/// Running
		/// </summary>
		public const string Str3179Key = nameof(Str3179);

		/// <summary>
		/// Running
		/// </summary>
		public static string Str3179 => GetString(Str3179Key);

		/// <summary>
		/// Source code
		/// </summary>
		public const string Str3180Key = nameof(Str3180);

		/// <summary>
		/// Source code
		/// </summary>
		public static string Str3180 => GetString(Str3180Key);

		/// <summary>
		/// Designer
		/// </summary>
		public const string Str3181Key = nameof(Str3181);

		/// <summary>
		/// Designer
		/// </summary>
		public static string Str3181 => GetString(Str3181Key);

		/// <summary>
		/// Assembly
		/// </summary>
		public const string Str3182Key = nameof(Str3182);

		/// <summary>
		/// Assembly
		/// </summary>
		public static string Str3182 => GetString(Str3182Key);

		/// <summary>
		/// Terminal
		/// </summary>
		public const string Str3183Key = nameof(Str3183);

		/// <summary>
		/// Terminal
		/// </summary>
		public static string Str3183 => GetString(Str3183Key);

		/// <summary>
		/// Information about the strategy.
		/// </summary>
		public const string Str3184Key = nameof(Str3184);

		/// <summary>
		/// Information about the strategy.
		/// </summary>
		public static string Str3184 => GetString(Str3184Key);

		/// <summary>
		/// Strategy description.
		/// </summary>
		public const string Str3185Key = nameof(Str3185);

		/// <summary>
		/// Strategy description.
		/// </summary>
		public static string Str3185 => GetString(Str3185Key);

		/// <summary>
		/// Current state of strategy (depends on launched configurations).
		/// </summary>
		public const string Str3186Key = nameof(Str3186);

		/// <summary>
		/// Current state of strategy (depends on launched configurations).
		/// </summary>
		public static string Str3186 => GetString(Str3186Key);

		/// <summary>
		/// Data type (source code, designer, assembly), on the basis of which configurations will be created.
		/// </summary>
		public const string Str3187Key = nameof(Str3187);

		/// <summary>
		/// Data type (source code, designer, assembly), on the basis of which configurations will be created.
		/// </summary>
		public static string Str3187 => GetString(Str3187Key);

		/// <summary>
		/// Strategy type name
		/// </summary>
		public const string Str3188Key = nameof(Str3188);

		/// <summary>
		/// Strategy type name
		/// </summary>
		public static string Str3188 => GetString(Str3188Key);

		/// <summary>
		/// Strategy type name, based on which configurations will be created.
		/// </summary>
		public const string Str3189Key = nameof(Str3189);

		/// <summary>
		/// Strategy type name, based on which configurations will be created.
		/// </summary>
		public static string Str3189 => GetString(Str3189Key);

		/// <summary>
		/// Strategy contains metainformation about the type of strategy '{0}'. Type can only be changed through StrategyType property.
		/// </summary>
		public const string Str3190ParamsKey = nameof(Str3190Params);

		/// <summary>
		/// Strategy contains metainformation about the type of strategy '{0}'. Type can only be changed through StrategyType property.
		/// </summary>
		public static string Str3190Params => GetString(Str3190ParamsKey);

		/// <summary>
		/// Path to assembly, where strategy executable code is.
		/// </summary>
		public const string Str3191Key = nameof(Str3191);

		/// <summary>
		/// Path to assembly, where strategy executable code is.
		/// </summary>
		public static string Str3191 => GetString(Str3191Key);

		/// <summary>
		/// Security, for which the market depth will be shown. If not specified, then strategy security is used.
		/// </summary>
		public const string Str3192Key = nameof(Str3192);

		/// <summary>
		/// Security, for which the market depth will be shown. If not specified, then strategy security is used.
		/// </summary>
		public static string Str3192 => GetString(Str3192Key);

		/// <summary>
		/// Working volume
		/// </summary>
		public const string Str3193Key = nameof(Str3193);

		/// <summary>
		/// Working volume
		/// </summary>
		public static string Str3193 => GetString(Str3193Key);

		/// <summary>
		/// Working volume for placing orders from the market depth.
		/// </summary>
		public const string Str3194Key = nameof(Str3194);

		/// <summary>
		/// Working volume for placing orders from the market depth.
		/// </summary>
		public static string Str3194 => GetString(Str3194Key);

		/// <summary>
		/// Number of visible quotes to buy and sell.
		/// </summary>
		public const string Str3195Key = nameof(Str3195);

		/// <summary>
		/// Number of visible quotes to buy and sell.
		/// </summary>
		public static string Str3195 => GetString(Str3195Key);

		/// <summary>
		/// Show all active orders cancellation button.
		/// </summary>
		public const string Str3196Key = nameof(Str3196);

		/// <summary>
		/// Show all active orders cancellation button.
		/// </summary>
		public static string Str3196 => GetString(Str3196Key);

		/// <summary>
		/// Limit orders
		/// </summary>
		public const string Str3197Key = nameof(Str3197);

		/// <summary>
		/// Limit orders
		/// </summary>
		public static string Str3197 => GetString(Str3197Key);

		/// <summary>
		/// Show panel for placing limit orders.
		/// </summary>
		public const string Str3198Key = nameof(Str3198);

		/// <summary>
		/// Show panel for placing limit orders.
		/// </summary>
		public static string Str3198 => GetString(Str3198Key);

		/// <summary>
		/// Show panel for placing market orders.
		/// </summary>
		public const string Str3199Key = nameof(Str3199);

		/// <summary>
		/// Show panel for placing market orders.
		/// </summary>
		public static string Str3199 => GetString(Str3199Key);

		/// <summary>
		/// Chart
		/// </summary>
		public const string Str3200Key = nameof(Str3200);

		/// <summary>
		/// Chart
		/// </summary>
		public static string Str3200 => GetString(Str3200Key);

		/// <summary>
		/// Chart to display a series of candles.
		/// </summary>
		public const string Str3201Key = nameof(Str3201);

		/// <summary>
		/// Chart to display a series of candles.
		/// </summary>
		public static string Str3201 => GetString(Str3201Key);

		/// <summary>
		/// Chat
		/// </summary>
		public const string Str3205Key = nameof(Str3205);

		/// <summary>
		/// Chat
		/// </summary>
		public static string Str3205 => GetString(Str3205Key);

		/// <summary>
		/// Chat with other participants.
		/// </summary>
		public const string Str3206Key = nameof(Str3206);

		/// <summary>
		/// Chat with other participants.
		/// </summary>
		public static string Str3206 => GetString(Str3206Key);

		/// <summary>
		/// To enter chat you must connect to S#. Connect now?
		/// </summary>
		public const string Str3207Key = nameof(Str3207);

		/// <summary>
		/// To enter chat you must connect to S#. Connect now?
		/// </summary>
		public static string Str3207 => GetString(Str3207Key);

		/// <summary>
		/// User '{0}' left chat.
		/// </summary>
		public const string Str3208ParamsKey = nameof(Str3208Params);

		/// <summary>
		/// User '{0}' left chat.
		/// </summary>
		public static string Str3208Params => GetString(Str3208ParamsKey);

		/// <summary>
		/// User '{0}' joined chat.
		/// </summary>
		public const string Str3209ParamsKey = nameof(Str3209Params);

		/// <summary>
		/// User '{0}' joined chat.
		/// </summary>
		public static string Str3209Params => GetString(Str3209ParamsKey);

		/// <summary>
		/// Chat ({0})
		/// </summary>
		public const string Str3210ParamsKey = nameof(Str3210Params);

		/// <summary>
		/// Chat ({0})
		/// </summary>
		public static string Str3210Params => GetString(Str3210ParamsKey);

		/// <summary>
		/// online
		/// </summary>
		public const string Str3211Key = nameof(Str3211);

		/// <summary>
		/// online
		/// </summary>
		public static string Str3211 => GetString(Str3211Key);

		/// <summary>
		/// offline
		/// </summary>
		public const string Str3212Key = nameof(Str3212);

		/// <summary>
		/// offline
		/// </summary>
		public static string Str3212 => GetString(Str3212Key);

		/// <summary>
		/// Enter message
		/// </summary>
		public const string Str3213Key = nameof(Str3213);

		/// <summary>
		/// Enter message
		/// </summary>
		public static string Str3213 => GetString(Str3213Key);

		/// <summary>
		/// You must be subscribed to a room in order to send messages
		/// </summary>
		public const string Str3214Key = nameof(Str3214);

		/// <summary>
		/// You must be subscribed to a room in order to send messages
		/// </summary>
		public static string Str3214 => GetString(Str3214Key);

		/// <summary>
		/// Connection order from user {0}
		/// </summary>
		public const string Str3215ParamsKey = nameof(Str3215Params);

		/// <summary>
		/// Connection order from user {0}
		/// </summary>
		public static string Str3215Params => GetString(Str3215ParamsKey);

		/// <summary>
		/// Your order is rejected.
		/// </summary>
		public const string Str3216Key = nameof(Str3216);

		/// <summary>
		/// Your order is rejected.
		/// </summary>
		public static string Str3216 => GetString(Str3216Key);

		/// <summary>
		/// New security
		/// </summary>
		public const string Str3217Key = nameof(Str3217);

		/// <summary>
		/// New security
		/// </summary>
		public static string Str3217 => GetString(Str3217Key);

		/// <summary>
		/// Security {0} is used in embedded security {1}.
		/// </summary>
		public const string Str3218ParamsKey = nameof(Str3218Params);

		/// <summary>
		/// Security {0} is used in embedded security {1}.
		/// </summary>
		public static string Str3218Params => GetString(Str3218ParamsKey);

		/// <summary>
		/// Security {0} is used as embedded for {0}.
		/// </summary>
		public const string Str3219ParamsKey = nameof(Str3219Params);

		/// <summary>
		/// Security {0} is used as embedded for {0}.
		/// </summary>
		public static string Str3219Params => GetString(Str3219ParamsKey);

		/// <summary>
		/// Error saving composite security
		/// </summary>
		public const string Str3220Key = nameof(Str3220);

		/// <summary>
		/// Error saving composite security
		/// </summary>
		public static string Str3220 => GetString(Str3220Key);

		/// <summary>
		/// Incorrect security code or board.
		/// </summary>
		public const string Str3221Key = nameof(Str3221);

		/// <summary>
		/// Incorrect security code or board.
		/// </summary>
		public static string Str3221 => GetString(Str3221Key);

		/// <summary>
		/// Error saving index
		/// </summary>
		public const string Str3222Key = nameof(Str3222);

		/// <summary>
		/// Error saving index
		/// </summary>
		public static string Str3222 => GetString(Str3222Key);

		/// <summary>
		/// Security {0} with type {1} is already in the database.
		/// </summary>
		public const string Str3223ParamsKey = nameof(Str3223Params);

		/// <summary>
		/// Security {0} with type {1} is already in the database.
		/// </summary>
		public static string Str3223Params => GetString(Str3223ParamsKey);

		/// <summary>
		/// Security {0} is already in the database. Replace?
		/// </summary>
		public const string Str3224ParamsKey = nameof(Str3224Params);

		/// <summary>
		/// Security {0} is already in the database. Replace?
		/// </summary>
		public static string Str3224Params => GetString(Str3224ParamsKey);

		/// <summary>
		/// Panel for building and viewing data for a composite security.
		/// </summary>
		public const string Str3225Key = nameof(Str3225);

		/// <summary>
		/// Panel for building and viewing data for a composite security.
		/// </summary>
		public static string Str3225 => GetString(Str3225Key);

		/// <summary>
		/// Wrong securities
		/// </summary>
		public const string Str3226Key = nameof(Str3226);

		/// <summary>
		/// Wrong securities
		/// </summary>
		public static string Str3226 => GetString(Str3226Key);

		/// <summary>
		/// Panel for building and viewing data for a continuous security.
		/// </summary>
		public const string Str3227Key = nameof(Str3227);

		/// <summary>
		/// Panel for building and viewing data for a continuous security.
		/// </summary>
		public static string Str3227 => GetString(Str3227Key);

		/// <summary>
		/// Security {0} code does not contain expiration date information.
		/// </summary>
		public const string Str3228ParamsKey = nameof(Str3228Params);

		/// <summary>
		/// Security {0} code does not contain expiration date information.
		/// </summary>
		public static string Str3228Params => GetString(Str3228ParamsKey);

		/// <summary>
		/// Add
		/// </summary>
		public const string Str3229Key = nameof(Str3229);

		/// <summary>
		/// Add
		/// </summary>
		public static string Str3229 => GetString(Str3229Key);

		/// <summary>
		/// Debugger
		/// </summary>
		public const string Str3230Key = nameof(Str3230);

		/// <summary>
		/// Debugger
		/// </summary>
		public static string Str3230 => GetString(Str3230Key);

		/// <summary>
		/// Panel for debugging strategies on the basis of the designer.
		/// </summary>
		public const string Str3231Key = nameof(Str3231);

		/// <summary>
		/// Panel for debugging strategies on the basis of the designer.
		/// </summary>
		public static string Str3231 => GetString(Str3231Key);

		/// <summary>
		/// Debugging is only available to designer based strategies.
		/// </summary>
		public const string Str3232Key = nameof(Str3232);

		/// <summary>
		/// Debugging is only available to designer based strategies.
		/// </summary>
		public static string Str3232 => GetString(Str3232Key);

		/// <summary>
		/// Board editor
		/// </summary>
		public const string Str3234Key = nameof(Str3234);

		/// <summary>
		/// Board editor
		/// </summary>
		public static string Str3234 => GetString(Str3234Key);

		/// <summary>
		/// Panel for editing information about stock exchange boards.
		/// </summary>
		public const string Str3235Key = nameof(Str3235);

		/// <summary>
		/// Panel for editing information about stock exchange boards.
		/// </summary>
		public static string Str3235 => GetString(Str3235Key);

		/// <summary>
		/// Panel for viewing Level1 data.
		/// </summary>
		public const string Level1PanelKey = nameof(Level1Panel);

		/// <summary>
		/// Panel for viewing Level1 data.
		/// </summary>
		public static string Level1Panel => GetString(Level1PanelKey);

		/// <summary>
		/// Panel for viewing Level2 data.
		/// </summary>
		public const string Level2PanelKey = nameof(Level2Panel);

		/// <summary>
		/// Panel for viewing Level2 data.
		/// </summary>
		public static string Level2Panel => GetString(Level2PanelKey);

		/// <summary>
		/// Logs
		/// </summary>
		public const string Str3237Key = nameof(Str3237);

		/// <summary>
		/// Logs
		/// </summary>
		public static string Str3237 => GetString(Str3237Key);

		/// <summary>
		/// Panel for viewing news data.
		/// </summary>
		public const string Str3238Key = nameof(Str3238);

		/// <summary>
		/// Panel for viewing news data.
		/// </summary>
		public static string Str3238 => GetString(Str3238Key);

		/// <summary>
		/// Options positions chart
		/// </summary>
		public const string Str3239Key = nameof(Str3239);

		/// <summary>
		/// Options positions chart
		/// </summary>
		public static string Str3239 => GetString(Str3239Key);

		/// <summary>
		/// Panel for viewing options positions and greeks chart in respect to the underlying asset.
		/// </summary>
		public const string Str3240Key = nameof(Str3240);

		/// <summary>
		/// Panel for viewing options positions and greeks chart in respect to the underlying asset.
		/// </summary>
		public static string Str3240 => GetString(Str3240Key);

		/// <summary>
		/// Conditional orders
		/// </summary>
		public const string Str3242Key = nameof(Str3242);

		/// <summary>
		/// Conditional orders
		/// </summary>
		public static string Str3242 => GetString(Str3242Key);

		/// <summary>
		/// Panel for viewing and managing conditional orders.
		/// </summary>
		public const string Str3243Key = nameof(Str3243);

		/// <summary>
		/// Panel for viewing and managing conditional orders.
		/// </summary>
		public static string Str3243 => GetString(Str3243Key);

		/// <summary>
		/// Positions (chart)
		/// </summary>
		public const string Str3244Key = nameof(Str3244);

		/// <summary>
		/// Positions (chart)
		/// </summary>
		public static string Str3244 => GetString(Str3244Key);

		/// <summary>
		/// Chart to view the dynamics of position change over time.
		/// </summary>
		public const string Str3245Key = nameof(Str3245);

		/// <summary>
		/// Chart to view the dynamics of position change over time.
		/// </summary>
		public static string Str3245 => GetString(Str3245Key);

		/// <summary>
		/// Creating portfolio
		/// </summary>
		public const string Str3246Key = nameof(Str3246);

		/// <summary>
		/// Creating portfolio
		/// </summary>
		public static string Str3246 => GetString(Str3246Key);

		/// <summary>
		/// Portfolio editing
		/// </summary>
		public const string Str3247Key = nameof(Str3247);

		/// <summary>
		/// Portfolio editing
		/// </summary>
		public static string Str3247 => GetString(Str3247Key);

		/// <summary>
		/// Creating position
		/// </summary>
		public const string Str3248Key = nameof(Str3248);

		/// <summary>
		/// Creating position
		/// </summary>
		public static string Str3248 => GetString(Str3248Key);

		/// <summary>
		/// Position editing
		/// </summary>
		public const string Str3249Key = nameof(Str3249);

		/// <summary>
		/// Position editing
		/// </summary>
		public static string Str3249 => GetString(Str3249Key);

		/// <summary>
		/// Creating
		/// </summary>
		public const string Str3250Key = nameof(Str3250);

		/// <summary>
		/// Creating
		/// </summary>
		public static string Str3250 => GetString(Str3250Key);

		/// <summary>
		/// Portfolio name is not specified.
		/// </summary>
		public const string Str3251Key = nameof(Str3251);

		/// <summary>
		/// Portfolio name is not specified.
		/// </summary>
		public static string Str3251 => GetString(Str3251Key);

		/// <summary>
		/// Security is not specified.
		/// </summary>
		public const string Str3252Key = nameof(Str3252);

		/// <summary>
		/// Security is not specified.
		/// </summary>
		public static string Str3252 => GetString(Str3252Key);

		/// <summary>
		/// Portfolio is not specified.
		/// </summary>
		public const string Str3253Key = nameof(Str3253);

		/// <summary>
		/// Portfolio is not specified.
		/// </summary>
		public static string Str3253 => GetString(Str3253Key);

		/// <summary>
		/// Panel for viewing portfolios and positions data.
		/// </summary>
		public const string Str3254Key = nameof(Str3254);

		/// <summary>
		/// Panel for viewing portfolios and positions data.
		/// </summary>
		public static string Str3254 => GetString(Str3254Key);

		/// <summary>
		/// Found
		/// </summary>
		public const string Str3255Key = nameof(Str3255);

		/// <summary>
		/// Found
		/// </summary>
		public static string Str3255 => GetString(Str3255Key);

		/// <summary>
		/// Selected
		/// </summary>
		public const string Str3256Key = nameof(Str3256);

		/// <summary>
		/// Selected
		/// </summary>
		public static string Str3256 => GetString(Str3256Key);

		/// <summary>
		/// Sessions
		/// </summary>
		public const string SessionsKey = nameof(Sessions);

		/// <summary>
		/// Sessions
		/// </summary>
		public static string Sessions => GetString(SessionsKey);

		/// <summary>
		/// Panel for viewing statistics data.
		/// </summary>
		public const string Str3259Key = nameof(Str3259);

		/// <summary>
		/// Panel for viewing statistics data.
		/// </summary>
		public static string Str3259 => GetString(Str3259Key);

		/// <summary>
		/// Chart of profit-loss curve.
		/// </summary>
		public const string Str3260Key = nameof(Str3260);

		/// <summary>
		/// Chart of profit-loss curve.
		/// </summary>
		public static string Str3260 => GetString(Str3260Key);

		/// <summary>
		/// P&amp;L (realized)
		/// </summary>
		public const string PnLRealizedKey = nameof(PnLRealized);

		/// <summary>
		/// P&amp;L (realized)
		/// </summary>
		public static string PnLRealized => GetString(PnLRealizedKey);

		/// <summary>
		/// Storage settings.
		/// </summary>
		public const string StorageSettingsKey = nameof(StorageSettings);

		/// <summary>
		/// Storage settings.
		/// </summary>
		public static string StorageSettings => GetString(StorageSettingsKey);

		/// <summary>
		/// Selected directory does not exist. Continue?
		/// </summary>
		public const string Str3263Key = nameof(Str3263);

		/// <summary>
		/// Selected directory does not exist. Continue?
		/// </summary>
		public static string Str3263 => GetString(Str3263Key);

		/// <summary>
		/// {0} new securities added.
		/// </summary>
		public const string Str3264ParamsKey = nameof(Str3264Params);

		/// <summary>
		/// {0} new securities added.
		/// </summary>
		public static string Str3264Params => GetString(Str3264ParamsKey);

		/// <summary>
		/// Option desk
		/// </summary>
		public const string OptionDeskKey = nameof(OptionDesk);

		/// <summary>
		/// Option desk
		/// </summary>
		public static string OptionDesk => GetString(OptionDeskKey);

		/// <summary>
		/// Panel for viewing option desk.
		/// </summary>
		public const string OptionDeskPanelKey = nameof(OptionDeskPanel);

		/// <summary>
		/// Panel for viewing option desk.
		/// </summary>
		public static string OptionDeskPanel => GetString(OptionDeskPanelKey);

		/// <summary>
		/// Panel for viewing and managing orders.
		/// </summary>
		public const string Str3268Key = nameof(Str3268);

		/// <summary>
		/// Panel for viewing and managing orders.
		/// </summary>
		public static string Str3268 => GetString(Str3268Key);

		/// <summary>
		/// Trading portfolios (checking account balance, open positions, etc.).
		/// </summary>
		public const string Str3269Key = nameof(Str3269);

		/// <summary>
		/// Trading portfolios (checking account balance, open positions, etc.).
		/// </summary>
		public static string Str3269 => GetString(Str3269Key);

		/// <summary>
		/// Panel for viewing parameters (securities, portfolios, trades, etc.).
		/// </summary>
		public const string Str3270Key = nameof(Str3270);

		/// <summary>
		/// Panel for viewing parameters (securities, portfolios, trades, etc.).
		/// </summary>
		public static string Str3270 => GetString(Str3270Key);

		/// <summary>
		/// Panel for viewing own trades data.
		/// </summary>
		public const string Str3271Key = nameof(Str3271);

		/// <summary>
		/// Panel for viewing own trades data.
		/// </summary>
		public static string Str3271 => GetString(Str3271Key);

		/// <summary>
		/// Market depth with quotes, showing the depth of market.
		/// </summary>
		public const string Str3272Key = nameof(Str3272);

		/// <summary>
		/// Market depth with quotes, showing the depth of market.
		/// </summary>
		public static string Str3272 => GetString(Str3272Key);

		/// <summary>
		/// Incorrect limit order price.
		/// </summary>
		public const string Str3273Key = nameof(Str3273);

		/// <summary>
		/// Incorrect limit order price.
		/// </summary>
		public static string Str3273 => GetString(Str3273Key);

		/// <summary>
		/// New securities in storage
		/// </summary>
		public const string Str3276Key = nameof(Str3276);

		/// <summary>
		/// New securities in storage
		/// </summary>
		public static string Str3276 => GetString(Str3276Key);

		/// <summary>
		/// Open market depth
		/// </summary>
		public const string Str3277Key = nameof(Str3277);

		/// <summary>
		/// Open market depth
		/// </summary>
		public static string Str3277 => GetString(Str3277Key);

		/// <summary>
		/// Trades feed
		/// </summary>
		public const string Str3278Key = nameof(Str3278);

		/// <summary>
		/// Trades feed
		/// </summary>
		public static string Str3278 => GetString(Str3278Key);

		/// <summary>
		/// Panel for viewing tick data.
		/// </summary>
		public const string Str3279Key = nameof(Str3279);

		/// <summary>
		/// Panel for viewing tick data.
		/// </summary>
		public static string Str3279 => GetString(Str3279Key);

		/// <summary>
		/// Table
		/// </summary>
		public const string Str3280Key = nameof(Str3280);

		/// <summary>
		/// Table
		/// </summary>
		public static string Str3280 => GetString(Str3280Key);

		/// <summary>
		/// Strategy started.
		/// </summary>
		public const string Str3281Key = nameof(Str3281);

		/// <summary>
		/// Strategy started.
		/// </summary>
		public static string Str3281 => GetString(Str3281Key);

		/// <summary>
		/// Reset state.
		/// </summary>
		public const string Str3282Key = nameof(Str3282);

		/// <summary>
		/// Reset state.
		/// </summary>
		public static string Str3282 => GetString(Str3282Key);

		/// <summary>
		/// Strategy stopped.
		/// </summary>
		public const string Str3283Key = nameof(Str3283);

		/// <summary>
		/// Strategy stopped.
		/// </summary>
		public static string Str3283 => GetString(Str3283Key);

		/// <summary>
		/// User element
		/// </summary>
		public const string Str3284Key = nameof(Str3284);

		/// <summary>
		/// User element
		/// </summary>
		public static string Str3284 => GetString(Str3284Key);

		/// <summary>
		/// UI Strategy
		/// </summary>
		public const string Str3285Key = nameof(Str3285);

		/// <summary>
		/// UI Strategy
		/// </summary>
		public static string Str3285 => GetString(Str3285Key);

		/// <summary>
		/// Strategy that creates its own graphical component to place market orders.
		/// </summary>
		public const string Str3286Key = nameof(Str3286);

		/// <summary>
		/// Strategy that creates its own graphical component to place market orders.
		/// </summary>
		public static string Str3286 => GetString(Str3286Key);

		/// <summary>
		/// Shared virtual account
		/// </summary>
		public const string Str3287Key = nameof(Str3287);

		/// <summary>
		/// Shared virtual account
		/// </summary>
		public static string Str3287 => GetString(Str3287Key);

		/// <summary>
		/// A percentage of the total is shown for sub-accounts. For example, 30% + 30% + 40% when placing a 10 contract bid on a virtual account, is distributed as 3 + 3 + 4 to sub-accounts.
		/// </summary>
		public const string Str3288Key = nameof(Str3288);

		/// <summary>
		/// A percentage of the total is shown for sub-accounts. For example, 30% + 30% + 40% when placing a 10 contract bid on a virtual account, is distributed as 3 + 3 + 4 to sub-accounts.
		/// </summary>
		public static string Str3288 => GetString(Str3288Key);

		/// <summary>
		/// From free money on the account
		/// </summary>
		public const string Str3289Key = nameof(Str3289);

		/// <summary>
		/// From free money on the account
		/// </summary>
		public static string Str3289 => GetString(Str3289Key);

		/// <summary>
		/// For example, 10% and 20%. When a 10 contract order is placed on a virtual account, it is distributed over subaccounts as v1 = (pf1.freemoney * 0.1) / sec.price и v2 = (pf2.freemoney * 0.2) / sec.price.
		/// </summary>
		public const string Str3290Key = nameof(Str3290);

		/// <summary>
		/// For example, 10% and 20%. When a 10 contract order is placed on a virtual account, it is distributed over subaccounts as v1 = (pf1.freemoney * 0.1) / sec.price и v2 = (pf2.freemoney * 0.2) / sec.price.
		/// </summary>
		public static string Str3290 => GetString(Str3290Key);

		/// <summary>
		/// Moving averages
		/// </summary>
		public const string Str3291Key = nameof(Str3291);

		/// <summary>
		/// Moving averages
		/// </summary>
		public static string Str3291 => GetString(Str3291Key);

		/// <summary>
		/// Strategy based on moving averages crossing.
		/// </summary>
		public const string Str3292Key = nameof(Str3292);

		/// <summary>
		/// Strategy based on moving averages crossing.
		/// </summary>
		public static string Str3292 => GetString(Str3292Key);

		/// <summary>
		/// Moving
		/// </summary>
		public const string Str3293Key = nameof(Str3293);

		/// <summary>
		/// Moving
		/// </summary>
		public static string Str3293 => GetString(Str3293Key);

		/// <summary>
		/// Working time-frame of strategy.
		/// </summary>
		public const string Str3294Key = nameof(Str3294);

		/// <summary>
		/// Working time-frame of strategy.
		/// </summary>
		public static string Str3294 => GetString(Str3294Key);

		/// <summary>
		/// Long moving average period.
		/// </summary>
		public const string Str3295Key = nameof(Str3295);

		/// <summary>
		/// Long moving average period.
		/// </summary>
		public static string Str3295 => GetString(Str3295Key);

		/// <summary>
		/// Short moving average period.
		/// </summary>
		public const string Str3296Key = nameof(Str3296);

		/// <summary>
		/// Short moving average period.
		/// </summary>
		public static string Str3296 => GetString(Str3296Key);

		/// <summary>
		/// New signal for a long.
		/// </summary>
		public const string Str3297Key = nameof(Str3297);

		/// <summary>
		/// New signal for a long.
		/// </summary>
		public static string Str3297 => GetString(Str3297Key);

		/// <summary>
		/// New signal for a short.
		/// </summary>
		public const string Str3298Key = nameof(Str3298);

		/// <summary>
		/// New signal for a short.
		/// </summary>
		public static string Str3298 => GetString(Str3298Key);

		/// <summary>
		/// Virtual account
		/// </summary>
		public const string Str3299Key = nameof(Str3299);

		/// <summary>
		/// Virtual account
		/// </summary>
		public static string Str3299 => GetString(Str3299Key);

		/// <summary>
		/// Error cancelling order.
		/// </summary>
		public const string Str3300Key = nameof(Str3300);

		/// <summary>
		/// Error cancelling order.
		/// </summary>
		public static string Str3300 => GetString(Str3300Key);

		/// <summary>
		/// Balance for order {0} is equal {1}.
		/// </summary>
		public const string Str3301ParamsKey = nameof(Str3301Params);

		/// <summary>
		/// Balance for order {0} is equal {1}.
		/// </summary>
		public static string Str3301Params => GetString(Str3301ParamsKey);

		/// <summary>
		/// Key
		/// </summary>
		public const string Str3304Key = nameof(Str3304);

		/// <summary>
		/// Key
		/// </summary>
		public static string Str3304 => GetString(Str3304Key);

		/// <summary>
		/// Secret
		/// </summary>
		public const string Str3306Key = nameof(Str3306);

		/// <summary>
		/// Secret
		/// </summary>
		public static string Str3306 => GetString(Str3306Key);

		/// <summary>
		/// Secret.
		/// </summary>
		public const string Str3307Key = nameof(Str3307);

		/// <summary>
		/// Secret.
		/// </summary>
		public static string Str3307 => GetString(Str3307Key);

		/// <summary>
		/// Client ID.
		/// </summary>
		public const string Str3308Key = nameof(Str3308);

		/// <summary>
		/// Client ID.
		/// </summary>
		public static string Str3308 => GetString(Str3308Key);

		/// <summary>
		/// Script path name.
		/// </summary>
		public const string Str3309Key = nameof(Str3309);

		/// <summary>
		/// Script path name.
		/// </summary>
		public static string Str3309 => GetString(Str3309Key);

		/// <summary>
		/// The number of requests in {0} minutes exceeded {1}. Read more about the limits at https://bitstamp.net/api/.
		/// </summary>
		public const string Str3310ParamsKey = nameof(Str3310Params);

		/// <summary>
		/// The number of requests in {0} minutes exceeded {1}. Read more about the limits at https://bitstamp.net/api/.
		/// </summary>
		public static string Str3310Params => GetString(Str3310ParamsKey);

		/// <summary>
		/// Unknown channel {0}.
		/// </summary>
		public const string Str3311ParamsKey = nameof(Str3311Params);

		/// <summary>
		/// Unknown channel {0}.
		/// </summary>
		public static string Str3311Params => GetString(Str3311ParamsKey);

		/// <summary>
		/// Unknown event {0}.
		/// </summary>
		public const string Str3312ParamsKey = nameof(Str3312Params);

		/// <summary>
		/// Unknown event {0}.
		/// </summary>
		public static string Str3312Params => GetString(Str3312ParamsKey);

		/// <summary>
		/// Security code is not specified.
		/// </summary>
		public const string Str3313Key = nameof(Str3313);

		/// <summary>
		/// Security code is not specified.
		/// </summary>
		public static string Str3313 => GetString(Str3313Key);

		/// <summary>
		/// Security {0} not found in Blackwood system.
		/// </summary>
		public const string Str3314ParamsKey = nameof(Str3314Params);

		/// <summary>
		/// Security {0} not found in Blackwood system.
		/// </summary>
		public static string Str3314Params => GetString(Str3314ParamsKey);

		/// <summary>
		/// Stock exchange information is missing in message '{0}'.
		/// </summary>
		public const string Str3315ParamsKey = nameof(Str3315Params);

		/// <summary>
		/// Stock exchange information is missing in message '{0}'.
		/// </summary>
		public static string Str3315Params => GetString(Str3315ParamsKey);

		/// <summary>
		/// Close at market
		/// </summary>
		public const string Str3316Key = nameof(Str3316);

		/// <summary>
		/// Close at market
		/// </summary>
		public static string Str3316 => GetString(Str3316Key);

		/// <summary>
		/// Opening at market
		/// </summary>
		public const string Str3317Key = nameof(Str3317);

		/// <summary>
		/// Opening at market
		/// </summary>
		public static string Str3317 => GetString(Str3317Key);

		/// <summary>
		/// Opening limit
		/// </summary>
		public const string Str3318Key = nameof(Str3318);

		/// <summary>
		/// Opening limit
		/// </summary>
		public static string Str3318 => GetString(Str3318Key);

		/// <summary>
		/// Market NYSE
		/// </summary>
		public const string Str3319Key = nameof(Str3319);

		/// <summary>
		/// Market NYSE
		/// </summary>
		public static string Str3319 => GetString(Str3319Key);

		/// <summary>
		/// NYSE limit
		/// </summary>
		public const string Str3320Key = nameof(Str3320);

		/// <summary>
		/// NYSE limit
		/// </summary>
		public static string Str3320 => GetString(Str3320Key);

		/// <summary>
		/// Closing limit
		/// </summary>
		public const string Str3321Key = nameof(Str3321);

		/// <summary>
		/// Closing limit
		/// </summary>
		public static string Str3321 => GetString(Str3321Key);

		/// <summary>
		/// Bid (SMART)
		/// </summary>
		public const string Str3322Key = nameof(Str3322);

		/// <summary>
		/// Bid (SMART)
		/// </summary>
		public static string Str3322 => GetString(Str3322Key);

		/// <summary>
		/// Ask (SMART)
		/// </summary>
		public const string Str3323Key = nameof(Str3323);

		/// <summary>
		/// Ask (SMART)
		/// </summary>
		public static string Str3323 => GetString(Str3323Key);

		/// <summary>
		/// Last (SMART)
		/// </summary>
		public const string Str3324Key = nameof(Str3324);

		/// <summary>
		/// Last (SMART)
		/// </summary>
		public static string Str3324 => GetString(Str3324Key);

		/// <summary>
		/// Spread (SMART)
		/// </summary>
		public const string Str3325Key = nameof(Str3325);

		/// <summary>
		/// Spread (SMART)
		/// </summary>
		public static string Str3325 => GetString(Str3325Key);

		/// <summary>
		/// Market data server address.
		/// </summary>
		public const string Str3328Key = nameof(Str3328);

		/// <summary>
		/// Market data server address.
		/// </summary>
		public static string Str3328 => GetString(Str3328Key);

		/// <summary>
		/// History
		/// </summary>
		public const string HistoryKey = nameof(History);

		/// <summary>
		/// History
		/// </summary>
		public static string History => GetString(HistoryKey);

		/// <summary>
		/// History data server address.
		/// </summary>
		public const string Str3330Key = nameof(Str3330);

		/// <summary>
		/// History data server address.
		/// </summary>
		public static string Str3330 => GetString(Str3330Key);

		/// <summary>
		/// Server address of transactions execution.
		/// </summary>
		public const string Str3331Key = nameof(Str3331);

		/// <summary>
		/// Server address of transactions execution.
		/// </summary>
		public static string Str3331 => GetString(Str3331Key);

		/// <summary>
		/// Path to logs
		/// </summary>
		public const string Str3332Key = nameof(Str3332);

		/// <summary>
		/// Path to logs
		/// </summary>
		public static string Str3332 => GetString(Str3332Key);

		/// <summary>
		/// Path to directory, where BWOrders.log file will be created.
		/// </summary>
		public const string Str3333Key = nameof(Str3333);

		/// <summary>
		/// Path to directory, where BWOrders.log file will be created.
		/// </summary>
		public static string Str3333 => GetString(Str3333Key);

		/// <summary>
		/// Login = {0} Transaction = {1} Market-data = {2} History = {3}
		/// </summary>
		public const string Str3334ParamsKey = nameof(Str3334Params);

		/// <summary>
		/// Login = {0} Transaction = {1} Market-data = {2} History = {3}
		/// </summary>
		public static string Str3334Params => GetString(Str3334ParamsKey);

		/// <summary>
		/// For order {0} registration information is missing.
		/// </summary>
		public const string Str3335ParamsKey = nameof(Str3335Params);

		/// <summary>
		/// For order {0} registration information is missing.
		/// </summary>
		public static string Str3335Params => GetString(Str3335ParamsKey);

		/// <summary>
		/// Order {0} direction has an incorrect value {1}.
		/// </summary>
		public const string Str3336ParamsKey = nameof(Str3336Params);

		/// <summary>
		/// Order {0} direction has an incorrect value {1}.
		/// </summary>
		public static string Str3336Params => GetString(Str3336ParamsKey);

		/// <summary>
		/// Unknown action time value {0} order {1}.
		/// </summary>
		public const string Str3337ParamsKey = nameof(Str3337Params);

		/// <summary>
		/// Unknown action time value {0} order {1}.
		/// </summary>
		public static string Str3337Params => GetString(Str3337ParamsKey);

		/// <summary>
		/// Unknown board code.
		/// </summary>
		public const string Str3338Key = nameof(Str3338);

		/// <summary>
		/// Unknown board code.
		/// </summary>
		public static string Str3338 => GetString(Str3338Key);

		/// <summary>
		/// Direction {0} for orders is not supported.
		/// </summary>
		public const string Str3339ParamsKey = nameof(Str3339Params);

		/// <summary>
		/// Direction {0} for orders is not supported.
		/// </summary>
		public static string Str3339Params => GetString(Str3339ParamsKey);

		/// <summary>
		/// Unknown order direction {0}.
		/// </summary>
		public const string Str3340ParamsKey = nameof(Str3340Params);

		/// <summary>
		/// Unknown order direction {0}.
		/// </summary>
		public static string Str3340Params => GetString(Str3340ParamsKey);

		/// <summary>
		/// Wrong category value.
		/// </summary>
		public const string Str3341Key = nameof(Str3341);

		/// <summary>
		/// Wrong category value.
		/// </summary>
		public static string Str3341 => GetString(Str3341Key);

		/// <summary>
		/// Wrong price.
		/// </summary>
		public const string Str3343Key = nameof(Str3343);

		/// <summary>
		/// Wrong price.
		/// </summary>
		public static string Str3343 => GetString(Str3343Key);

		/// <summary>
		/// Wrong volume.
		/// </summary>
		public const string Str3344Key = nameof(Str3344);

		/// <summary>
		/// Wrong volume.
		/// </summary>
		public static string Str3344 => GetString(Str3344Key);

		/// <summary>
		/// Error receiving request token: server reply '{0}'.
		/// </summary>
		public const string Str3346ParamsKey = nameof(Str3346Params);

		/// <summary>
		/// Error receiving request token: server reply '{0}'.
		/// </summary>
		public static string Str3346Params => GetString(Str3346ParamsKey);

		/// <summary>
		/// Error receiving access token: server reply '{0}'.
		/// </summary>
		public const string Str3347ParamsKey = nameof(Str3347Params);

		/// <summary>
		/// Error receiving access token: server reply '{0}'.
		/// </summary>
		public static string Str3347Params => GetString(Str3347ParamsKey);

		/// <summary>
		/// GetAccessToken: token and/or secret not received.
		/// </summary>
		public const string Str3348Key = nameof(Str3348);

		/// <summary>
		/// GetAccessToken: token and/or secret not received.
		/// </summary>
		public static string Str3348 => GetString(Str3348Key);

		/// <summary>
		/// Error renewing access token: server reply '{0}'.
		/// </summary>
		public const string Str3349ParamsKey = nameof(Str3349Params);

		/// <summary>
		/// Error renewing access token: server reply '{0}'.
		/// </summary>
		public static string Str3349Params => GetString(Str3349ParamsKey);

		/// <summary>
		/// Authorization failed.
		/// </summary>
		public const string Str3350Key = nameof(Str3350);

		/// <summary>
		/// Authorization failed.
		/// </summary>
		public static string Str3350 => GetString(Str3350Key);

		/// <summary>
		/// Authorization is invalid.
		/// </summary>
		public const string Str3351Key = nameof(Str3351);

		/// <summary>
		/// Authorization is invalid.
		/// </summary>
		public static string Str3351 => GetString(Str3351Key);

		/// <summary>
		/// {0}: error fulfilling request (status={1}).
		/// </summary>
		public const string Str3352ParamsKey = nameof(Str3352Params);

		/// <summary>
		/// {0}: error fulfilling request (status={1}).
		/// </summary>
		public static string Str3352Params => GetString(Str3352ParamsKey);

		/// <summary>
		/// {0}: Server returned an unexpected code '{1}'.
		/// </summary>
		public const string Str3353ParamsKey = nameof(Str3353Params);

		/// <summary>
		/// {0}: Server returned an unexpected code '{1}'.
		/// </summary>
		public static string Str3353Params => GetString(Str3353ParamsKey);

		/// <summary>
		/// Exact date specification for orders expiration is not supported in ETrade.
		/// </summary>
		public const string Str3354Key = nameof(Str3354);

		/// <summary>
		/// Exact date specification for orders expiration is not supported in ETrade.
		/// </summary>
		public static string Str3354 => GetString(Str3354Key);

		/// <summary>
		/// Error in stream '{0}': {1}
		/// </summary>
		public const string Str3355ParamsKey = nameof(Str3355Params);

		/// <summary>
		/// Error in stream '{0}': {1}
		/// </summary>
		public static string Str3355Params => GetString(Str3355ParamsKey);

		/// <summary>
		/// No connection to ETrade.
		/// </summary>
		public const string Str3356Key = nameof(Str3356);

		/// <summary>
		/// No connection to ETrade.
		/// </summary>
		public static string Str3356 => GetString(Str3356Key);

		/// <summary>
		/// Empty security name in request.
		/// </summary>
		public const string Str3357Key = nameof(Str3357);

		/// <summary>
		/// Empty security name in request.
		/// </summary>
		public static string Str3357 => GetString(Str3357Key);

		/// <summary>
		/// Authorization was canceled by the user.
		/// </summary>
		public const string Str3358Key = nameof(Str3358);

		/// <summary>
		/// Authorization was canceled by the user.
		/// </summary>
		public static string Str3358 => GetString(Str3358Key);

		/// <summary>
		/// Work of module '{0}' ended in error.
		/// </summary>
		public const string Str3362ParamsKey = nameof(Str3362Params);

		/// <summary>
		/// Work of module '{0}' ended in error.
		/// </summary>
		public static string Str3362Params => GetString(Str3362ParamsKey);

		/// <summary>
		/// Securities search ended with an error.
		/// </summary>
		public const string Str3363Key = nameof(Str3363);

		/// <summary>
		/// Securities search ended with an error.
		/// </summary>
		public static string Str3363 => GetString(Str3363Key);

		/// <summary>
		/// Connection to ETrade {0}
		/// </summary>
		public const string Str3364ParamsKey = nameof(Str3364Params);

		/// <summary>
		/// Connection to ETrade {0}
		/// </summary>
		public static string Str3364Params => GetString(Str3364ParamsKey);

		/// <summary>
		/// established
		/// </summary>
		public const string Str3365Key = nameof(Str3365);

		/// <summary>
		/// established
		/// </summary>
		public static string Str3365 => GetString(Str3365Key);

		/// <summary>
		/// disconnected
		/// </summary>
		public const string Str3366Key = nameof(Str3366);

		/// <summary>
		/// disconnected
		/// </summary>
		public static string Str3366 => GetString(Str3366Key);

		/// <summary>
		/// Demo mode.
		/// </summary>
		public const string Str3369Key = nameof(Str3369);

		/// <summary>
		/// Demo mode.
		/// </summary>
		public static string Str3369 => GetString(Str3369Key);

		/// <summary>
		/// Verification code
		/// </summary>
		public const string Str3370Key = nameof(Str3370);

		/// <summary>
		/// Verification code
		/// </summary>
		public static string Str3370 => GetString(Str3370Key);

		/// <summary>
		/// Verification code, received by user in browser, after confirming program's permission to work.
		/// </summary>
		public const string Str3371Key = nameof(Str3371);

		/// <summary>
		/// Verification code, received by user in browser, after confirming program's permission to work.
		/// </summary>
		public static string Str3371 => GetString(Str3371Key);

		/// <summary>
		/// Incorrect serialized data type.
		/// </summary>
		public const string Str3372Key = nameof(Str3372);

		/// <summary>
		/// Incorrect serialized data type.
		/// </summary>
		public static string Str3372 => GetString(Str3372Key);

		/// <summary>
		/// Error cancelling order with ID {0}. {1}
		/// </summary>
		public const string Str3373ParamsKey = nameof(Str3373Params);

		/// <summary>
		/// Error cancelling order with ID {0}. {1}
		/// </summary>
		public static string Str3373Params => GetString(Str3373ParamsKey);

		/// <summary>
		/// Unsupported type of price '{0}'
		/// </summary>
		public const string Str3374ParamsKey = nameof(Str3374Params);

		/// <summary>
		/// Unsupported type of price '{0}'
		/// </summary>
		public static string Str3374Params => GetString(Str3374ParamsKey);

		/// <summary>
		/// Portfolios update caused an error.
		/// </summary>
		public const string Str3375Key = nameof(Str3375);

		/// <summary>
		/// Portfolios update caused an error.
		/// </summary>
		public static string Str3375 => GetString(Str3375Key);

		/// <summary>
		/// Positions update caused an error.
		/// </summary>
		public const string Str3376Key = nameof(Str3376);

		/// <summary>
		/// Positions update caused an error.
		/// </summary>
		public static string Str3376 => GetString(Str3376Key);

		/// <summary>
		/// To continue, you must enter a verification code.
		/// </summary>
		public const string Str3377Key = nameof(Str3377);

		/// <summary>
		/// To continue, you must enter a verification code.
		/// </summary>
		public static string Str3377 => GetString(Str3377Key);

		/// <summary>
		/// Connection was not stopped from previous time.
		/// </summary>
		public const string Str3378Key = nameof(Str3378);

		/// <summary>
		/// Connection was not stopped from previous time.
		/// </summary>
		public static string Str3378 => GetString(Str3378Key);

		/// <summary>
		/// Method {0} threw a system exception '{1}'. Description '{2}'.
		/// </summary>
		public const string Str3379ParamsKey = nameof(Str3379Params);

		/// <summary>
		/// Method {0} threw a system exception '{1}'. Description '{2}'.
		/// </summary>
		public static string Str3379Params => GetString(Str3379ParamsKey);

		/// <summary>
		/// Method {0} threw an exception '{1}'. Description '{2}'.
		/// </summary>
		public const string Str3380ParamsKey = nameof(Str3380Params);

		/// <summary>
		/// Method {0} threw an exception '{1}'. Description '{2}'.
		/// </summary>
		public static string Str3380Params => GetString(Str3380ParamsKey);

		/// <summary>
		/// Market data stream was suspended.
		/// </summary>
		public const string Str3381Key = nameof(Str3381);

		/// <summary>
		/// Market data stream was suspended.
		/// </summary>
		public static string Str3381 => GetString(Str3381Key);

		/// <summary>
		/// Stop-loss offset
		/// </summary>
		public const string Str3383Key = nameof(Str3383);

		/// <summary>
		/// Stop-loss offset
		/// </summary>
		public static string Str3383 => GetString(Str3383Key);

		/// <summary>
		/// Stop-loss offset.
		/// </summary>
		public const string Str3384Key = nameof(Str3384);

		/// <summary>
		/// Stop-loss offset.
		/// </summary>
		public static string Str3384 => GetString(Str3384Key);

		/// <summary>
		/// Take-profit offset
		/// </summary>
		public const string Str3385Key = nameof(Str3385);

		/// <summary>
		/// Take-profit offset
		/// </summary>
		public static string Str3385 => GetString(Str3385Key);

		/// <summary>
		/// Take-profit offset.
		/// </summary>
		public const string Str3386Key = nameof(Str3386);

		/// <summary>
		/// Take-profit offset.
		/// </summary>
		public static string Str3386 => GetString(Str3386Key);

		/// <summary>
		/// Connect to demo trading instead of real trading server.
		/// </summary>
		public const string Str3388Key = nameof(Str3388);

		/// <summary>
		/// Connect to demo trading instead of real trading server.
		/// </summary>
		public static string Str3388 => GetString(Str3388Key);

		/// <summary>
		/// Should the whole set of securities be loaded from LMAX website. Switched off by default.
		/// </summary>
		public const string Str3389Key = nameof(Str3389);

		/// <summary>
		/// Should the whole set of securities be loaded from LMAX website. Switched off by default.
		/// </summary>
		public static string Str3389 => GetString(Str3389Key);

		/// <summary>
		/// Login = {0} Demo = {1}
		/// </summary>
		public const string Str3390ParamsKey = nameof(Str3390Params);

		/// <summary>
		/// Login = {0} Demo = {1}
		/// </summary>
		public static string Str3390Params => GetString(Str3390ParamsKey);

		/// <summary>
		/// Search criteria by security code must be specified.
		/// </summary>
		public const string Str3391Key = nameof(Str3391);

		/// <summary>
		/// Search criteria by security code must be specified.
		/// </summary>
		public static string Str3391 => GetString(Str3391Key);

		/// <summary>
		/// For security {0} internal trading system identifier is missing.
		/// </summary>
		public const string Str3392ParamsKey = nameof(Str3392Params);

		/// <summary>
		/// For security {0} internal trading system identifier is missing.
		/// </summary>
		public static string Str3392Params => GetString(Str3392ParamsKey);

		/// <summary>
		/// Series has wrong time-frame {0}.
		/// </summary>
		public const string Str3393ParamsKey = nameof(Str3393Params);

		/// <summary>
		/// Series has wrong time-frame {0}.
		/// </summary>
		public static string Str3393Params => GetString(Str3393ParamsKey);

		/// <summary>
		/// Order {0} has unfilled limit price.
		/// </summary>
		public const string Str3394ParamsKey = nameof(Str3394Params);

		/// <summary>
		/// Order {0} has unfilled limit price.
		/// </summary>
		public static string Str3394Params => GetString(Str3394ParamsKey);

		/// <summary>
		/// Order {0} has unfilled stop price.
		/// </summary>
		public const string Str3395ParamsKey = nameof(Str3395Params);

		/// <summary>
		/// Order {0} has unfilled stop price.
		/// </summary>
		public static string Str3395Params => GetString(Str3395ParamsKey);

		/// <summary>
		/// Type of activation {0} of order {1}/{2} is not supported.
		/// </summary>
		public const string Str3396ParamsKey = nameof(Str3396Params);

		/// <summary>
		/// Type of activation {0} of order {1}/{2} is not supported.
		/// </summary>
		public static string Str3396Params => GetString(Str3396ParamsKey);

		/// <summary>
		/// Unknown type of activation {0} of order {1}/{2}.
		/// </summary>
		public const string Str3397ParamsKey = nameof(Str3397Params);

		/// <summary>
		/// Unknown type of activation {0} of order {1}/{2}.
		/// </summary>
		public static string Str3397Params => GetString(Str3397ParamsKey);

		/// <summary>
		/// Field {0} does not contain data.
		/// </summary>
		public const string Str3398ParamsKey = nameof(Str3398Params);

		/// <summary>
		/// Field {0} does not contain data.
		/// </summary>
		public static string Str3398Params => GetString(Str3398ParamsKey);

		/// <summary>
		/// Activation time
		/// </summary>
		public const string Str3400Key = nameof(Str3400);

		/// <summary>
		/// Activation time
		/// </summary>
		public static string Str3400 => GetString(Str3400Key);

		/// <summary>
		/// Activation time is used in case of placing securities under special rules.
		/// </summary>
		public const string Str3401Key = nameof(Str3401);

		/// <summary>
		/// Activation time is used in case of placing securities under special rules.
		/// </summary>
		public static string Str3401 => GetString(Str3401Key);

		/// <summary>
		/// Closing auction
		/// </summary>
		public const string Str3402Key = nameof(Str3402);

		/// <summary>
		/// Closing auction
		/// </summary>
		public static string Str3402 => GetString(Str3402Key);

		/// <summary>
		/// Order during closing auction.
		/// </summary>
		public const string Str3403Key = nameof(Str3403);

		/// <summary>
		/// Order during closing auction.
		/// </summary>
		public static string Str3403 => GetString(Str3403Key);

		/// <summary>
		/// Router
		/// </summary>
		public const string Str3404Key = nameof(Str3404);

		/// <summary>
		/// Router
		/// </summary>
		public static string Str3404 => GetString(Str3404Key);

		/// <summary>
		/// Good
		/// </summary>
		public const string Str3406Key = nameof(Str3406);

		/// <summary>
		/// Good
		/// </summary>
		public static string Str3406 => GetString(Str3406Key);

		/// <summary>
		/// Maximum
		/// </summary>
		public const string Str3407Key = nameof(Str3407);

		/// <summary>
		/// Maximum
		/// </summary>
		public static string Str3407 => GetString(Str3407Key);

		/// <summary>
		/// Path to dll
		/// </summary>
		public const string Str3410Key = nameof(Str3410);

		/// <summary>
		/// Path to dll
		/// </summary>
		public static string Str3410 => GetString(Str3410Key);

		/// <summary>
		/// Path to mtesrl.dll file.
		/// </summary>
		public const string Str3411Key = nameof(Str3411);

		/// <summary>
		/// Path to mtesrl.dll file.
		/// </summary>
		public static string Str3411 => GetString(Str3411Key);

		/// <summary>
		/// Connection type
		/// </summary>
		public const string Str3412Key = nameof(Str3412);

		/// <summary>
		/// Connection type
		/// </summary>
		public static string Str3412 => GetString(Str3412Key);

		/// <summary>
		/// Addresses
		/// </summary>
		public const string Str3414Key = nameof(Str3414);

		/// <summary>
		/// Addresses
		/// </summary>
		public static string Str3414 => GetString(Str3414Key);

		/// <summary>
		/// List of addresses and ports for access servers.
		/// </summary>
		public const string Str3415Key = nameof(Str3415);

		/// <summary>
		/// List of addresses and ports for access servers.
		/// </summary>
		public static string Str3415 => GetString(Str3415Key);

		/// <summary>
		/// Server
		/// </summary>
		public const string Str3416Key = nameof(Str3416);

		/// <summary>
		/// Server
		/// </summary>
		public static string Str3416 => GetString(Str3416Key);

		/// <summary>
		/// Access server ID, e.g. "EQ_TEST".
		/// </summary>
		public const string Str3417Key = nameof(Str3417);

		/// <summary>
		/// Access server ID, e.g. "EQ_TEST".
		/// </summary>
		public static string Str3417 => GetString(Str3417Key);

		/// <summary>
		/// Interface
		/// </summary>
		public const string Str3418Key = nameof(Str3418);

		/// <summary>
		/// Interface
		/// </summary>
		public static string Str3418 => GetString(Str3418Key);

		/// <summary>
		/// Interface ID for MICEX trading system.
		/// </summary>
		public const string Str3419Key = nameof(Str3419);

		/// <summary>
		/// Interface ID for MICEX trading system.
		/// </summary>
		public static string Str3419 => GetString(Str3419Key);

		/// <summary>
		/// Logging level in N,M format. Maximum logging level is equal to "5,2". Minimum (disabled) is "0,0".
		/// </summary>
		public const string Str3422Key = nameof(Str3422);

		/// <summary>
		/// Logging level in N,M format. Maximum logging level is equal to "5,2". Minimum (disabled) is "0,0".
		/// </summary>
		public static string Str3422 => GetString(Str3422Key);

		/// <summary>
		/// Compression
		/// </summary>
		public const string Str3423Key = nameof(Str3423);

		/// <summary>
		/// Compression
		/// </summary>
		public static string Str3423 => GetString(Str3423Key);

		/// <summary>
		/// Data compression parameter. By default equal to BZip.
		/// </summary>
		public const string Str3424Key = nameof(Str3424);

		/// <summary>
		/// Data compression parameter. By default equal to BZip.
		/// </summary>
		public static string Str3424 => GetString(Str3424Key);

		/// <summary>
		/// Client code
		/// </summary>
		public const string ClientCodeKey = nameof(ClientCode);

		/// <summary>
		/// Client code
		/// </summary>
		public static string ClientCode => GetString(ClientCodeKey);

		/// <summary>
		/// Client code assigned by the broker.
		/// </summary>
		public const string ClientCodeDescKey = nameof(ClientCodeDesc);

		/// <summary>
		/// Client code assigned by the broker.
		/// </summary>
		public static string ClientCodeDesc => GetString(ClientCodeDescKey);

		/// <summary>
		/// Service
		/// </summary>
		public const string Str3427Key = nameof(Str3427);

		/// <summary>
		/// Service
		/// </summary>
		public static string Str3427 => GetString(Str3427Key);

		/// <summary>
		/// Trading system service name.
		/// </summary>
		public const string Str3428Key = nameof(Str3428);

		/// <summary>
		/// Trading system service name.
		/// </summary>
		public static string Str3428 => GetString(Str3428Key);

		/// <summary>
		/// Language
		/// </summary>
		public const string Str3429Key = nameof(Str3429);

		/// <summary>
		/// Language
		/// </summary>
		public static string Str3429 => GetString(Str3429Key);

		/// <summary>
		/// Error messages language. Allowed values: "English", "Russian", "Ukrainian".
		/// </summary>
		public const string Str3430Key = nameof(Str3430);

		/// <summary>
		/// Error messages language. Allowed values: "English", "Russian", "Ukrainian".
		/// </summary>
		public static string Str3430 => GetString(Str3430Key);

		/// <summary>
		/// Preferred server
		/// </summary>
		public const string Str3431Key = nameof(Str3431);

		/// <summary>
		/// Preferred server
		/// </summary>
		public static string Str3431 => GetString(Str3431Key);

		/// <summary>
		/// Preferred server access address.
		/// </summary>
		public const string Str3432Key = nameof(Str3432);

		/// <summary>
		/// Preferred server access address.
		/// </summary>
		public static string Str3432 => GetString(Str3432Key);

		/// <summary>
		/// Field where user commentary for the transaction is written.
		/// </summary>
		public const string Str3433Key = nameof(Str3433);

		/// <summary>
		/// Field where user commentary for the transaction is written.
		/// </summary>
		public static string Str3433 => GetString(Str3433Key);

		/// <summary>
		/// Login = {0} Server = {1} Interface = {2}
		/// </summary>
		public const string Str3434ParamsKey = nameof(Str3434Params);

		/// <summary>
		/// Login = {0} Server = {1} Interface = {2}
		/// </summary>
		public static string Str3434Params => GetString(Str3434ParamsKey);

		/// <summary>
		/// Error {0}. {1}
		/// </summary>
		public const string Str3435ParamsKey = nameof(Str3435Params);

		/// <summary>
		/// Error {0}. {1}
		/// </summary>
		public static string Str3435Params => GetString(Str3435ParamsKey);

		/// <summary>
		/// Unable to open table '{0}'.
		/// </summary>
		public const string Str3437ParamsKey = nameof(Str3437Params);

		/// <summary>
		/// Unable to open table '{0}'.
		/// </summary>
		public static string Str3437Params => GetString(Str3437ParamsKey);

		/// <summary>
		/// Wrong result length {0}. Length must be {1} instead of {2}.
		/// </summary>
		public const string Str3438ParamsKey = nameof(Str3438Params);

		/// <summary>
		/// Wrong result length {0}. Length must be {1} instead of {2}.
		/// </summary>
		public static string Str3438Params => GetString(Str3438ParamsKey);

		/// <summary>
		/// Wrong period.
		/// </summary>
		public const string Str3439Key = nameof(Str3439);

		/// <summary>
		/// Wrong period.
		/// </summary>
		public static string Str3439 => GetString(Str3439Key);

		/// <summary>
		/// IMIT mode
		/// </summary>
		public const string Str3441Key = nameof(Str3441);

		/// <summary>
		/// IMIT mode
		/// </summary>
		public static string Str3441 => GetString(Str3441Key);

		/// <summary>
		/// If Market If Touched mode.
		/// </summary>
		public const string Str3442Key = nameof(Str3442);

		/// <summary>
		/// If Market If Touched mode.
		/// </summary>
		public static string Str3442 => GetString(Str3442Key);

		/// <summary>
		/// Minimum
		/// </summary>
		public const string Str3443Key = nameof(Str3443);

		/// <summary>
		/// Minimum
		/// </summary>
		public static string Str3443 => GetString(Str3443Key);

		/// <summary>
		/// Minimum execution price.
		/// </summary>
		public const string Str3444Key = nameof(Str3444);

		/// <summary>
		/// Minimum execution price.
		/// </summary>
		public static string Str3444 => GetString(Str3444Key);

		/// <summary>
		/// Maximum execution price.
		/// </summary>
		public const string Str3445Key = nameof(Str3445);

		/// <summary>
		/// Maximum execution price.
		/// </summary>
		public static string Str3445 => GetString(Str3445Key);

		/// <summary>
		/// Offset of a trailing stop-loss.
		/// </summary>
		public const string Str3447Key = nameof(Str3447);

		/// <summary>
		/// Offset of a trailing stop-loss.
		/// </summary>
		public static string Str3447 => GetString(Str3447Key);

		/// <summary>
		/// Real
		/// </summary>
		public const string Str3448Key = nameof(Str3448);

		/// <summary>
		/// Real
		/// </summary>
		public static string Str3448 => GetString(Str3448Key);

		/// <summary>
		/// Server.
		/// </summary>
		public const string Str3450Key = nameof(Str3450);

		/// <summary>
		/// Server.
		/// </summary>
		public static string Str3450 => GetString(Str3450Key);

		/// <summary>
		/// Token
		/// </summary>
		public const string Str3451Key = nameof(Str3451);

		/// <summary>
		/// Token
		/// </summary>
		public static string Str3451 => GetString(Str3451Key);

		/// <summary>
		/// No portfolios received.
		/// </summary>
		public const string Str3453Key = nameof(Str3453);

		/// <summary>
		/// No portfolios received.
		/// </summary>
		public static string Str3453 => GetString(Str3453Key);

		/// <summary>
		/// For portfolio {0} OANDA identifier was not received.
		/// </summary>
		public const string Str3454ParamsKey = nameof(Str3454Params);

		/// <summary>
		/// For portfolio {0} OANDA identifier was not received.
		/// </summary>
		public static string Str3454Params => GetString(Str3454ParamsKey);

		/// <summary>
		/// For account ID {0} the portfolio information is missing.
		/// </summary>
		public const string Str3455ParamsKey = nameof(Str3455Params);

		/// <summary>
		/// For account ID {0} the portfolio information is missing.
		/// </summary>
		public static string Str3455Params => GetString(Str3455ParamsKey);

		/// <summary>
		/// Login or password missing.
		/// </summary>
		public const string Str3456Key = nameof(Str3456);

		/// <summary>
		/// Login or password missing.
		/// </summary>
		public static string Str3456 => GetString(Str3456Key);

		/// <summary>
		/// File '{0}' does not exist.
		/// </summary>
		public const string Str3457ParamsKey = nameof(Str3457Params);

		/// <summary>
		/// File '{0}' does not exist.
		/// </summary>
		public static string Str3457Params => GetString(Str3457ParamsKey);

		/// <summary>
		/// Error connecting: '{0}'.
		/// </summary>
		public const string Str3458ParamsKey = nameof(Str3458Params);

		/// <summary>
		/// Error connecting: '{0}'.
		/// </summary>
		public static string Str3458Params => GetString(Str3458ParamsKey);

		/// <summary>
		/// Activation price, when reached an order will be placed.
		/// </summary>
		public const string Str3460Key = nameof(Str3460);

		/// <summary>
		/// Activation price, when reached an order will be placed.
		/// </summary>
		public static string Str3460 => GetString(Str3460Key);

		/// <summary>
		/// Test
		/// </summary>
		public const string Str3461Key = nameof(Str3461);

		/// <summary>
		/// Test
		/// </summary>
		public static string Str3461 => GetString(Str3461Key);

		/// <summary>
		/// On live data
		/// </summary>
		public const string Str3462Key = nameof(Str3462);

		/// <summary>
		/// On live data
		/// </summary>
		public static string Str3462 => GetString(Str3462Key);

		/// <summary>
		/// Real
		/// </summary>
		public const string Str3463Key = nameof(Str3463);

		/// <summary>
		/// Real
		/// </summary>
		public static string Str3463 => GetString(Str3463Key);

		/// <summary>
		/// Certificate
		/// </summary>
		public const string Str3465Key = nameof(Str3465);

		/// <summary>
		/// Certificate
		/// </summary>
		public static string Str3465 => GetString(Str3465Key);

		/// <summary>
		/// Path to certificate file, necessary to connect to Rithmic system.
		/// </summary>
		public const string Str3466Key = nameof(Str3466);

		/// <summary>
		/// Path to certificate file, necessary to connect to Rithmic system.
		/// </summary>
		public static string Str3466 => GetString(Str3466Key);

		/// <summary>
		/// Login (trans)
		/// </summary>
		public const string Str3467Key = nameof(Str3467);

		/// <summary>
		/// Login (trans)
		/// </summary>
		public static string Str3467 => GetString(Str3467Key);

		/// <summary>
		/// Additional login. Used when transaction sending is carried out to a separate server.
		/// </summary>
		public const string Str3468Key = nameof(Str3468);

		/// <summary>
		/// Additional login. Used when transaction sending is carried out to a separate server.
		/// </summary>
		public static string Str3468 => GetString(Str3468Key);

		/// <summary>
		/// Password (trans)
		/// </summary>
		public const string Str3469Key = nameof(Str3469);

		/// <summary>
		/// Password (trans)
		/// </summary>
		public static string Str3469 => GetString(Str3469Key);

		/// <summary>
		/// Additional password. Used when transaction sending is carried out to a separate server.
		/// </summary>
		public const string Str3470Key = nameof(Str3470);

		/// <summary>
		/// Additional password. Used when transaction sending is carried out to a separate server.
		/// </summary>
		public static string Str3470 => GetString(Str3470Key);

		/// <summary>
		/// File log
		/// </summary>
		public const string Str3471Key = nameof(Str3471);

		/// <summary>
		/// File log
		/// </summary>
		public static string Str3471 => GetString(Str3471Key);

		/// <summary>
		/// Path to log file.
		/// </summary>
		public const string Str3472Key = nameof(Str3472);

		/// <summary>
		/// Path to log file.
		/// </summary>
		public static string Str3472 => GetString(Str3472Key);

		/// <summary>
		/// Server type
		/// </summary>
		public const string Str3473Key = nameof(Str3473);

		/// <summary>
		/// Server type
		/// </summary>
		public static string Str3473 => GetString(Str3473Key);

		/// <summary>
		/// Server type.
		/// </summary>
		public const string Str3474Key = nameof(Str3474);

		/// <summary>
		/// Server type.
		/// </summary>
		public static string Str3474 => GetString(Str3474Key);

		/// <summary>
		/// Point (admin)
		/// </summary>
		public const string Str3475Key = nameof(Str3475);

		/// <summary>
		/// Point (admin)
		/// </summary>
		public static string Str3475 => GetString(Str3475Key);

		/// <summary>
		/// Connection point for administrative functions (initialization/deinitialization).
		/// </summary>
		public const string Str3476Key = nameof(Str3476);

		/// <summary>
		/// Connection point for administrative functions (initialization/deinitialization).
		/// </summary>
		public static string Str3476 => GetString(Str3476Key);

		/// <summary>
		/// Point (data)
		/// </summary>
		public const string Str3477Key = nameof(Str3477);

		/// <summary>
		/// Point (data)
		/// </summary>
		public static string Str3477 => GetString(Str3477Key);

		/// <summary>
		/// Connection point to market data.
		/// </summary>
		public const string Str3478Key = nameof(Str3478);

		/// <summary>
		/// Connection point to market data.
		/// </summary>
		public static string Str3478 => GetString(Str3478Key);

		/// <summary>
		/// Point (transactions)
		/// </summary>
		public const string Str3479Key = nameof(Str3479);

		/// <summary>
		/// Point (transactions)
		/// </summary>
		public static string Str3479 => GetString(Str3479Key);

		/// <summary>
		/// Connection point to the transactions execution system.
		/// </summary>
		public const string Str3480Key = nameof(Str3480);

		/// <summary>
		/// Connection point to the transactions execution system.
		/// </summary>
		public static string Str3480 => GetString(Str3480Key);

		/// <summary>
		/// Point (positions)
		/// </summary>
		public const string Str3481Key = nameof(Str3481);

		/// <summary>
		/// Point (positions)
		/// </summary>
		public static string Str3481 => GetString(Str3481Key);

		/// <summary>
		/// Connection point for access to portfolios and positions information.
		/// </summary>
		public const string Str3482Key = nameof(Str3482);

		/// <summary>
		/// Connection point for access to portfolios and positions information.
		/// </summary>
		public static string Str3482 => GetString(Str3482Key);

		/// <summary>
		/// Point (history)
		/// </summary>
		public const string Str3483Key = nameof(Str3483);

		/// <summary>
		/// Point (history)
		/// </summary>
		public static string Str3483 => GetString(Str3483Key);

		/// <summary>
		/// Connection point for access to history data.
		/// </summary>
		public const string Str3484Key = nameof(Str3484);

		/// <summary>
		/// Connection point for access to history data.
		/// </summary>
		public static string Str3484 => GetString(Str3484Key);

		/// <summary>
		/// Domain (address)
		/// </summary>
		public const string Str3485Key = nameof(Str3485);

		/// <summary>
		/// Domain (address)
		/// </summary>
		public static string Str3485 => GetString(Str3485Key);

		/// <summary>
		/// Domain address.
		/// </summary>
		public const string Str3486Key = nameof(Str3486);

		/// <summary>
		/// Domain address.
		/// </summary>
		public static string Str3486 => GetString(Str3486Key);

		/// <summary>
		/// Domain (name)
		/// </summary>
		public const string Str3487Key = nameof(Str3487);

		/// <summary>
		/// Domain (name)
		/// </summary>
		public static string Str3487 => GetString(Str3487Key);

		/// <summary>
		/// Domain name.
		/// </summary>
		public const string Str3488Key = nameof(Str3488);

		/// <summary>
		/// Domain name.
		/// </summary>
		public static string Str3488 => GetString(Str3488Key);

		/// <summary>
		/// Licenses
		/// </summary>
		public const string Str3489Key = nameof(Str3489);

		/// <summary>
		/// Licenses
		/// </summary>
		public static string Str3489 => GetString(Str3489Key);

		/// <summary>
		/// Licenses server address.
		/// </summary>
		public const string Str3490Key = nameof(Str3490);

		/// <summary>
		/// Licenses server address.
		/// </summary>
		public static string Str3490 => GetString(Str3490Key);

		/// <summary>
		/// Broker address.
		/// </summary>
		public const string Str3491Key = nameof(Str3491);

		/// <summary>
		/// Broker address.
		/// </summary>
		public static string Str3491 => GetString(Str3491Key);

		/// <summary>
		/// Log (address)
		/// </summary>
		public const string Str3492Key = nameof(Str3492);

		/// <summary>
		/// Log (address)
		/// </summary>
		public static string Str3492 => GetString(Str3492Key);

		/// <summary>
		/// Logger address.
		/// </summary>
		public const string Str3493Key = nameof(Str3493);

		/// <summary>
		/// Logger address.
		/// </summary>
		public static string Str3493 => GetString(Str3493Key);

		/// <summary>
		/// Activation price for order {0} not specified.
		/// </summary>
		public const string Str3494ParamsKey = nameof(Str3494Params);

		/// <summary>
		/// Activation price for order {0} not specified.
		/// </summary>
		public static string Str3494Params => GetString(Str3494ParamsKey);

		/// <summary>
		/// Order was not cancelled.
		/// </summary>
		public const string Str3496Key = nameof(Str3496);

		/// <summary>
		/// Order was not cancelled.
		/// </summary>
		public static string Str3496 => GetString(Str3496Key);

		/// <summary>
		/// Order was not changed.
		/// </summary>
		public const string Str3497Key = nameof(Str3497);

		/// <summary>
		/// Order was not changed.
		/// </summary>
		public static string Str3497 => GetString(Str3497Key);

		/// <summary>
		/// Order was not registered.
		/// </summary>
		public const string Str3498Key = nameof(Str3498);

		/// <summary>
		/// Order was not registered.
		/// </summary>
		public static string Str3498 => GetString(Str3498Key);

		/// <summary>
		/// Wrong type of order.
		/// </summary>
		public const string Str3499Key = nameof(Str3499);

		/// <summary>
		/// Wrong type of order.
		/// </summary>
		public static string Str3499 => GetString(Str3499Key);

		/// <summary>
		/// Wrong order direction.
		/// </summary>
		public const string Str3500Key = nameof(Str3500);

		/// <summary>
		/// Wrong order direction.
		/// </summary>
		public static string Str3500 => GetString(Str3500Key);

		/// <summary>
		/// Wrong order duration time.
		/// </summary>
		public const string Str3501Key = nameof(Str3501);

		/// <summary>
		/// Wrong order duration time.
		/// </summary>
		public static string Str3501 => GetString(Str3501Key);

		/// <summary>
		/// Wrong time.
		/// </summary>
		public const string Str3502Key = nameof(Str3502);

		/// <summary>
		/// Wrong time.
		/// </summary>
		public static string Str3502 => GetString(Str3502Key);

		/// <summary>
		/// RSS feed address not specified.
		/// </summary>
		public const string Str3503Key = nameof(Str3503);

		/// <summary>
		/// RSS feed address not specified.
		/// </summary>
		public static string Str3503 => GetString(Str3503Key);

		/// <summary>
		/// Connection to news channels through RSS.
		/// </summary>
		public const string Str3504Key = nameof(Str3504);

		/// <summary>
		/// Connection to news channels through RSS.
		/// </summary>
		public static string Str3504 => GetString(Str3504Key);

		/// <summary>
		/// RSS feed address.
		/// </summary>
		public const string Str3505Key = nameof(Str3505);

		/// <summary>
		/// RSS feed address.
		/// </summary>
		public static string Str3505 => GetString(Str3505Key);

		/// <summary>
		/// Dates format
		/// </summary>
		public const string Str3506Key = nameof(Str3506);

		/// <summary>
		/// Dates format
		/// </summary>
		public static string Str3506 => GetString(Str3506Key);

		/// <summary>
		/// Dates format. Required to be filled if RSS stream format is different from ddd, dd MMM yyyy HH:mm:ss zzzz.
		/// </summary>
		public const string Str3507Key = nameof(Str3507);

		/// <summary>
		/// Dates format. Required to be filled if RSS stream format is different from ddd, dd MMM yyyy HH:mm:ss zzzz.
		/// </summary>
		public static string Str3507 => GetString(Str3507Key);

		/// <summary>
		/// Minimum
		/// </summary>
		public const string Str3508Key = nameof(Str3508);

		/// <summary>
		/// Minimum
		/// </summary>
		public static string Str3508 => GetString(Str3508Key);

		/// <summary>
		/// Standard
		/// </summary>
		public const string Str3509Key = nameof(Str3509);

		/// <summary>
		/// Standard
		/// </summary>
		public static string Str3509 => GetString(Str3509Key);

		/// <summary>
		/// Maximum
		/// </summary>
		public const string Str3510Key = nameof(Str3510);

		/// <summary>
		/// Maximum
		/// </summary>
		public static string Str3510 => GetString(Str3510Key);

		/// <summary>
		/// Number of headers {0} cannot be less than zero.
		/// </summary>
		public const string Str3511ParamsKey = nameof(Str3511Params);

		/// <summary>
		/// Number of headers {0} cannot be less than zero.
		/// </summary>
		public static string Str3511Params => GetString(Str3511ParamsKey);

		/// <summary>
		/// Number of headers {0} cannot be greater than {1}.
		/// </summary>
		public const string Str3512ParamsKey = nameof(Str3512Params);

		/// <summary>
		/// Number of headers {0} cannot be greater than {1}.
		/// </summary>
		public static string Str3512Params => GetString(Str3512ParamsKey);

		/// <summary>
		/// Candles for security {0}/{1} and period {2} were not registered earlier.
		/// </summary>
		public const string Str3513ParamsKey = nameof(Str3513Params);

		/// <summary>
		/// Candles for security {0}/{1} and period {2} were not registered earlier.
		/// </summary>
		public static string Str3513Params => GetString(Str3513ParamsKey);

		/// <summary>
		/// Command {0} not executed because '{1}'.
		/// </summary>
		public const string Str3514ParamsKey = nameof(Str3514Params);

		/// <summary>
		/// Command {0} not executed because '{1}'.
		/// </summary>
		public static string Str3514Params => GetString(Str3514ParamsKey);

		/// <summary>
		/// Take + stop
		/// </summary>
		public const string Str3515Key = nameof(Str3515);

		/// <summary>
		/// Take + stop
		/// </summary>
		public static string Str3515 => GetString(Str3515Key);

		/// <summary>
		/// Linked order.
		/// </summary>
		public const string Str3517Key = nameof(Str3517);

		/// <summary>
		/// Linked order.
		/// </summary>
		public static string Str3517 => GetString(Str3517Key);

		/// <summary>
		/// Active until
		/// </summary>
		public const string Str3518Key = nameof(Str3518);

		/// <summary>
		/// Active until
		/// </summary>
		public static string Str3518 => GetString(Str3518Key);

		/// <summary>
		/// Valid until.
		/// </summary>
		public const string Str3519Key = nameof(Str3519);

		/// <summary>
		/// Valid until.
		/// </summary>
		public static string Str3519 => GetString(Str3519Key);

		/// <summary>
		/// Activation price, when reached an order will be placed at the price specified in the price field.
		/// </summary>
		public const string Str3520Key = nameof(Str3520);

		/// <summary>
		/// Activation price, when reached an order will be placed at the price specified in the price field.
		/// </summary>
		public static string Str3520 => GetString(Str3520Key);

		/// <summary>
		/// Price of placed order, which will be sent to the stock exchange when activated at the price specified in the activation price field.
		/// </summary>
		public const string Str3521Key = nameof(Str3521);

		/// <summary>
		/// Price of placed order, which will be sent to the stock exchange when activated at the price specified in the activation price field.
		/// </summary>
		public static string Str3521 => GetString(Str3521Key);

		/// <summary>
		/// At market
		/// </summary>
		public const string Str3522Key = nameof(Str3522);

		/// <summary>
		/// At market
		/// </summary>
		public static string Str3522 => GetString(Str3522Key);

		/// <summary>
		/// Place a market order(in this case the order price is ignored).
		/// </summary>
		public const string Str3523Key = nameof(Str3523);

		/// <summary>
		/// Place a market order(in this case the order price is ignored).
		/// </summary>
		public static string Str3523 => GetString(Str3523Key);

		/// <summary>
		/// Order volume
		/// </summary>
		public const string Str3524Key = nameof(Str3524);

		/// <summary>
		/// Order volume
		/// </summary>
		public static string Str3524 => GetString(Str3524Key);

		/// <summary>
		/// Volume (absolute or percentage value).
		/// </summary>
		public const string Str3525Key = nameof(Str3525);

		/// <summary>
		/// Volume (absolute or percentage value).
		/// </summary>
		public static string Str3525 => GetString(Str3525Key);

		/// <summary>
		/// Use credit
		/// </summary>
		public const string Str3526Key = nameof(Str3526);

		/// <summary>
		/// Use credit
		/// </summary>
		public static string Str3526 => GetString(Str3526Key);

		/// <summary>
		/// Protection time
		/// </summary>
		public const string Str3528Key = nameof(Str3528);

		/// <summary>
		/// Protection time
		/// </summary>
		public static string Str3528 => GetString(Str3528Key);

		/// <summary>
		/// Protection time in secs. Protection time allows to prevent orders being filled during market price surges, i.e. in such situations when prices reach the stop price for only a short period of time.
		/// </summary>
		public const string Str3529Key = nameof(Str3529);

		/// <summary>
		/// Protection time in secs. Protection time allows to prevent orders being filled during market price surges, i.e. in such situations when prices reach the stop price for only a short period of time.
		/// </summary>
		public static string Str3529 => GetString(Str3529Key);

		/// <summary>
		/// Activation price, when reached an order will be sent to the stock exchange with a specified price that takes protective spread into account.
		/// </summary>
		public const string Str3531Key = nameof(Str3531);

		/// <summary>
		/// Activation price, when reached an order will be sent to the stock exchange with a specified price that takes protective spread into account.
		/// </summary>
		public static string Str3531 => GetString(Str3531Key);

		/// <summary>
		/// Place a market order.
		/// </summary>
		public const string Str3532Key = nameof(Str3532);

		/// <summary>
		/// Place a market order.
		/// </summary>
		public static string Str3532 => GetString(Str3532Key);

		/// <summary>
		/// Volume. Absolute or percentage value.
		/// </summary>
		public const string Str3533Key = nameof(Str3533);

		/// <summary>
		/// Volume. Absolute or percentage value.
		/// </summary>
		public static string Str3533 => GetString(Str3533Key);

		/// <summary>
		/// Correction
		/// </summary>
		public const string Str3534Key = nameof(Str3534);

		/// <summary>
		/// Correction
		/// </summary>
		public static string Str3534 => GetString(Str3534Key);

		/// <summary>
		/// If set, then after order activation at an activation price and further price lowering (TP to sell) or further rising price (TP to buy) an order will be sent at a price that includes a protection spread. Absolute value or percentage.
		/// </summary>
		public const string Str3535Key = nameof(Str3535);

		/// <summary>
		/// If set, then after order activation at an activation price and further price lowering (TP to sell) or further rising price (TP to buy) an order will be sent at a price that includes a protection spread. Absolute value or percentage.
		/// </summary>
		public static string Str3535 => GetString(Str3535Key);

		/// <summary>
		/// Protection spread
		/// </summary>
		public const string Str3536Key = nameof(Str3536);

		/// <summary>
		/// Protection spread
		/// </summary>
		public static string Str3536 => GetString(Str3536Key);

		/// <summary>
		/// Protective spread. Quantity, which will be added (in case of TP to buy) or subtracted (in case of TP to sell) to activation price, when the order is sent to the exchange. Absolute or percentage value.
		/// </summary>
		public const string Str3537Key = nameof(Str3537);

		/// <summary>
		/// Protective spread. Quantity, which will be added (in case of TP to buy) or subtracted (in case of TP to sell) to activation price, when the order is sent to the exchange. Absolute or percentage value.
		/// </summary>
		public static string Str3537 => GetString(Str3537Key);

		/// <summary>
		/// Proxy
		/// </summary>
		public const string Str3539Key = nameof(Str3539);

		/// <summary>
		/// Proxy
		/// </summary>
		public static string Str3539 => GetString(Str3539Key);

		/// <summary>
		/// Proxy.
		/// </summary>
		public const string Str3540Key = nameof(Str3540);

		/// <summary>
		/// Proxy.
		/// </summary>
		public static string Str3540 => GetString(Str3540Key);

		/// <summary>
		/// Connector logging level. By default is Standard.
		/// </summary>
		public const string Str3541Key = nameof(Str3541);

		/// <summary>
		/// Connector logging level. By default is Standard.
		/// </summary>
		public static string Str3541 => GetString(Str3541Key);

		/// <summary>
		/// Full path to dll file, containing Transaq API. By default equal txmlconnector.dll.
		/// </summary>
		public const string Str3542Key = nameof(Str3542);

		/// <summary>
		/// Full path to dll file, containing Transaq API. By default equal txmlconnector.dll.
		/// </summary>
		public static string Str3542 => GetString(Str3542Key);

		/// <summary>
		/// Data for the stock market
		/// </summary>
		public const string Str3543Key = nameof(Str3543);

		/// <summary>
		/// Data for the stock market
		/// </summary>
		public static string Str3543 => GetString(Str3543Key);

		/// <summary>
		/// Transmit data for the stock market.
		/// </summary>
		public const string Str3544Key = nameof(Str3544);

		/// <summary>
		/// Transmit data for the stock market.
		/// </summary>
		public static string Str3544 => GetString(Str3544Key);

		/// <summary>
		/// Connect to HFT Finam server.
		/// </summary>
		public const string Str3545Key = nameof(Str3545);

		/// <summary>
		/// Connect to HFT Finam server.
		/// </summary>
		public static string Str3545 => GetString(Str3545Key);

		/// <summary>
		/// Aggregation period
		/// </summary>
		public const string Str3546Key = nameof(Str3546);

		/// <summary>
		/// Aggregation period
		/// </summary>
		public static string Str3546 => GetString(Str3546Key);

		/// <summary>
		/// Data aggregation period on Transaq server.
		/// </summary>
		public const string Str3547Key = nameof(Str3547);

		/// <summary>
		/// Data aggregation period on Transaq server.
		/// </summary>
		public static string Str3547 => GetString(Str3547Key);

		/// <summary>
		/// Path to connector logs.
		/// </summary>
		public const string Str3548Key = nameof(Str3548);

		/// <summary>
		/// Path to connector logs.
		/// </summary>
		public static string Str3548 => GetString(Str3548Key);

		/// <summary>
		/// Unsupported Unit type.
		/// </summary>
		public const string Str3549Key = nameof(Str3549);

		/// <summary>
		/// Unsupported Unit type.
		/// </summary>
		public static string Str3549 => GetString(Str3549Key);

		/// <summary>
		/// Unknown condition {0} for order {1}.
		/// </summary>
		public const string Str3550ParamsKey = nameof(Str3550Params);

		/// <summary>
		/// Unknown condition {0} for order {1}.
		/// </summary>
		public static string Str3550Params => GetString(Str3550ParamsKey);

		/// <summary>
		/// For order {0} there is no Transaq system identifier.
		/// </summary>
		public const string Str3551ParamsKey = nameof(Str3551Params);

		/// <summary>
		/// For order {0} there is no Transaq system identifier.
		/// </summary>
		public static string Str3551Params => GetString(Str3551ParamsKey);

		/// <summary>
		/// Condition.
		/// </summary>
		public const string Str3552Key = nameof(Str3552);

		/// <summary>
		/// Condition.
		/// </summary>
		public static string Str3552 => GetString(Str3552Key);

		/// <summary>
		/// Order price, else margin as percentage.
		/// </summary>
		public const string Str3553Key = nameof(Str3553);

		/// <summary>
		/// Order price, else margin as percentage.
		/// </summary>
		public static string Str3553 => GetString(Str3553Key);

		/// <summary>
		/// Valid from condition
		/// </summary>
		public const string Str3554Key = nameof(Str3554);

		/// <summary>
		/// Valid from condition
		/// </summary>
		public static string Str3554 => GetString(Str3554Key);

		/// <summary>
		/// Order validity condition.
		/// </summary>
		public const string Str3555Key = nameof(Str3555);

		/// <summary>
		/// Order validity condition.
		/// </summary>
		public static string Str3555 => GetString(Str3555Key);

		/// <summary>
		/// Active from
		/// </summary>
		public const string Str3556Key = nameof(Str3556);

		/// <summary>
		/// Active from
		/// </summary>
		public static string Str3556 => GetString(Str3556Key);

		/// <summary>
		/// From what point in time it is valid.
		/// </summary>
		public const string Str3557Key = nameof(Str3557);

		/// <summary>
		/// From what point in time it is valid.
		/// </summary>
		public static string Str3557 => GetString(Str3557Key);

		/// <summary>
		/// Valid until condition
		/// </summary>
		public const string Str3558Key = nameof(Str3558);

		/// <summary>
		/// Valid until condition
		/// </summary>
		public static string Str3558 => GetString(Str3558Key);

		/// <summary>
		/// No
		/// </summary>
		public const string Str3559Key = nameof(Str3559);

		/// <summary>
		/// No
		/// </summary>
		public static string Str3559 => GetString(Str3559Key);

		/// <summary>
		/// Bid or trade
		/// </summary>
		public const string Str3560Key = nameof(Str3560);

		/// <summary>
		/// Bid or trade
		/// </summary>
		public static string Str3560 => GetString(Str3560Key);

		/// <summary>
		/// Ask or trade
		/// </summary>
		public const string Str3561Key = nameof(Str3561);

		/// <summary>
		/// Ask or trade
		/// </summary>
		public static string Str3561 => GetString(Str3561Key);

		/// <summary>
		/// Margin is lower
		/// </summary>
		public const string Str3562Key = nameof(Str3562);

		/// <summary>
		/// Margin is lower
		/// </summary>
		public static string Str3562 => GetString(Str3562Key);

		/// <summary>
		/// Margin is higher
		/// </summary>
		public const string Str3563Key = nameof(Str3563);

		/// <summary>
		/// Margin is higher
		/// </summary>
		public static string Str3563 => GetString(Str3563Key);

		/// <summary>
		/// Up
		/// </summary>
		public const string Str3564Key = nameof(Str3564);

		/// <summary>
		/// Up
		/// </summary>
		public static string Str3564 => GetString(Str3564Key);

		/// <summary>
		/// Down
		/// </summary>
		public const string Str3565Key = nameof(Str3565);

		/// <summary>
		/// Down
		/// </summary>
		public static string Str3565 => GetString(Str3565Key);

		/// <summary>
		/// Immediately
		/// </summary>
		public const string Str3566Key = nameof(Str3566);

		/// <summary>
		/// Immediately
		/// </summary>
		public static string Str3566 => GetString(Str3566Key);

		/// <summary>
		/// Error enabling return call function.
		/// </summary>
		public const string Str3567Key = nameof(Str3567);

		/// <summary>
		/// Error enabling return call function.
		/// </summary>
		public static string Str3567 => GetString(Str3567Key);

		/// <summary>
		/// Series {0} were earlier subscribed to.
		/// </summary>
		public const string Str3568ParamsKey = nameof(Str3568Params);

		/// <summary>
		/// Series {0} were earlier subscribed to.
		/// </summary>
		public static string Str3568Params => GetString(Str3568ParamsKey);

		/// <summary>
		/// Wrong value of security type.
		/// </summary>
		public const string Str3569Key = nameof(Str3569);

		/// <summary>
		/// Wrong value of security type.
		/// </summary>
		public static string Str3569 => GetString(Str3569Key);

		/// <summary>
		/// Parameter name
		/// </summary>
		public const string Str3570Key = nameof(Str3570);

		/// <summary>
		/// Parameter name
		/// </summary>
		public static string Str3570 => GetString(Str3570Key);

		/// <summary>
		/// Parameter change step must be different from 0.
		/// </summary>
		public const string Str3571Key = nameof(Str3571);

		/// <summary>
		/// Parameter change step must be different from 0.
		/// </summary>
		public static string Str3571 => GetString(Str3571Key);

		/// <summary>
		/// The bounds From ({0}) and To ({1}) must be different.
		/// </summary>
		public const string Str3572ParamsKey = nameof(Str3572Params);

		/// <summary>
		/// The bounds From ({0}) and To ({1}) must be different.
		/// </summary>
		public static string Str3572Params => GetString(Str3572ParamsKey);

		/// <summary>
		/// When parameter ({0}) change Step is positive the value From ({1}) must be less than value To ({2}).
		/// </summary>
		public const string Str3573ParamsKey = nameof(Str3573Params);

		/// <summary>
		/// When parameter ({0}) change Step is positive the value From ({1}) must be less than value To ({2}).
		/// </summary>
		public static string Str3573Params => GetString(Str3573ParamsKey);

		/// <summary>
		/// When parameter ({0}) change Step is negative the value From ({1}) must be greater than value To ({2}).
		/// </summary>
		public const string Str3574ParamsKey = nameof(Str3574Params);

		/// <summary>
		/// When parameter ({0}) change Step is negative the value From ({1}) must be greater than value To ({2}).
		/// </summary>
		public static string Str3574Params => GetString(Str3574ParamsKey);

		/// <summary>
		/// Optim
		/// </summary>
		public const string Str3576Key = nameof(Str3576);

		/// <summary>
		/// Optim
		/// </summary>
		public static string Str3576 => GetString(Str3576Key);

		/// <summary>
		/// Optimization start
		/// </summary>
		public const string Str3577Key = nameof(Str3577);

		/// <summary>
		/// Optimization start
		/// </summary>
		public static string Str3577 => GetString(Str3577Key);

		/// <summary>
		/// Show result
		/// </summary>
		public const string Str3578Key = nameof(Str3578);

		/// <summary>
		/// Show result
		/// </summary>
		public static string Str3578 => GetString(Str3578Key);

		/// <summary>
		/// Set for trading
		/// </summary>
		public const string Str3579Key = nameof(Str3579);

		/// <summary>
		/// Set for trading
		/// </summary>
		public static string Str3579 => GetString(Str3579Key);

		/// <summary>
		/// Optimizer
		/// </summary>
		public const string Str3580Key = nameof(Str3580);

		/// <summary>
		/// Optimizer
		/// </summary>
		public static string Str3580 => GetString(Str3580Key);

		/// <summary>
		/// Strategy parameters generation for optimization.
		/// </summary>
		public const string Str3581Key = nameof(Str3581);

		/// <summary>
		/// Strategy parameters generation for optimization.
		/// </summary>
		public static string Str3581 => GetString(Str3581Key);

		/// <summary>
		/// Test
		/// </summary>
		public const string Str3582Key = nameof(Str3582);

		/// <summary>
		/// Test
		/// </summary>
		public static string Str3582 => GetString(Str3582Key);

		/// <summary>
		/// Parameters generation completed.
		/// </summary>
		public const string Str3583Key = nameof(Str3583);

		/// <summary>
		/// Parameters generation completed.
		/// </summary>
		public static string Str3583 => GetString(Str3583Key);

		/// <summary>
		/// Layout (.json)|*.json
		/// </summary>
		public const string Str3584Key = nameof(Str3584);

		/// <summary>
		/// Layout (.json)|*.json
		/// </summary>
		public static string Str3584 => GetString(Str3584Key);

		/// <summary>
		/// Issued for:
		/// </summary>
		public const string Str3585Key = nameof(Str3585);

		/// <summary>
		/// Issued for:
		/// </summary>
		public static string Str3585 => GetString(Str3585Key);

		/// <summary>
		/// Remaining:
		/// </summary>
		public const string Str3586Key = nameof(Str3586);

		/// <summary>
		/// Remaining:
		/// </summary>
		public static string Str3586 => GetString(Str3586Key);

		/// <summary>
		/// Number:
		/// </summary>
		public const string Str3587Key = nameof(Str3587);

		/// <summary>
		/// Number:
		/// </summary>
		public static string Str3587 => GetString(Str3587Key);

		/// <summary>
		/// Issued:
		/// </summary>
		public const string Str3588Key = nameof(Str3588);

		/// <summary>
		/// Issued:
		/// </summary>
		public static string Str3588 => GetString(Str3588Key);

		/// <summary>
		/// Create...
		/// </summary>
		public const string Str3590Key = nameof(Str3590);

		/// <summary>
		/// Create...
		/// </summary>
		public static string Str3590 => GetString(Str3590Key);

		/// <summary>
		/// Report (.{0})|*.{0}
		/// </summary>
		public const string Str3591ParamsKey = nameof(Str3591Params);

		/// <summary>
		/// Report (.{0})|*.{0}
		/// </summary>
		public static string Str3591Params => GetString(Str3591ParamsKey);

		/// <summary>
		/// Strategies and emulators generation.
		/// </summary>
		public const string Str3592Key = nameof(Str3592);

		/// <summary>
		/// Strategies and emulators generation.
		/// </summary>
		public static string Str3592 => GetString(Str3592Key);

		/// <summary>
		/// Strategies generation completed.
		/// </summary>
		public const string Str3593Key = nameof(Str3593);

		/// <summary>
		/// Strategies generation completed.
		/// </summary>
		public static string Str3593 => GetString(Str3593Key);

		/// <summary>
		/// Creating emulation session.
		/// </summary>
		public const string Str3594Key = nameof(Str3594);

		/// <summary>
		/// Creating emulation session.
		/// </summary>
		public static string Str3594 => GetString(Str3594Key);

		/// <summary>
		/// Storage initialization.
		/// </summary>
		public const string Str3595Key = nameof(Str3595);

		/// <summary>
		/// Storage initialization.
		/// </summary>
		public static string Str3595 => GetString(Str3595Key);

		/// <summary>
		/// Command cannot be processed synchronously outside of the WPF thread.
		/// </summary>
		public const string Str3596Key = nameof(Str3596);

		/// <summary>
		/// Command cannot be processed synchronously outside of the WPF thread.
		/// </summary>
		public static string Str3596 => GetString(Str3596Key);

		/// <summary>
		/// Cannot determine scope for {0}.
		/// </summary>
		public const string Str3597ParamsKey = nameof(Str3597Params);

		/// <summary>
		/// Cannot determine scope for {0}.
		/// </summary>
		public static string Str3597Params => GetString(Str3597ParamsKey);

		/// <summary>
		/// Start testing
		/// </summary>
		public const string Str3598Key = nameof(Str3598);

		/// <summary>
		/// Start testing
		/// </summary>
		public static string Str3598 => GetString(Str3598Key);

		/// <summary>
		/// Trading
		/// </summary>
		public const string Str3599Key = nameof(Str3599);

		/// <summary>
		/// Trading
		/// </summary>
		public static string Str3599 => GetString(Str3599Key);

		/// <summary>
		/// Testing
		/// </summary>
		public const string Str3600Key = nameof(Str3600);

		/// <summary>
		/// Testing
		/// </summary>
		public static string Str3600 => GetString(Str3600Key);

		/// <summary>
		/// Optimization result
		/// </summary>
		public const string Str3601Key = nameof(Str3601);

		/// <summary>
		/// Optimization result
		/// </summary>
		public static string Str3601 => GetString(Str3601Key);

		/// <summary>
		/// Terminal
		/// </summary>
		public const string Str3605Key = nameof(Str3605);

		/// <summary>
		/// Terminal
		/// </summary>
		public static string Str3605 => GetString(Str3605Key);

		/// <summary>
		/// Testing
		/// </summary>
		public const string Str3606Key = nameof(Str3606);

		/// <summary>
		/// Testing
		/// </summary>
		public static string Str3606 => GetString(Str3606Key);

		/// <summary>
		/// Failed to load assembly {0}.
		/// </summary>
		public const string Str3607ParamsKey = nameof(Str3607Params);

		/// <summary>
		/// Failed to load assembly {0}.
		/// </summary>
		public static string Str3607Params => GetString(Str3607ParamsKey);

		/// <summary>
		/// Strategy type not found in compiled assembly.
		/// </summary>
		public const string Str3608Key = nameof(Str3608);

		/// <summary>
		/// Strategy type not found in compiled assembly.
		/// </summary>
		public static string Str3608 => GetString(Str3608Key);

		/// <summary>
		/// Moving averages crossing strategy, created in visual diagram designer.
		/// </summary>
		public const string Str3609Key = nameof(Str3609);

		/// <summary>
		/// Moving averages crossing strategy, created in visual diagram designer.
		/// </summary>
		public static string Str3609 => GetString(Str3609Key);

		/// <summary>
		/// Classical arbitrage
		/// </summary>
		public const string Str3610Key = nameof(Str3610);

		/// <summary>
		/// Classical arbitrage
		/// </summary>
		public static string Str3610 => GetString(Str3610Key);

		/// <summary>
		/// Classical arbitrage strategy, created in visual diagram designer.
		/// </summary>
		public const string Str3611Key = nameof(Str3611);

		/// <summary>
		/// Classical arbitrage strategy, created in visual diagram designer.
		/// </summary>
		public static string Str3611 => GetString(Str3611Key);

		/// <summary>
		/// Strategy that provides the ability to trade manually, rendering candles and indicators on the chart.
		/// </summary>
		public const string Str3612Key = nameof(Str3612);

		/// <summary>
		/// Strategy that provides the ability to trade manually, rendering candles and indicators on the chart.
		/// </summary>
		public static string Str3612 => GetString(Str3612Key);

		/// <summary>
		/// Strategy '{0}' does not have information about security.
		/// </summary>
		public const string Str3613ParamsKey = nameof(Str3613Params);

		/// <summary>
		/// Strategy '{0}' does not have information about security.
		/// </summary>
		public static string Str3613Params => GetString(Str3613ParamsKey);

		/// <summary>
		/// Strategy '{0}' does not have information about portfolio.
		/// </summary>
		public const string Str3614ParamsKey = nameof(Str3614Params);

		/// <summary>
		/// Strategy '{0}' does not have information about portfolio.
		/// </summary>
		public static string Str3614Params => GetString(Str3614ParamsKey);

		/// <summary>
		/// For strategy '{0}' scheme is not specified.
		/// </summary>
		public const string Str3615ParamsKey = nameof(Str3615Params);

		/// <summary>
		/// For strategy '{0}' scheme is not specified.
		/// </summary>
		public static string Str3615Params => GetString(Str3615ParamsKey);

		/// <summary>
		/// Strategy '{0}' diagram contains errors.
		/// </summary>
		public const string Str3616ParamsKey = nameof(Str3616Params);

		/// <summary>
		/// Strategy '{0}' diagram contains errors.
		/// </summary>
		public static string Str3616Params => GetString(Str3616ParamsKey);

		/// <summary>
		/// To close the tab {0} strategy or testing process must be stopped.
		/// </summary>
		public const string Str3617ParamsKey = nameof(Str3617Params);

		/// <summary>
		/// To close the tab {0} strategy or testing process must be stopped.
		/// </summary>
		public static string Str3617Params => GetString(Str3617ParamsKey);

		/// <summary>
		/// Security {0} added to saving.
		/// </summary>
		public const string Str3618ParamsKey = nameof(Str3618Params);

		/// <summary>
		/// Security {0} added to saving.
		/// </summary>
		public static string Str3618Params => GetString(Str3618ParamsKey);

		/// <summary>
		/// Portfolio {0} added to saving.
		/// </summary>
		public const string Str3619ParamsKey = nameof(Str3619Params);

		/// <summary>
		/// Portfolio {0} added to saving.
		/// </summary>
		public static string Str3619Params => GetString(Str3619ParamsKey);

		/// <summary>
		/// News {0} added to saving.
		/// </summary>
		public const string Str3620ParamsKey = nameof(Str3620Params);

		/// <summary>
		/// News {0} added to saving.
		/// </summary>
		public static string Str3620Params => GetString(Str3620ParamsKey);

		/// <summary>
		/// Search for portfolio {0}.
		/// </summary>
		public const string Str3621ParamsKey = nameof(Str3621Params);

		/// <summary>
		/// Search for portfolio {0}.
		/// </summary>
		public static string Str3621Params => GetString(Str3621ParamsKey);

		/// <summary>
		/// No suitable portfolio {0}.
		/// </summary>
		public const string Str3622ParamsKey = nameof(Str3622Params);

		/// <summary>
		/// No suitable portfolio {0}.
		/// </summary>
		public static string Str3622Params => GetString(Str3622ParamsKey);

		/// <summary>
		/// Search for security {0}.
		/// </summary>
		public const string Str3623ParamsKey = nameof(Str3623Params);

		/// <summary>
		/// Search for security {0}.
		/// </summary>
		public static string Str3623Params => GetString(Str3623ParamsKey);

		/// <summary>
		/// No suitable security {0}.
		/// </summary>
		public const string Str3624ParamsKey = nameof(Str3624Params);

		/// <summary>
		/// No suitable security {0}.
		/// </summary>
		public static string Str3624Params => GetString(Str3624ParamsKey);

		/// <summary>
		/// Emulation adapter not found.
		/// </summary>
		public const string Str3625Key = nameof(Str3625);

		/// <summary>
		/// Emulation adapter not found.
		/// </summary>
		public static string Str3625 => GetString(Str3625Key);

		/// <summary>
		/// Security {0} is associated with unknown board.
		/// </summary>
		public const string Str3626ParamsKey = nameof(Str3626Params);

		/// <summary>
		/// Security {0} is associated with unknown board.
		/// </summary>
		public static string Str3626Params => GetString(Str3626ParamsKey);

		/// <summary>
		/// Error loading strategy '{0}': {1}
		/// </summary>
		public const string Str3627ParamsKey = nameof(Str3627Params);

		/// <summary>
		/// Error loading strategy '{0}': {1}
		/// </summary>
		public static string Str3627Params => GetString(Str3627ParamsKey);

		/// <summary>
		/// Current version {0} of {1} database is out of date and will be updated to {2} with old copy saved.
		/// </summary>
		public const string Str3628ParamsKey = nameof(Str3628Params);

		/// <summary>
		/// Current version {0} of {1} database is out of date and will be updated to {2} with old copy saved.
		/// </summary>
		public static string Str3628Params => GetString(Str3628ParamsKey);

		/// <summary>
		/// Error updating database: {0}
		/// </summary>
		public const string Str3629ParamsKey = nameof(Str3629Params);

		/// <summary>
		/// Error updating database: {0}
		/// </summary>
		public static string Str3629Params => GetString(Str3629ParamsKey);

		/// <summary>
		/// Error updating database.{0}{1}
		/// </summary>
		public const string Str3630ParamsKey = nameof(Str3630Params);

		/// <summary>
		/// Error updating database.{0}{1}
		/// </summary>
		public static string Str3630Params => GetString(Str3630ParamsKey);

		/// <summary>
		/// Impossible to reverse position since it is equal to zero.
		/// </summary>
		public const string Str3631Key = nameof(Str3631);

		/// <summary>
		/// Impossible to reverse position since it is equal to zero.
		/// </summary>
		public static string Str3631 => GetString(Str3631Key);

		/// <summary>
		/// Impossible to close position since it is equal to zero.
		/// </summary>
		public const string Str3632Key = nameof(Str3632);

		/// <summary>
		/// Impossible to close position since it is equal to zero.
		/// </summary>
		public static string Str3632 => GetString(Str3632Key);

		/// <summary>
		/// Strategy does not contain information about CandleManager.
		/// </summary>
		public const string Str3633Key = nameof(Str3633);

		/// <summary>
		/// Strategy does not contain information about CandleManager.
		/// </summary>
		public static string Str3633 => GetString(Str3633Key);

		/// <summary>
		/// New candle {0}: {6} {1};{2};{3};{4}; volume {5}
		/// </summary>
		public const string Str3634ParamsKey = nameof(Str3634Params);

		/// <summary>
		/// New candle {0}: {6} {1};{2};{3};{4}; volume {5}
		/// </summary>
		public static string Str3634Params => GetString(Str3634ParamsKey);

		/// <summary>
		/// Error saving composite element: {0}
		/// </summary>
		public const string Str3635ParamsKey = nameof(Str3635Params);

		/// <summary>
		/// Error saving composite element: {0}
		/// </summary>
		public static string Str3635Params => GetString(Str3635ParamsKey);

		/// <summary>
		/// Empty
		/// </summary>
		public const string Str3636Key = nameof(Str3636);

		/// <summary>
		/// Empty
		/// </summary>
		public static string Str3636 => GetString(Str3636Key);

		/// <summary>
		/// Arbitrage
		/// </summary>
		public const string Str3637Key = nameof(Str3637);

		/// <summary>
		/// Arbitrage
		/// </summary>
		public static string Str3637 => GetString(Str3637Key);

		/// <summary>
		/// Largest volume distribution by hour
		/// </summary>
		public const string Str3638Key = nameof(Str3638);

		/// <summary>
		/// Largest volume distribution by hour
		/// </summary>
		public static string Str3638 => GetString(Str3638Key);

		/// <summary>
		/// Volume distribution by price levels
		/// </summary>
		public const string Str3639Key = nameof(Str3639);

		/// <summary>
		/// Volume distribution by price levels
		/// </summary>
		public static string Str3639 => GetString(Str3639Key);

		/// <summary>
		/// .NET build (.dll)|*.dll
		/// </summary>
		public const string Str3640Key = nameof(Str3640);

		/// <summary>
		/// .NET build (.dll)|*.dll
		/// </summary>
		public static string Str3640 => GetString(Str3640Key);

		/// <summary>
		/// Strategy '{0}' was loaded earlier.
		/// </summary>
		public const string Str3641ParamsKey = nameof(Str3641Params);

		/// <summary>
		/// Strategy '{0}' was loaded earlier.
		/// </summary>
		public static string Str3641Params => GetString(Str3641ParamsKey);

		/// <summary>
		/// Strategy '{0}' does not have information about metadata.
		/// </summary>
		public const string Str3642ParamsKey = nameof(Str3642Params);

		/// <summary>
		/// Strategy '{0}' does not have information about metadata.
		/// </summary>
		public static string Str3642Params => GetString(Str3642ParamsKey);

		/// <summary>
		/// To get a license you must connect to S#. Connect now?
		/// </summary>
		public const string Str3643Key = nameof(Str3643);

		/// <summary>
		/// To get a license you must connect to S#. Connect now?
		/// </summary>
		public static string Str3643 => GetString(Str3643Key);

		/// <summary>
		/// Error receiving a license:
		/// </summary>
		public const string Str3644Key = nameof(Str3644);

		/// <summary>
		/// Error receiving a license:
		/// </summary>
		public static string Str3644 => GetString(Str3644Key);

		/// <summary>
		/// Request for broker license sent.
		/// </summary>
		public const string Str3645Key = nameof(Str3645);

		/// <summary>
		/// Request for broker license sent.
		/// </summary>
		public static string Str3645 => GetString(Str3645Key);

		/// <summary>
		/// Error requesting license from broker:
		/// </summary>
		public const string Str3646Key = nameof(Str3646);

		/// <summary>
		/// Error requesting license from broker:
		/// </summary>
		public static string Str3646 => GetString(Str3646Key);

		/// <summary>
		/// Error authorizing:
		/// </summary>
		public const string Str3647Key = nameof(Str3647);

		/// <summary>
		/// Error authorizing:
		/// </summary>
		public static string Str3647 => GetString(Str3647Key);

		/// <summary>
		/// To close the tab {0} all running strategies must be stopped.
		/// </summary>
		public const string Str3648ParamsKey = nameof(Str3648Params);

		/// <summary>
		/// To close the tab {0} all running strategies must be stopped.
		/// </summary>
		public static string Str3648Params => GetString(Str3648ParamsKey);

		/// <summary>
		/// Error loading settings.
		/// </summary>
		public const string Str3649Key = nameof(Str3649);

		/// <summary>
		/// Error loading settings: {0}
		/// </summary>
		public static string Str3649 => GetString(Str3649Key);

		/// <summary>
		/// At least one connection should be made.
		/// </summary>
		public const string Str3650Key = nameof(Str3650);

		/// <summary>
		/// At least one connection should be made.
		/// </summary>
		public static string Str3650 => GetString(Str3650Key);

		/// <summary>
		/// At least one connection must be active.
		/// </summary>
		public const string Str3651Key = nameof(Str3651);

		/// <summary>
		/// At least one connection must be active.
		/// </summary>
		public static string Str3651 => GetString(Str3651Key);

		/// <summary>
		/// Strategy '{0}' is running for several configurations. They must first be stopped.
		/// </summary>
		public const string Str3652ParamsKey = nameof(Str3652Params);

		/// <summary>
		/// Strategy '{0}' is running for several configurations. They must first be stopped.
		/// </summary>
		public static string Str3652Params => GetString(Str3652ParamsKey);

		/// <summary>
		/// Details:
		/// </summary>
		public const string Str3654Key = nameof(Str3654);

		/// <summary>
		/// Details:
		/// </summary>
		public static string Str3654 => GetString(Str3654Key);

		/// <summary>
		/// Search
		/// </summary>
		public const string Str3657Key = nameof(Str3657);

		/// <summary>
		/// Search
		/// </summary>
		public static string Str3657 => GetString(Str3657Key);

		/// <summary>
		/// Publishing project {0}
		/// </summary>
		public const string Str3658ParamsKey = nameof(Str3658Params);

		/// <summary>
		/// Publishing project {0}
		/// </summary>
		public static string Str3658Params => GetString(Str3658ParamsKey);

		/// <summary>
		/// Version {0} is already present in releases.
		/// </summary>
		public const string Str3659ParamsKey = nameof(Str3659Params);

		/// <summary>
		/// Version {0} is already present in releases.
		/// </summary>
		public static string Str3659Params => GetString(Str3659ParamsKey);

		/// <summary>
		/// Copying files from {0} to {1}
		/// </summary>
		public const string Str3660ParamsKey = nameof(Str3660Params);

		/// <summary>
		/// Copying files from {0} to {1}
		/// </summary>
		public static string Str3660Params => GetString(Str3660ParamsKey);

		/// <summary>
		/// Compilation of project {0}|{1} {2}
		/// </summary>
		public const string Str3661ParamsKey = nameof(Str3661Params);

		/// <summary>
		/// Compilation of project {0}|{1} {2}
		/// </summary>
		public static string Str3661Params => GetString(Str3661ParamsKey);

		/// <summary>
		/// Error compiling project
		/// </summary>
		public const string Str3662Key = nameof(Str3662);

		/// <summary>
		/// Error compiling project
		/// </summary>
		public static string Str3662 => GetString(Str3662Key);

		/// <summary>
		/// Project successfully compiled.
		/// </summary>
		public const string Str3663Key = nameof(Str3663);

		/// <summary>
		/// Project successfully compiled.
		/// </summary>
		public static string Str3663 => GetString(Str3663Key);

		/// <summary>
		/// Obfuscation of files
		/// </summary>
		public const string Str3666Key = nameof(Str3666);

		/// <summary>
		/// Obfuscation of files
		/// </summary>
		public static string Str3666 => GetString(Str3666Key);

		/// <summary>
		/// Obfuscation {0}.
		/// </summary>
		public const string Str3667ParamsKey = nameof(Str3667Params);

		/// <summary>
		/// Obfuscation {0}.
		/// </summary>
		public static string Str3667Params => GetString(Str3667ParamsKey);

		/// <summary>
		/// Obfuscation error for {0}.
		/// </summary>
		public const string Str3668ParamsKey = nameof(Str3668Params);

		/// <summary>
		/// Obfuscation error for {0}.
		/// </summary>
		public static string Str3668Params => GetString(Str3668ParamsKey);

		/// <summary>
		/// Building updates
		/// </summary>
		public const string Str3669Key = nameof(Str3669);

		/// <summary>
		/// Building updates
		/// </summary>
		public static string Str3669 => GetString(Str3669Key);

		/// <summary>
		/// File with description of version {0}
		/// </summary>
		public const string Str3670ParamsKey = nameof(Str3670Params);

		/// <summary>
		/// File with description of version {0}
		/// </summary>
		public static string Str3670Params => GetString(Str3670ParamsKey);

		/// <summary>
		/// Error building updates
		/// </summary>
		public const string Str3671Key = nameof(Str3671);

		/// <summary>
		/// Error building updates
		/// </summary>
		public static string Str3671 => GetString(Str3671Key);

		/// <summary>
		/// Completed building updates.
		/// </summary>
		public const string Str3672Key = nameof(Str3672);

		/// <summary>
		/// Completed building updates.
		/// </summary>
		public static string Str3672 => GetString(Str3672Key);

		/// <summary>
		/// Path to a directory where publication data is stored is not specified.
		/// </summary>
		public const string Str3673Key = nameof(Str3673);

		/// <summary>
		/// Path to a directory where publication data is stored is not specified.
		/// </summary>
		public static string Str3673 => GetString(Str3673Key);

		/// <summary>
		/// WyBuild project file name is not specified.
		/// </summary>
		public const string Str3674Key = nameof(Str3674);

		/// <summary>
		/// WyBuild project file name is not specified.
		/// </summary>
		public static string Str3674 => GetString(Str3674Key);

		/// <summary>
		/// Path to the assembly of a published project is not specified.
		/// </summary>
		public const string Str3675Key = nameof(Str3675);

		/// <summary>
		/// Path to the assembly of a published project is not specified.
		/// </summary>
		public static string Str3675 => GetString(Str3675Key);

		/// <summary>
		/// Project has changed. Save changes?
		/// </summary>
		public const string Str3676ParamsKey = nameof(Str3676Params);

		/// <summary>
		/// Project has changed. Save changes?
		/// </summary>
		public static string Str3676Params => GetString(Str3676ParamsKey);

		/// <summary>
		/// Executable file is not specified.
		/// </summary>
		public const string Str3677Key = nameof(Str3677);

		/// <summary>
		/// Executable file is not specified.
		/// </summary>
		public static string Str3677 => GetString(Str3677Key);

		/// <summary>
		/// New order for '{0}'
		/// </summary>
		public const string Str3678ParamsKey = nameof(Str3678Params);

		/// <summary>
		/// New order for '{0}'
		/// </summary>
		public static string Str3678Params => GetString(Str3678ParamsKey);

		/// <summary>
		/// Use
		/// </summary>
		public const string Str3682Key = nameof(Str3682);

		/// <summary>
		/// Use
		/// </summary>
		public static string Str3682 => GetString(Str3682Key);

		/// <summary>
		/// Is proxy used to connect to the internet.
		/// </summary>
		public const string Str3683Key = nameof(Str3683);

		/// <summary>
		/// Is proxy used to connect to the internet.
		/// </summary>
		public static string Str3683 => GetString(Str3683Key);

		/// <summary>
		/// Protocol
		/// </summary>
		public const string Str3684Key = nameof(Str3684);

		/// <summary>
		/// Protocol
		/// </summary>
		public static string Str3684 => GetString(Str3684Key);

		/// <summary>
		/// Type of protocol that uses proxy.
		/// </summary>
		public const string Str3685Key = nameof(Str3685);

		/// <summary>
		/// Type of protocol that uses proxy.
		/// </summary>
		public static string Str3685 => GetString(Str3685Key);

		/// <summary>
		/// Login (if proxy demands authorization).
		/// </summary>
		public const string Str3686Key = nameof(Str3686);

		/// <summary>
		/// Login (if proxy demands authorization).
		/// </summary>
		public static string Str3686 => GetString(Str3686Key);

		/// <summary>
		/// Password (if proxy requires authorization).
		/// </summary>
		public const string Str3687Key = nameof(Str3687);

		/// <summary>
		/// Password (if proxy requires authorization).
		/// </summary>
		public static string Str3687 => GetString(Str3687Key);

		/// <summary>
		/// Proxy server address.
		/// </summary>
		public const string Str3688Key = nameof(Str3688);

		/// <summary>
		/// Proxy server address.
		/// </summary>
		public static string Str3688 => GetString(Str3688Key);

		/// <summary>
		/// Key not specified.
		/// </summary>
		public const string Str3689Key = nameof(Str3689);

		/// <summary>
		/// Key not specified.
		/// </summary>
		public static string Str3689 => GetString(Str3689Key);

		/// <summary>
		/// Secret not specified.
		/// </summary>
		public const string Str3690Key = nameof(Str3690);

		/// <summary>
		/// Secret not specified.
		/// </summary>
		public static string Str3690 => GetString(Str3690Key);

		/// <summary>
		/// Token deserialization error: {0}
		/// </summary>
		public const string Str3691ParamsKey = nameof(Str3691Params);

		/// <summary>
		/// Token deserialization error: {0}
		/// </summary>
		public static string Str3691Params => GetString(Str3691ParamsKey);

		/// <summary>
		/// Access server ID.
		/// </summary>
		public const string Str3692Key = nameof(Str3692);

		/// <summary>
		/// Access server ID.
		/// </summary>
		public static string Str3692 => GetString(Str3692Key);

		/// <summary>
		/// quotes
		/// </summary>
		public const string Str3693Key = nameof(Str3693);

		/// <summary>
		/// quotes
		/// </summary>
		public static string Str3693 => GetString(Str3693Key);

		/// <summary>
		/// History address
		/// </summary>
		public const string Str3694Key = nameof(Str3694);

		/// <summary>
		/// History address
		/// </summary>
		public static string Str3694 => GetString(Str3694Key);

		/// <summary>
		/// History server address.
		/// </summary>
		public const string Str3695Key = nameof(Str3695);

		/// <summary>
		/// History server address.
		/// </summary>
		public static string Str3695 => GetString(Str3695Key);

		/// <summary>
		/// Market data address
		/// </summary>
		public const string Str3696Key = nameof(Str3696);

		/// <summary>
		/// Market data address
		/// </summary>
		public static string Str3696 => GetString(Str3696Key);

		/// <summary>
		/// Market data server address.
		/// </summary>
		public const string Str3697Key = nameof(Str3697);

		/// <summary>
		/// Market data server address.
		/// </summary>
		public static string Str3697 => GetString(Str3697Key);

		/// <summary>
		/// Error code
		/// </summary>
		public const string Str3698Key = nameof(Str3698);

		/// <summary>
		/// Error code
		/// </summary>
		public static string Str3698 => GetString(Str3698Key);

		/// <summary>
		/// Column {0} is missing in table {1}.
		/// </summary>
		public const string Str3700ParamsKey = nameof(Str3700Params);

		/// <summary>
		/// Column {0} is missing in table {1}.
		/// </summary>
		public static string Str3700Params => GetString(Str3700ParamsKey);

		/// <summary>
		/// Tables metainformation was not received.
		/// </summary>
		public const string Str3701Key = nameof(Str3701);

		/// <summary>
		/// Tables metainformation was not received.
		/// </summary>
		public static string Str3701 => GetString(Str3701Key);

		/// <summary>
		/// Metainformation about table {0} was not received.
		/// </summary>
		public const string Str3702ParamsKey = nameof(Str3702Params);

		/// <summary>
		/// Metainformation about table {0} was not received.
		/// </summary>
		public static string Str3702Params => GetString(Str3702ParamsKey);

		/// <summary>
		/// Unable to open table {0}.
		/// </summary>
		public const string Str3703ParamsKey = nameof(Str3703Params);

		/// <summary>
		/// Unable to open table {0}.
		/// </summary>
		public static string Str3703Params => GetString(Str3703ParamsKey);

		/// <summary>
		/// Failed to get security from secCode
		/// </summary>
		public const string Str3704Key = nameof(Str3704);

		/// <summary>
		/// Failed to get security from secCode
		/// </summary>
		public static string Str3704 => GetString(Str3704Key);

		/// <summary>
		/// Unsuccessful attempt to establish a connection.
		/// </summary>
		public const string Str3705Key = nameof(Str3705);

		/// <summary>
		/// Unsuccessful attempt to establish a connection.
		/// </summary>
		public static string Str3705 => GetString(Str3705Key);

		/// <summary>
		/// Type of order {0} is unknown.
		/// </summary>
		public const string Str3706ParamsKey = nameof(Str3706Params);

		/// <summary>
		/// Type of order {0} is unknown.
		/// </summary>
		public static string Str3706Params => GetString(Str3706ParamsKey);

		/// <summary>
		/// Order {0} direction is unknown.
		/// </summary>
		public const string Str3707ParamsKey = nameof(Str3707Params);

		/// <summary>
		/// Order {0} direction is unknown.
		/// </summary>
		public static string Str3707Params => GetString(Str3707ParamsKey);

		/// <summary>
		/// Type of stop-order {0} is unknown.
		/// </summary>
		public const string Str3708ParamsKey = nameof(Str3708Params);

		/// <summary>
		/// Type of stop-order {0} is unknown.
		/// </summary>
		public static string Str3708Params => GetString(Str3708ParamsKey);

		/// <summary>
		/// Cannot start market depth export for {0}.
		/// </summary>
		public const string Str3709ParamsKey = nameof(Str3709Params);

		/// <summary>
		/// Cannot start market depth export for {0}.
		/// </summary>
		public static string Str3709Params => GetString(Str3709ParamsKey);

		/// <summary>
		/// Load securities from LMAX website
		/// </summary>
		public const string Str3710Key = nameof(Str3710);

		/// <summary>
		/// Load securities from LMAX website
		/// </summary>
		public static string Str3710 => GetString(Str3710Key);

		/// <summary>
		/// Should the whole set of securities be loaded from LMAX website. If switched off, securities have to be searched through Search.
		/// </summary>
		public const string Str3711Key = nameof(Str3711);

		/// <summary>
		/// Should the whole set of securities be loaded from LMAX website. If switched off, securities have to be searched through Search.
		/// </summary>
		public static string Str3711 => GetString(Str3711Key);

		/// <summary>
		/// User '{0}' not found.
		/// </summary>
		public const string Str3712ParamsKey = nameof(Str3712Params);

		/// <summary>
		/// User '{0}' not found.
		/// </summary>
		public static string Str3712Params => GetString(Str3712ParamsKey);

		/// <summary>
		/// User '{0}' does not support current authorization type.
		/// </summary>
		public const string Str3713ParamsKey = nameof(Str3713Params);

		/// <summary>
		/// User '{0}' does not support current authorization type.
		/// </summary>
		public static string Str3713Params => GetString(Str3713ParamsKey);

		/// <summary>
		/// User '{0}' entered wrong password.
		/// </summary>
		public const string Str3714ParamsKey = nameof(Str3714Params);

		/// <summary>
		/// User '{0}' entered wrong password.
		/// </summary>
		public static string Str3714Params => GetString(Str3714ParamsKey);

		/// <summary>
		/// Account activity {0} has been suspended.
		/// </summary>
		public const string Str3715ParamsKey = nameof(Str3715Params);

		/// <summary>
		/// Account activity {0} has been suspended.
		/// </summary>
		public static string Str3715Params => GetString(Str3715ParamsKey);

		/// <summary>
		/// Portfolio {0} for orders restoration not found.
		/// </summary>
		public const string Str3716ParamsKey = nameof(Str3716Params);

		/// <summary>
		/// Portfolio {0} for orders restoration not found.
		/// </summary>
		public static string Str3716Params => GetString(Str3716ParamsKey);

		/// <summary>
		/// Security {0} for stop-order not found.
		/// </summary>
		public const string Str3717ParamsKey = nameof(Str3717Params);

		/// <summary>
		/// Security {0} for stop-order not found.
		/// </summary>
		public static string Str3717Params => GetString(Str3717ParamsKey);

		/// <summary>
		/// Portfolio {0} for stop-orders not found.
		/// </summary>
		public const string Str3718ParamsKey = nameof(Str3718Params);

		/// <summary>
		/// Portfolio {0} for stop-orders not found.
		/// </summary>
		public static string Str3718Params => GetString(Str3718ParamsKey);

		/// <summary>
		/// Stop-order replacing is not supported.
		/// </summary>
		public const string Str3719Key = nameof(Str3719);

		/// <summary>
		/// Stop-order replacing is not supported.
		/// </summary>
		public static string Str3719 => GetString(Str3719Key);

		/// <summary>
		/// Port
		/// </summary>
		public const string Str3720Key = nameof(Str3720);

		/// <summary>
		/// Port
		/// </summary>
		public static string Str3720 => GetString(Str3720Key);

		/// <summary>
		/// FIX listening port.
		/// </summary>
		public const string Str3721Key = nameof(Str3721);

		/// <summary>
		/// FIX listening port.
		/// </summary>
		public static string Str3721 => GetString(Str3721Key);

		/// <summary>
		/// Authorization for server access.
		/// </summary>
		public const string Str3722Key = nameof(Str3722);

		/// <summary>
		/// Authorization for server access.
		/// </summary>
		public static string Str3722 => GetString(Str3722Key);

		/// <summary>
		/// Long IDs
		/// </summary>
		public const string Str3723Key = nameof(Str3723);

		/// <summary>
		/// Long IDs
		/// </summary>
		public static string Str3723 => GetString(Str3723Key);

		/// <summary>
		/// Use long transaction IDs. Does not work for real connections.
		/// </summary>
		public const string Str3724Key = nameof(Str3724);

		/// <summary>
		/// Use long transaction IDs. Does not work for real connections.
		/// </summary>
		public static string Str3724 => GetString(Str3724Key);

		/// <summary>
		/// User
		/// </summary>
		public const string Str3725Key = nameof(Str3725);

		/// <summary>
		/// User
		/// </summary>
		public static string Str3725 => GetString(Str3725Key);

		/// <summary>
		/// Role
		/// </summary>
		public const string Str3726Key = nameof(Str3726);

		/// <summary>
		/// Role
		/// </summary>
		public static string Str3726 => GetString(Str3726Key);

		/// <summary>
		/// Role of user in system.
		/// </summary>
		public const string Str3727Key = nameof(Str3727);

		/// <summary>
		/// Role of user in system.
		/// </summary>
		public static string Str3727 => GetString(Str3727Key);

		/// <summary>
		/// Is system access blocked.
		/// </summary>
		public const string Str3728Key = nameof(Str3728);

		/// <summary>
		/// Is system access blocked.
		/// </summary>
		public static string Str3728 => GetString(Str3728Key);

		/// <summary>
		/// Current account balance.
		/// </summary>
		public const string Str3729Key = nameof(Str3729);

		/// <summary>
		/// Current account balance.
		/// </summary>
		public static string Str3729 => GetString(Str3729Key);

		/// <summary>
		/// Margin call
		/// </summary>
		public const string Str3730Key = nameof(Str3730);

		/// <summary>
		/// Margin call
		/// </summary>
		public static string Str3730 => GetString(Str3730Key);

		/// <summary>
		/// Offset from zero, when its value decreases below available account balance the account gets blocked.
		/// </summary>
		public const string Str3731Key = nameof(Str3731);

		/// <summary>
		/// Offset from zero, when its value decreases below available account balance the account gets blocked.
		/// </summary>
		public static string Str3731 => GetString(Str3731Key);

		/// <summary>
		/// Market data sending interval.
		/// </summary>
		public const string Str3732Key = nameof(Str3732);

		/// <summary>
		/// Market data sending interval.
		/// </summary>
		public static string Str3732 => GetString(Str3732Key);

		/// <summary>
		/// State of security {0}.
		/// </summary>
		public const string Str3733ParamsKey = nameof(Str3733Params);

		/// <summary>
		/// State of security {0}.
		/// </summary>
		public static string Str3733Params => GetString(Str3733ParamsKey);

		/// <summary>
		/// Portfolio {0} change.
		/// </summary>
		public const string Str3734ParamsKey = nameof(Str3734Params);

		/// <summary>
		/// Portfolio {0} change.
		/// </summary>
		public static string Str3734Params => GetString(Str3734ParamsKey);

		/// <summary>
		/// Saving portfolio {0}.
		/// </summary>
		public const string Str3735ParamsKey = nameof(Str3735Params);

		/// <summary>
		/// Saving portfolio {0}.
		/// </summary>
		public static string Str3735Params => GetString(Str3735ParamsKey);

		/// <summary>
		/// Creating new portfolio {0}.
		/// </summary>
		public const string Str3736ParamsKey = nameof(Str3736Params);

		/// <summary>
		/// Creating new portfolio {0}.
		/// </summary>
		public static string Str3736Params => GetString(Str3736ParamsKey);

		/// <summary>
		/// Creating new user {0}.
		/// </summary>
		public const string Str3737ParamsKey = nameof(Str3737Params);

		/// <summary>
		/// Creating new user {0}.
		/// </summary>
		public static string Str3737Params => GetString(Str3737ParamsKey);

		/// <summary>
		/// Password was not changed because of incorrect data.
		/// </summary>
		public const string Str3738Key = nameof(Str3738);

		/// <summary>
		/// Password was not changed because of incorrect data.
		/// </summary>
		public static string Str3738 => GetString(Str3738Key);

		/// <summary>
		/// Password was successfully changed.
		/// </summary>
		public const string Str3739Key = nameof(Str3739);

		/// <summary>
		/// Password was successfully changed.
		/// </summary>
		public static string Str3739 => GetString(Str3739Key);

		/// <summary>
		/// New security {0}.
		/// </summary>
		public const string Str3740ParamsKey = nameof(Str3740Params);

		/// <summary>
		/// New security {0}.
		/// </summary>
		public static string Str3740Params => GetString(Str3740ParamsKey);

		/// <summary>
		/// Account {0} blocked because of margin call.
		/// </summary>
		public const string Str3745ParamsKey = nameof(Str3745Params);

		/// <summary>
		/// Account {0} blocked because of margin call.
		/// </summary>
		public static string Str3745Params => GetString(Str3745ParamsKey);

		/// <summary>
		/// Market data session.
		/// </summary>
		public const string Str3746Key = nameof(Str3746);

		/// <summary>
		/// Market data session.
		/// </summary>
		public static string Str3746 => GetString(Str3746Key);

		/// <summary>
		/// candles history
		/// </summary>
		public const string Str3747Key = nameof(Str3747);

		/// <summary>
		/// candles history
		/// </summary>
		public static string Str3747 => GetString(Str3747Key);

		/// <summary>
		/// Time period for which the data has to be received is not specified.
		/// </summary>
		public const string Str3748Key = nameof(Str3748);

		/// <summary>
		/// Time period for which the data has to be received is not specified.
		/// </summary>
		public static string Str3748 => GetString(Str3748Key);

		/// <summary>
		/// trades history
		/// </summary>
		public const string Str3749Key = nameof(Str3749);

		/// <summary>
		/// trades history
		/// </summary>
		public static string Str3749 => GetString(Str3749Key);

		/// <summary>
		/// Date for which data has to be received is not specified.
		/// </summary>
		public const string Str3750Key = nameof(Str3750);

		/// <summary>
		/// Date for which data has to be received is not specified.
		/// </summary>
		public static string Str3750 => GetString(Str3750Key);

		/// <summary>
		/// Login is not specified.
		/// </summary>
		public const string Str3751Key = nameof(Str3751);

		/// <summary>
		/// Login is not specified.
		/// </summary>
		public static string Str3751 => GetString(Str3751Key);

		/// <summary>
		/// Export (auto)
		/// </summary>
		public const string Str3754Key = nameof(Str3754);

		/// <summary>
		/// Export (auto)
		/// </summary>
		public static string Str3754 => GetString(Str3754Key);

		/// <summary>
		/// Database
		/// </summary>
		public const string DatabaseKey = nameof(Database);

		/// <summary>
		/// Database
		/// </summary>
		public static string Database => GetString(DatabaseKey);

		/// <summary>
		/// Export type (format).
		/// </summary>
		public const string Str3756Key = nameof(Str3756);

		/// <summary>
		/// Export type (format).
		/// </summary>
		public static string Str3756 => GetString(Str3756Key);

		/// <summary>
		/// From what date to begin exporting data.
		/// </summary>
		public const string Str3757Key = nameof(Str3757);

		/// <summary>
		/// From what date to begin exporting data.
		/// </summary>
		public static string Str3757 => GetString(Str3757Key);

		/// <summary>
		/// Export directory
		/// </summary>
		public const string Str3758Key = nameof(Str3758);

		/// <summary>
		/// Export directory
		/// </summary>
		public static string Str3758 => GetString(Str3758Key);

		/// <summary>
		/// Directory where data will be exported.
		/// </summary>
		public const string Str3759Key = nameof(Str3759);

		/// <summary>
		/// Directory where data will be exported.
		/// </summary>
		public static string Str3759 => GetString(Str3759Key);

		/// <summary>
		/// Time offset in days.
		/// </summary>
		public const string Str3760Key = nameof(Str3760);

		/// <summary>
		/// Time offset in days.
		/// </summary>
		public static string Str3760 => GetString(Str3760Key);

		/// <summary>
		/// Candles parameters.
		/// </summary>
		public const string Str3761Key = nameof(Str3761);

		/// <summary>
		/// Candles parameters.
		/// </summary>
		public static string Str3761 => GetString(Str3761Key);

		/// <summary>
		/// Connection to database. Used in exporting through SQL.
		/// </summary>
		public const string Str3762Key = nameof(Str3762);

		/// <summary>
		/// Connection to database. Used in exporting through SQL.
		/// </summary>
		public static string Str3762 => GetString(Str3762Key);

		/// <summary>
		/// Batch
		/// </summary>
		public const string Str3763Key = nameof(Str3763);

		/// <summary>
		/// Batch
		/// </summary>
		public static string Str3763 => GetString(Str3763Key);

		/// <summary>
		/// Transmitted data package size. By default equal to 50 elements. Used when exporting through SQL.
		/// </summary>
		public const string Str3764Key = nameof(Str3764);

		/// <summary>
		/// Transmitted data package size. By default equal to 50 elements. Used when exporting through SQL.
		/// </summary>
		public static string Str3764 => GetString(Str3764Key);

		/// <summary>
		/// Uniqueness
		/// </summary>
		public const string Str3765Key = nameof(Str3765);

		/// <summary>
		/// Uniqueness
		/// </summary>
		public static string Str3765 => GetString(Str3765Key);

		/// <summary>
		/// To check the uniqueness of the data in the database. Affects performance. By default is enabled. Used when exporting through SQL.
		/// </summary>
		public const string Str3766Key = nameof(Str3766);

		/// <summary>
		/// To check the uniqueness of the data in the database. Affects performance. By default is enabled. Used when exporting through SQL.
		/// </summary>
		public static string Str3766 => GetString(Str3766Key);

		/// <summary>
		/// Task designed for automatic schedule data export to external files (txt, excel, etc.).
		/// </summary>
		public const string Str3767Key = nameof(Str3767);

		/// <summary>
		/// Task designed for automatic schedule data export to external files (txt, excel, etc.).
		/// </summary>
		public static string Str3767 => GetString(Str3767Key);

		/// <summary>
		/// To export to a database, you must specify the connection string.
		/// </summary>
		public const string Str3768Key = nameof(Str3768);

		/// <summary>
		/// To export to a database, you must specify the connection string.
		/// </summary>
		public static string Str3768 => GetString(Str3768Key);

		/// <summary>
		/// {0}. Export {1} to {2}.
		/// </summary>
		public const string Str3769ParamsKey = nameof(Str3769Params);

		/// <summary>
		/// {0}. Export {1} to {2}.
		/// </summary>
		public static string Str3769Params => GetString(Str3769ParamsKey);

		/// <summary>
		/// No data to convert.
		/// </summary>
		public const string Str3770Key = nameof(Str3770);

		/// <summary>
		/// No data to convert.
		/// </summary>
		public static string Str3770 => GetString(Str3770Key);

		/// <summary>
		/// Too much data to export to Excel.
		/// </summary>
		public const string Str3771Key = nameof(Str3771);

		/// <summary>
		/// Too much data to export to Excel.
		/// </summary>
		public static string Str3771 => GetString(Str3771Key);

		/// <summary>
		/// {0}. Export {1} to {2}. Dates {3}-{4}.
		/// </summary>
		public const string Str3772ParamsKey = nameof(Str3772Params);

		/// <summary>
		/// {0}. Export {1} to {2}. Dates {3}-{4}.
		/// </summary>
		public static string Str3772Params => GetString(Str3772ParamsKey);

		/// <summary>
		/// OL to ticks
		/// </summary>
		public const string Str3773Key = nameof(Str3773);

		/// <summary>
		/// OL to ticks
		/// </summary>
		public static string Str3773 => GetString(Str3773Key);

		/// <summary>
		/// OL to order books
		/// </summary>
		public const string Str3774Key = nameof(Str3774);

		/// <summary>
		/// OL to order books
		/// </summary>
		public static string Str3774 => GetString(Str3774Key);

		/// <summary>
		/// OL to candles
		/// </summary>
		public const string Str3775Key = nameof(Str3775);

		/// <summary>
		/// OL to candles
		/// </summary>
		public static string Str3775 => GetString(Str3775Key);

		/// <summary>
		/// Ticks to candles
		/// </summary>
		public const string Str3776Key = nameof(Str3776);

		/// <summary>
		/// Ticks to candles
		/// </summary>
		public static string Str3776 => GetString(Str3776Key);

		/// <summary>
		/// Order books to candle
		/// </summary>
		public const string Str3777Key = nameof(Str3777);

		/// <summary>
		/// Order books to candle
		/// </summary>
		public static string Str3777 => GetString(Str3777Key);

		/// <summary>
		/// Time offset in days from date of launching task.
		/// </summary>
		public const string Str3778Key = nameof(Str3778);

		/// <summary>
		/// Time offset in days from date of launching task.
		/// </summary>
		public static string Str3778 => GetString(Str3778Key);

		/// <summary>
		/// From what date to start data conversion.
		/// </summary>
		public const string Str3779Key = nameof(Str3779);

		/// <summary>
		/// From what date to start data conversion.
		/// </summary>
		public static string Str3779 => GetString(Str3779Key);

		/// <summary>
		/// Market depths generation interval.
		/// </summary>
		public const string Str3781Key = nameof(Str3781);

		/// <summary>
		/// Market depths generation interval.
		/// </summary>
		public static string Str3781 => GetString(Str3781Key);

		/// <summary>
		/// Maximum depth of market depths generation.
		/// </summary>
		public const string Str3782Key = nameof(Str3782);

		/// <summary>
		/// Maximum depth of market depths generation.
		/// </summary>
		public static string Str3782 => GetString(Str3782Key);

		/// <summary>
		/// Where
		/// </summary>
		public const string Str3783Key = nameof(Str3783);

		/// <summary>
		/// Where
		/// </summary>
		public static string Str3783 => GetString(Str3783Key);

		/// <summary>
		/// Data directory where converted data will be saved.
		/// </summary>
		public const string Str3784Key = nameof(Str3784);

		/// <summary>
		/// Data directory where converted data will be saved.
		/// </summary>
		public static string Str3784 => GetString(Str3784Key);

		/// <summary>
		/// Task is designed to convert one data type to another (e.g. from ticks to candles).
		/// </summary>
		public const string Str3785Key = nameof(Str3785);

		/// <summary>
		/// Task is designed to convert one data type to another (e.g. from ticks to candles).
		/// </summary>
		public static string Str3785 => GetString(Str3785Key);

		/// <summary>
		/// Processing security {0}. Conversion {1} to {2} at {3}.
		/// </summary>
		public const string Str3786ParamsKey = nameof(Str3786Params);

		/// <summary>
		/// Processing security {0}. Conversion {1} to {2} at {3}.
		/// </summary>
		public static string Str3786Params => GetString(Str3786ParamsKey);

		/// <summary>
		/// Quote type (bid or ask).
		/// </summary>
		public const string Str3789Key = nameof(Str3789);

		/// <summary>
		/// Quote type (bid or ask).
		/// </summary>
		public static string Str3789 => GetString(Str3789Key);

		/// <summary>
		/// Pin
		/// </summary>
		public const string PinKey = nameof(Pin);

		/// <summary>
		/// Pin
		/// </summary>
		public static string Pin => GetString(PinKey);

		/// <summary>
		/// Information about security {0} not found.
		/// </summary>
		public const string Str3792ParamsKey = nameof(Str3792Params);

		/// <summary>
		/// Information about security {0} not found.
		/// </summary>
		public static string Str3792Params => GetString(Str3792ParamsKey);

		/// <summary>
		/// Information about account {0} not found.
		/// </summary>
		public const string Str3793ParamsKey = nameof(Str3793Params);

		/// <summary>
		/// Information about account {0} not found.
		/// </summary>
		public static string Str3793Params => GetString(Str3793ParamsKey);

		/// <summary>
		/// Information about order {0} not found.
		/// </summary>
		public const string Str3794ParamsKey = nameof(Str3794Params);

		/// <summary>
		/// Information about order {0} not found.
		/// </summary>
		public static string Str3794Params => GetString(Str3794ParamsKey);

		/// <summary>
		/// Unsupported type of security {0}.
		/// </summary>
		public const string UnsupportSecTypeKey = nameof(UnsupportSecType);

		/// <summary>
		/// Unsupported type of security {0}.
		/// </summary>
		public static string UnsupportSecType => GetString(UnsupportSecTypeKey);

		/// <summary>
		/// Options orders settings.
		/// </summary>
		public const string Str3800Key = nameof(Str3800);

		/// <summary>
		/// Options orders settings.
		/// </summary>
		public static string Str3800 => GetString(Str3800Key);

		/// <summary>
		/// Unknown direction value.
		/// </summary>
		public const string Str3802Key = nameof(Str3802);

		/// <summary>
		/// Unknown direction value.
		/// </summary>
		public static string Str3802 => GetString(Str3802Key);

		/// <summary>
		/// Extended type of order not initialized.
		/// </summary>
		public const string Str3803Key = nameof(Str3803);

		/// <summary>
		/// Extended type of order not initialized.
		/// </summary>
		public static string Str3803 => GetString(Str3803Key);

		/// <summary>
		/// Address is not specified.
		/// </summary>
		public const string AddrNotSpecifiedKey = nameof(AddrNotSpecified);

		/// <summary>
		/// Address is not specified.
		/// </summary>
		public static string AddrNotSpecified => GetString(AddrNotSpecifiedKey);

		/// <summary>
		/// Source is designed to receive news through RSS feeds.
		/// </summary>
		public const string RssSourceKey = nameof(RssSource);

		/// <summary>
		/// Source is designed to receive news through RSS feeds.
		/// </summary>
		public static string RssSource => GetString(RssSourceKey);

		/// <summary>
		/// Alor (history)
		/// </summary>
		public const string AlorHistoryKey = nameof(AlorHistory);

		/// <summary>
		/// Alor (history)
		/// </summary>
		public static string AlorHistory => GetString(AlorHistoryKey);

		/// <summary>
		/// Client number is not specified.
		/// </summary>
		public const string Str3835Key = nameof(Str3835);

		/// <summary>
		/// Client number is not specified.
		/// </summary>
		public static string Str3835 => GetString(Str3835Key);

		/// <summary>
		/// Token is not specified.
		/// </summary>
		public const string Str3836Key = nameof(Str3836);

		/// <summary>
		/// Token is not specified.
		/// </summary>
		public static string Str3836 => GetString(Str3836Key);

		/// <summary>
		/// OANDA (history)
		/// </summary>
		public const string OandaHistoryKey = nameof(OandaHistory);

		/// <summary>
		/// OANDA (history)
		/// </summary>
		public static string OandaHistory => GetString(OandaHistoryKey);

		/// <summary>
		/// Start downloading quotes for {0} for {1}.
		/// </summary>
		public const string Str3838ParamsKey = nameof(Str3838Params);

		/// <summary>
		/// Start downloading quotes for {0} for {1}.
		/// </summary>
		public static string Str3838Params => GetString(Str3838ParamsKey);

		/// <summary>
		/// Error loading quotes for {0} for {1}.
		/// </summary>
		public const string Str3839ParamsKey = nameof(Str3839Params);

		/// <summary>
		/// Error loading quotes for {0} for {1}.
		/// </summary>
		public static string Str3839Params => GetString(Str3839ParamsKey);

		/// <summary>
		/// The path to gate launch script not set.
		/// </summary>
		public const string Str3844Key = nameof(Str3844);

		/// <summary>
		/// The path to gate launch script not set.
		/// </summary>
		public static string Str3844 => GetString(Str3844Key);

		/// <summary>
		/// Gate launch script file not found. Path: {0}.
		/// </summary>
		public const string Str3845Key = nameof(Str3845);

		/// <summary>
		/// Gate launch script file not found. Path: {0}.
		/// </summary>
		public static string Str3845 => GetString(Str3845Key);

		/// <summary>
		/// Cannot cast adapter with type {0} to {1}.
		/// </summary>
		public const string Str3843Key = nameof(Str3843);

		/// <summary>
		/// Cannot cast adapter with type {0} to {1}.
		/// </summary>
		public static string Str3843 => GetString(Str3843Key);

		/// <summary>
		/// {0} task settings
		/// </summary>
		public const string TaskSettingsKey = nameof(TaskSettings);

		/// <summary>
		/// {0} task settings
		/// </summary>
		public static string TaskSettings => GetString(TaskSettingsKey);

		/// <summary>
		/// for period of
		/// </summary>
		public const string Str3846Key = nameof(Str3846);

		/// <summary>
		/// for period of
		/// </summary>
		public static string Str3846 => GetString(Str3846Key);

		/// <summary>
		/// Indicator for {0} element is not found.
		/// </summary>
		public const string IndicatorNotFoundKey = nameof(IndicatorNotFound);

		/// <summary>
		/// Indicator for {0} element is not found.
		/// </summary>
		public static string IndicatorNotFound => GetString(IndicatorNotFoundKey);

		/// <summary>
		/// 1 min. candles
		/// </summary>
		public const string Candles1MinKey = nameof(Candles1Min);

		/// <summary>
		/// 1 min. candles
		/// </summary>
		public static string Candles1Min => GetString(Candles1MinKey);

		/// <summary>
		/// Schemas
		/// </summary>
		public const string SchemasKey = nameof(Schemas);

		/// <summary>
		/// Schemas
		/// </summary>
		public static string Schemas => GetString(SchemasKey);

		/// <summary>
		/// Composition elements / strategies
		/// </summary>
		public const string CompositionElementsStrategiesKey = nameof(CompositionElementsStrategies);

		/// <summary>
		/// Composition elements / strategies
		/// </summary>
		public static string CompositionElementsStrategies => GetString(CompositionElementsStrategiesKey);

		/// <summary>
		/// Action for socket {0} not found.
		/// </summary>
		public const string SocketActionNotFoundParamsKey = nameof(SocketActionNotFoundParams);

		/// <summary>
		/// Action for socket {0} not found.
		/// </summary>
		public static string SocketActionNotFoundParams => GetString(SocketActionNotFoundParamsKey);

		/// <summary>
		/// Chart elements
		/// </summary>
		public const string ChartElementsKey = nameof(ChartElements);

		/// <summary>
		/// Chart elements
		/// </summary>
		public static string ChartElements => GetString(ChartElementsKey);

		/// <summary>
		/// Buy: Ctrl + left mouse button
		/// </summary>
		public const string XamlStr4Key = nameof(XamlStr4);

		/// <summary>
		/// Buy: Ctrl + left mouse button
		/// </summary>
		public static string XamlStr4 => GetString(XamlStr4Key);

		/// <summary>
		/// Sell: Ctrl + right mouse button
		/// </summary>
		public const string XamlStr8Key = nameof(XamlStr8);

		/// <summary>
		/// Sell: Ctrl + right mouse button
		/// </summary>
		public static string XamlStr8 => GetString(XamlStr8Key);

		/// <summary>
		/// Sln проект:
		/// </summary>
		public const string SlnProjKey = nameof(SlnProj);

		/// <summary>
		/// Sln проект:
		/// </summary>
		public static string SlnProj => GetString(SlnProjKey);

		/// <summary>
		/// Wyp проект:
		/// </summary>
		public const string XamlStr10Key = nameof(XamlStr10);

		/// <summary>
		/// Wyp проект:
		/// </summary>
		public static string XamlStr10 => GetString(XamlStr10Key);

		/// <summary>
		/// Auto
		/// </summary>
		public const string XamlStr11Key = nameof(XamlStr11);

		/// <summary>
		/// Auto
		/// </summary>
		public static string XamlStr11 => GetString(XamlStr11Key);

		/// <summary>
		/// Auto alignment
		/// </summary>
		public const string XamlStr13Key = nameof(XamlStr13);

		/// <summary>
		/// Auto alignment
		/// </summary>
		public static string XamlStr13 => GetString(XamlStr13Key);

		/// <summary>
		/// Auto scaling (by order and trades)
		/// </summary>
		public const string XamlStr14Key = nameof(XamlStr14);

		/// <summary>
		/// Auto scaling (by order and trades)
		/// </summary>
		public static string XamlStr14 => GetString(XamlStr14Key);

		/// <summary>
		/// Build transitions automatically
		/// </summary>
		public const string XamlStr15Key = nameof(XamlStr15);

		/// <summary>
		/// Build transitions automatically
		/// </summary>
		public static string XamlStr15 => GetString(XamlStr15Key);

		/// <summary>
		/// Auto connect
		/// </summary>
		public const string XamlStr16Key = nameof(XamlStr16);

		/// <summary>
		/// Auto connect
		/// </summary>
		public static string XamlStr16 => GetString(XamlStr16Key);

		/// <summary>
		/// Auto scroll
		/// </summary>
		public const string XamlStr17Key = nameof(XamlStr17);

		/// <summary>
		/// Auto scroll
		/// </summary>
		public static string XamlStr17 => GetString(XamlStr17Key);

		/// <summary>
		/// E*TRADE authorization
		/// </summary>
		public const string XamlStr19Key = nameof(XamlStr19);

		/// <summary>
		/// E*TRADE authorization
		/// </summary>
		public static string XamlStr19 => GetString(XamlStr19Key);

		/// <summary>
		/// Quik Fix Server address:
		/// </summary>
		public const string XamlStr21Key = nameof(XamlStr21);

		/// <summary>
		/// Quik Fix Server address:
		/// </summary>
		public static string XamlStr21 => GetString(XamlStr21Key);

		/// <summary>
		/// Active
		/// </summary>
		public const string XamlStr23Key = nameof(XamlStr23);

		/// <summary>
		/// Active
		/// </summary>
		public static string XamlStr23 => GetString(XamlStr23Key);

		/// <summary>
		/// Associations
		/// </summary>
		public const string XamlStr28Key = nameof(XamlStr28);

		/// <summary>
		/// Associations
		/// </summary>
		public static string XamlStr28 => GetString(XamlStr28Key);

		/// <summary>
		/// Associations for field '{0}'
		/// </summary>
		public const string XamlStr29Key = nameof(XamlStr29);

		/// <summary>
		/// Associations for field '{0}'
		/// </summary>
		public static string XamlStr29 => GetString(XamlStr29Key);

		/// <summary>
		/// Bid (time)
		/// </summary>
		public const string XamlStr35Key = nameof(XamlStr35);

		/// <summary>
		/// Bid (time)
		/// </summary>
		public static string XamlStr35 => GetString(XamlStr35Key);

		/// <summary>
		/// Bid (volume)
		/// </summary>
		public const string XamlStr36Key = nameof(XamlStr36);

		/// <summary>
		/// Bid (volume)
		/// </summary>
		public static string XamlStr36 => GetString(XamlStr36Key);

		/// <summary>
		/// Bid (own)
		/// </summary>
		public const string XamlStr37Key = nameof(XamlStr37);

		/// <summary>
		/// Bid (own)
		/// </summary>
		public static string XamlStr37 => GetString(XamlStr37Key);

		/// <summary>
		/// Bid (price)
		/// </summary>
		public const string XamlStr38Key = nameof(XamlStr38);

		/// <summary>
		/// Bid (price)
		/// </summary>
		public static string XamlStr38 => GetString(XamlStr38Key);

		/// <summary>
		/// Bid-Ask
		/// </summary>
		public const string XamlStr40Key = nameof(XamlStr40);

		/// <summary>
		/// Bid-Ask
		/// </summary>
		public static string XamlStr40 => GetString(XamlStr40Key);

		/// <summary>
		/// Broker license
		/// </summary>
		public const string BrokerLicenseKey = nameof(BrokerLicense);

		/// <summary>
		/// Broker license
		/// </summary>
		public static string BrokerLicense => GetString(BrokerLicenseKey);

		/// <summary>
		/// In source
		/// </summary>
		public const string XamlStr45Key = nameof(XamlStr45);

		/// <summary>
		/// In source
		/// </summary>
		public static string XamlStr45 => GetString(XamlStr45Key);

		/// <summary>
		/// It might be necessary to enter your username and password on E*TRADE website in the process of verification code obtaining. In this case it is necessary after successful authentication to press the button above once more to obtain verification code.
		/// </summary>
		public const string XamlStr46Key = nameof(XamlStr46);

		/// <summary>
		/// It might be necessary to enter your username and password on E*TRADE website in the process of verification code obtaining. In this case it is necessary after successful authentication to press the button above once more to obtain verification code.
		/// </summary>
		public static string XamlStr46 => GetString(XamlStr46Key);

		/// <summary>
		/// in 64-bit mode
		/// </summary>
		public const string XamlStr47Key = nameof(XamlStr47);

		/// <summary>
		/// in 64-bit mode
		/// </summary>
		public static string XamlStr47 => GetString(XamlStr47Key);

		/// <summary>
		/// in 32-bit mode
		/// </summary>
		public const string XamlStr48Key = nameof(XamlStr48);

		/// <summary>
		/// in 32-bit mode
		/// </summary>
		public static string XamlStr48 => GetString(XamlStr48Key);

		/// <summary>
		/// Online
		/// </summary>
		public const string OnlineKey = nameof(Online);

		/// <summary>
		/// Online
		/// </summary>
		public static string Online => GetString(OnlineKey);

		/// <summary>
		/// To composite element
		/// </summary>
		public const string ToCompositeElemKey = nameof(ToCompositeElem);

		/// <summary>
		/// To composite element
		/// </summary>
		public static string ToCompositeElem => GetString(ToCompositeElemKey);

		/// <summary>
		/// In storage
		/// </summary>
		public const string InStorageKey = nameof(InStorage);

		/// <summary>
		/// In storage
		/// </summary>
		public static string InStorage => GetString(InStorageKey);

		/// <summary>
		/// To:
		/// </summary>
		public const string XamlStr52Key = nameof(XamlStr52);

		/// <summary>
		/// To:
		/// </summary>
		public static string XamlStr52 => GetString(XamlStr52Key);

		/// <summary>
		/// Var margin
		/// </summary>
		public const string XamlStr54Key = nameof(XamlStr54);

		/// <summary>
		/// Var margin
		/// </summary>
		public static string XamlStr54 => GetString(XamlStr54Key);

		/// <summary>
		/// Size of the movement:
		/// </summary>
		public const string XamlStr57Key = nameof(XamlStr57);

		/// <summary>
		/// Size of the movement:
		/// </summary>
		public static string XamlStr57 => GetString(XamlStr57Key);

		/// <summary>
		/// Undo
		/// </summary>
		public const string UndoKey = nameof(Undo);

		/// <summary>
		/// Undo
		/// </summary>
		public static string Undo => GetString(UndoKey);

		/// <summary>
		/// Redo
		/// </summary>
		public const string RedoKey = nameof(Redo);

		/// <summary>
		/// Redo
		/// </summary>
		public static string Redo => GetString(RedoKey);

		/// <summary>
		/// Undo changes
		/// </summary>
		public const string UndoChangesKey = nameof(UndoChanges);

		/// <summary>
		/// Undo changes
		/// </summary>
		public static string UndoChanges => GetString(UndoChangesKey);

		/// <summary>
		/// On
		/// </summary>
		public const string XamlStr61Key = nameof(XamlStr61);

		/// <summary>
		/// On
		/// </summary>
		public static string XamlStr61 => GetString(XamlStr61Key);

		/// <summary>
		/// Non system
		/// </summary>
		public const string XamlStr62Key = nameof(XamlStr62);

		/// <summary>
		/// Non system
		/// </summary>
		public static string XamlStr62 => GetString(XamlStr62Key);

		/// <summary>
		/// Vola (max):
		/// </summary>
		public const string XamlStr63Key = nameof(XamlStr63);

		/// <summary>
		/// Vola (max):
		/// </summary>
		public static string XamlStr63 => GetString(XamlStr63Key);

		/// <summary>
		/// Vola (min):
		/// </summary>
		public const string XamlStr64Key = nameof(XamlStr64);

		/// <summary>
		/// Vola (min):
		/// </summary>
		public static string XamlStr64 => GetString(XamlStr64Key);

		/// <summary>
		/// Have a question?
		/// </summary>
		public const string XamlStr66Key = nameof(XamlStr66);

		/// <summary>
		/// Have a question?
		/// </summary>
		public static string XamlStr66 => GetString(XamlStr66Key);

		/// <summary>
		/// Uptrend
		/// </summary>
		public const string XamlStr67Key = nameof(XamlStr67);

		/// <summary>
		/// Uptrend
		/// </summary>
		public static string XamlStr67 => GetString(XamlStr67Key);

		/// <summary>
		/// Order registration time.
		/// </summary>
		public const string XamlStr70Key = nameof(XamlStr70);

		/// <summary>
		/// Order registration time.
		/// </summary>
		public static string XamlStr70 => GetString(XamlStr70Key);

		/// <summary>
		/// Last trade time
		/// </summary>
		public const string XamlStr73Key = nameof(XamlStr73);

		/// <summary>
		/// Last trade time
		/// </summary>
		public static string XamlStr73 => GetString(XamlStr73Key);

		/// <summary>
		/// Last operation time
		/// </summary>
		public const string XamlStr74Key = nameof(XamlStr74);

		/// <summary>
		/// Last operation time
		/// </summary>
		public static string XamlStr74 => GetString(XamlStr74Key);

		/// <summary>
		/// Settings OK.
		/// </summary>
		public const string XamlStr76Key = nameof(XamlStr76);

		/// <summary>
		/// Settings OK.
		/// </summary>
		public static string XamlStr76 => GetString(XamlStr76Key);

		/// <summary>
		/// Paste
		/// </summary>
		public const string PasteKey = nameof(Paste);

		/// <summary>
		/// Paste
		/// </summary>
		public static string Paste => GetString(PasteKey);

		/// <summary>
		/// Auto login
		/// </summary>
		public const string XamlStr78Key = nameof(XamlStr78);

		/// <summary>
		/// Auto login
		/// </summary>
		public static string XamlStr78 => GetString(XamlStr78Key);

		/// <summary>
		/// Select security...
		/// </summary>
		public const string XamlStr79Key = nameof(XamlStr79);

		/// <summary>
		/// Select security...
		/// </summary>
		public static string XamlStr79 => GetString(XamlStr79Key);

		/// <summary>
		/// Security selection
		/// </summary>
		public const string XamlStr80Key = nameof(XamlStr80);

		/// <summary>
		/// Security selection
		/// </summary>
		public static string XamlStr80 => GetString(XamlStr80Key);

		/// <summary>
		/// Portfolio selection
		/// </summary>
		public const string XamlStr81Key = nameof(XamlStr81);

		/// <summary>
		/// Portfolio selection
		/// </summary>
		public static string XamlStr81 => GetString(XamlStr81Key);

		/// <summary>
		/// Selected columns
		/// </summary>
		public const string XamlStr82Key = nameof(XamlStr82);

		/// <summary>
		/// Selected columns
		/// </summary>
		public static string XamlStr82 => GetString(XamlStr82Key);

		/// <summary>
		/// Selected: 0
		/// </summary>
		public const string XamlStr83Key = nameof(XamlStr83);

		/// <summary>
		/// Selected: 0
		/// </summary>
		public static string XamlStr83 => GetString(XamlStr83Key);

		/// <summary>
		/// Select connection
		/// </summary>
		public const string XamlStr84Key = nameof(XamlStr84);

		/// <summary>
		/// Select connection
		/// </summary>
		public static string XamlStr84 => GetString(XamlStr84Key);

		/// <summary>
		/// Show market depth
		/// </summary>
		public const string XamlStr85Key = nameof(XamlStr85);

		/// <summary>
		/// Show market depth
		/// </summary>
		public static string XamlStr85 => GetString(XamlStr85Key);

		/// <summary>
		/// Upload non system ticks
		/// </summary>
		public const string XamlStr86Key = nameof(XamlStr86);

		/// <summary>
		/// Upload non system ticks
		/// </summary>
		public static string XamlStr86 => GetString(XamlStr86Key);

		/// <summary>
		/// Uploaded 0
		/// </summary>
		public const string XamlStr87Key = nameof(XamlStr87);

		/// <summary>
		/// Uploaded 0
		/// </summary>
		public static string XamlStr87 => GetString(XamlStr87Key);

		/// <summary>
		/// Securities search in progress. Wait...
		/// </summary>
		public const string XamlStr91Key = nameof(XamlStr91);

		/// <summary>
		/// Securities search in progress. Wait...
		/// </summary>
		public static string XamlStr91 => GetString(XamlStr91Key);

		/// <summary>
		/// Line alignment
		/// </summary>
		public const string LineAlignmentKey = nameof(LineAlignment);

		/// <summary>
		/// Line alignment
		/// </summary>
		public static string LineAlignment => GetString(LineAlignmentKey);

		/// <summary>
		/// Cut
		/// </summary>
		public const string CutKey = nameof(Cut);

		/// <summary>
		/// Cut
		/// </summary>
		public static string Cut => GetString(CutKey);

		/// <summary>
		/// Register orders by click
		/// </summary>
		public const string XamlStr94Key = nameof(XamlStr94);

		/// <summary>
		/// Register orders by click
		/// </summary>
		public static string XamlStr94 => GetString(XamlStr94Key);

		/// <summary>
		/// Generator (depth)
		/// </summary>
		public const string XamlStr97Key = nameof(XamlStr97);

		/// <summary>
		/// Generator (depth)
		/// </summary>
		public static string XamlStr97 => GetString(XamlStr97Key);

		/// <summary>
		/// Size of market depth. Can be trimmed if size in storage is bigger than specified
		/// </summary>
		public const string XamlStr98Key = nameof(XamlStr98);

		/// <summary>
		/// Size of market depth. Can be trimmed if size in storage is bigger than specified
		/// </summary>
		public static string XamlStr98 => GetString(XamlStr98Key);

		/// <summary>
		/// Year
		/// </summary>
		public const string YearKey = nameof(Year);

		/// <summary>
		/// Year
		/// </summary>
		public static string Year => GetString(YearKey);

		/// <summary>
		/// Speech
		/// </summary>
		public const string SpeechKey = nameof(Speech);

		/// <summary>
		/// Speech
		/// </summary>
		public static string Speech => GetString(SpeechKey);

		/// <summary>
		/// Graphical monitoring
		/// </summary>
		public const string XamlStr106Key = nameof(XamlStr106);

		/// <summary>
		/// Graphical monitoring
		/// </summary>
		public static string XamlStr106 => GetString(XamlStr106Key);

		/// <summary>
		/// Yes
		/// </summary>
		public const string XamlStr108Key = nameof(XamlStr108);

		/// <summary>
		/// Yes
		/// </summary>
		public static string XamlStr108 => GetString(XamlStr108Key);

		/// <summary>
		/// Data
		/// </summary>
		public const string XamlStr109Key = nameof(XamlStr109);

		/// <summary>
		/// Data
		/// </summary>
		public static string XamlStr109 => GetString(XamlStr109Key);

		/// <summary>
		/// Date is not selected
		/// </summary>
		public const string XamlStr111Key = nameof(XamlStr111);

		/// <summary>
		/// Date is not selected
		/// </summary>
		public static string XamlStr111 => GetString(XamlStr111Key);

		/// <summary>
		/// End date of the schedule validity
		/// </summary>
		public const string XamlStr112Key = nameof(XamlStr112);

		/// <summary>
		/// End date of the schedule validity
		/// </summary>
		public static string XamlStr112 => GetString(XamlStr112Key);

		/// <summary>
		/// Last trade date
		/// </summary>
		public const string XamlStr113Key = nameof(XamlStr113);

		/// <summary>
		/// Last trade date
		/// </summary>
		public static string XamlStr113 => GetString(XamlStr113Key);

		/// <summary>
		/// The date until which the schedule is valid
		/// </summary>
		public const string XamlStr115Key = nameof(XamlStr115);

		/// <summary>
		/// The date until which the schedule is valid
		/// </summary>
		public static string XamlStr115 => GetString(XamlStr115Key);

		/// <summary>
		/// Date:
		/// </summary>
		public const string XamlStr116Key = nameof(XamlStr116);

		/// <summary>
		/// Date:
		/// </summary>
		public static string XamlStr116 => GetString(XamlStr116Key);

		/// <summary>
		/// Debug log
		/// </summary>
		public const string XamlStr117Key = nameof(XamlStr117);

		/// <summary>
		/// Debug log
		/// </summary>
		public static string XamlStr117 => GetString(XamlStr117Key);

		/// <summary>
		/// Valid until:
		/// </summary>
		public const string XamlStr120Key = nameof(XamlStr120);

		/// <summary>
		/// Valid until:
		/// </summary>
		public static string XamlStr120 => GetString(XamlStr120Key);

		/// <summary>
		/// Day
		/// </summary>
		public const string XamlStr123Key = nameof(XamlStr123);

		/// <summary>
		/// Day
		/// </summary>
		public static string XamlStr123 => GetString(XamlStr123Key);

		/// <summary>
		/// A day from Monday to Friday falling to the holiday
		/// </summary>
		public const string XamlStr124Key = nameof(XamlStr124);

		/// <summary>
		/// A day from Monday to Friday falling to the holiday
		/// </summary>
		public static string XamlStr124 => GetString(XamlStr124Key);

		/// <summary>
		/// Depo
		/// </summary>
		public const string XamlStr125Key = nameof(XamlStr125);

		/// <summary>
		/// Depo
		/// </summary>
		public static string XamlStr125 => GetString(XamlStr125Key);

		/// <summary>
		/// Details
		/// </summary>
		public const string DetailsKey = nameof(Details);

		/// <summary>
		/// Details
		/// </summary>
		public static string Details => GetString(DetailsKey);

		/// <summary>
		/// Log directory
		/// </summary>
		public const string LogDirectoryKey = nameof(LogDirectory);

		/// <summary>
		/// Log directory
		/// </summary>
		public static string LogDirectory => GetString(LogDirectoryKey);

		/// <summary>
		/// Settings directory
		/// </summary>
		public const string SettingsDirectoryKey = nameof(SettingsDirectory);

		/// <summary>
		/// Settings directory
		/// </summary>
		public static string SettingsDirectory => GetString(SettingsDirectoryKey);

		/// <summary>
		/// To continue the E*TRADE authorization process it is necessary to get verification code on the official E*TRADE website and copy it to the text field below.
		/// </summary>
		public const string XamlStr131Key = nameof(XamlStr131);

		/// <summary>
		/// To continue the E*TRADE authorization process it is necessary to get verification code on the official E*TRADE website and copy it to the text field below.
		/// </summary>
		public static string XamlStr131 => GetString(XamlStr131Key);

		/// <summary>
		/// Change mapping...
		/// </summary>
		public const string XamlStr135Key = nameof(XamlStr135);

		/// <summary>
		/// Change mapping...
		/// </summary>
		public static string XamlStr135 => GetString(XamlStr135Key);

		/// <summary>
		/// Add tools
		/// </summary>
		public const string XamlStr136Key = nameof(XamlStr136);

		/// <summary>
		/// Add tools
		/// </summary>
		public static string XamlStr136 => GetString(XamlStr136Key);

		/// <summary>
		/// Add security...
		/// </summary>
		public const string XamlStr137Key = nameof(XamlStr137);

		/// <summary>
		/// Add security...
		/// </summary>
		public static string XamlStr137 => GetString(XamlStr137Key);

		/// <summary>
		/// Add securities
		/// </summary>
		public const string XamlStr138Key = nameof(XamlStr138);

		/// <summary>
		/// Add securities
		/// </summary>
		public static string XamlStr138 => GetString(XamlStr138Key);

		/// <summary>
		/// Add sources
		/// </summary>
		public const string XamlStr140Key = nameof(XamlStr140);

		/// <summary>
		/// Add sources
		/// </summary>
		public static string XamlStr140 => GetString(XamlStr140Key);

		/// <summary>
		/// Add new backtesting
		/// </summary>
		public const string XamlStr141Key = nameof(XamlStr141);

		/// <summary>
		/// Add new backtesting
		/// </summary>
		public static string XamlStr141 => GetString(XamlStr141Key);

		/// <summary>
		/// Add axis
		/// </summary>
		public const string XamlStr142Key = nameof(XamlStr142);

		/// <summary>
		/// Add axis
		/// </summary>
		public static string XamlStr142 => GetString(XamlStr142Key);

		/// <summary>
		/// Add panel
		/// </summary>
		public const string XamlStr143Key = nameof(XamlStr143);

		/// <summary>
		/// Add panel
		/// </summary>
		public static string XamlStr143 => GetString(XamlStr143Key);

		/// <summary>
		/// Add connection
		/// </summary>
		public const string XamlStr144Key = nameof(XamlStr144);

		/// <summary>
		/// Add connection
		/// </summary>
		public static string XamlStr144 => GetString(XamlStr144Key);

		/// <summary>
		/// Add rule
		/// </summary>
		public const string XamlStr145Key = nameof(XamlStr145);

		/// <summary>
		/// Add rule
		/// </summary>
		public static string XamlStr145 => GetString(XamlStr145Key);

		/// <summary>
		/// Add breakpoint
		/// </summary>
		public const string XamlStr146Key = nameof(XamlStr146);

		/// <summary>
		/// Add breakpoint
		/// </summary>
		public static string XamlStr146 => GetString(XamlStr146Key);

		/// <summary>
		/// Add:
		/// </summary>
		public const string XamlStr147Key = nameof(XamlStr147);

		/// <summary>
		/// Add:
		/// </summary>
		public static string XamlStr147 => GetString(XamlStr147Key);

		/// <summary>
		/// Documentation
		/// </summary>
		public const string XamlStr148Key = nameof(XamlStr148);

		/// <summary>
		/// Documentation
		/// </summary>
		public static string XamlStr148 => GetString(XamlStr148Key);

		/// <summary>
		/// Extra references
		/// </summary>
		public const string XamlStr151Key = nameof(XamlStr151);

		/// <summary>
		/// Extra references
		/// </summary>
		public static string XamlStr151 => GetString(XamlStr151Key);

		/// <summary>
		/// Extra criteria
		/// </summary>
		public const string XamlStr152Key = nameof(XamlStr152);

		/// <summary>
		/// Extra criteria
		/// </summary>
		public static string XamlStr152 => GetString(XamlStr152Key);

		/// <summary>
		/// Available columns
		/// </summary>
		public const string XamlStr155Key = nameof(XamlStr155);

		/// <summary>
		/// Available columns
		/// </summary>
		public static string XamlStr155 => GetString(XamlStr155Key);

		/// <summary>
		/// Other
		/// </summary>
		public const string XamlStr157Key = nameof(XamlStr157);

		/// <summary>
		/// Other
		/// </summary>
		public static string XamlStr157 => GetString(XamlStr157Key);

		/// <summary>
		/// Forgot password?
		/// </summary>
		public const string XamlStr159Key = nameof(XamlStr159);

		/// <summary>
		/// Forgot password?
		/// </summary>
		public static string XamlStr159 => GetString(XamlStr159Key);

		/// <summary>
		/// Title:
		/// </summary>
		public const string XamlStr161Key = nameof(XamlStr161);

		/// <summary>
		/// Title:
		/// </summary>
		public static string XamlStr161 => GetString(XamlStr161Key);

		/// <summary>
		/// Load all securities:
		/// </summary>
		public const string XamlStr162Key = nameof(XamlStr162);

		/// <summary>
		/// Load all securities:
		/// </summary>
		public static string XamlStr162 => GetString(XamlStr162Key);

		/// <summary>
		/// Load layout...
		/// </summary>
		public const string XamlStr163Key = nameof(XamlStr163);

		/// <summary>
		/// Load layout...
		/// </summary>
		public static string XamlStr163 => GetString(XamlStr163Key);

		/// <summary>
		/// Boot test
		/// </summary>
		public const string XamlStr164Key = nameof(XamlStr164);

		/// <summary>
		/// Boot test
		/// </summary>
		public static string XamlStr164 => GetString(XamlStr164Key);

		/// <summary>
		/// Ask message on forum
		/// </summary>
		public const string XamlStr165Key = nameof(XamlStr165);

		/// <summary>
		/// Ask message on forum
		/// </summary>
		public static string XamlStr165 => GetString(XamlStr165Key);

		/// <summary>
		/// Tasks
		/// </summary>
		public const string XamlStr166Key = nameof(XamlStr166);

		/// <summary>
		/// Tasks
		/// </summary>
		public static string XamlStr166 => GetString(XamlStr166Key);

		/// <summary>
		/// Latency (cancellation)
		/// </summary>
		public const string XamlStr168Key = nameof(XamlStr168);

		/// <summary>
		/// Latency (cancellation)
		/// </summary>
		public static string XamlStr168 => GetString(XamlStr168Key);

		/// <summary>
		/// Latency (registration)
		/// </summary>
		public const string XamlStr169Key = nameof(XamlStr169);

		/// <summary>
		/// Latency (registration)
		/// </summary>
		public static string XamlStr169 => GetString(XamlStr169Key);

		/// <summary>
		/// Close
		/// </summary>
		public const string XamlStr171Key = nameof(XamlStr171);

		/// <summary>
		/// Close
		/// </summary>
		public static string XamlStr171 => GetString(XamlStr171Key);

		/// <summary>
		/// Close position
		/// </summary>
		public const string XamlStr173Key = nameof(XamlStr173);

		/// <summary>
		/// Close position
		/// </summary>
		public static string XamlStr173 => GetString(XamlStr173Key);

		/// <summary>
		/// Change order
		/// </summary>
		public const string XamlStr174Key = nameof(XamlStr174);

		/// <summary>
		/// Change order
		/// </summary>
		public static string XamlStr174 => GetString(XamlStr174Key);

		/// <summary>
		/// Sign up for the next algotrading course
		/// </summary>
		public const string XamlStr175Key = nameof(XamlStr175);

		/// <summary>
		/// Sign up for the next algotrading course
		/// </summary>
		public static string XamlStr175 => GetString(XamlStr175Key);

		/// <summary>
		/// Remember choice (start selected configuration automatically)
		/// </summary>
		public const string XamlStr176Key = nameof(XamlStr176);

		/// <summary>
		/// Remember choice (start selected configuration automatically)
		/// </summary>
		public static string XamlStr176 => GetString(XamlStr176Key);

		/// <summary>
		/// Request all securities
		/// </summary>
		public const string XamlStr177Key = nameof(XamlStr177);

		/// <summary>
		/// Request all securities
		/// </summary>
		public static string XamlStr177 => GetString(XamlStr177Key);

		/// <summary>
		/// Launch are available in 32- or 64- bit modes.
		/// </summary>
		public const string XamlStr178Key = nameof(XamlStr178);

		/// <summary>
		/// Launch are available in 32- or 64- bit modes.
		/// </summary>
		public static string XamlStr178 => GetString(XamlStr178Key);

		/// <summary>
		/// Runned Quiks:
		/// </summary>
		public const string XamlStr180Key = nameof(XamlStr180);

		/// <summary>
		/// Runned Quiks:
		/// </summary>
		public static string XamlStr180 => GetString(XamlStr180Key);

		/// <summary>
		/// Order fail
		/// </summary>
		public const string XamlStr182Key = nameof(XamlStr182);

		/// <summary>
		/// Order fail
		/// </summary>
		public static string XamlStr182 => GetString(XamlStr182Key);

		/// <summary>
		/// Value (S#)
		/// </summary>
		public const string XamlStr186Key = nameof(XamlStr186);

		/// <summary>
		/// Value (S#)
		/// </summary>
		public static string XamlStr186 => GetString(XamlStr186Key);

		/// <summary>
		/// Value (файл)
		/// </summary>
		public const string XamlStr187Key = nameof(XamlStr187);

		/// <summary>
		/// Value (файл)
		/// </summary>
		public static string XamlStr187 => GetString(XamlStr187Key);

		/// <summary>
		/// Loading data. Wait...
		/// </summary>
		public const string XamlStr189Key = nameof(XamlStr189);

		/// <summary>
		/// Loading data. Wait...
		/// </summary>
		public static string XamlStr189 => GetString(XamlStr189Key);

		/// <summary>
		/// From OL
		/// </summary>
		public const string XamlStr191Key = nameof(XamlStr191);

		/// <summary>
		/// From OL
		/// </summary>
		public static string XamlStr191 => GetString(XamlStr191Key);

		/// <summary>
		/// From composite element
		/// </summary>
		public const string XamlStr192Key = nameof(XamlStr192);

		/// <summary>
		/// From composite element
		/// </summary>
		public static string XamlStr192 => GetString(XamlStr192Key);

		/// <summary>
		/// From
		/// </summary>
		public const string XamlStr193Key = nameof(XamlStr193);

		/// <summary>
		/// From
		/// </summary>
		public static string XamlStr193 => GetString(XamlStr193Key);

		/// <summary>
		/// Change orders with single transaction
		/// </summary>
		public const string XamlStr196Key = nameof(XamlStr196);

		/// <summary>
		/// Change orders with single transaction
		/// </summary>
		public static string XamlStr196 => GetString(XamlStr196Key);

		/// <summary>
		/// Price change:
		/// </summary>
		public const string XamlStr197Key = nameof(XamlStr197);

		/// <summary>
		/// Price change:
		/// </summary>
		public static string XamlStr197 => GetString(XamlStr197Key);

		/// <summary>
		/// Change
		/// </summary>
		public const string ChangeKey = nameof(Change);

		/// <summary>
		/// Change
		/// </summary>
		public static string Change => GetString(ChangeKey);

		/// <summary>
		/// Import
		/// </summary>
		public const string ImportKey = nameof(Import);

		/// <summary>
		/// Import
		/// </summary>
		public static string Import => GetString(ImportKey);

		/// <summary>
		/// Market depth generation interval in ms.
		/// </summary>
		public const string XamlStr210Key = nameof(XamlStr210);

		/// <summary>
		/// Market depth generation interval in ms.
		/// </summary>
		public static string XamlStr210 => GetString(XamlStr210Key);

		/// <summary>
		/// Exchange info
		/// </summary>
		public const string ExchangeInfoKey = nameof(ExchangeInfo);

		/// <summary>
		/// Exchange info
		/// </summary>
		public static string ExchangeInfo => GetString(ExchangeInfoKey);

		/// <summary>
		/// Board info
		/// </summary>
		public const string BoardInfoKey = nameof(BoardInfo);

		/// <summary>
		/// Board info
		/// </summary>
		public static string BoardInfo => GetString(BoardInfoKey);

		/// <summary>
		/// Find
		/// </summary>
		public const string FindKey = nameof(Find);

		/// <summary>
		/// Find
		/// </summary>
		public static string Find => GetString(FindKey);

		/// <summary>
		/// Exclude:
		/// </summary>
		public const string XamlStr215Key = nameof(XamlStr215);

		/// <summary>
		/// Exclude:
		/// </summary>
		public static string XamlStr215 => GetString(XamlStr215Key);

		/// <summary>
		/// Use virtual portfolio
		/// </summary>
		public const string XamlStr216Key = nameof(XamlStr216);

		/// <summary>
		/// Use virtual portfolio
		/// </summary>
		public static string XamlStr216 => GetString(XamlStr216Key);

		/// <summary>
		/// Use locally:
		/// </summary>
		public const string XamlStr217Key = nameof(XamlStr217);

		/// <summary>
		/// Use locally:
		/// </summary>
		public static string XamlStr217 => GetString(XamlStr217Key);

		/// <summary>
		/// Use:
		/// </summary>
		public const string XamlStr218Key = nameof(XamlStr218);

		/// <summary>
		/// Use:
		/// </summary>
		public static string XamlStr218 => GetString(XamlStr218Key);

		/// <summary>
		/// Historical candles
		/// </summary>
		public const string XamlStr219Key = nameof(XamlStr219);

		/// <summary>
		/// Historical candles
		/// </summary>
		public static string XamlStr219 => GetString(XamlStr219Key);

		/// <summary>
		/// Historical ticks
		/// </summary>
		public const string XamlStr220Key = nameof(XamlStr220);

		/// <summary>
		/// Historical ticks
		/// </summary>
		public static string XamlStr220 => GetString(XamlStr220Key);

		/// <summary>
		/// Candle history...
		/// </summary>
		public const string XamlStr222Key = nameof(XamlStr222);

		/// <summary>
		/// Candle history...
		/// </summary>
		public static string XamlStr222 => GetString(XamlStr222Key);

		/// <summary>
		/// Tick history...
		/// </summary>
		public const string XamlStr223Key = nameof(XamlStr223);

		/// <summary>
		/// Tick history...
		/// </summary>
		public static string XamlStr223 => GetString(XamlStr223Key);

		/// <summary>
		/// The source does not support security search on the exchange. The search will be carried out locally.
		/// </summary>
		public const string XamlStr226Key = nameof(XamlStr226);

		/// <summary>
		/// The source does not support security search on the exchange. The search will be carried out locally.
		/// </summary>
		public static string XamlStr226 => GetString(XamlStr226Key);

		/// <summary>
		/// Sources
		/// </summary>
		public const string XamlStr227Key = nameof(XamlStr227);

		/// <summary>
		/// Sources
		/// </summary>
		public static string XamlStr227 => GetString(XamlStr227Key);

		/// <summary>
		/// Underlying securities
		/// </summary>
		public const string XamlStr228Key = nameof(XamlStr228);

		/// <summary>
		/// Underlying securities
		/// </summary>
		public static string XamlStr228 => GetString(XamlStr228Key);

		/// <summary>
		/// To output
		/// </summary>
		public const string XamlStr229Key = nameof(XamlStr229);

		/// <summary>
		/// To output
		/// </summary>
		public static string XamlStr229 => GetString(XamlStr229Key);

		/// <summary>
		/// Next element
		/// </summary>
		public const string XamlStr230Key = nameof(XamlStr230);

		/// <summary>
		/// Next element
		/// </summary>
		public static string XamlStr230 => GetString(XamlStr230Key);

		/// <summary>
		/// Category
		/// </summary>
		public const string XamlStr233Key = nameof(XamlStr233);

		/// <summary>
		/// Category
		/// </summary>
		public static string XamlStr233 => GetString(XamlStr233Key);

		/// <summary>
		/// Key:
		/// </summary>
		public const string XamlStr234Key = nameof(XamlStr234);

		/// <summary>
		/// Key:
		/// </summary>
		public static string XamlStr234 => GetString(XamlStr234Key);

		/// <summary>
		/// Code IB:
		/// </summary>
		public const string XamlStr236Key = nameof(XamlStr236);

		/// <summary>
		/// Code IB:
		/// </summary>
		public static string XamlStr236 => GetString(XamlStr236Key);

		/// <summary>
		/// Bid count
		/// </summary>
		public const string XamlStr239Key = nameof(XamlStr239);

		/// <summary>
		/// Bid count
		/// </summary>
		public static string XamlStr239 => GetString(XamlStr239Key);

		/// <summary>
		/// Order count
		/// </summary>
		public const string OrderCountKey = nameof(OrderCount);

		/// <summary>
		/// Order count
		/// </summary>
		public static string OrderCount => GetString(OrderCountKey);

		/// <summary>
		/// Order count per sec.
		/// </summary>
		public const string XamlStr241Key = nameof(XamlStr241);

		/// <summary>
		/// Order count per sec.
		/// </summary>
		public static string XamlStr241 => GetString(XamlStr241Key);

		/// <summary>
		/// Log count
		/// </summary>
		public const string XamlStr242Key = nameof(XamlStr242);

		/// <summary>
		/// Log count
		/// </summary>
		public static string XamlStr242 => GetString(XamlStr242Key);

		/// <summary>
		/// Log count per sec.
		/// </summary>
		public const string XamlStr243Key = nameof(XamlStr243);

		/// <summary>
		/// Log count per sec.
		/// </summary>
		public static string XamlStr243 => GetString(XamlStr243Key);

		/// <summary>
		/// Ask count
		/// </summary>
		public const string XamlStr244Key = nameof(XamlStr244);

		/// <summary>
		/// Ask count
		/// </summary>
		public static string XamlStr244 => GetString(XamlStr244Key);

		/// <summary>
		/// Tick count
		/// </summary>
		public const string XamlStr245Key = nameof(XamlStr245);

		/// <summary>
		/// Tick count
		/// </summary>
		public static string XamlStr245 => GetString(XamlStr245Key);

		/// <summary>
		/// Tick count per sec.
		/// </summary>
		public const string XamlStr246Key = nameof(XamlStr246);

		/// <summary>
		/// Tick count per sec.
		/// </summary>
		public static string XamlStr246 => GetString(XamlStr246Key);

		/// <summary>
		/// Order count
		/// </summary>
		public const string XamlStr248Key = nameof(XamlStr248);

		/// <summary>
		/// Order count
		/// </summary>
		public static string XamlStr248 => GetString(XamlStr248Key);

		/// <summary>
		/// Commission
		/// </summary>
		public const string XamlStr249Key = nameof(XamlStr249);

		/// <summary>
		/// Commission
		/// </summary>
		public static string XamlStr249 => GetString(XamlStr249Key);

		/// <summary>
		/// Components
		/// </summary>
		public const string XamlStr252Key = nameof(XamlStr252);

		/// <summary>
		/// Components
		/// </summary>
		public static string XamlStr252 => GetString(XamlStr252Key);

		/// <summary>
		/// Strategy components
		/// </summary>
		public const string XamlStr253Key = nameof(XamlStr253);

		/// <summary>
		/// Strategy components
		/// </summary>
		public static string XamlStr253 => GetString(XamlStr253Key);

		/// <summary>
		/// End:
		/// </summary>
		public const string XamlStr254Key = nameof(XamlStr254);

		/// <summary>
		/// End:
		/// </summary>
		public static string XamlStr254 => GetString(XamlStr254Key);

		/// <summary>
		/// Configurations
		/// </summary>
		public const string XamlStr255Key = nameof(XamlStr255);

		/// <summary>
		/// Configurations
		/// </summary>
		public static string XamlStr255 => GetString(XamlStr255Key);

		/// <summary>
		/// Copy
		/// </summary>
		public const string CopyKey = nameof(Copy);

		/// <summary>
		/// Copy
		/// </summary>
		public static string Copy => GetString(CopyKey);

		/// <summary>
		/// Basket portfolio
		/// </summary>
		public const string XamlStr257Key = nameof(XamlStr257);

		/// <summary>
		/// Basket portfolio
		/// </summary>
		public static string XamlStr257 => GetString(XamlStr257Key);

		/// <summary>
		/// Buy by market
		/// </summary>
		public const string XamlStr260Key = nameof(XamlStr260);

		/// <summary>
		/// Buy by market
		/// </summary>
		public static string XamlStr260 => GetString(XamlStr260Key);

		/// <summary>
		/// Edu
		/// </summary>
		public const string EduKey = nameof(Edu);

		/// <summary>
		/// Edu
		/// </summary>
		public static string Edu => GetString(EduKey);

		/// <summary>
		/// Level 1
		/// </summary>
		public const string Level1Key = nameof(Level1);

		/// <summary>
		/// Level 1
		/// </summary>
		public static string Level1 => GetString(Level1Key);

		/// <summary>
		/// T+ limit
		/// </summary>
		public const string TPlusLimitKey = nameof(TPlusLimit);

		/// <summary>
		/// T+ limit
		/// </summary>
		public static string TPlusLimit => GetString(TPlusLimitKey);

		/// <summary>
		/// License
		/// </summary>
		public const string LicenseKey = nameof(License);

		/// <summary>
		/// License
		/// </summary>
		public static string License => GetString(LicenseKey);

		/// <summary>
		/// License StockSharp
		/// </summary>
		public const string LicenseStockSharpKey = nameof(LicenseStockSharp);

		/// <summary>
		/// License StockSharp
		/// </summary>
		public static string LicenseStockSharp => GetString(LicenseStockSharpKey);

		/// <summary>
		/// Log
		/// </summary>
		public const string LogKey = nameof(Log);

		/// <summary>
		/// Log
		/// </summary>
		public static string Log => GetString(LogKey);

		/// <summary>
		/// Order log
		/// </summary>
		public const string OrderLogKey = nameof(OrderLog);

		/// <summary>
		/// Order log
		/// </summary>
		public static string OrderLog => GetString(OrderLogKey);

		/// <summary>
		/// Logs (has errors)
		/// </summary>
		public const string LogsHasErrorsKey = nameof(LogsHasErrors);

		/// <summary>
		/// Logs (has errors)
		/// </summary>
		public static string LogsHasErrors => GetString(LogsHasErrorsKey);

		/// <summary>
		/// StockSharp email
		/// </summary>
		public const string StockSharpEmailKey = nameof(StockSharpEmail);

		/// <summary>
		/// StockSharp email
		/// </summary>
		public static string StockSharpEmail => GetString(StockSharpEmailKey);

		/// <summary>
		/// Credentials to StockSharp.com
		/// </summary>
		public const string CredentialsStockSharpComKey = nameof(CredentialsStockSharpCom);

		/// <summary>
		/// Credentials to StockSharp.com
		/// </summary>
		public static string CredentialsStockSharpCom => GetString(CredentialsStockSharpComKey);

		/// <summary>
		/// Best bid price or a trade by specified price or higher.
		/// </summary>
		public const string XamlStr284Key = nameof(XamlStr284);

		/// <summary>
		/// Best bid price or a trade by specified price or higher.
		/// </summary>
		public static string XamlStr284 => GetString(XamlStr284Key);

		/// <summary>
		/// Best ask price or a trade by specified price or lower.
		/// </summary>
		public const string XamlStr286Key = nameof(XamlStr286);

		/// <summary>
		/// Best ask price or a trade by specified price or lower.
		/// </summary>
		public static string XamlStr286 => GetString(XamlStr286Key);

		/// <summary>
		/// Lci Viewer
		/// </summary>
		public const string LciViewerKey = nameof(LciViewer);

		/// <summary>
		/// Lci Viewer
		/// </summary>
		public static string LciViewer => GetString(LciViewerKey);

		/// <summary>
		/// Max depth order book generation
		/// </summary>
		public const string XamlStr291Key = nameof(XamlStr291);

		/// <summary>
		/// Max depth order book generation
		/// </summary>
		public static string XamlStr291 => GetString(XamlStr291Key);

		/// <summary>
		/// Max
		/// </summary>
		public const string XamlStr292Key = nameof(XamlStr292);

		/// <summary>
		/// Max
		/// </summary>
		public static string XamlStr292 => GetString(XamlStr292Key);

		/// <summary>
		/// Max quote volume in generated depth
		/// </summary>
		public const string XamlStr293Key = nameof(XamlStr293);

		/// <summary>
		/// Max quote volume in generated depth
		/// </summary>
		public static string XamlStr293 => GetString(XamlStr293Key);

		/// <summary>
		/// MarginCall
		/// </summary>
		public const string XamlStr297Key = nameof(XamlStr297);

		/// <summary>
		/// MarginCall
		/// </summary>
		public static string XamlStr297 => GetString(XamlStr297Key);

		/// <summary>
		/// Scale:
		/// </summary>
		public const string XamlStr300Key = nameof(XamlStr300);

		/// <summary>
		/// Scale:
		/// </summary>
		public static string XamlStr300 => GetString(XamlStr300Key);

		/// <summary>
		/// Melody
		/// </summary>
		public const string XamlStr301Key = nameof(XamlStr301);

		/// <summary>
		/// Melody
		/// </summary>
		public static string XamlStr301 => GetString(XamlStr301Key);

		/// <summary>
		/// Menu
		/// </summary>
		public const string XamlStr302Key = nameof(XamlStr302);

		/// <summary>
		/// Menu
		/// </summary>
		public static string XamlStr302 => GetString(XamlStr302Key);

		/// <summary>
		/// Month
		/// </summary>
		public const string MonthKey = nameof(Month);

		/// <summary>
		/// Month
		/// </summary>
		public static string Month => GetString(MonthKey);

		/// <summary>
		/// Min
		/// </summary>
		public const string MinKey = nameof(Min);

		/// <summary>
		/// Min
		/// </summary>
		public static string Min => GetString(MinKey);

		/// <summary>
		/// Minimum
		/// </summary>
		public const string MinimumKey = nameof(Minimum);

		/// <summary>
		/// Minimum
		/// </summary>
		public static string Minimum => GetString(MinimumKey);

		/// <summary>
		/// Black model
		/// </summary>
		public const string BlackModelKey = nameof(BlackModel);

		/// <summary>
		/// Black model
		/// </summary>
		public static string BlackModel => GetString(BlackModelKey);

		/// <summary>
		/// Current date modifier
		/// </summary>
		public const string XamlStr308Key = nameof(XamlStr308);

		/// <summary>
		/// Current date modifier
		/// </summary>
		public static string XamlStr308 => GetString(XamlStr308Key);

		/// <summary>
		/// Price modifier of the underlying asset
		/// </summary>
		public const string XamlStr309Key = nameof(XamlStr309);

		/// <summary>
		/// Price modifier of the underlying asset
		/// </summary>
		public static string XamlStr309 => GetString(XamlStr309Key);

		/// <summary>
		/// Modified current date
		/// </summary>
		public const string XamlStr310Key = nameof(XamlStr310);

		/// <summary>
		/// Modified current date
		/// </summary>
		public static string XamlStr310 => GetString(XamlStr310Key);

		/// <summary>
		/// Own trades
		/// </summary>
		public const string MyTradesKey = nameof(MyTrades);

		/// <summary>
		/// Own trades
		/// </summary>
		public static string MyTrades => GetString(MyTradesKey);

		/// <summary>
		/// Work monitoring
		/// </summary>
		public const string XamlStr313Key = nameof(XamlStr313);

		/// <summary>
		/// Work monitoring
		/// </summary>
		public static string XamlStr313 => GetString(XamlStr313Key);

		/// <summary>
		/// Press the button to save new exchange
		/// </summary>
		public const string XamlStr314Key = nameof(XamlStr314);

		/// <summary>
		/// Press the button to save new exchange
		/// </summary>
		public static string XamlStr314 => GetString(XamlStr314Key);

		/// <summary>
		/// Press the button to save new exchange board
		/// </summary>
		public const string XamlStr315Key = nameof(XamlStr315);

		/// <summary>
		/// Press the button to save new exchange board
		/// </summary>
		public static string XamlStr315 => GetString(XamlStr315Key);

		/// <summary>
		/// Name (short)
		/// </summary>
		public const string XamlStr317Key = nameof(XamlStr317);

		/// <summary>
		/// Name (short)
		/// </summary>
		public static string XamlStr317 => GetString(XamlStr317Key);

		/// <summary>
		/// Highest bid
		/// </summary>
		public const string XamlStr320Key = nameof(XamlStr320);

		/// <summary>
		/// Highest bid
		/// </summary>
		public static string XamlStr320 => GetString(XamlStr320Key);

		/// <summary>
		/// Lowest ask
		/// </summary>
		public const string XamlStr323Key = nameof(XamlStr323);

		/// <summary>
		/// Lowest ask
		/// </summary>
		public static string XamlStr323 => GetString(XamlStr323Key);

		/// <summary>
		/// Find security
		/// </summary>
		public const string XamlStr324Key = nameof(XamlStr324);

		/// <summary>
		/// Find security
		/// </summary>
		public static string XamlStr324 => GetString(XamlStr324Key);

		/// <summary>
		/// Find securities:
		/// </summary>
		public const string XamlStr325Key = nameof(XamlStr325);

		/// <summary>
		/// Find securities:
		/// </summary>
		public static string XamlStr325 => GetString(XamlStr325Key);

		/// <summary>
		/// Commission settings
		/// </summary>
		public const string CommissionSettingsKey = nameof(CommissionSettings);

		/// <summary>
		/// Commission settings
		/// </summary>
		public static string CommissionSettings => GetString(CommissionSettingsKey);

		/// <summary>
		/// Risk settings
		/// </summary>
		public const string RiskSettingsKey = nameof(RiskSettings);

		/// <summary>
		/// Risk settings
		/// </summary>
		public static string RiskSettings => GetString(RiskSettingsKey);

		/// <summary>
		/// Mapping configuration for portfolios and connections
		/// </summary>
		public const string XamlStr332Key = nameof(XamlStr332);

		/// <summary>
		/// Mapping configuration for portfolios and connections
		/// </summary>
		public static string XamlStr332 => GetString(XamlStr332Key);

		/// <summary>
		/// Network settings
		/// </summary>
		public const string NetworkSettingsKey = nameof(NetworkSettings);

		/// <summary>
		/// Network settings
		/// </summary>
		public static string NetworkSettings => GetString(NetworkSettingsKey);

		/// <summary>
		/// Notification settings
		/// </summary>
		public const string NotificationSettingsKey = nameof(NotificationSettings);

		/// <summary>
		/// Notification settings
		/// </summary>
		public static string NotificationSettings => GetString(NotificationSettingsKey);

		/// <summary>
		/// Start time
		/// </summary>
		public const string StartTimeKey = nameof(StartTime);

		/// <summary>
		/// Start time
		/// </summary>
		public static string StartTime => GetString(StartTimeKey);

		/// <summary>
		/// Begin:
		/// </summary>
		public const string XamlStr341Key = nameof(XamlStr341);

		/// <summary>
		/// Begin:
		/// </summary>
		public static string XamlStr341 => GetString(XamlStr341Key);

		/// <summary>
		/// Begin
		/// </summary>
		public const string XamlStr342Key = nameof(XamlStr342);

		/// <summary>
		/// Begin
		/// </summary>
		public static string XamlStr342 => GetString(XamlStr342Key);

		/// <summary>
		/// Start drawing chart for the security
		/// </summary>
		public const string XamlStr343Key = nameof(XamlStr343);

		/// <summary>
		/// Start drawing chart for the security
		/// </summary>
		public static string XamlStr343 => GetString(XamlStr343Key);

		/// <summary>
		/// No data type is selected.
		/// </summary>
		public const string XamlStr344Key = nameof(XamlStr344);

		/// <summary>
		/// No data type is selected.
		/// </summary>
		public static string XamlStr344 => GetString(XamlStr344Key);

		/// <summary>
		/// Do not build
		/// </summary>
		public const string NotBuildKey = nameof(NotBuild);

		/// <summary>
		/// Do not build
		/// </summary>
		public static string NotBuild => GetString(NotBuildKey);

		/// <summary>
		/// New algo-order
		/// </summary>
		public const string NewAlgoOrderKey = nameof(NewAlgoOrder);

		/// <summary>
		/// New algo-order
		/// </summary>
		public static string NewAlgoOrder => GetString(NewAlgoOrderKey);

		/// <summary>
		/// New order
		/// </summary>
		public const string NewOrderKey = nameof(NewOrder);

		/// <summary>
		/// New order
		/// </summary>
		public static string NewOrder => GetString(NewOrderKey);

		/// <summary>
		/// New stop-order
		/// </summary>
		public const string NewStopOrderKey = nameof(NewStopOrder);

		/// <summary>
		/// New stop-order
		/// </summary>
		public static string NewStopOrder => GetString(NewStopOrderKey);

		/// <summary>
		/// New
		/// </summary>
		public const string XamlStr355Key = nameof(XamlStr355);

		/// <summary>
		/// New
		/// </summary>
		public static string XamlStr355 => GetString(XamlStr355Key);

		/// <summary>
		/// New connection
		/// </summary>
		public const string XamlStr356Key = nameof(XamlStr356);

		/// <summary>
		/// New connection
		/// </summary>
		public static string XamlStr356 => GetString(XamlStr356Key);

		/// <summary>
		/// New:
		/// </summary>
		public const string XamlStr357Key = nameof(XamlStr357);

		/// <summary>
		/// New:
		/// </summary>
		public static string XamlStr357 => GetString(XamlStr357Key);

		/// <summary>
		/// New password
		/// </summary>
		public const string XamlStr360Key = nameof(XamlStr360);

		/// <summary>
		/// New password
		/// </summary>
		public static string XamlStr360 => GetString(XamlStr360Key);

		/// <summary>
		/// New test
		/// </summary>
		public const string XamlStr361Key = nameof(XamlStr361);

		/// <summary>
		/// New test
		/// </summary>
		public static string XamlStr361 => GetString(XamlStr361Key);

		/// <summary>
		/// Not registered?
		/// </summary>
		public const string IsRegisteredKey = nameof(IsRegistered);

		/// <summary>
		/// Not registered?
		/// </summary>
		public static string IsRegistered => GetString(IsRegisteredKey);

		/// <summary>
		/// Id (board)
		/// </summary>
		public const string XamlStr365Key = nameof(XamlStr365);

		/// <summary>
		/// Id (board)
		/// </summary>
		public static string XamlStr365 => GetString(XamlStr365Key);

		/// <summary>
		/// Margin is higher than specified.
		/// </summary>
		public const string XamlStr368Key = nameof(XamlStr368);

		/// <summary>
		/// Margin is higher than specified.
		/// </summary>
		public static string XamlStr368 => GetString(XamlStr368Key);

		/// <summary>
		/// Margin is lower than specified.
		/// </summary>
		public const string XamlStr369Key = nameof(XamlStr369);

		/// <summary>
		/// Margin is lower than specified.
		/// </summary>
		public static string XamlStr369 => GetString(XamlStr369Key);

		/// <summary>
		/// Overview:
		/// </summary>
		public const string XamlStr370Key = nameof(XamlStr370);

		/// <summary>
		/// Overview:
		/// </summary>
		public static string XamlStr370 => GetString(XamlStr370Key);

		/// <summary>
		/// Overview area
		/// </summary>
		public const string OverviewAreaKey = nameof(OverviewArea);

		/// <summary>
		/// Overview area
		/// </summary>
		public static string OverviewArea => GetString(OverviewAreaKey);

		/// <summary>
		/// Obfuscate:
		/// </summary>
		public const string ObfuscateKey = nameof(Obfuscate);

		/// <summary>
		/// Obfuscate:
		/// </summary>
		public static string Obfuscate => GetString(ObfuscateKey);

		/// <summary>
		/// Join
		/// </summary>
		public const string JoinKey = nameof(Join);

		/// <summary>
		/// Join
		/// </summary>
		public static string Join => GetString(JoinKey);

		/// <summary>
		/// Merge selected elements into a composite element
		/// </summary>
		public const string XamlStr376Key = nameof(XamlStr376);

		/// <summary>
		/// Merge selected elements into a composite element
		/// </summary>
		public static string XamlStr376 => GetString(XamlStr376Key);

		/// <summary>
		/// Last trade volume
		/// </summary>
		public const string XamlStr382Key = nameof(XamlStr382);

		/// <summary>
		/// Last trade volume
		/// </summary>
		public static string XamlStr382 => GetString(XamlStr382Key);

		/// <summary>
		/// OK
		/// </summary>
		public const string OKKey = nameof(OK);

		/// <summary>
		/// OK
		/// </summary>
		public static string OK => GetString(OKKey);

		/// <summary>
		/// Window
		/// </summary>
		public const string WindowKey = nameof(Window);

		/// <summary>
		/// Window
		/// </summary>
		public static string Window => GetString(WindowKey);

		/// <summary>
		/// End time
		/// </summary>
		public const string XamlStr387Key = nameof(XamlStr387);

		/// <summary>
		/// End time
		/// </summary>
		public static string XamlStr387 => GetString(XamlStr387Key);

		/// <summary>
		/// OL
		/// </summary>
		public const string OrderLogOfKey = nameof(OrderLogOf);

		/// <summary>
		/// OL
		/// </summary>
		public static string OrderLogOf => GetString(OrderLogOfKey);

		/// <summary>
		/// Online documentation
		/// </summary>
		public const string OnlineDocKey = nameof(OnlineDoc);

		/// <summary>
		/// Online documentation
		/// </summary>
		public static string OnlineDoc => GetString(OnlineDocKey);

		/// <summary>
		/// Description of the source and its data
		/// </summary>
		public const string XamlStr391Key = nameof(XamlStr391);

		/// <summary>
		/// Description of the source and its data
		/// </summary>
		public static string XamlStr391 => GetString(XamlStr391Key);

		/// <summary>
		/// Task description:
		/// </summary>
		public const string XamlStr392Key = nameof(XamlStr392);

		/// <summary>
		/// Task description:
		/// </summary>
		public static string XamlStr392 => GetString(XamlStr392Key);

		/// <summary>
		/// Optimize
		/// </summary>
		public const string XamlStr394Key = nameof(XamlStr394);

		/// <summary>
		/// Optimize
		/// </summary>
		public static string XamlStr394 => GetString(XamlStr394Key);

		/// <summary>
		/// Publish
		/// </summary>
		public const string XamlStr395Key = nameof(XamlStr395);

		/// <summary>
		/// Publish
		/// </summary>
		public static string XamlStr395 => GetString(XamlStr395Key);

		/// <summary>
		/// Option calculator
		/// </summary>
		public const string XamlStr396Key = nameof(XamlStr396);

		/// <summary>
		/// Option calculator
		/// </summary>
		public static string XamlStr396 => GetString(XamlStr396Key);

		/// <summary>
		/// {0} messages left
		/// </summary>
		public const string XamlStr397Key = nameof(XamlStr397);

		/// <summary>
		/// {0} messages left
		/// </summary>
		public static string XamlStr397 => GetString(XamlStr397Key);

		/// <summary>
		/// {0} SMS left
		/// </summary>
		public const string XamlStr398Key = nameof(XamlStr398);

		/// <summary>
		/// {0} SMS left
		/// </summary>
		public static string XamlStr398 => GetString(XamlStr398Key);

		/// <summary>
		/// Cancel building
		/// </summary>
		public const string XamlStr401Key = nameof(XamlStr401);

		/// <summary>
		/// Cancel building
		/// </summary>
		public static string XamlStr401 => GetString(XamlStr401Key);

		/// <summary>
		/// Stop drawing chart for the security
		/// </summary>
		public const string XamlStr402Key = nameof(XamlStr402);

		/// <summary>
		/// Stop drawing chart for the security
		/// </summary>
		public static string XamlStr402 => GetString(XamlStr402Key);

		/// <summary>
		/// from
		/// </summary>
		public const string XamlStr403Key = nameof(XamlStr403);

		/// <summary>
		/// from
		/// </summary>
		public static string XamlStr403 => GetString(XamlStr403Key);

		/// <summary>
		/// Reject
		/// </summary>
		public const string XamlStr405Key = nameof(XamlStr405);

		/// <summary>
		/// Reject
		/// </summary>
		public static string XamlStr405 => GetString(XamlStr405Key);

		/// <summary>
		/// Public:
		/// </summary>
		public const string XamlStr407Key = nameof(XamlStr407);

		/// <summary>
		/// Public:
		/// </summary>
		public static string XamlStr407 => GetString(XamlStr407Key);

		/// <summary>
		/// Open time
		/// </summary>
		public const string XamlStr408Key = nameof(XamlStr408);

		/// <summary>
		/// Open time
		/// </summary>
		public static string XamlStr408 => GetString(XamlStr408Key);

		/// <summary>
		/// Open configuration
		/// </summary>
		public const string XamlStr410Key = nameof(XamlStr410);

		/// <summary>
		/// Open configuration
		/// </summary>
		public static string XamlStr410 => GetString(XamlStr410Key);

		/// <summary>
		/// Open Terminal configuration
		/// </summary>
		public const string XamlStr411Key = nameof(XamlStr411);

		/// <summary>
		/// Open Terminal configuration
		/// </summary>
		public static string XamlStr411 => GetString(XamlStr411Key);

		/// <summary>
		/// Open settings
		/// </summary>
		public const string XamlStr412Key = nameof(XamlStr412);

		/// <summary>
		/// Open settings
		/// </summary>
		public static string XamlStr412 => GetString(XamlStr412Key);

		/// <summary>
		/// Open script
		/// </summary>
		public const string XamlStr413Key = nameof(XamlStr413);

		/// <summary>
		/// Open script
		/// </summary>
		public static string XamlStr413 => GetString(XamlStr413Key);

		/// <summary>
		/// Open strategy
		/// </summary>
		public const string XamlStr414Key = nameof(XamlStr414);

		/// <summary>
		/// Open strategy
		/// </summary>
		public static string XamlStr414 => GetString(XamlStr414Key);

		/// <summary>
		/// Open Terminal
		/// </summary>
		public const string XamlStr415Key = nameof(XamlStr415);

		/// <summary>
		/// Open Terminal
		/// </summary>
		public static string XamlStr415 => GetString(XamlStr415Key);

		/// <summary>
		/// Open file...
		/// </summary>
		public const string XamlStr416Key = nameof(XamlStr416);

		/// <summary>
		/// Open file...
		/// </summary>
		public static string XamlStr416 => GetString(XamlStr416Key);

		/// <summary>
		/// Cancel
		/// </summary>
		public const string XamlStr419Key = nameof(XamlStr419);

		/// <summary>
		/// Cancel
		/// </summary>
		public static string XamlStr419 => GetString(XamlStr419Key);

		/// <summary>
		/// Cancel all orders
		/// </summary>
		public const string XamlStr420Key = nameof(XamlStr420);

		/// <summary>
		/// Cancel all orders
		/// </summary>
		public static string XamlStr420 => GetString(XamlStr420Key);

		/// <summary>
		/// Cancel selected orders
		/// </summary>
		public const string XamlStr421Key = nameof(XamlStr421);

		/// <summary>
		/// Cancel selected orders
		/// </summary>
		public static string XamlStr421 => GetString(XamlStr421Key);

		/// <summary>
		/// Cancel orders
		/// </summary>
		public const string XamlStr422Key = nameof(XamlStr422);

		/// <summary>
		/// Cancel orders
		/// </summary>
		public static string XamlStr422 => GetString(XamlStr422Key);

		/// <summary>
		/// Cancel order
		/// </summary>
		public const string XamlStr423Key = nameof(XamlStr423);

		/// <summary>
		/// Cancel order
		/// </summary>
		public static string XamlStr423 => GetString(XamlStr423Key);

		/// <summary>
		/// Cancel changes
		/// </summary>
		public const string XamlStr424Key = nameof(XamlStr424);

		/// <summary>
		/// Cancel changes
		/// </summary>
		public static string XamlStr424 => GetString(XamlStr424Key);

		/// <summary>
		/// Cancel drawing
		/// </summary>
		public const string XamlStr425Key = nameof(XamlStr425);

		/// <summary>
		/// Cancel drawing
		/// </summary>
		public static string XamlStr425 => GetString(XamlStr425Key);

		/// <summary>
		/// Unsubscribe
		/// </summary>
		public const string XamlStr426Key = nameof(XamlStr426);

		/// <summary>
		/// Unsubscribe
		/// </summary>
		public static string XamlStr426 => GetString(XamlStr426Key);

		/// <summary>
		/// Send
		/// </summary>
		public const string XamlStr427Key = nameof(XamlStr427);

		/// <summary>
		/// Send
		/// </summary>
		public static string XamlStr427 => GetString(XamlStr427Key);

		/// <summary>
		/// Send request
		/// </summary>
		public const string XamlStr428Key = nameof(XamlStr428);

		/// <summary>
		/// Send request
		/// </summary>
		public static string XamlStr428 => GetString(XamlStr428Key);

		/// <summary>
		/// Send license request to the broker
		/// </summary>
		public const string XamlStr429Key = nameof(XamlStr429);

		/// <summary>
		/// Send license request to the broker
		/// </summary>
		public static string XamlStr429 => GetString(XamlStr429Key);

		/// <summary>
		/// Sent orders
		/// </summary>
		public const string XamlStr430Key = nameof(XamlStr430);

		/// <summary>
		/// Sent orders
		/// </summary>
		public static string XamlStr430 => GetString(XamlStr430Key);

		/// <summary>
		/// Filtered {0} from {1}
		/// </summary>
		public const string XamlStr431Key = nameof(XamlStr431);

		/// <summary>
		/// Filtered {0} from {1}
		/// </summary>
		public static string XamlStr431 => GetString(XamlStr431Key);

		/// <summary>
		/// Report
		/// </summary>
		public const string ReportKey = nameof(Report);

		/// <summary>
		/// Report
		/// </summary>
		public static string Report => GetString(ReportKey);

		/// <summary>
		/// Reports
		/// </summary>
		public const string ReportsKey = nameof(Reports);

		/// <summary>
		/// Reports
		/// </summary>
		public static string Reports => GetString(ReportsKey);

		/// <summary>
		/// Ask (time)
		/// </summary>
		public const string XamlStr435Key = nameof(XamlStr435);

		/// <summary>
		/// Ask (time)
		/// </summary>
		public static string XamlStr435 => GetString(XamlStr435Key);

		/// <summary>
		/// Ask (volume)
		/// </summary>
		public const string XamlStr436Key = nameof(XamlStr436);

		/// <summary>
		/// Ask (volume)
		/// </summary>
		public static string XamlStr436 => GetString(XamlStr436Key);

		/// <summary>
		/// Ask (own)
		/// </summary>
		public const string XamlStr437Key = nameof(XamlStr437);

		/// <summary>
		/// Ask (own)
		/// </summary>
		public static string XamlStr437 => GetString(XamlStr437Key);

		/// <summary>
		/// Ask (price)
		/// </summary>
		public const string XamlStr438Key = nameof(XamlStr438);

		/// <summary>
		/// Ask (price)
		/// </summary>
		public static string XamlStr438 => GetString(XamlStr438Key);

		/// <summary>
		/// Ask:
		/// </summary>
		public const string XamlStr439Key = nameof(XamlStr439);

		/// <summary>
		/// Ask:
		/// </summary>
		public static string XamlStr439 => GetString(XamlStr439Key);

		/// <summary>
		/// Reset
		/// </summary>
		public const string XamlStr440Key = nameof(XamlStr440);

		/// <summary>
		/// Reset
		/// </summary>
		public static string XamlStr440 => GetString(XamlStr440Key);

		/// <summary>
		/// Reset filter
		/// </summary>
		public const string XamlStr441Key = nameof(XamlStr441);

		/// <summary>
		/// Reset filter
		/// </summary>
		public static string XamlStr441 => GetString(XamlStr441Key);

		/// <summary>
		/// Reset form
		/// </summary>
		public const string XamlStr442Key = nameof(XamlStr442);

		/// <summary>
		/// Reset form
		/// </summary>
		public static string XamlStr442 => GetString(XamlStr442Key);

		/// <summary>
		/// Errors
		/// </summary>
		public const string XamlStr443Key = nameof(XamlStr443);

		/// <summary>
		/// Errors
		/// </summary>
		public static string XamlStr443 => GetString(XamlStr443Key);

		/// <summary>
		/// Element panel
		/// </summary>
		public const string XamlStr445Key = nameof(XamlStr445);

		/// <summary>
		/// Element panel
		/// </summary>
		public static string XamlStr445 => GetString(XamlStr445Key);

		/// <summary>
		/// Optimization parameters
		/// </summary>
		public const string XamlStr447Key = nameof(XamlStr447);

		/// <summary>
		/// Optimization parameters
		/// </summary>
		public static string XamlStr447 => GetString(XamlStr447Key);

		/// <summary>
		/// Storage parameters
		/// </summary>
		public const string StorageParametersKey = nameof(StorageParameters);

		/// <summary>
		/// Storage parameters
		/// </summary>
		public static string StorageParameters => GetString(StorageParametersKey);

		/// <summary>
		/// Revert
		/// </summary>
		public const string RevertKey = nameof(Revert);

		/// <summary>
		/// Revert
		/// </summary>
		public static string Revert => GetString(RevertKey);

		/// <summary>
		/// Revert position
		/// </summary>
		public const string RevertPositionKey = nameof(RevertPosition);

		/// <summary>
		/// Revert position
		/// </summary>
		public static string RevertPosition => GetString(RevertPositionKey);

		/// <summary>
		/// Convert
		/// </summary>
		public const string ConvertKey = nameof(Convert);

		/// <summary>
		/// Convert
		/// </summary>
		public static string Convert => GetString(ConvertKey);

		/// <summary>
		/// Duration:
		/// </summary>
		public const string XamlStr453Key = nameof(XamlStr453);

		/// <summary>
		/// Duration:
		/// </summary>
		public static string XamlStr453 => GetString(XamlStr453Key);

		/// <summary>
		/// Period from
		/// </summary>
		public const string XamlStr454Key = nameof(XamlStr454);

		/// <summary>
		/// Period from
		/// </summary>
		public static string XamlStr454 => GetString(XamlStr454Key);

		/// <summary>
		/// till
		/// </summary>
		public const string tillKey = nameof(till);

		/// <summary>
		/// till
		/// </summary>
		public static string till => GetString(tillKey);

		/// <summary>
		/// Till:
		/// </summary>
		public const string XamlStr461Key = nameof(XamlStr461);

		/// <summary>
		/// Till:
		/// </summary>
		public static string XamlStr461 => GetString(XamlStr461Key);

		/// <summary>
		/// Share
		/// </summary>
		public const string XamlStr462Key = nameof(XamlStr462);

		/// <summary>
		/// Share
		/// </summary>
		public static string XamlStr462 => GetString(XamlStr462Key);

		/// <summary>
		/// Share image
		/// </summary>
		public const string ShareImageKey = nameof(ShareImage);

		/// <summary>
		/// Share image
		/// </summary>
		public static string ShareImage => GetString(ShareImageKey);

		/// <summary>
		/// Share file
		/// </summary>
		public const string ShareFileKey = nameof(ShareFile);

		/// <summary>
		/// Share file
		/// </summary>
		public static string ShareFile => GetString(ShareFileKey);

		/// <summary>
		/// Connections
		/// </summary>
		public const string ConnectionsKey = nameof(Connections);

		/// <summary>
		/// Connections
		/// </summary>
		public static string Connections => GetString(ConnectionsKey);

		/// <summary>
		/// Connector to S# server
		/// </summary>
		public const string XamlStr469Key = nameof(XamlStr469);

		/// <summary>
		/// Connector to S# server
		/// </summary>
		public static string XamlStr469 => GetString(XamlStr469Key);

		/// <summary>
		/// Connect to chat
		/// </summary>
		public const string XamlStr470Key = nameof(XamlStr470);

		/// <summary>
		/// Connect to chat
		/// </summary>
		public static string XamlStr470 => GetString(XamlStr470Key);

		/// <summary>
		/// Subscribe
		/// </summary>
		public const string SubscribeKey = nameof(Subscribe);

		/// <summary>
		/// Subscribe
		/// </summary>
		public static string Subscribe => GetString(SubscribeKey);

		/// <summary>
		/// Market data subscription
		/// </summary>
		public const string MarketDataSubscriptionKey = nameof(MarketDataSubscription);

		/// <summary>
		/// Market data subscription
		/// </summary>
		public static string MarketDataSubscription => GetString(MarketDataSubscriptionKey);

		/// <summary>
		/// Security search
		/// </summary>
		public const string XamlStr477Key = nameof(XamlStr477);

		/// <summary>
		/// Security search
		/// </summary>
		public static string XamlStr477 => GetString(XamlStr477Key);

		/// <summary>
		/// Search on the exchange
		/// </summary>
		public const string XamlStr479Key = nameof(XamlStr479);

		/// <summary>
		/// Search on the exchange
		/// </summary>
		public static string XamlStr479 => GetString(XamlStr479Key);

		/// <summary>
		/// Until cancelled
		/// </summary>
		public const string XamlStr480Key = nameof(XamlStr480);

		/// <summary>
		/// Until cancelled
		/// </summary>
		public static string XamlStr480 => GetString(XamlStr480Key);

		/// <summary>
		/// Show review panel
		/// </summary>
		public const string XamlStr481Key = nameof(XamlStr481);

		/// <summary>
		/// Show review panel
		/// </summary>
		public static string XamlStr481 => GetString(XamlStr481Key);

		/// <summary>
		/// Show candles on chart...
		/// </summary>
		public const string XamlStr482Key = nameof(XamlStr482);

		/// <summary>
		/// Show candles on chart...
		/// </summary>
		public static string XamlStr482 => GetString(XamlStr482Key);

		/// <summary>
		/// Open file
		/// </summary>
		public const string OpenFileKey = nameof(OpenFile);

		/// <summary>
		/// Open file
		/// </summary>
		public static string OpenFile => GetString(OpenFileKey);

		/// <summary>
		/// Open license file
		/// </summary>
		public const string OpenLicenseKey = nameof(OpenLicense);

		/// <summary>
		/// Open license file
		/// </summary>
		public static string OpenLicense => GetString(OpenLicenseKey);

		/// <summary>
		/// Show tooltip
		/// </summary>
		public const string ShowTooltipKey = nameof(ShowTooltip);

		/// <summary>
		/// Show tooltip
		/// </summary>
		public static string ShowTooltip => GetString(ShowTooltipKey);

		/// <summary>
		/// Show value
		/// </summary>
		public const string ShowValueKey = nameof(ShowValue);

		/// <summary>
		/// Show value
		/// </summary>
		public static string ShowValue => GetString(ShowValueKey);

		/// <summary>
		/// Show values on axis
		/// </summary>
		public const string XamlStr487Key = nameof(XamlStr487);

		/// <summary>
		/// Show values on axis
		/// </summary>
		public static string XamlStr487 => GetString(XamlStr487Key);

		/// <summary>
		/// Show cross
		/// </summary>
		public const string ShowCrossKey = nameof(ShowCross);

		/// <summary>
		/// Show cross
		/// </summary>
		public static string ShowCross => GetString(ShowCrossKey);

		/// <summary>
		/// Show strategies without equity
		/// </summary>
		public const string XamlStr489Key = nameof(XamlStr489);

		/// <summary>
		/// Show strategies without equity
		/// </summary>
		public static string XamlStr489 => GetString(XamlStr489Key);

		/// <summary>
		/// Bids (count)
		/// </summary>
		public const string XamlStr490Key = nameof(XamlStr490);

		/// <summary>
		/// Bids (count)
		/// </summary>
		public static string XamlStr490 => GetString(XamlStr490Key);

		/// <summary>
		/// Bids (volume)
		/// </summary>
		public const string XamlStr491Key = nameof(XamlStr491);

		/// <summary>
		/// Bids (volume)
		/// </summary>
		public static string XamlStr491 => GetString(XamlStr491Key);

		/// <summary>
		/// Buy (volume)
		/// </summary>
		public const string XamlStr493Key = nameof(XamlStr493);

		/// <summary>
		/// Buy (volume)
		/// </summary>
		public static string XamlStr493 => GetString(XamlStr493Key);

		/// <summary>
		/// Buy (price)
		/// </summary>
		public const string XamlStr494Key = nameof(XamlStr494);

		/// <summary>
		/// Buy (price)
		/// </summary>
		public static string XamlStr494 => GetString(XamlStr494Key);

		/// <summary>
		/// S# field
		/// </summary>
		public const string XamlStr495Key = nameof(XamlStr495);

		/// <summary>
		/// S# field
		/// </summary>
		public static string XamlStr495 => GetString(XamlStr495Key);

		/// <summary>
		/// Received data:
		/// </summary>
		public const string XamlStr496Key = nameof(XamlStr496);

		/// <summary>
		/// Received data:
		/// </summary>
		public static string XamlStr496 => GetString(XamlStr496Key);

		/// <summary>
		/// Subscribe news
		/// </summary>
		public const string SubscribeNewsKey = nameof(SubscribeNews);

		/// <summary>
		/// Subscribe news
		/// </summary>
		public static string SubscribeNews => GetString(SubscribeNewsKey);

		/// <summary>
		/// Retrieving hardware id...
		/// </summary>
		public const string RetrievingHardwareIdKey = nameof(RetrievingHardwareId);

		/// <summary>
		/// Retrieving hardware id...
		/// </summary>
		public static string RetrievingHardwareId => GetString(RetrievingHardwareIdKey);

		/// <summary>
		/// Get for a date
		/// </summary>
		public const string XamlStr500Key = nameof(XamlStr500);

		/// <summary>
		/// Get for a date
		/// </summary>
		public static string XamlStr500 => GetString(XamlStr500Key);

		/// <summary>
		/// Get verification code
		/// </summary>
		public const string GetVerificationCodeKey = nameof(GetVerificationCode);

		/// <summary>
		/// Get verification code
		/// </summary>
		public static string GetVerificationCode => GetString(GetVerificationCodeKey);

		/// <summary>
		/// Generate license
		/// </summary>
		public const string GenerateLicenseKey = nameof(GenerateLicense);

		/// <summary>
		/// Generate license
		/// </summary>
		public static string GenerateLicense => GetString(GenerateLicenseKey);

		/// <summary>
		/// Get full list of securities from IQFeed website
		/// </summary>
		public const string XamlStr503Key = nameof(XamlStr503);

		/// <summary>
		/// Get full list of securities from IQFeed website
		/// </summary>
		public static string XamlStr503 => GetString(XamlStr503Key);

		/// <summary>
		/// Users
		/// </summary>
		public const string UsersKey = nameof(Users);

		/// <summary>
		/// Users
		/// </summary>
		public static string Users => GetString(UsersKey);

		/// <summary>
		/// Portfolios and connections
		/// </summary>
		public const string XamlStr509Key = nameof(XamlStr509);

		/// <summary>
		/// Portfolios and connections
		/// </summary>
		public static string XamlStr509 => GetString(XamlStr509Key);

		/// <summary>
		/// Index num
		/// </summary>
		public const string IndexNumKey = nameof(IndexNum);

		/// <summary>
		/// Index num
		/// </summary>
		public static string IndexNum => GetString(IndexNumKey);

		/// <summary>
		/// Last Level 1
		/// </summary>
		public const string XamlStr515Key = nameof(XamlStr515);

		/// <summary>
		/// Last Level 1
		/// </summary>
		public static string XamlStr515 => GetString(XamlStr515Key);

		/// <summary>
		/// Last OL
		/// </summary>
		public const string XamlStr516Key = nameof(XamlStr516);

		/// <summary>
		/// Last OL
		/// </summary>
		public static string XamlStr516 => GetString(XamlStr516Key);

		/// <summary>
		/// Last candle
		/// </summary>
		public const string XamlStr517Key = nameof(XamlStr517);

		/// <summary>
		/// Last candle
		/// </summary>
		public static string XamlStr517 => GetString(XamlStr517Key);

		/// <summary>
		/// Last market depth
		/// </summary>
		public const string XamlStr525Key = nameof(XamlStr525);

		/// <summary>
		/// Last market depth
		/// </summary>
		public static string XamlStr525 => GetString(XamlStr525Key);

		/// <summary>
		/// Last:
		/// </summary>
		public const string XamlStr526Key = nameof(XamlStr526);

		/// <summary>
		/// Last:
		/// </summary>
		public static string XamlStr526 => GetString(XamlStr526Key);

		/// <summary>
		/// Settlement
		/// </summary>
		public const string XamlStr527Key = nameof(XamlStr527);

		/// <summary>
		/// Settlement
		/// </summary>
		public static string XamlStr527 => GetString(XamlStr527Key);

		/// <summary>
		/// Build chart
		/// </summary>
		public const string XamlStr528Key = nameof(XamlStr528);

		/// <summary>
		/// Build chart
		/// </summary>
		public static string XamlStr528 => GetString(XamlStr528Key);

		/// <summary>
		/// Build from:
		/// </summary>
		public const string XamlStr529Key = nameof(XamlStr529);

		/// <summary>
		/// Build from:
		/// </summary>
		public static string XamlStr529 => GetString(XamlStr529Key);

		/// <summary>
		/// Build trades from order log
		/// </summary>
		public const string XamlStr530Key = nameof(XamlStr530);

		/// <summary>
		/// Build trades from order log
		/// </summary>
		public static string XamlStr530 => GetString(XamlStr530Key);

		/// <summary>
		/// Build market depths from order log
		/// </summary>
		public const string XamlStr531Key = nameof(XamlStr531);

		/// <summary>
		/// Build market depths from order log
		/// </summary>
		public static string XamlStr531 => GetString(XamlStr531Key);

		/// <summary>
		/// Holidays which fall to days from Monday to Friday
		/// </summary>
		public const string XamlStr533Key = nameof(XamlStr533);

		/// <summary>
		/// Holidays which fall to days from Monday to Friday
		/// </summary>
		public static string XamlStr533 => GetString(XamlStr533Key);

		/// <summary>
		/// Warnings
		/// </summary>
		public const string XamlStr534Key = nameof(XamlStr534);

		/// <summary>
		/// Warnings
		/// </summary>
		public static string XamlStr534 => GetString(XamlStr534Key);

		/// <summary>
		/// Apply
		/// </summary>
		public const string XamlStr537Key = nameof(XamlStr537);

		/// <summary>
		/// Apply
		/// </summary>
		public static string XamlStr537 => GetString(XamlStr537Key);

		/// <summary>
		/// Currency conversion sample application
		/// </summary>
		public const string XamlStr538Key = nameof(XamlStr538);

		/// <summary>
		/// Currency conversion sample application
		/// </summary>
		public static string XamlStr538 => GetString(XamlStr538Key);

		/// <summary>
		/// Option quoting sample application
		/// </summary>
		public const string XamlStr539Key = nameof(XamlStr539);

		/// <summary>
		/// Option quoting sample application
		/// </summary>
		public static string XamlStr539 => GetString(XamlStr539Key);

		/// <summary>
		/// {0} sample application
		/// </summary>
		public const string XamlStr540Key = nameof(XamlStr540);

		/// <summary>
		/// {0} sample application
		/// </summary>
		public static string XamlStr540 => GetString(XamlStr540Key);

		/// <summary>
		/// Market simulator sample application
		/// </summary>
		public const string XamlStr561Key = nameof(XamlStr561);

		/// <summary>
		/// Market simulator sample application
		/// </summary>
		public static string XamlStr561 => GetString(XamlStr561Key);

		/// <summary>
		/// Backtesting sample application
		/// </summary>
		public const string XamlStr562Key = nameof(XamlStr562);

		/// <summary>
		/// Backtesting sample application
		/// </summary>
		public static string XamlStr562 => GetString(XamlStr562Key);

		/// <summary>
		/// Backtesting (multi thread) sample application
		/// </summary>
		public const string XamlStr563Key = nameof(XamlStr563);

		/// <summary>
		/// Backtesting (multi thread) sample application
		/// </summary>
		public static string XamlStr563 => GetString(XamlStr563Key);

		/// <summary>
		/// Sample data testing application
		/// </summary>
		public const string XamlStr564Key = nameof(XamlStr564);

		/// <summary>
		/// Sample data testing application
		/// </summary>
		public static string XamlStr564 => GetString(XamlStr564Key);

		/// <summary>
		/// Quik. Export tables sample application
		/// </summary>
		public const string XamlStr565Key = nameof(XamlStr565);

		/// <summary>
		/// Quik. Export tables sample application
		/// </summary>
		public static string XamlStr565 => GetString(XamlStr565Key);

		/// <summary>
		/// Quik. Export extended tables sample application
		/// </summary>
		public const string XamlStr566Key = nameof(XamlStr566);

		/// <summary>
		/// Quik. Export extended tables sample application
		/// </summary>
		public static string XamlStr566 => GetString(XamlStr566Key);

		/// <summary>
		/// Quik. Async orders
		/// </summary>
		public const string XamlStr567Key = nameof(XamlStr567);

		/// <summary>
		/// Quik. Async orders
		/// </summary>
		public static string XamlStr567 => GetString(XamlStr567Key);

		/// <summary>
		/// Candles sample application
		/// </summary>
		public const string XamlStr568Key = nameof(XamlStr568);

		/// <summary>
		/// Candles sample application
		/// </summary>
		public static string XamlStr568 => GetString(XamlStr568Key);

		/// <summary>
		/// Sync connector sample application
		/// </summary>
		public const string XamlStr569Key = nameof(XamlStr569);

		/// <summary>
		/// Sync connector sample application
		/// </summary>
		public static string XamlStr569 => GetString(XamlStr569Key);

		/// <summary>
		/// SMA sample application
		/// </summary>
		public const string XamlStr570Key = nameof(XamlStr570);

		/// <summary>
		/// SMA sample application
		/// </summary>
		public static string XamlStr570 => GetString(XamlStr570Key);

		/// <summary>
		/// Approve
		/// </summary>
		public const string XamlStr571Key = nameof(XamlStr571);

		/// <summary>
		/// Approve
		/// </summary>
		public static string XamlStr571 => GetString(XamlStr571Key);

		/// <summary>
		/// Check
		/// </summary>
		public const string XamlStr572Key = nameof(XamlStr572);

		/// <summary>
		/// Check
		/// </summary>
		public static string XamlStr572 => GetString(XamlStr572Key);

		/// <summary>
		/// Check DDE:
		/// </summary>
		public const string XamlStr573Key = nameof(XamlStr573);

		/// <summary>
		/// Check DDE:
		/// </summary>
		public static string XamlStr573 => GetString(XamlStr573Key);

		/// <summary>
		/// Check Quik's tables settings
		/// </summary>
		public const string XamlStr574Key = nameof(XamlStr574);

		/// <summary>
		/// Check Quik's tables settings
		/// </summary>
		public static string XamlStr574 => GetString(XamlStr574Key);

		/// <summary>
		/// Asks (count)
		/// </summary>
		public const string XamlStr576Key = nameof(XamlStr576);

		/// <summary>
		/// Asks (count)
		/// </summary>
		public static string XamlStr576 => GetString(XamlStr576Key);

		/// <summary>
		/// Asks (volume)
		/// </summary>
		public const string XamlStr577Key = nameof(XamlStr577);

		/// <summary>
		/// Asks (volume)
		/// </summary>
		public static string XamlStr577 => GetString(XamlStr577Key);

		/// <summary>
		/// Sell (volume)
		/// </summary>
		public const string XamlStr579Key = nameof(XamlStr579);

		/// <summary>
		/// Sell (volume)
		/// </summary>
		public static string XamlStr579 => GetString(XamlStr579Key);

		/// <summary>
		/// Sell (price)
		/// </summary>
		public const string XamlStr580Key = nameof(XamlStr580);

		/// <summary>
		/// Sell (price)
		/// </summary>
		public static string XamlStr580 => GetString(XamlStr580Key);

		/// <summary>
		/// Sell
		/// </summary>
		public const string SellKey = nameof(Sell);

		/// <summary>
		/// Sell
		/// </summary>
		public static string Sell => GetString(SellKey);

		/// <summary>
		/// Sell by market
		/// </summary>
		public const string XamlStr582Key = nameof(XamlStr582);

		/// <summary>
		/// Sell by market
		/// </summary>
		public static string XamlStr582 => GetString(XamlStr582Key);

		/// <summary>
		/// Renew license
		/// </summary>
		public const string XamlStr583Key = nameof(XamlStr583);

		/// <summary>
		/// Renew license
		/// </summary>
		public static string XamlStr583 => GetString(XamlStr583Key);

		/// <summary>
		/// Continue
		/// </summary>
		public const string XamlStr584Key = nameof(XamlStr584);

		/// <summary>
		/// Continue
		/// </summary>
		public static string XamlStr584 => GetString(XamlStr584Key);

		/// <summary>
		/// Transparency
		/// </summary>
		public const string XamlStr585Key = nameof(XamlStr585);

		/// <summary>
		/// Transparency
		/// </summary>
		public static string XamlStr585 => GetString(XamlStr585Key);

		/// <summary>
		/// Slippage:
		/// </summary>
		public const string XamlStr586Key = nameof(XamlStr586);

		/// <summary>
		/// Slippage:
		/// </summary>
		public static string XamlStr586 => GetString(XamlStr586Key);

		/// <summary>
		/// Available market data
		/// </summary>
		public const string XamlStr587Key = nameof(XamlStr587);

		/// <summary>
		/// Available market data
		/// </summary>
		public static string XamlStr587 => GetString(XamlStr587Key);

		/// <summary>
		/// Elapsed:
		/// </summary>
		public const string XamlStr588Key = nameof(XamlStr588);

		/// <summary>
		/// Elapsed:
		/// </summary>
		public static string XamlStr588 => GetString(XamlStr588Key);

		/// <summary>
		/// Path to dll
		/// </summary>
		public const string XamlStr591Key = nameof(XamlStr591);

		/// <summary>
		/// Path to dll
		/// </summary>
		public static string XamlStr591 => GetString(XamlStr591Key);

		/// <summary>
		/// Quik's path:
		/// </summary>
		public const string XamlStr592Key = nameof(XamlStr592);

		/// <summary>
		/// Quik's path:
		/// </summary>
		public static string XamlStr592 => GetString(XamlStr592Key);

		/// <summary>
		/// Historical data:
		/// </summary>
		public const string XamlStr593Key = nameof(XamlStr593);

		/// <summary>
		/// Historical data:
		/// </summary>
		public static string XamlStr593 => GetString(XamlStr593Key);

		/// <summary>
		/// Path:
		/// </summary>
		public const string XamlStr594Key = nameof(XamlStr594);

		/// <summary>
		/// Path:
		/// </summary>
		public static string XamlStr594 => GetString(XamlStr594Key);

		/// <summary>
		/// Working day with falls to Saturday or Sunday
		/// </summary>
		public const string XamlStr595Key = nameof(XamlStr595);

		/// <summary>
		/// Working day with falls to Saturday or Sunday
		/// </summary>
		public static string XamlStr595 => GetString(XamlStr595Key);

		/// <summary>
		/// Board schedule
		/// </summary>
		public const string XamlStr596Key = nameof(XamlStr596);

		/// <summary>
		/// Board schedule
		/// </summary>
		public static string XamlStr596 => GetString(XamlStr596Key);

		/// <summary>
		/// Trade schedule in the selected period
		/// </summary>
		public const string XamlStr597Key = nameof(XamlStr597);

		/// <summary>
		/// Trade schedule in the selected period
		/// </summary>
		public static string XamlStr597 => GetString(XamlStr597Key);

		/// <summary>
		/// Schedule:
		/// </summary>
		public const string XamlStr598Key = nameof(XamlStr598);

		/// <summary>
		/// Schedule:
		/// </summary>
		public static string XamlStr598 => GetString(XamlStr598Key);

		/// <summary>
		/// Value position
		/// </summary>
		public const string XamlStr599Key = nameof(XamlStr599);

		/// <summary>
		/// Value position
		/// </summary>
		public static string XamlStr599 => GetString(XamlStr599Key);

		/// <summary>
		/// Settle. price
		/// </summary>
		public const string XamlStr600Key = nameof(XamlStr600);

		/// <summary>
		/// Settle. price
		/// </summary>
		public static string XamlStr600 => GetString(XamlStr600Key);

		/// <summary>
		/// Condition order registration
		/// </summary>
		public const string XamlStr604Key = nameof(XamlStr604);

		/// <summary>
		/// Condition order registration
		/// </summary>
		public static string XamlStr604 => GetString(XamlStr604Key);

		/// <summary>
		/// Editing the index
		/// </summary>
		public const string XamlStr605Key = nameof(XamlStr605);

		/// <summary>
		/// Editing the index
		/// </summary>
		public static string XamlStr605 => GetString(XamlStr605Key);

		/// <summary>
		/// Edit
		/// </summary>
		public const string XamlStr607Key = nameof(XamlStr607);

		/// <summary>
		/// Edit
		/// </summary>
		public static string XamlStr607 => GetString(XamlStr607Key);

		/// <summary>
		/// Edit securities
		/// </summary>
		public const string XamlStr608Key = nameof(XamlStr608);

		/// <summary>
		/// Edit securities
		/// </summary>
		public static string XamlStr608 => GetString(XamlStr608Key);

		/// <summary>
		/// Edit complex element
		/// </summary>
		public const string XamlStr609Key = nameof(XamlStr609);

		/// <summary>
		/// Edit complex element
		/// </summary>
		public static string XamlStr609 => GetString(XamlStr609Key);

		/// <summary>
		/// Launch mode...
		/// </summary>
		public const string XamlStr610Key = nameof(XamlStr610);

		/// <summary>
		/// Launch mode...
		/// </summary>
		public static string XamlStr610 => GetString(XamlStr610Key);

		/// <summary>
		/// Optimization results
		/// </summary>
		public const string XamlStr612Key = nameof(XamlStr612);

		/// <summary>
		/// Optimization results
		/// </summary>
		public static string XamlStr612 => GetString(XamlStr612Key);

		/// <summary>
		/// Risk
		/// </summary>
		public const string XamlStr613Key = nameof(XamlStr613);

		/// <summary>
		/// Risk
		/// </summary>
		public static string XamlStr613 => GetString(XamlStr613Key);

		/// <summary>
		/// Risk management
		/// </summary>
		public const string XamlStr614Key = nameof(XamlStr614);

		/// <summary>
		/// Risk management
		/// </summary>
		public static string XamlStr614 => GetString(XamlStr614Key);

		/// <summary>
		/// Parent room:
		/// </summary>
		public const string XamlStr616Key = nameof(XamlStr616);

		/// <summary>
		/// Parent room:
		/// </summary>
		public static string XamlStr616 => GetString(XamlStr616Key);

		/// <summary>
		/// Manual selection mode when the application starts
		/// </summary>
		public const string XamlStr620Key = nameof(XamlStr620);

		/// <summary>
		/// Manual selection mode when the application starts
		/// </summary>
		public static string XamlStr620 => GetString(XamlStr620Key);

		/// <summary>
		/// Market order type
		/// </summary>
		public const string XamlStr623Key = nameof(XamlStr623);

		/// <summary>
		/// Market order type
		/// </summary>
		public static string XamlStr623 => GetString(XamlStr623Key);

		/// <summary>
		/// From
		/// </summary>
		public const string XamlStr624Key = nameof(XamlStr624);

		/// <summary>
		/// From
		/// </summary>
		public static string XamlStr624 => GetString(XamlStr624Key);

		/// <summary>
		/// From:
		/// </summary>
		public const string XamlStr625Key = nameof(XamlStr625);

		/// <summary>
		/// From:
		/// </summary>
		public static string XamlStr625 => GetString(XamlStr625Key);

		/// <summary>
		/// Assembly:
		/// </summary>
		public const string XamlStr626Key = nameof(XamlStr626);

		/// <summary>
		/// Assembly:
		/// </summary>
		public static string XamlStr626 => GetString(XamlStr626Key);

		/// <summary>
		/// Reset current date modification
		/// </summary>
		public const string XamlStr628Key = nameof(XamlStr628);

		/// <summary>
		/// Reset current date modification
		/// </summary>
		public static string XamlStr628 => GetString(XamlStr628Key);

		/// <summary>
		/// Reset price modification
		/// </summary>
		public const string XamlStr629Key = nameof(XamlStr629);

		/// <summary>
		/// Reset price modification
		/// </summary>
		public static string XamlStr629 => GetString(XamlStr629Key);

		/// <summary>
		/// Candles
		/// </summary>
		public const string XamlStr631Key = nameof(XamlStr631);

		/// <summary>
		/// Candles
		/// </summary>
		public static string XamlStr631 => GetString(XamlStr631Key);

		/// <summary>
		/// Candles (history)
		/// </summary>
		public const string XamlStr633Key = nameof(XamlStr633);

		/// <summary>
		/// Candles (history)
		/// </summary>
		public static string XamlStr633 => GetString(XamlStr633Key);

		/// <summary>
		/// Candles (real-time)
		/// </summary>
		public const string XamlStr634Key = nameof(XamlStr634);

		/// <summary>
		/// Candles (real-time)
		/// </summary>
		public static string XamlStr634 => GetString(XamlStr634Key);

		/// <summary>
		/// Candles and depths
		/// </summary>
		public const string XamlStr635Key = nameof(XamlStr635);

		/// <summary>
		/// Candles and depths
		/// </summary>
		public static string XamlStr635 => GetString(XamlStr635Key);

		/// <summary>
		/// Security parameters
		/// </summary>
		public const string XamlStr639Key = nameof(XamlStr639);

		/// <summary>
		/// Security parameters
		/// </summary>
		public static string XamlStr639 => GetString(XamlStr639Key);

		/// <summary>
		/// Trade on the market with specified price or higher.
		/// </summary>
		public const string XamlStr641Key = nameof(XamlStr641);

		/// <summary>
		/// Trade on the market with specified price or higher.
		/// </summary>
		public static string XamlStr641 => GetString(XamlStr641Key);

		/// <summary>
		/// Trade on the market with specified price or lower.
		/// </summary>
		public const string XamlStr642Key = nameof(XamlStr642);

		/// <summary>
		/// Trade on the market with specified price or lower.
		/// </summary>
		public static string XamlStr642 => GetString(XamlStr642Key);

		/// <summary>
		/// Secret:
		/// </summary>
		public const string XamlStr646Key = nameof(XamlStr646);

		/// <summary>
		/// Secret:
		/// </summary>
		public static string XamlStr646 => GetString(XamlStr646Key);

		/// <summary>
		/// Server:
		/// </summary>
		public const string XamlStr651Key = nameof(XamlStr651);

		/// <summary>
		/// Server:
		/// </summary>
		public static string XamlStr651 => GetString(XamlStr651Key);

		/// <summary>
		/// Synchronize data with directories
		/// </summary>
		public const string XamlStr652Key = nameof(XamlStr652);

		/// <summary>
		/// Synchronize data with directories
		/// </summary>
		public static string XamlStr652 => GetString(XamlStr652Key);

		/// <summary>
		/// Download
		/// </summary>
		public const string XamlStr655Key = nameof(XamlStr655);

		/// <summary>
		/// Download
		/// </summary>
		public static string XamlStr655 => GetString(XamlStr655Key);

		/// <summary>
		/// Compile
		/// </summary>
		public const string XamlStr658Key = nameof(XamlStr658);

		/// <summary>
		/// Compile
		/// </summary>
		public static string XamlStr658 => GetString(XamlStr658Key);

		/// <summary>
		/// copy
		/// </summary>
		public const string XamlStr659Key = nameof(XamlStr659);

		/// <summary>
		/// copy
		/// </summary>
		public static string XamlStr659 => GetString(XamlStr659Key);

		/// <summary>
		/// Copy to clipboard
		/// </summary>
		public const string XamlStr660Key = nameof(XamlStr660);

		/// <summary>
		/// Copy to clipboard
		/// </summary>
		public static string XamlStr660 => GetString(XamlStr660Key);

		/// <summary>
		/// Script
		/// </summary>
		public const string XamlStr661Key = nameof(XamlStr661);

		/// <summary>
		/// Script
		/// </summary>
		public static string XamlStr661 => GetString(XamlStr661Key);

		/// <summary>
		/// Scripts
		/// </summary>
		public const string XamlStr662Key = nameof(XamlStr662);

		/// <summary>
		/// Scripts
		/// </summary>
		public static string XamlStr662 => GetString(XamlStr662Key);

		/// <summary>
		/// Change
		/// </summary>
		public const string XamlStr664Key = nameof(XamlStr664);

		/// <summary>
		/// Change
		/// </summary>
		public static string XamlStr664 => GetString(XamlStr664Key);

		/// <summary>
		/// Change password
		/// </summary>
		public const string XamlStr665Key = nameof(XamlStr665);

		/// <summary>
		/// Change password
		/// </summary>
		public static string XamlStr665 => GetString(XamlStr665Key);

		/// <summary>
		/// Connect
		/// </summary>
		public const string XamlStr666Key = nameof(XamlStr666);

		/// <summary>
		/// Connect
		/// </summary>
		public static string XamlStr666 => GetString(XamlStr666Key);

		/// <summary>
		/// Create new security
		/// </summary>
		public const string XamlStr667Key = nameof(XamlStr667);

		/// <summary>
		/// Create new security
		/// </summary>
		public static string XamlStr667 => GetString(XamlStr667Key);

		/// <summary>
		/// Create
		/// </summary>
		public const string XamlStr668Key = nameof(XamlStr668);

		/// <summary>
		/// Create
		/// </summary>
		public static string XamlStr668 => GetString(XamlStr668Key);

		/// <summary>
		/// Create room
		/// </summary>
		public const string XamlStr670Key = nameof(XamlStr670);

		/// <summary>
		/// Create room
		/// </summary>
		public static string XamlStr670 => GetString(XamlStr670Key);

		/// <summary>
		/// Create configuration
		/// </summary>
		public const string XamlStr671Key = nameof(XamlStr671);

		/// <summary>
		/// Create configuration
		/// </summary>
		public static string XamlStr671 => GetString(XamlStr671Key);

		/// <summary>
		/// Create Terminal configuration
		/// </summary>
		public const string XamlStr672Key = nameof(XamlStr672);

		/// <summary>
		/// Create Terminal configuration
		/// </summary>
		public static string XamlStr672 => GetString(XamlStr672Key);

		/// <summary>
		/// Create position
		/// </summary>
		public const string XamlStr673Key = nameof(XamlStr673);

		/// <summary>
		/// Create position
		/// </summary>
		public static string XamlStr673 => GetString(XamlStr673Key);

		/// <summary>
		/// Create position...
		/// </summary>
		public const string XamlStr674Key = nameof(XamlStr674);

		/// <summary>
		/// Create position...
		/// </summary>
		public static string XamlStr674 => GetString(XamlStr674Key);

		/// <summary>
		/// Create portfolio
		/// </summary>
		public const string XamlStr675Key = nameof(XamlStr675);

		/// <summary>
		/// Create portfolio
		/// </summary>
		public static string XamlStr675 => GetString(XamlStr675Key);

		/// <summary>
		/// Create portfolio...
		/// </summary>
		public const string XamlStr676Key = nameof(XamlStr676);

		/// <summary>
		/// Create portfolio...
		/// </summary>
		public static string XamlStr676 => GetString(XamlStr676Key);

		/// <summary>
		/// Create security
		/// </summary>
		public const string XamlStr677Key = nameof(XamlStr677);

		/// <summary>
		/// Create security
		/// </summary>
		public static string XamlStr677 => GetString(XamlStr677Key);

		/// <summary>
		/// Create continuous security
		/// </summary>
		public const string XamlStr678Key = nameof(XamlStr678);

		/// <summary>
		/// Create continuous security
		/// </summary>
		public static string XamlStr678 => GetString(XamlStr678Key);

		/// <summary>
		/// Create script
		/// </summary>
		public const string XamlStr679Key = nameof(XamlStr679);

		/// <summary>
		/// Create script
		/// </summary>
		public static string XamlStr679 => GetString(XamlStr679Key);

		/// <summary>
		/// Create composite element
		/// </summary>
		public const string XamlStr680Key = nameof(XamlStr680);

		/// <summary>
		/// Create composite element
		/// </summary>
		public static string XamlStr680 => GetString(XamlStr680Key);

		/// <summary>
		/// Create strategy
		/// </summary>
		public const string XamlStr681Key = nameof(XamlStr681);

		/// <summary>
		/// Create strategy
		/// </summary>
		public static string XamlStr681 => GetString(XamlStr681Key);

		/// <summary>
		/// Create element
		/// </summary>
		public const string XamlStr682Key = nameof(XamlStr682);

		/// <summary>
		/// Create element
		/// </summary>
		public static string XamlStr682 => GetString(XamlStr682Key);

		/// <summary>
		/// Message:
		/// </summary>
		public const string XamlStr684Key = nameof(XamlStr684);

		/// <summary>
		/// Message:
		/// </summary>
		public static string XamlStr684 => GetString(XamlStr684Key);

		/// <summary>
		/// Messages
		/// </summary>
		public const string XamlStr685Key = nameof(XamlStr685);

		/// <summary>
		/// Messages
		/// </summary>
		public static string XamlStr685 => GetString(XamlStr685Key);

		/// <summary>
		/// Portfolios &lt;-&gt; connections
		/// </summary>
		public const string XamlStr687Key = nameof(XamlStr687);

		/// <summary>
		/// Portfolios &lt;-&gt; connections
		/// </summary>
		public static string XamlStr687 => GetString(XamlStr687Key);

		/// <summary>
		/// Composite element
		/// </summary>
		public const string XamlStr688Key = nameof(XamlStr688);

		/// <summary>
		/// Composite element
		/// </summary>
		public static string XamlStr688 => GetString(XamlStr688Key);

		/// <summary>
		/// Save data from the chart
		/// </summary>
		public const string XamlStr691Key = nameof(XamlStr691);

		/// <summary>
		/// Save data from the chart
		/// </summary>
		public static string XamlStr691 => GetString(XamlStr691Key);

		/// <summary>
		/// Save security
		/// </summary>
		public const string XamlStr692Key = nameof(XamlStr692);

		/// <summary>
		/// Save security
		/// </summary>
		public static string XamlStr692 => GetString(XamlStr692Key);

		/// <summary>
		/// Save new board
		/// </summary>
		public const string XamlStr693Key = nameof(XamlStr693);

		/// <summary>
		/// Save new board
		/// </summary>
		public static string XamlStr693 => GetString(XamlStr693Key);

		/// <summary>
		/// Save layout...
		/// </summary>
		public const string XamlStr694Key = nameof(XamlStr694);

		/// <summary>
		/// Save layout...
		/// </summary>
		public static string XamlStr694 => GetString(XamlStr694Key);

		/// <summary>
		/// Save basket security
		/// </summary>
		public const string XamlStr695Key = nameof(XamlStr695);

		/// <summary>
		/// Save basket security
		/// </summary>
		public static string XamlStr695 => GetString(XamlStr695Key);

		/// <summary>
		/// Special non-working days:
		/// </summary>
		public const string XamlStr696Key = nameof(XamlStr696);

		/// <summary>
		/// Special non-working days:
		/// </summary>
		public static string XamlStr696 => GetString(XamlStr696Key);

		/// <summary>
		/// Special working days:
		/// </summary>
		public const string XamlStr697Key = nameof(XamlStr697);

		/// <summary>
		/// Special working days:
		/// </summary>
		public static string XamlStr697 => GetString(XamlStr697Key);

		/// <summary>
		/// Change list:
		/// </summary>
		public const string XamlStr698Key = nameof(XamlStr698);

		/// <summary>
		/// Change list:
		/// </summary>
		public static string XamlStr698 => GetString(XamlStr698Key);

		/// <summary>
		/// Error list
		/// </summary>
		public const string XamlStr699Key = nameof(XamlStr699);

		/// <summary>
		/// Error list
		/// </summary>
		public static string XamlStr699 => GetString(XamlStr699Key);

		/// <summary>
		/// Help
		/// </summary>
		public const string HelpKey = nameof(Help);

		/// <summary>
		/// Help
		/// </summary>
		public static string Help => GetString(HelpKey);

		/// <summary>
		/// Average time
		/// </summary>
		public const string AverageTimeKey = nameof(AverageTime);

		/// <summary>
		/// Average time
		/// </summary>
		public static string AverageTime => GetString(AverageTimeKey);

		/// <summary>
		/// References
		/// </summary>
		public const string ReferencesKey = nameof(References);

		/// <summary>
		/// References
		/// </summary>
		public static string References => GetString(ReferencesKey);

		/// <summary>
		/// Depths
		/// </summary>
		public const string DepthsOfKey = nameof(DepthsOf);

		/// <summary>
		/// Depths
		/// </summary>
		public static string DepthsOf => GetString(DepthsOfKey);

		/// <summary>
		/// Depths (OL)
		/// </summary>
		public const string XamlStr709Key = nameof(XamlStr709);

		/// <summary>
		/// Depths (OL)
		/// </summary>
		public static string XamlStr709 => GetString(XamlStr709Key);

		/// <summary>
		/// Obsolete (DDE)
		/// </summary>
		public const string ObsoleteDDEKey = nameof(ObsoleteDDE);

		/// <summary>
		/// Obsolete (DDE)
		/// </summary>
		public static string ObsoleteDDE => GetString(ObsoleteDDEKey);

		/// <summary>
		/// Obsolete connection:
		/// </summary>
		public const string ObsoleteConnectionKey = nameof(ObsoleteConnection);

		/// <summary>
		/// Obsolete connection:
		/// </summary>
		public static string ObsoleteConnection => GetString(ObsoleteConnectionKey);

		/// <summary>
		/// Memory statistics
		/// </summary>
		public const string MemoryStatisticsKey = nameof(MemoryStatistics);

		/// <summary>
		/// Memory statistics
		/// </summary>
		public static string MemoryStatistics => GetString(MemoryStatisticsKey);

		/// <summary>
		/// Stop orders
		/// </summary>
		public const string StopOrdersKey = nameof(StopOrders);

		/// <summary>
		/// Stop orders
		/// </summary>
		public static string StopOrders => GetString(StopOrdersKey);

		/// <summary>
		/// Exchange country
		/// </summary>
		public const string XamlStr724Key = nameof(XamlStr724);

		/// <summary>
		/// Exchange country
		/// </summary>
		public static string XamlStr724 => GetString(XamlStr724Key);

		/// <summary>
		/// Strategy was changed. It is necessary to restart.
		/// </summary>
		public const string XamlStr727Key = nameof(XamlStr727);

		/// <summary>
		/// Strategy was changed. It is necessary to restart.
		/// </summary>
		public static string XamlStr727 => GetString(XamlStr727Key);

		/// <summary>
		/// Build chart of the initial securities
		/// </summary>
		public const string XamlStr728Key = nameof(XamlStr728);

		/// <summary>
		/// Build chart of the initial securities
		/// </summary>
		public static string XamlStr728 => GetString(XamlStr728Key);

		/// <summary>
		/// Line
		/// </summary>
		public const string LineKey = nameof(Line);

		/// <summary>
		/// Line
		/// </summary>
		public static string Line => GetString(LineKey);

		/// <summary>
		/// Working days with fall to Saturday or Sunday
		/// </summary>
		public const string XamlStr730Key = nameof(XamlStr730);

		/// <summary>
		/// Working days with fall to Saturday or Sunday
		/// </summary>
		public static string XamlStr730 => GetString(XamlStr730Key);

		/// <summary>
		/// Amount
		/// </summary>
		public const string AmountKey = nameof(Amount);

		/// <summary>
		/// Amount
		/// </summary>
		public static string Amount => GetString(AmountKey);

		/// <summary>
		/// Current:
		/// </summary>
		public const string XamlStr732Key = nameof(XamlStr732);

		/// <summary>
		/// Current:
		/// </summary>
		public static string XamlStr732 => GetString(XamlStr732Key);

		/// <summary>
		/// Title
		/// </summary>
		public const string XamlStr738Key = nameof(XamlStr738);

		/// <summary>
		/// Title
		/// </summary>
		public static string XamlStr738 => GetString(XamlStr738Key);

		/// <summary>
		/// Current date:
		/// </summary>
		public const string XamlStr739Key = nameof(XamlStr739);

		/// <summary>
		/// Current date:
		/// </summary>
		public static string XamlStr739 => GetString(XamlStr739Key);

		/// <summary>
		/// Current
		/// </summary>
		public const string XamlStr740Key = nameof(XamlStr740);

		/// <summary>
		/// Current
		/// </summary>
		public static string XamlStr740 => GetString(XamlStr740Key);

		/// <summary>
		/// Current licenses
		/// </summary>
		public const string XamlStr741Key = nameof(XamlStr741);

		/// <summary>
		/// Current licenses
		/// </summary>
		public static string XamlStr741 => GetString(XamlStr741Key);

		/// <summary>
		/// Current password
		/// </summary>
		public const string XamlStr742Key = nameof(XamlStr742);

		/// <summary>
		/// Current password
		/// </summary>
		public static string XamlStr742 => GetString(XamlStr742Key);

		/// <summary>
		/// Theor. price
		/// </summary>
		public const string XamlStr743Key = nameof(XamlStr743);

		/// <summary>
		/// Theor. price
		/// </summary>
		public static string XamlStr743 => GetString(XamlStr743Key);

		/// <summary>
		/// Test (speech)
		/// </summary>
		public const string XamlStr745Key = nameof(XamlStr745);

		/// <summary>
		/// Test (speech)
		/// </summary>
		public static string XamlStr745 => GetString(XamlStr745Key);

		/// <summary>
		/// Test (sound)
		/// </summary>
		public const string XamlStr746Key = nameof(XamlStr746);

		/// <summary>
		/// Test (sound)
		/// </summary>
		public static string XamlStr746 => GetString(XamlStr746Key);

		/// <summary>
		/// Test (log)
		/// </summary>
		public const string XamlStr747Key = nameof(XamlStr747);

		/// <summary>
		/// Test (log)
		/// </summary>
		public static string XamlStr747 => GetString(XamlStr747Key);

		/// <summary>
		/// Test (window)
		/// </summary>
		public const string XamlStr748Key = nameof(XamlStr748);

		/// <summary>
		/// Test (window)
		/// </summary>
		public static string XamlStr748 => GetString(XamlStr748Key);

		/// <summary>
		/// Backtest
		/// </summary>
		public const string XamlStr750Key = nameof(XamlStr750);

		/// <summary>
		/// Backtest
		/// </summary>
		public static string XamlStr750 => GetString(XamlStr750Key);

		/// <summary>
		/// Backtest configuration
		/// </summary>
		public const string XamlStr751Key = nameof(XamlStr751);

		/// <summary>
		/// Backtest configuration
		/// </summary>
		public static string XamlStr751 => GetString(XamlStr751Key);

		/// <summary>
		/// Optimized backtest
		/// </summary>
		public const string XamlStr752Key = nameof(XamlStr752);

		/// <summary>
		/// Optimized backtest
		/// </summary>
		public static string XamlStr752 => GetString(XamlStr752Key);

		/// <summary>
		/// Ticker:
		/// </summary>
		public const string XamlStr755Key = nameof(XamlStr755);

		/// <summary>
		/// Ticker:
		/// </summary>
		public static string XamlStr755 => GetString(XamlStr755Key);

		/// <summary>
		/// Ticks and depths
		/// </summary>
		public const string XamlStr757Key = nameof(XamlStr757);

		/// <summary>
		/// Ticks and depths
		/// </summary>
		public static string XamlStr757 => GetString(XamlStr757Key);

		/// <summary>
		/// Ticks (OL)
		/// </summary>
		public const string XamlStr759Key = nameof(XamlStr759);

		/// <summary>
		/// Ticks (OL)
		/// </summary>
		public static string XamlStr759 => GetString(XamlStr759Key);

		/// <summary>
		/// Type (values)
		/// </summary>
		public const string XamlStr762Key = nameof(XamlStr762);

		/// <summary>
		/// Type (values)
		/// </summary>
		public static string XamlStr762 => GetString(XamlStr762Key);

		/// <summary>
		/// Type (option)
		/// </summary>
		public const string XamlStr763Key = nameof(XamlStr763);

		/// <summary>
		/// Type (option)
		/// </summary>
		public static string XamlStr763 => GetString(XamlStr763Key);

		/// <summary>
		/// Strategy type
		/// </summary>
		public const string XamlStr765Key = nameof(XamlStr765);

		/// <summary>
		/// Strategy type
		/// </summary>
		public static string XamlStr765 => GetString(XamlStr765Key);

		/// <summary>
		/// Border width
		/// </summary>
		public const string BorderWidthKey = nameof(BorderWidth);

		/// <summary>
		/// Border width
		/// </summary>
		public static string BorderWidth => GetString(BorderWidthKey);

		/// <summary>
		/// Only public
		/// </summary>
		public const string OnlyPublicKey = nameof(OnlyPublic);

		/// <summary>
		/// Only public
		/// </summary>
		public static string OnlyPublic => GetString(OnlyPublicKey);

		/// <summary>
		/// Trader
		/// </summary>
		public const string XamlStr776Key = nameof(XamlStr776);

		/// <summary>
		/// Trader
		/// </summary>
		public static string XamlStr776 => GetString(XamlStr776Key);

		/// <summary>
		/// Events
		/// </summary>
		public const string XamlStr780Key = nameof(XamlStr780);

		/// <summary>
		/// Events
		/// </summary>
		public static string XamlStr780 => GetString(XamlStr780Key);

		/// <summary>
		/// Data deletion
		/// </summary>
		public const string XamlStr781Key = nameof(XamlStr781);

		/// <summary>
		/// Data deletion
		/// </summary>
		public static string XamlStr781 => GetString(XamlStr781Key);

		/// <summary>
		/// Remotely
		/// </summary>
		public const string XamlStr782Key = nameof(XamlStr782);

		/// <summary>
		/// Remotely
		/// </summary>
		public static string XamlStr782 => GetString(XamlStr782Key);

		/// <summary>
		/// Delete association
		/// </summary>
		public const string XamlStr784Key = nameof(XamlStr784);

		/// <summary>
		/// Delete association
		/// </summary>
		public static string XamlStr784 => GetString(XamlStr784Key);

		/// <summary>
		/// Remove data for selected period for all/selected securities
		/// </summary>
		public const string XamlStr785Key = nameof(XamlStr785);

		/// <summary>
		/// Remove data for selected period for all/selected securities
		/// </summary>
		public static string XamlStr785 => GetString(XamlStr785Key);

		/// <summary>
		/// Delete data...
		/// </summary>
		public const string XamlStr786Key = nameof(XamlStr786);

		/// <summary>
		/// Delete data...
		/// </summary>
		public static string XamlStr786 => GetString(XamlStr786Key);

		/// <summary>
		/// Delete task
		/// </summary>
		public const string XamlStr787Key = nameof(XamlStr787);

		/// <summary>
		/// Delete task
		/// </summary>
		public static string XamlStr787 => GetString(XamlStr787Key);

		/// <summary>
		/// Delete security
		/// </summary>
		public const string XamlStr788Key = nameof(XamlStr788);

		/// <summary>
		/// Delete security
		/// </summary>
		public static string XamlStr788 => GetString(XamlStr788Key);

		/// <summary>
		/// Delete securities
		/// </summary>
		public const string XamlStr789Key = nameof(XamlStr789);

		/// <summary>
		/// Delete securities
		/// </summary>
		public static string XamlStr789 => GetString(XamlStr789Key);

		/// <summary>
		/// Delete room
		/// </summary>
		public const string XamlStr790Key = nameof(XamlStr790);

		/// <summary>
		/// Delete room
		/// </summary>
		public static string XamlStr790 => GetString(XamlStr790Key);

		/// <summary>
		/// Delete configuration
		/// </summary>
		public const string XamlStr791Key = nameof(XamlStr791);

		/// <summary>
		/// Delete configuration
		/// </summary>
		public static string XamlStr791 => GetString(XamlStr791Key);

		/// <summary>
		/// Delete Terminal configuration
		/// </summary>
		public const string XamlStr792Key = nameof(XamlStr792);

		/// <summary>
		/// Delete Terminal configuration
		/// </summary>
		public static string XamlStr792 => GetString(XamlStr792Key);

		/// <summary>
		/// Delete license
		/// </summary>
		public const string XamlStr793Key = nameof(XamlStr793);

		/// <summary>
		/// Delete license
		/// </summary>
		public static string XamlStr793 => GetString(XamlStr793Key);

		/// <summary>
		/// Delete for all securities
		/// </summary>
		public const string XamlStr794Key = nameof(XamlStr794);

		/// <summary>
		/// Delete for all securities
		/// </summary>
		public static string XamlStr794 => GetString(XamlStr794Key);

		/// <summary>
		/// Delete connection
		/// </summary>
		public const string XamlStr795Key = nameof(XamlStr795);

		/// <summary>
		/// Delete connection
		/// </summary>
		public static string XamlStr795 => GetString(XamlStr795Key);

		/// <summary>
		/// Delete rule
		/// </summary>
		public const string XamlStr796Key = nameof(XamlStr796);

		/// <summary>
		/// Delete rule
		/// </summary>
		public static string XamlStr796 => GetString(XamlStr796Key);

		/// <summary>
		/// Delete script
		/// </summary>
		public const string XamlStr797Key = nameof(XamlStr797);

		/// <summary>
		/// Delete script
		/// </summary>
		public static string XamlStr797 => GetString(XamlStr797Key);

		/// <summary>
		/// Delete composite element
		/// </summary>
		public const string XamlStr798Key = nameof(XamlStr798);

		/// <summary>
		/// Delete composite element
		/// </summary>
		public static string XamlStr798 => GetString(XamlStr798Key);

		/// <summary>
		/// Delete strategy
		/// </summary>
		public const string XamlStr799Key = nameof(XamlStr799);

		/// <summary>
		/// Delete strategy
		/// </summary>
		public static string XamlStr799 => GetString(XamlStr799Key);

		/// <summary>
		/// Delete breakpoint
		/// </summary>
		public const string XamlStr800Key = nameof(XamlStr800);

		/// <summary>
		/// Delete breakpoint
		/// </summary>
		public static string XamlStr800 => GetString(XamlStr800Key);

		/// <summary>
		/// File
		/// </summary>
		public const string FileKey = nameof(File);

		/// <summary>
		/// File
		/// </summary>
		public static string File => GetString(FileKey);

		/// <summary>
		/// File (assembly)
		/// </summary>
		public const string FileAssemblyKey = nameof(FileAssembly);

		/// <summary>
		/// File (assembly)
		/// </summary>
		public static string FileAssembly => GetString(FileAssemblyKey);

		/// <summary>
		/// Volume filter (do not show ticks with volume less than specified)
		/// </summary>
		public const string XamlStr807Key = nameof(XamlStr807);

		/// <summary>
		/// Volume filter (do not show ticks with volume less than specified)
		/// </summary>
		public static string XamlStr807 => GetString(XamlStr807Key);

		/// <summary>
		/// Maximum strike filter
		/// </summary>
		public const string XamlStr808Key = nameof(XamlStr808);

		/// <summary>
		/// Maximum strike filter
		/// </summary>
		public static string XamlStr808 => GetString(XamlStr808Key);

		/// <summary>
		/// Minimum strike filter
		/// </summary>
		public const string XamlStr809Key = nameof(XamlStr809);

		/// <summary>
		/// Minimum strike filter
		/// </summary>
		public static string XamlStr809 => GetString(XamlStr809Key);

		/// <summary>
		/// Exact expiration filter for options
		/// </summary>
		public const string XamlStr810Key = nameof(XamlStr810);

		/// <summary>
		/// Exact expiration filter for options
		/// </summary>
		public static string XamlStr810 => GetString(XamlStr810Key);

		/// <summary>
		/// Filter
		/// </summary>
		public const string FilterKey = nameof(Filter);

		/// <summary>
		/// Filter
		/// </summary>
		public static string Filter => GetString(FilterKey);

		/// <summary>
		/// Forex
		/// </summary>
		public const string ForexKey = nameof(Forex);

		/// <summary>
		/// Forex
		/// </summary>
		public static string Forex => GetString(ForexKey);

		/// <summary>
		/// Text value format. Used only for dates and times.
		/// </summary>
		public const string XamlStr814Key = nameof(XamlStr814);

		/// <summary>
		/// Text value format. Used only for dates and times.
		/// </summary>
		public static string XamlStr814 => GetString(XamlStr814Key);

		/// <summary>
		/// Storage format
		/// </summary>
		public const string StorageFormatKey = nameof(StorageFormat);

		/// <summary>
		/// Storage format
		/// </summary>
		public static string StorageFormat => GetString(StorageFormatKey);

		/// <summary>
		/// Features
		/// </summary>
		public const string FeaturesKey = nameof(Features);

		/// <summary>
		/// Features
		/// </summary>
		public static string Features => GetString(FeaturesKey);

		/// <summary>
		/// Market data storage
		/// </summary>
		public const string MarketDataStorageKey = nameof(MarketDataStorage);

		/// <summary>
		/// Market data storage
		/// </summary>
		public static string MarketDataStorage => GetString(MarketDataStorageKey);

		/// <summary>
		/// Line color
		/// </summary>
		public const string LineColorKey = nameof(LineColor);

		/// <summary>
		/// Line color
		/// </summary>
		public static string LineColor => GetString(LineColorKey);

		/// <summary>
		/// Border color
		/// </summary>
		public const string BorderColorKey = nameof(BorderColor);

		/// <summary>
		/// Border color
		/// </summary>
		public static string BorderColor => GetString(BorderColorKey);

		/// <summary>
		/// Font color
		/// </summary>
		public const string FontColorKey = nameof(FontColor);

		/// <summary>
		/// Font color
		/// </summary>
		public static string FontColor => GetString(FontColorKey);

		/// <summary>
		/// Background color
		/// </summary>
		public const string BackgroundColorKey = nameof(BackgroundColor);

		/// <summary>
		/// Background color
		/// </summary>
		public static string BackgroundColor => GetString(BackgroundColorKey);

		/// <summary>
		/// Limit order price
		/// </summary>
		public const string XamlStr829Key = nameof(XamlStr829);

		/// <summary>
		/// Limit order price
		/// </summary>
		public static string XamlStr829 => GetString(XamlStr829Key);

		/// <summary>
		/// Highest price
		/// </summary>
		public const string XamlStr830Key = nameof(XamlStr830);

		/// <summary>
		/// Highest price
		/// </summary>
		public static string XamlStr830 => GetString(XamlStr830Key);

		/// <summary>
		/// Lowest price
		/// </summary>
		public const string XamlStr831Key = nameof(XamlStr831);

		/// <summary>
		/// Lowest price
		/// </summary>
		public static string XamlStr831 => GetString(XamlStr831Key);

		/// <summary>
		/// Last trade price
		/// </summary>
		public const string XamlStr833Key = nameof(XamlStr833);

		/// <summary>
		/// Last trade price
		/// </summary>
		public static string XamlStr833 => GetString(XamlStr833Key);

		/// <summary>
		/// Trade price
		/// </summary>
		public const string TradePriceKey = nameof(TradePrice);

		/// <summary>
		/// Trade price
		/// </summary>
		public static string TradePrice => GetString(TradePriceKey);

		/// <summary>
		/// Equity from
		/// </summary>
		public const string XamlStr846Key = nameof(XamlStr846);

		/// <summary>
		/// Equity from
		/// </summary>
		public static string XamlStr846 => GetString(XamlStr846Key);

		/// <summary>
		/// Expiration
		/// </summary>
		public const string XamlStr848Key = nameof(XamlStr848);

		/// <summary>
		/// Expiration
		/// </summary>
		public static string XamlStr848 => GetString(XamlStr848Key);

		/// <summary>
		/// Export DDE
		/// </summary>
		public const string XamlStr850Key = nameof(XamlStr850);

		/// <summary>
		/// Export DDE
		/// </summary>
		public static string XamlStr850 => GetString(XamlStr850Key);

		/// <summary>
		/// Export report
		/// </summary>
		public const string XamlStr852Key = nameof(XamlStr852);

		/// <summary>
		/// Export report
		/// </summary>
		public static string XamlStr852 => GetString(XamlStr852Key);

		/// <summary>
		/// Creating task '{0}'.
		/// </summary>
		public const string Str2898Key = nameof(Str2898);

		/// <summary>
		/// Creating task '{0}'.
		/// </summary>
		public static string Str2898 => GetString(Str2898Key);

		/// <summary>
		/// Deleting task '{0}'.
		/// </summary>
		public const string Str2902ParamsKey = nameof(Str2902Params);

		/// <summary>
		/// Deleting task '{0}'.
		/// </summary>
		public static string Str2902Params => GetString(Str2902ParamsKey);

		/// <summary>
		/// License file was downloaded into folder '{0}'.
		/// </summary>
		public const string Str3028ParamsKey = nameof(Str3028Params);

		/// <summary>
		/// License file was downloaded into folder '{0}'.
		/// </summary>
		public static string Str3028Params => GetString(Str3028ParamsKey);

		/// <summary>
		/// Tasks '{0}' has same working directory '{1}'.
		/// </summary>
		public const string Str2948ParamsKey = nameof(Str2948Params);

		/// <summary>
		/// Tasks '{0}' has same working directory '{1}'.
		/// </summary>
		public static string Str2948Params => GetString(Str2948ParamsKey);

		/// <summary>
		/// Message '{0}' has empty server time.
		/// </summary>
		public const string EmptyMessageTimeKey = nameof(EmptyMessageTime);

		/// <summary>
		/// Message '{0}' has empty server time.
		/// </summary>
		public static string EmptyMessageTime => GetString(EmptyMessageTimeKey);

		/// <summary>
		/// Downloading candles...
		/// </summary>
		public const string DownloadingCandlesKey = nameof(DownloadingCandles);

		/// <summary>
		/// Downloading candles...
		/// </summary>
		public static string DownloadingCandles => GetString(DownloadingCandlesKey);

		/// <summary>
		/// Downloading ticks...
		/// </summary>
		public const string DownloadingTicksKey = nameof(DownloadingTicks);

		/// <summary>
		/// Downloading ticks...
		/// </summary>
		public static string DownloadingTicks => GetString(DownloadingTicksKey);

		/// <summary>
		/// Downloading trades for {0:yyyy-MM-dd}...
		/// </summary>
		public const string DownloadingTradesKey = nameof(DownloadingTrades);

		/// <summary>
		/// Downloading trades for {0:yyyy-MM-dd}...
		/// </summary>
		public static string DownloadingTrades => GetString(DownloadingTradesKey);

		/// <summary>
		/// Anonymous trades log.
		/// </summary>
		public const string AnonymousTradesLogKey = nameof(AnonymousTradesLog);

		/// <summary>
		/// Anonymous trades log.
		/// </summary>
		public static string AnonymousTradesLog => GetString(AnonymousTradesLogKey);

		/// <summary>
		/// Remember password
		/// </summary>
		public const string RememberPasswordKey = nameof(RememberPassword);

		/// <summary>
		/// Remember password
		/// </summary>
		public static string RememberPassword => GetString(RememberPasswordKey);

		/// <summary>
		/// An error happened while loading strategy. The password is probably incorrect.
		/// </summary>
		public const string StrategyLoadingErrorKey = nameof(StrategyLoadingError);

		/// <summary>
		/// An error happened while loading strategy. The password is probably incorrect.
		/// </summary>
		public static string StrategyLoadingError => GetString(StrategyLoadingErrorKey);

		/// <summary>
		/// Strategy loading was cancelled.
		/// </summary>
		public const string StrategyLoadingCancelledKey = nameof(StrategyLoadingCancelled);

		/// <summary>
		/// Strategy loading was cancelled.
		/// </summary>
		public static string StrategyLoadingCancelled => GetString(StrategyLoadingCancelledKey);

		/// <summary>
		/// Central strike securities
		/// </summary>
		public const string CentralStrikeSecuritiesKey = nameof(CentralStrikeSecurities);

		/// <summary>
		/// Central strike securities
		/// </summary>
		public static string CentralStrikeSecurities => GetString(CentralStrikeSecuritiesKey);

		/// <summary>
		/// Market maker agreements
		/// </summary>
		public const string MarketMakerAgreementsKey = nameof(MarketMakerAgreements);

		/// <summary>
		/// Market maker agreements
		/// </summary>
		public static string MarketMakerAgreements => GetString(MarketMakerAgreementsKey);

		/// <summary>
		/// Empty candle arg
		/// </summary>
		public const string EmptyCandleArgKey = nameof(EmptyCandleArg);

		/// <summary>
		/// Empty candle arg
		/// </summary>
		public static string EmptyCandleArg => GetString(EmptyCandleArgKey);

		/// <summary>
		/// Date {0:yyyyMMdd} is weekend.
		/// </summary>
		public const string WeekEndDateKey = nameof(WeekEndDate);

		/// <summary>
		/// Date {0:yyyyMMdd} is weekend.
		/// </summary>
		public static string WeekEndDate => GetString(WeekEndDateKey);

		/// <summary>
		/// No market-data.
		/// </summary>
		public const string NoDataKey = nameof(NoData);

		/// <summary>
		/// No market-data.
		/// </summary>
		public static string NoData => GetString(NoDataKey);

		/// <summary>
		/// Start downloading {0}({1}) for {2:yyyyMMdd} date and {3} security.
		/// </summary>
		public const string StartDownlodingKey = nameof(StartDownloding);

		/// <summary>
		/// Start downloading {0}({1}) for {2:yyyyMMdd} date and {3} security.
		/// </summary>
		public static string StartDownloding => GetString(StartDownlodingKey);

		/// <summary>
		/// Market data {1} is not enabled for security {0}.
		/// </summary>
		public const string MarketDataNotEnabledKey = nameof(MarketDataNotEnabled);

		/// <summary>
		/// Market data {1} is not enabled for security {0}.
		/// </summary>
		public static string MarketDataNotEnabled => GetString(MarketDataNotEnabledKey);

		/// <summary>
		/// Temporary files
		/// </summary>
		public const string TemporaryFilesKey = nameof(TemporaryFiles);

		/// <summary>
		/// Temporary files
		/// </summary>
		public static string TemporaryFiles => GetString(TemporaryFilesKey);

		/// <summary>
		/// Use
		/// </summary>
		public const string UseKey = nameof(Use);

		/// <summary>
		/// Use
		/// </summary>
		public static string Use => GetString(UseKey);

		/// <summary>
		/// Not use
		/// </summary>
		public const string NotUseKey = nameof(NotUse);

		/// <summary>
		/// Not use
		/// </summary>
		public static string NotUse => GetString(NotUseKey);

		/// <summary>
		/// Use and delete
		/// </summary>
		public const string UseAndDeleteKey = nameof(UseAndDelete);

		/// <summary>
		/// Use and delete
		/// </summary>
		public static string UseAndDelete => GetString(UseAndDeleteKey);

		/// <summary>
		/// {0:0} sec(-s)
		/// </summary>
		public const string SecondsKey = nameof(Seconds);

		/// <summary>
		/// {0:0} sec(-s)
		/// </summary>
		public static string Seconds => GetString(SecondsKey);

		/// <summary>
		/// About
		/// </summary>
		public const string AboutKey = nameof(About);

		/// <summary>
		/// About
		/// </summary>
		public static string About => GetString(AboutKey);

		/// <summary>
		/// Hardware ID
		/// </summary>
		public const string HddIdKey = nameof(HddId);

		/// <summary>
		/// Hardware ID
		/// </summary>
		public static string HddId => GetString(HddIdKey);

		/// <summary>
		/// Select application launch mode
		/// </summary>
		public const string SelectAppModeKey = nameof(SelectAppMode);

		/// <summary>
		/// Select application launch mode
		/// </summary>
		public static string SelectAppMode => GetString(SelectAppModeKey);

		/// <summary>
		/// Unknown unit of measurement '{0}'.
		/// </summary>
		public const string UnknownUnitMeasurementKey = nameof(UnknownUnitMeasurement);

		/// <summary>
		/// Unknown unit of measurement '{0}'.
		/// </summary>
		public static string UnknownUnitMeasurement => GetString(UnknownUnitMeasurementKey);

		/// <summary>
		/// Percentages '{0}' cannot be compared to non-percentages '{1}'.
		/// </summary>
		public const string PercentagesCannotCompareKey = nameof(PercentagesCannotCompare);

		/// <summary>
		/// Percentages '{0}' cannot be compared to non-percentages '{1}'.
		/// </summary>
		public static string PercentagesCannotCompare => GetString(PercentagesCannotCompareKey);

		/// <summary>
		/// Percentage can only be converted to percentage.
		/// </summary>
		public const string PercentagesConvertKey = nameof(PercentagesConvert);

		/// <summary>
		/// Percentage can only be converted to percentage.
		/// </summary>
		public static string PercentagesConvert => GetString(PercentagesConvertKey);

		/// <summary>
		/// Limited value cannot participate in mathematical operations.
		/// </summary>
		public const string LimitedValueNotMathKey = nameof(LimitedValueNotMath);

		/// <summary>
		/// Limited value cannot participate in mathematical operations.
		/// </summary>
		public static string LimitedValueNotMath => GetString(LimitedValueNotMathKey);

		/// <summary>
		/// Typed value handler has not been set.
		/// </summary>
		public const string UnitHandlerNotSetKey = nameof(UnitHandlerNotSet);

		/// <summary>
		/// Typed value handler has not been set.
		/// </summary>
		public static string UnitHandlerNotSet => GetString(UnitHandlerNotSetKey);

		/// <summary>
		/// Price step cost is equal to zero.
		/// </summary>
		public const string PriceStepIsZeroKey = nameof(PriceStepIsZero);

		/// <summary>
		/// Price step cost is equal to zero.
		/// </summary>
		public static string PriceStepIsZero => GetString(PriceStepIsZeroKey);

		/// <summary>
		/// In progress. Please wait...
		/// </summary>
		public const string InProgressKey = nameof(InProgress);

		/// <summary>
		/// In progress. Please wait...
		/// </summary>
		public static string InProgress => GetString(InProgressKey);

		/// <summary>
		/// Unknown field with number {0}.
		/// </summary>
		public const string UnknownFieldKey = nameof(UnknownField);

		/// <summary>
		/// Unknown field with number {0}.
		/// </summary>
		public static string UnknownField => GetString(UnknownFieldKey);

		/// <summary>
		/// Interface '{{0}}' does not support transaction '{0}'.
		/// </summary>
		public const string InterfaceNotSupportTransactionKey = nameof(InterfaceNotSupportTransaction);

		/// <summary>
		/// Interface '{{0}}' does not support transaction '{0}'.
		/// </summary>
		public static string InterfaceNotSupportTransaction => GetString(InterfaceNotSupportTransactionKey);

		/// <summary>
		/// All depths
		/// </summary>
		public const string AllDepthsKey = nameof(AllDepths);

		/// <summary>
		/// All depths
		/// </summary>
		public static string AllDepths => GetString(AllDepthsKey);

		/// <summary>
		/// Request depths for all securities.
		/// </summary>
		public const string RequestAllDepthsKey = nameof(RequestAllDepths);

		/// <summary>
		/// Request depths for all securities.
		/// </summary>
		public static string RequestAllDepths => GetString(RequestAllDepthsKey);

		/// <summary>
		/// Export scheme
		/// </summary>
		public const string ExportSchemeKey = nameof(ExportScheme);

		/// <summary>
		/// Export scheme
		/// </summary>
		public static string ExportScheme => GetString(ExportSchemeKey);

		/// <summary>
		/// Control connection lost.
		/// </summary>
		public const string IsControlConnectionLostKey = nameof(IsControlConnectionLost);

		/// <summary>
		/// Control connection lost.
		/// </summary>
		public static string IsControlConnectionLost => GetString(IsControlConnectionLostKey);

		/// <summary>
		/// Override.
		/// </summary>
		public const string OverrideKey = nameof(Override);

		/// <summary>
		/// Override.
		/// </summary>
		public static string Override => GetString(OverrideKey);

		/// <summary>
		/// Override dll file from resources. Turned on by default.
		/// </summary>
		public const string OverrideDllKey = nameof(OverrideDll);

		/// <summary>
		/// Override dll file from resources. Turned on by default.
		/// </summary>
		public static string OverrideDll => GetString(OverrideDllKey);

		/// <summary>
		/// Time {0} has wrong offset. Expected {1}.
		/// </summary>
		public const string WrongTimeOffsetKey = nameof(WrongTimeOffset);

		/// <summary>
		/// Time {0} has wrong offset. Expected {1}.
		/// </summary>
		public static string WrongTimeOffset => GetString(WrongTimeOffsetKey);

		/// <summary>
		/// Time offset
		/// </summary>
		public const string TimeOffsetKey = nameof(TimeOffset);

		/// <summary>
		/// Time offset
		/// </summary>
		public static string TimeOffset => GetString(TimeOffsetKey);

		/// <summary>
		/// UTC based time offset for market data timestamp.
		/// </summary>
		public const string TimeOffsetDescriptionKey = nameof(TimeOffsetDescription);

		/// <summary>
		/// UTC based time offset for market data timestamp.
		/// </summary>
		public static string TimeOffsetDescription => GetString(TimeOffsetDescriptionKey);

		/// <summary>
		/// Combined board code
		/// </summary>
		public const string AssociatedSecurityBoardKey = nameof(AssociatedSecurityBoard);

		/// <summary>
		/// Combined board code
		/// </summary>
		public static string AssociatedSecurityBoard => GetString(AssociatedSecurityBoardKey);

		/// <summary>
		/// Date and time format
		/// </summary>
		public const string DateTimeFormatKey = nameof(DateTimeFormat);

		/// <summary>
		/// Date and time format
		/// </summary>
		public static string DateTimeFormat => GetString(DateTimeFormatKey);

		/// <summary>
		/// Time format
		/// </summary>
		public const string TimeFormatKey = nameof(TimeFormat);

		/// <summary>
		/// Time format
		/// </summary>
		public static string TimeFormat => GetString(TimeFormatKey);

		/// <summary>
		/// Decimals not filled.
		/// </summary>
		public const string DecimalsNotFilledKey = nameof(DecimalsNotFilled);

		/// <summary>
		/// Decimals not filled.
		/// </summary>
		public static string DecimalsNotFilled => GetString(DecimalsNotFilledKey);

		/// <summary>
		/// Tick count for storage cannot be less than zero.
		/// </summary>
		public const string NegativeTickCountStorageKey = nameof(NegativeTickCountStorage);

		/// <summary>
		/// Tick count for storage cannot be less than zero.
		/// </summary>
		public static string NegativeTickCountStorage => GetString(NegativeTickCountStorageKey);

		/// <summary>
		/// Order count for storage cannot be less than zero.
		/// </summary>
		public const string NegativeOrderCountStorageKey = nameof(NegativeOrderCountStorage);

		/// <summary>
		/// Order count for storage cannot be less than zero.
		/// </summary>
		public static string NegativeOrderCountStorage => GetString(NegativeOrderCountStorageKey);

		/// <summary>
		/// Free
		/// </summary>
		public const string FreeKey = nameof(Free);

		/// <summary>
		/// Free
		/// </summary>
		public static string Free => GetString(FreeKey);

		/// <summary>
		/// Paid
		/// </summary>
		public const string PaidKey = nameof(Paid);

		/// <summary>
		/// Paid
		/// </summary>
		public static string Paid => GetString(PaidKey);

		/// <summary>
		/// Direct market-data access to LSE or NASDAQ via ITCH protocol.
		/// </summary>
		public const string ItchDescriptionKey = nameof(ItchDescription);

		/// <summary>
		/// Direct market-data access to LSE or NASDAQ via ITCH protocol.
		/// </summary>
		public static string ItchDescription => GetString(ItchDescriptionKey);

		/// <summary>
		/// TF
		/// </summary>
		public const string TFKey = nameof(TF);

		/// <summary>
		/// TF
		/// </summary>
		public static string TF => GetString(TFKey);

		/// <summary>
		/// Stream returned '{0}' bytes.
		/// </summary>
		public const string NetworkConnectionErrorKey = nameof(NetworkConnectionError);

		/// <summary>
		/// Stream returned '{0}' bytes.
		/// </summary>
		public static string NetworkConnectionError => GetString(NetworkConnectionErrorKey);

		/// <summary>
		/// Cost
		/// </summary>
		public const string CostKey = nameof(Cost);

		/// <summary>
		/// Cost
		/// </summary>
		public static string Cost => GetString(CostKey);

		/// <summary>
		/// Region
		/// </summary>
		public const string RegionKey = nameof(Region);

		/// <summary>
		/// Region
		/// </summary>
		public static string Region => GetString(RegionKey);

		/// <summary>
		/// Select all
		/// </summary>
		public const string SelectAllKey = nameof(SelectAll);

		/// <summary>
		/// Select all
		/// </summary>
		public static string SelectAll => GetString(SelectAllKey);

		/// <summary>
		/// Unselect all
		/// </summary>
		public const string UnSelectAllKey = nameof(UnSelectAll);

		/// <summary>
		/// Unselect all
		/// </summary>
		public static string UnSelectAll => GetString(UnSelectAllKey);

		/// <summary>
		/// Backup market data to cloud storage.
		/// </summary>
		public const string BackupDescriptionKey = nameof(BackupDescription);

		/// <summary>
		/// Backup market data to cloud storage.
		/// </summary>
		public static string BackupDescription => GetString(BackupDescriptionKey);

		/// <summary>
		/// Preview
		/// </summary>
		public const string PreviewKey = nameof(Preview);

		/// <summary>
		/// Preview
		/// </summary>
		public static string Preview => GetString(PreviewKey);

		/// <summary>
		/// Preview txt export
		/// </summary>
		public const string PreviewTxtKey = nameof(PreviewTxt);

		/// <summary>
		/// Preview txt export
		/// </summary>
		public static string PreviewTxt => GetString(PreviewTxtKey);

		/// <summary>
		/// Depth txt export template.
		/// </summary>
		public const string TemplateTxtDepthKey = nameof(TemplateTxtDepth);

		/// <summary>
		/// Depth txt export template.
		/// </summary>
		public static string TemplateTxtDepth => GetString(TemplateTxtDepthKey);

		/// <summary>
		/// Tick txt export template.
		/// </summary>
		public const string TemplateTxtTickKey = nameof(TemplateTxtTick);

		/// <summary>
		/// Tick txt export template.
		/// </summary>
		public static string TemplateTxtTick => GetString(TemplateTxtTickKey);

		/// <summary>
		/// Candles txt export template.
		/// </summary>
		public const string TemplateTxtCandleKey = nameof(TemplateTxtCandle);

		/// <summary>
		/// Candles txt export template.
		/// </summary>
		public static string TemplateTxtCandle => GetString(TemplateTxtCandleKey);

		/// <summary>
		/// Level1 txt export template.
		/// </summary>
		public const string TemplateTxtLevel1Key = nameof(TemplateTxtLevel1);

		/// <summary>
		/// Level1 txt export template.
		/// </summary>
		public static string TemplateTxtLevel1 => GetString(TemplateTxtLevel1Key);

		/// <summary>
		/// Options greeks txt export template.
		/// </summary>
		public const string TemplateTxtOptionsKey = nameof(TemplateTxtOptions);

		/// <summary>
		/// Options greeks txt export template.
		/// </summary>
		public static string TemplateTxtOptions => GetString(TemplateTxtOptionsKey);

		/// <summary>
		/// Order log txt export template.
		/// </summary>
		public const string TemplateTxtOrderLogKey = nameof(TemplateTxtOrderLog);

		/// <summary>
		/// Order log txt export template.
		/// </summary>
		public static string TemplateTxtOrderLog => GetString(TemplateTxtOrderLogKey);

		/// <summary>
		/// Transactions txt export template.
		/// </summary>
		public const string TemplateTxtTransactionKey = nameof(TemplateTxtTransaction);

		/// <summary>
		/// Transactions txt export template.
		/// </summary>
		public static string TemplateTxtTransaction => GetString(TemplateTxtTransactionKey);

		/// <summary>
		/// Security txt export template.
		/// </summary>
		public const string TemplateTxtSecurityKey = nameof(TemplateTxtSecurity);

		/// <summary>
		/// Security txt export template.
		/// </summary>
		public static string TemplateTxtSecurity => GetString(TemplateTxtSecurityKey);

		/// <summary>
		/// News txt export template.
		/// </summary>
		public const string TemplateTxtNewsKey = nameof(TemplateTxtNews);

		/// <summary>
		/// News txt export template.
		/// </summary>
		public static string TemplateTxtNews => GetString(TemplateTxtNewsKey);

		/// <summary>
		/// Board state txt export template.
		/// </summary>
		public const string TemplateTxtBoardKey = nameof(TemplateTxtBoard);

		/// <summary>
		/// Board state txt export template.
		/// </summary>
		public static string TemplateTxtBoard => GetString(TemplateTxtBoardKey);

		/// <summary>
		/// Indicator's value txt export template.
		/// </summary>
		public const string TemplateTxtIndicatorKey = nameof(TemplateTxtIndicator);

		/// <summary>
		/// Indicator's value txt export template.
		/// </summary>
		public static string TemplateTxtIndicator => GetString(TemplateTxtIndicatorKey);

		/// <summary>
		/// Position change txt export template.
		/// </summary>
		public const string TemplateTxtPositionChangeKey = nameof(TemplateTxtPositionChange);

		/// <summary>
		/// Position change txt export template.
		/// </summary>
		public static string TemplateTxtPositionChange => GetString(TemplateTxtPositionChangeKey);

		/// <summary>
		/// Depth template
		/// </summary>
		public const string TemplateDepthKey = nameof(TemplateDepth);

		/// <summary>
		/// Depth template
		/// </summary>
		public static string TemplateDepth => GetString(TemplateDepthKey);

		/// <summary>
		/// Tick template
		/// </summary>
		public const string TemplateTickKey = nameof(TemplateTick);

		/// <summary>
		/// Tick template
		/// </summary>
		public static string TemplateTick => GetString(TemplateTickKey);

		/// <summary>
		/// Candles template.
		/// </summary>
		public const string TemplateCandleKey = nameof(TemplateCandle);

		/// <summary>
		/// Candles template
		/// </summary>
		public static string TemplateCandle => GetString(TemplateCandleKey);

		/// <summary>
		/// Level1 template
		/// </summary>
		public const string TemplateLevel1Key = nameof(TemplateLevel1);

		/// <summary>
		/// Level1 template
		/// </summary>
		public static string TemplateLevel1 => GetString(TemplateLevel1Key);

		/// <summary>
		/// Greeks template
		/// </summary>
		public const string TemplateOptionsKey = nameof(TemplateOptions);

		/// <summary>
		/// Greeks template
		/// </summary>
		public static string TemplateOptions => GetString(TemplateOptionsKey);

		/// <summary>
		/// Order log template
		/// </summary>
		public const string TemplateOrderLogKey = nameof(TemplateOrderLog);

		/// <summary>
		/// Order log template
		/// </summary>
		public static string TemplateOrderLog => GetString(TemplateOrderLogKey);

		/// <summary>
		/// Transactions template
		/// </summary>
		public const string TemplateTransactionKey = nameof(TemplateTransaction);

		/// <summary>
		/// Transactions template
		/// </summary>
		public static string TemplateTransaction => GetString(TemplateTransactionKey);

		/// <summary>
		/// Security template
		/// </summary>
		public const string TemplateSecurityKey = nameof(TemplateSecurity);

		/// <summary>
		/// Security template
		/// </summary>
		public static string TemplateSecurity => GetString(TemplateSecurityKey);

		/// <summary>
		/// News template.
		/// </summary>
		public const string TemplateNewsKey = nameof(TemplateNews);

		/// <summary>
		/// News template
		/// </summary>
		public static string TemplateNews => GetString(TemplateNewsKey);

		/// <summary>
		/// Board template.
		/// </summary>
		public const string TemplateBoardKey = nameof(TemplateBoard);

		/// <summary>
		/// Board template
		/// </summary>
		public static string TemplateBoard => GetString(TemplateBoardKey);

		/// <summary>
		/// Indicator template.
		/// </summary>
		public const string TemplateIndicatorKey = nameof(TemplateIndicator);

		/// <summary>
		/// Indicator template
		/// </summary>
		public static string TemplateIndicator => GetString(TemplateIndicatorKey);

		/// <summary>
		/// Parsing error. Line {0}, column {1}, txt value '{2}', field {3}.
		/// </summary>
		public const string CsvImportErrorKey = nameof(CsvImportError);

		/// <summary>
		/// Parsing error. Line {0}, column {1}, txt value '{2}', field {3}.
		/// </summary>
		public static string CsvImportError => GetString(CsvImportErrorKey);

		/// <summary>
		/// Header at the first line. Do not add header while empty string.
		/// </summary>
		public const string CsvHeaderKey = nameof(CsvHeader);

		/// <summary>
		/// Header at the first line. Do not add header while empty string.
		/// </summary>
		public static string CsvHeader => GetString(CsvHeaderKey);

		/// <summary>
		/// Request news body
		/// </summary>
		public const string RequestNewsBodyKey = nameof(RequestNewsBody);

		/// <summary>
		/// Request news body
		/// </summary>
		public static string RequestNewsBody => GetString(RequestNewsBodyKey);

		/// <summary>
		/// Open url
		/// </summary>
		public const string OpenUrlKey = nameof(OpenUrl);

		/// <summary>
		/// Open url
		/// </summary>
		public static string OpenUrl => GetString(OpenUrlKey);

		/// <summary>
		/// Level1 to ticks
		/// </summary>
		public const string Level1ToTicksKey = nameof(Level1ToTicks);

		/// <summary>
		/// Level1 to ticks
		/// </summary>
		public static string Level1ToTicks => GetString(Level1ToTicksKey);

		/// <summary>
		/// Level1 to candles
		/// </summary>
		public const string Level1ToCandlesKey = nameof(Level1ToCandles);

		/// <summary>
		/// Level1 to candles
		/// </summary>
		public static string Level1ToCandles => GetString(Level1ToCandlesKey);

		/// <summary>
		/// Level1 to order books
		/// </summary>
		public const string Level1ToOrderBooksKey = nameof(Level1ToOrderBooks);

		/// <summary>
		/// Level1 to order books
		/// </summary>
		public static string Level1ToOrderBooks => GetString(Level1ToOrderBooksKey);

		/// <summary>
		/// Solicited
		/// </summary>
		public const string SolicitedKey = nameof(Solicited);

		/// <summary>
		/// Solicited
		/// </summary>
		public static string Solicited => GetString(SolicitedKey);

		/// <summary>
		/// Randomize size
		/// </summary>
		public const string RandomizeSizeKey = nameof(RandomizeSize);

		/// <summary>
		/// Randomize size
		/// </summary>
		public static string RandomizeSize => GetString(RandomizeSizeKey);

		/// <summary>
		/// Randomize price
		/// </summary>
		public const string RandomizePriceKey = nameof(RandomizePrice);

		/// <summary>
		/// Randomize price
		/// </summary>
		public static string RandomizePrice => GetString(RandomizePriceKey);

		/// <summary>
		/// Covariance
		/// </summary>
		public const string CovarianceKey = nameof(Covariance);

		/// <summary>
		/// Covariance
		/// </summary>
		public static string Covariance => GetString(CovarianceKey);

		/// <summary>
		/// Correlation
		/// </summary>
		public const string CorrelationKey = nameof(Correlation);

		/// <summary>
		/// Correlation
		/// </summary>
		public static string Correlation => GetString(CorrelationKey);

		/// <summary>
		/// P&amp;L
		/// </summary>
		public const string PnLKey = nameof(PnL);

		/// <summary>
		/// P&amp;L
		/// </summary>
		public static string PnL => GetString(PnLKey);

		/// <summary>
		/// Apart
		/// </summary>
		public const string ApartKey = nameof(Apart);

		/// <summary>
		/// Apart
		/// </summary>
		public static string Apart => GetString(ApartKey);

		/// <summary>
		/// Finam (candles)
		/// </summary>
		public const string FinamCandlesKey = nameof(FinamCandles);

		/// <summary>
		/// Finam (candles)
		/// </summary>
		public static string FinamCandles => GetString(FinamCandlesKey);

		/// <summary>
		/// Yahoo (candles)
		/// </summary>
		public const string YahooCandlesKey = nameof(YahooCandles);

		/// <summary>
		/// Yahoo (candles)
		/// </summary>
		public static string YahooCandles => GetString(YahooCandlesKey);

		/// <summary>
		/// Order log to order book builder
		/// </summary>
		public const string OrderLogBuilderKey = nameof(OrderLogBuilder);

		/// <summary>
		/// Order log to order book builder
		/// </summary>
		public static string OrderLogBuilder => GetString(OrderLogBuilderKey);

		/// <summary>
		/// Delay
		/// </summary>
		public const string DelayKey = nameof(Delay);

		/// <summary>
		/// Delay
		/// </summary>
		public static string Delay => GetString(DelayKey);

		/// <summary>
		/// Delay load instruments.
		/// </summary>
		public const string SecurityDelayLoadKey = nameof(SecurityDelayLoad);

		/// <summary>
		/// Delay load instruments.
		/// </summary>
		public static string SecurityDelayLoad => GetString(SecurityDelayLoadKey);

		/// <summary>
		/// Only active instruments.
		/// </summary>
		public const string OnlyActiveSecuritiesKey = nameof(OnlyActiveSecurities);

		/// <summary>
		/// Only active instruments.
		/// </summary>
		public static string OnlyActiveSecurities => GetString(OnlyActiveSecuritiesKey);

		/// <summary>
		/// Interval (in days), for which the downloaded candles.
		/// </summary>
		public const string CandleTimeIntervalKey = nameof(CandleTimeInterval);

		/// <summary>
		/// Interval (in days), for which the downloaded candles.
		/// </summary>
		public static string CandleTimeInterval => GetString(CandleTimeIntervalKey);

		/// <summary>
		/// Strategy is not selected
		/// </summary>
		public const string StrategyNotSelectedKey = nameof(StrategyNotSelected);

		/// <summary>
		/// Strategy is not selected
		/// </summary>
		public static string StrategyNotSelected => GetString(StrategyNotSelectedKey);

		/// <summary>
		/// Palette
		/// </summary>
		public const string PaletteKey = nameof(Palette);

		/// <summary>
		/// Palette
		/// </summary>
		public static string Palette => GetString(PaletteKey);

		/// <summary>
		/// Refresh
		/// </summary>
		public const string RefreshKey = nameof(Refresh);

		/// <summary>
		/// Refresh
		/// </summary>
		public static string Refresh => GetString(RefreshKey);

		/// <summary>
		/// Refresh scheme
		/// </summary>
		public const string RefreshSchemeKey = nameof(RefreshScheme);

		/// <summary>
		/// Refresh scheme
		/// </summary>
		public static string RefreshScheme => GetString(RefreshSchemeKey);

		/// <summary>
		/// Labels format (intraday)
		/// </summary>
		public const string LabelsFormatIntradayKey = nameof(LabelsFormatIntraday);

		/// <summary>
		/// Labels format (intraday)
		/// </summary>
		public static string LabelsFormatIntraday => GetString(LabelsFormatIntradayKey);

		/// <summary>
		/// The format of X-axis labels within the day
		/// </summary>
		public const string LabelsFormatIntradayDescKey = nameof(LabelsFormatIntradayDesc);

		/// <summary>
		/// The format of X-axis labels within the day
		/// </summary>
		public static string LabelsFormatIntradayDesc => GetString(LabelsFormatIntradayDescKey);

		/// <summary>
		/// Atomic reregister
		/// </summary>
		public const string IsSupportAtomicReRegisterKey = nameof(IsSupportAtomicReRegister);

		/// <summary>
		/// Atomic reregister
		/// </summary>
		public static string IsSupportAtomicReRegister => GetString(IsSupportAtomicReRegisterKey);

		/// <summary>
		/// Best pair quotes
		/// </summary>
		public const string BestPairKey = nameof(BestPair);

		/// <summary>
		/// Best pair quotes
		/// </summary>
		public static string BestPair => GetString(BestPairKey);

		/// <summary>
		/// Timeout (read)
		/// </summary>
		public const string ReadTimeOutKey = nameof(ReadTimeOut);

		/// <summary>
		/// Timeout (read)
		/// </summary>
		public static string ReadTimeOut => GetString(ReadTimeOutKey);

		/// <summary>
		/// Timeout (send)
		/// </summary>
		public const string WriteTimeOutKey = nameof(WriteTimeOut);

		/// <summary>
		/// Timeout (send)
		/// </summary>
		public static string WriteTimeOut => GetString(WriteTimeOutKey);

		/// <summary>
		/// The timeout of reading data.
		/// </summary>
		public const string ReadTimeOutDescKey = nameof(ReadTimeOutDesc);

		/// <summary>
		/// The timeout of reading data.
		/// </summary>
		public static string ReadTimeOutDesc => GetString(ReadTimeOutDescKey);

		/// <summary>
		/// The timeout of sending data.
		/// </summary>
		public const string WriteTimeOutDescKey = nameof(WriteTimeOutDesc);

		/// <summary>
		/// The timeout of sending data.
		/// </summary>
		public static string WriteTimeOutDesc => GetString(WriteTimeOutDescKey);

		/// <summary>
		/// Themes.
		/// </summary>
		public const string ThemesKey = nameof(Themes);

		/// <summary>
		/// Themes.
		/// </summary>
		public static string Themes => GetString(ThemesKey);

		/// <summary>
		/// Loading variable parameter error.
		/// </summary>
		public const string LoadingVariableErrorParamsKey = nameof(LoadingVariableErrorParams);

		/// <summary>
		/// Loading variable parameter error.
		/// </summary>
		public static string LoadingVariableErrorParams => GetString(LoadingVariableErrorParamsKey);

		/// <summary>
		/// Cancel On Disconnect
		/// </summary>
		public const string CancelOnDisconnectKey = nameof(CancelOnDisconnect);

		/// <summary>
		/// Cancel On Disconnect
		/// </summary>
		public static string CancelOnDisconnect => GetString(CancelOnDisconnectKey);

		/// <summary>
		/// Heartbeat interval. Uses in Cancel On Disconnect mode.
		/// </summary>
		public const string CancelOnDisconnectDescKey = nameof(CancelOnDisconnectDesc);

		/// <summary>
		/// Heartbeat interval. Uses in Cancel On Disconnect mode.
		/// </summary>
		public static string CancelOnDisconnectDesc => GetString(CancelOnDisconnectDescKey);

		/// <summary>
		/// Open the window to get historical data from Finam website.
		/// </summary>
		public const string LoadHistoryDataQuestionKey = nameof(LoadHistoryDataQuestion);

		/// <summary>
		/// Open the window to get historical data from Finam website.
		/// </summary>
		public static string LoadHistoryDataQuestion => GetString(LoadHistoryDataQuestionKey);

		/// <summary>
		/// Clipboard (as csv).
		/// </summary>
		public const string ClipboardCsvKey = nameof(ClipboardCsv);

		/// <summary>
		/// Clipboard (as csv).
		/// </summary>
		public static string ClipboardCsv => GetString(ClipboardCsvKey);

		/// <summary>
		/// Clipboard (as image).
		/// </summary>
		public const string ClipboardImageKey = nameof(ClipboardImage);

		/// <summary>
		/// Clipboard (as image).
		/// </summary>
		public static string ClipboardImage => GetString(ClipboardImageKey);

		/// <summary>
		/// CSV file.
		/// </summary>
		public const string CsvFileKey = nameof(CsvFile);

		/// <summary>
		/// CSV file.
		/// </summary>
		public static string CsvFile => GetString(CsvFileKey);

		/// <summary>
		/// Excel file.
		/// </summary>
		public const string ExcelFileKey = nameof(ExcelFile);

		/// <summary>
		/// Excel file.
		/// </summary>
		public static string ExcelFile => GetString(ExcelFileKey);

		/// <summary>
		/// PNG file.
		/// </summary>
		public const string PngFileKey = nameof(PngFile);

		/// <summary>
		/// PNG file.
		/// </summary>
		public static string PngFile => GetString(PngFileKey);

		/// <summary>
		/// Custom format.
		/// </summary>
		public const string CustomExportFormatKey = nameof(CustomExportFormat);

		/// <summary>
		/// Custom format.
		/// </summary>
		public static string CustomExportFormat => GetString(CustomExportFormatKey);

		/// <summary>
		/// Unknown candle type '{0}'.
		/// </summary>
		public const string UnknownCandleTypeKey = nameof(UnknownCandleType);

		/// <summary>
		/// Unknown candle type '{0}'.
		/// </summary>
		public static string UnknownCandleType => GetString(UnknownCandleTypeKey);

		/// <summary>
		/// Invalid argument value.
		/// </summary>
		public const string InvalidArgumentValueKey = nameof(InvalidArgumentValue);

		/// <summary>
		/// Invalid argument value.
		/// </summary>
		public static string InvalidArgumentValue => GetString(InvalidArgumentValueKey);

		/// <summary>
		/// AlfaDirect
		/// </summary>
		public const string AlfaDirectKey = nameof(AlfaDirect);

		/// <summary>
		/// AlfaDirect
		/// </summary>
		public static string AlfaDirect => GetString(AlfaDirectKey);

		/// <summary>
		/// Barchart
		/// </summary>
		public const string BarChartKey = nameof(BarChart);

		/// <summary>
		/// Barchart
		/// </summary>
		public static string BarChart => GetString(BarChartKey);

		/// <summary>
		/// Bitstamp
		/// </summary>
		public const string BitStampKey = nameof(BitStamp);

		/// <summary>
		/// Bitstamp
		/// </summary>
		public static string BitStamp => GetString(BitStampKey);


		/// <summary>
		/// FTX
		/// </summary>
		public const string FTXKey = nameof(FTX);

		/// <summary>
		/// FTX
		/// </summary>
		public static string FTX => GetString(FTXKey);

		/// <summary>
		/// Fusion (Blackwood)
		/// </summary>
		public const string FusionKey = nameof(Fusion);

		/// <summary>
		/// Fusion (Blackwood)
		/// </summary>
		public static string Fusion => GetString(FusionKey);

		/// <summary>
		/// WEX (BTC-e)
		/// </summary>
		public const string BtceKey = nameof(Btce);

		/// <summary>
		/// WEX (BTC-e)
		/// </summary>
		public static string Btce => GetString(BtceKey);

		/// <summary>
		/// DukasCopy
		/// </summary>
		public const string DukasCopyKey = nameof(DukasCopy);

		/// <summary>
		/// DukasCopy
		/// </summary>
		public static string DukasCopy => GetString(DukasCopyKey);

		/// <summary>
		/// Finam
		/// </summary>
		public const string FinamKey = nameof(Finam);

		/// <summary>
		/// Finam
		/// </summary>
		public static string Finam => GetString(FinamKey);

		/// <summary>
		/// FIX
		/// </summary>
		public const string FIXKey = nameof(FIX);

		/// <summary>
		/// FIX
		/// </summary>
		public static string FIX => GetString(FIXKey);

		/// <summary>
		/// GAIN Capital
		/// </summary>
		public const string GainCapitalKey = nameof(GainCapital);

		/// <summary>
		/// GAIN Capital
		/// </summary>
		public static string GainCapital => GetString(GainCapitalKey);

		/// <summary>
		/// Google
		/// </summary>
		public const string GoogleKey = nameof(Google);

		/// <summary>
		/// Google
		/// </summary>
		public static string Google => GetString(GoogleKey);

		/// <summary>
		/// Interactive Brokers
		/// </summary>
		public const string IBKey = nameof(IB);

		/// <summary>
		/// Interactive Brokers
		/// </summary>
		public static string IB => GetString(IBKey);


		/// <summary>
		/// MB Trading
		/// </summary>
		public const string MBTradingKey = nameof(MBTrading);

		/// <summary>
		/// MB Trading
		/// </summary>
		public static string MBTrading => GetString(MBTradingKey);

		/// <summary>
		/// TrueFX
		/// </summary>
		public const string TrueFXKey = nameof(TrueFX);

		/// <summary>
		/// TrueFX
		/// </summary>
		public static string TrueFX => GetString(TrueFXKey);

		/// <summary>
		/// Yahoo
		/// </summary>
		public const string YahooKey = nameof(Yahoo);

		/// <summary>
		/// Yahoo
		/// </summary>
		public static string Yahoo => GetString(YahooKey);

		/// <summary>
		/// UX (FTP)
		/// </summary>
		public const string UxFtpKey = nameof(UxFtp);

		/// <summary>
		/// UX (FTP)
		/// </summary>
		public static string UxFtp => GetString(UxFtpKey);

		/// <summary>
		/// RTS
		/// </summary>
		public const string RTSKey = nameof(RTS);

		/// <summary>
		/// RTS
		/// </summary>
		public static string RTS => GetString(RTSKey);

		/// <summary>
		/// USD/RUR
		/// </summary>
		public const string UsdRurKey = nameof(UsdRur);

		/// <summary>
		/// USD/RUR
		/// </summary>
		public static string UsdRur => GetString(UsdRurKey);

		/// <summary>
		/// Quandl
		/// </summary>
		public const string QuandlKey = nameof(Quandl);

		/// <summary>
		/// Quandl
		/// </summary>
		public static string Quandl => GetString(QuandlKey);

		/// <summary>
		/// OANDA
		/// </summary>
		public const string OandaKey = nameof(Oanda);

		/// <summary>
		/// OANDA
		/// </summary>
		public static string Oanda => GetString(OandaKey);

		/// <summary>
		/// LMAX
		/// </summary>
		public const string LmaxKey = nameof(Lmax);

		/// <summary>
		/// LMAX
		/// </summary>
		public static string Lmax => GetString(LmaxKey);

		/// <summary>
		/// S#.Data Server
		/// </summary>
		public const string DataServerKey = nameof(DataServer);

		/// <summary>
		/// S#.Data Server
		/// </summary>
		public static string DataServer => GetString(DataServerKey);

		/// <summary>
		/// Interactive Brokers
		/// </summary>
		public const string InteractiveBrokersKey = nameof(InteractiveBrokers);

		/// <summary>
		/// Interactive Brokers
		/// </summary>
		public static string InteractiveBrokers => GetString(InteractiveBrokersKey);

		/// <summary>
		/// Transaq
		/// </summary>
		public const string TransaqKey = nameof(Transaq);

		/// <summary>
		/// Transaq
		/// </summary>
		public static string Transaq => GetString(TransaqKey);

		/// <summary>
		/// HFT
		/// </summary>
		public const string HFTKey = nameof(HFT);

		/// <summary>
		/// HFT
		/// </summary>
		public static string HFT => GetString(HFTKey);

		/// <summary>
		/// SmartCOM (ITI Capital)
		/// </summary>
		public const string SmartCOMKey = nameof(SmartCOM);

		/// <summary>
		/// SmartCOM (ITI Capital)
		/// </summary>
		public static string SmartCOM => GetString(SmartCOMKey);

		/// <summary>
		/// RSS
		/// </summary>
		public const string RssKey = nameof(Rss);

		/// <summary>
		/// RSS
		/// </summary>
		public static string Rss => GetString(RssKey);

		/// <summary>
		/// Rithmic
		/// </summary>
		public const string RithmicKey = nameof(Rithmic);

		/// <summary>
		/// Rithmic
		/// </summary>
		public static string Rithmic => GetString(RithmicKey);

		/// <summary>
		/// OpenECry
		/// </summary>
		public const string OpenECryKey = nameof(OpenECry);

		/// <summary>
		/// OpenECry
		/// </summary>
		public static string OpenECry => GetString(OpenECryKey);

		/// <summary>
		/// MFD
		/// </summary>
		public const string MFDKey = nameof(MFD);

		/// <summary>
		/// MFD
		/// </summary>
		public static string MFD => GetString(MFDKey);

		/// <summary>
		/// Micex
		/// </summary>
		public const string MicexKey = nameof(Micex);

		/// <summary>
		/// Micex
		/// </summary>
		public static string Micex => GetString(MicexKey);

		/// <summary>
		/// ITCH
		/// </summary>
		public const string ItchKey = nameof(Itch);

		/// <summary>
		/// ITCH
		/// </summary>
		public static string Itch => GetString(ItchKey);

		/// <summary>
		/// Plaza 2
		/// </summary>
		public const string PlazaKey = nameof(Plaza);

		/// <summary>
		/// Plaza 2
		/// </summary>
		public static string Plaza => GetString(PlazaKey);

		/// <summary>
		/// IQFeed
		/// </summary>
		public const string IQFeedKey = nameof(IQFeed);

		/// <summary>
		/// IQFeed
		/// </summary>
		public static string IQFeed => GetString(IQFeedKey);

		/// <summary>
		/// Quik
		/// </summary>
		public const string QuikKey = nameof(Quik);

		/// <summary>
		/// Quik
		/// </summary>
		public static string Quik => GetString(QuikKey);

		/// <summary>
		/// DDE
		/// </summary>
		public const string DdeKey = nameof(Dde);

		/// <summary>
		/// DDE
		/// </summary>
		public static string Dde => GetString(DdeKey);

		/// <summary>
		/// LUA
		/// </summary>
		public const string LuaKey = nameof(Lua);

		/// <summary>
		/// LUA
		/// </summary>
		public static string Lua => GetString(LuaKey);

		/// <summary>
		/// CQG COM
		/// </summary>
		public const string CqgComKey = nameof(CqgCom);

		/// <summary>
		/// CQG COM
		/// </summary>
		public static string CqgCom => GetString(CqgComKey);

		/// <summary>
		/// CQG Continuum
		/// </summary>
		public const string CqgContinuumKey = nameof(CqgContinuum);

		/// <summary>
		/// CQG Continuum
		/// </summary>
		public static string CqgContinuum => GetString(CqgContinuumKey);

		/// <summary>
		/// Initializing.
		/// </summary>
		public const string InitializingKey = nameof(Initializing);

		/// <summary>
		/// Initializing.
		/// </summary>
		public static string Initializing => GetString(InitializingKey);

		/// <summary>
		/// Initializing database.
		/// </summary>
		public const string InitializingDatabaseKey = nameof(InitializingDatabase);

		/// <summary>
		/// Initializing database.
		/// </summary>
		public static string InitializingDatabase => GetString(InitializingDatabaseKey);

		/// <summary>
		/// Initializing command handlers.
		/// </summary>
		public const string InitializingCommandsKey = nameof(InitializingCommands);

		/// <summary>
		/// Initializing command handlers.
		/// </summary>
		public static string InitializingCommands => GetString(InitializingCommandsKey);

		/// <summary>
		/// Initializing connector.
		/// </summary>
		public const string InitializingConnectorKey = nameof(InitializingConnector);

		/// <summary>
		/// Initializing connector.
		/// </summary>
		public static string InitializingConnector => GetString(InitializingConnectorKey);

		/// <summary>
		/// Initializing layout manager.
		/// </summary>
		public const string InitializingLayoutManagerKey = nameof(InitializingLayoutManager);

		/// <summary>
		/// Initializing layout manager.
		/// </summary>
		public static string InitializingLayoutManager => GetString(InitializingLayoutManagerKey);

		/// <summary>
		/// Initializing strategies.
		/// </summary>
		public const string InitializingStrategiesKey = nameof(InitializingStrategies);

		/// <summary>
		/// Initializing strategies.
		/// </summary>
		public static string InitializingStrategies => GetString(InitializingStrategiesKey);

		/// <summary>
		/// Loading ribbon controls.
		/// </summary>
		public const string LoadingRibbonControlsKey = nameof(LoadingRibbonControls);

		/// <summary>
		/// Loading ribbon controls.
		/// </summary>
		public static string LoadingRibbonControls => GetString(LoadingRibbonControlsKey);

		/// <summary>
		/// Loading settings.
		/// </summary>
		public const string LoadingSettingsKey = nameof(LoadingSettings);

		/// <summary>
		/// Loading settings.
		/// </summary>
		public static string LoadingSettings => GetString(LoadingSettingsKey);

		/// <summary>
		/// The strategy {0} has removed.
		/// </summary>
		public const string StrategyRemovedKey = nameof(StrategyRemoved);

		/// <summary>
		/// The strategy {0} has removed.
		/// </summary>
		public static string StrategyRemoved => GetString(StrategyRemovedKey);

		/// <summary>
		/// Strategy with id {0} not exist.
		/// </summary>
		public const string StrategyNotExistKey = nameof(StrategyNotExist);

		/// <summary>
		/// Strategy with id {0} not exist.
		/// </summary>
		public static string StrategyNotExist => GetString(StrategyNotExistKey);

		/// <summary>
		/// Cannot change price type for strategy {0}.
		/// </summary>
		public const string StrategyPriceTypeCannotChangeKey = nameof(StrategyPriceTypeCannotChange);

		/// <summary>
		/// Cannot change price type for strategy {0}.
		/// </summary>
		public static string StrategyPriceTypeCannotChange => GetString(StrategyPriceTypeCannotChangeKey);

		/// <summary>
		/// Cannot change content type for strategy {0}.
		/// </summary>
		public const string StrategyContentTypeCannotChangeKey = nameof(StrategyContentTypeCannotChange);

		/// <summary>
		/// Cannot change content type for strategy {0}.
		/// </summary>
		public static string StrategyContentTypeCannotChange => GetString(StrategyContentTypeCannotChangeKey);

		/// <summary>
		/// Too much price.
		/// </summary>
		public const string TooMuchPriceKey = nameof(TooMuchPrice);

		/// <summary>
		/// Too much price.
		/// </summary>
		public static string TooMuchPrice => GetString(TooMuchPriceKey);

		/// <summary>
		/// Not enough balance for subscribe to strategy {0}.
		/// </summary>
		public const string NotEnoughBalanceKey = nameof(NotEnoughBalance);

		/// <summary>
		/// Not enough balance for subscribe to strategy {0}.
		/// </summary>
		public static string NotEnoughBalance => GetString(NotEnoughBalanceKey);

		/// <summary>
		/// Strategy {0} has not subscribed.
		/// </summary>
		public const string NotSubscribedKey = nameof(NotSubscribed);

		/// <summary>
		/// Strategy {0} has not subscribed.
		/// </summary>
		public static string NotSubscribed => GetString(NotSubscribedKey);

		/// <summary>
		/// Currency cannot be changed.
		/// </summary>
		public const string CurrencyCannotChangeKey = nameof(CurrencyCannotChange);

		/// <summary>
		/// Currency cannot be changed.
		/// </summary>
		public static string CurrencyCannotChange => GetString(CurrencyCannotChangeKey);

		/// <summary>
		/// Registration was not completed.
		/// </summary>
		public const string NotCompleteRegisteredKey = nameof(NotCompleteRegistered);

		/// <summary>
		/// Registration was not completed.
		/// </summary>
		public static string NotCompleteRegistered => GetString(NotCompleteRegisteredKey);

		/// <summary>
		/// Strategies gallery
		/// </summary>
		public const string StrategiesGalleryKey = nameof(StrategiesGallery);

		/// <summary>
		/// Strategies gallery
		/// </summary>
		public static string StrategiesGallery => GetString(StrategiesGalleryKey);

		/// <summary>
		/// Gallery
		/// </summary>
		public const string GalleryKey = nameof(Gallery);

		/// <summary>
		/// Gallery
		/// </summary>
		public static string Gallery => GetString(GalleryKey);

		/// <summary>
		/// Strategies subscriptions
		/// </summary>
		public const string StrategiesSubscriptionsKey = nameof(StrategiesSubscriptions);

		/// <summary>
		/// Strategies subscriptions
		/// </summary>
		public static string StrategiesSubscriptions => GetString(StrategiesSubscriptionsKey);

		/// <summary>
		/// Refresh strategies
		/// </summary>
		public const string RefreshStrategiesKey = nameof(RefreshStrategies);

		/// <summary>
		/// Refresh strategies
		/// </summary>
		public static string RefreshStrategies => GetString(RefreshStrategiesKey);

		/// <summary>
		/// All strategies
		/// </summary>
		public const string AllStrategiesKey = nameof(AllStrategies);

		/// <summary>
		/// All strategies
		/// </summary>
		public static string AllStrategies => GetString(AllStrategiesKey);

		/// <summary>
		/// Subscribed strategies
		/// </summary>
		public const string SubscribedStrategiesKey = nameof(SubscribedStrategies);

		/// <summary>
		/// Subscribed strategies
		/// </summary>
		public static string SubscribedStrategies => GetString(SubscribedStrategiesKey);

		/// <summary>
		/// Free strategies
		/// </summary>
		public const string FreeStrategiesKey = nameof(FreeStrategies);

		/// <summary>
		/// Free strategies
		/// </summary>
		public static string FreeStrategies => GetString(FreeStrategiesKey);

		/// <summary>
		/// Author
		/// </summary>
		public const string AuthorKey = nameof(Author);

		/// <summary>
		/// Author
		/// </summary>
		public static string Author => GetString(AuthorKey);

		/// <summary>
		/// Loading gallery strategies...
		/// </summary>
		public const string LoadingGalleryStrategiesKey = nameof(LoadingGalleryStrategies);

		/// <summary>
		/// Loading gallery strategies...
		/// </summary>
		public static string LoadingGalleryStrategies => GetString(LoadingGalleryStrategiesKey);

		/// <summary>
		/// Logo
		/// </summary>
		public const string LogoKey = nameof(Logo);

		/// <summary>
		/// Logo
		/// </summary>
		public static string Logo => GetString(LogoKey);

		/// <summary>
		/// Price type
		/// </summary>
		public const string PriceTypeKey = nameof(PriceType);

		/// <summary>
		/// Price type
		/// </summary>
		public static string PriceType => GetString(PriceTypeKey);

		/// <summary>
		/// Publish
		/// </summary>
		public const string PublishStrategyKey = nameof(PublishStrategy);

		/// <summary>
		/// Publish
		/// </summary>
		public static string PublishStrategy => GetString(PublishStrategyKey);

		/// <summary>
		/// Strategy already published. Update?
		/// </summary>
		public const string StrategyAlreadyPublishedKey = nameof(StrategyAlreadyPublished);

		/// <summary>
		/// Strategy already published. Update?
		/// </summary>
		public static string StrategyAlreadyPublished => GetString(StrategyAlreadyPublishedKey);

		/// <summary>
		/// Own strategies
		/// </summary>
		public const string OwnStrategiesKey = nameof(OwnStrategies);

		/// <summary>
		/// Own strategies
		/// </summary>
		public static string OwnStrategies => GetString(OwnStrategiesKey);

		/// <summary>
		/// Open strategies gallery?
		/// </summary>
		public const string OpenStrategiesGalleryQuestionKey = nameof(OpenStrategiesGalleryQuestion);

		/// <summary>
		/// Open strategies gallery?
		/// </summary>
		public static string OpenStrategiesGalleryQuestion => GetString(OpenStrategiesGalleryQuestionKey);

		/// <summary>
		/// Fill up balance
		/// </summary>
		public const string FillUpBalanceKey = nameof(FillUpBalance);

		/// <summary>
		/// Fill up balance
		/// </summary>
		public static string FillUpBalance => GetString(FillUpBalanceKey);

		/// <summary>
		/// File uploading has not started.
		/// </summary>
		public const string FileNotStartedKey = nameof(FileNotStarted);

		/// <summary>
		/// File uploading has not started.
		/// </summary>
		public static string FileNotStarted => GetString(FileNotStartedKey);

		/// <summary>
		/// This file exceeds the maximum upload size.
		/// </summary>
		public const string FileTooMuchKey = nameof(FileTooMuch);

		/// <summary>
		/// This file exceeds the maximum upload size.
		/// </summary>
		public static string FileTooMuch => GetString(FileTooMuchKey);

		/// <summary>
		/// Strategy has been encrypted and cannot be viewed.
		/// </summary>
		public const string StrategyEncryptedKey = nameof(StrategyEncrypted);

		/// <summary>
		/// Strategy has been encrypted and cannot be viewed.
		/// </summary>
		public static string StrategyEncrypted => GetString(StrategyEncryptedKey);

		/// <summary>
		/// Email
		/// </summary>
		public const string EmailKey = nameof(Email);

		/// <summary>
		/// Email
		/// </summary>
		public static string Email => GetString(EmailKey);

		/// <summary>
		/// Pause
		/// </summary>
		public const string PauseKey = nameof(Pause);

		/// <summary>
		/// Pause
		/// </summary>
		public static string Pause => GetString(PauseKey);

		/// <summary>
		/// Composition already exist.
		/// </summary>
		public const string CompositionAlreadyExistParamsKey = nameof(CompositionAlreadyExistParams);

		/// <summary>
		/// Composition already exist.
		/// </summary>
		public static string CompositionAlreadyExistParams => GetString(CompositionAlreadyExistParamsKey);

		/// <summary>
		/// With encryption
		/// </summary>
		public const string WithEncryptionKey = nameof(WithEncryption);

		/// <summary>
		/// With encryption
		/// </summary>
		public static string WithEncryption => GetString(WithEncryptionKey);

		/// <summary>
		/// Without encryption
		/// </summary>
		public const string WithoutEncryptionKey = nameof(WithoutEncryption);

		/// <summary>
		/// Without encryption
		/// </summary>
		public static string WithoutEncryption => GetString(WithoutEncryptionKey);

		/// <summary>
		/// IV
		/// </summary>
		public const string IVKey = nameof(IV);

		/// <summary>
		/// IV
		/// </summary>
		public static string IV => GetString(IVKey);

		/// <summary>
		/// HV
		/// </summary>
		public const string HVKey = nameof(HV);

		/// <summary>
		/// HV
		/// </summary>
		public static string HV => GetString(HVKey);

		/// <summary>
		/// Scheme version is not supported.
		/// </summary>
		public const string UnsupportedSchemeVersionParamsKey = nameof(UnsupportedSchemeVersionParams);

		/// <summary>
		/// Scheme version is not supported.
		/// </summary>
		public static string UnsupportedSchemeVersionParams => GetString(UnsupportedSchemeVersionParamsKey);

		/// <summary>
		/// Finam historical market data.
		/// </summary>
		public const string FinamPanelKey = nameof(FinamPanel);

		/// <summary>
		/// Finam historical market data.
		/// </summary>
		public static string FinamPanel => GetString(FinamPanelKey);

		/// <summary>
		/// cannot subscribe to own strategy.
		/// </summary>
		public const string OwnStrategySubscriptionKey = nameof(OwnStrategySubscription);

		/// <summary>
		/// cannot subscribe to own strategy.
		/// </summary>
		public static string OwnStrategySubscription => GetString(OwnStrategySubscriptionKey);

		/// <summary>
		/// Not enough money for subscription.
		/// </summary>
		public const string NotEnoughMoneyForSubscriptionKey = nameof(NotEnoughMoneyForSubscription);

		/// <summary>
		/// Not enough money for subscription.
		/// </summary>
		public static string NotEnoughMoneyForSubscription => GetString(NotEnoughMoneyForSubscriptionKey);

		/// <summary>
		/// Is encrypted
		/// </summary>
		public const string IsEncryptedKey = nameof(IsEncrypted);

		/// <summary>
		/// Is encrypted
		/// </summary>
		public static string IsEncrypted => GetString(IsEncryptedKey);

		/// <summary>
		/// Error while loading scheme. Verify that the specified password.
		/// </summary>
		public const string LoadCompositionWrongPasswordErrorKey = nameof(LoadCompositionWrongPasswordError);

		/// <summary>
		/// Error while loading scheme. Verify that the specified password.
		/// </summary>
		public static string LoadCompositionWrongPasswordError => GetString(LoadCompositionWrongPasswordErrorKey);

		/// <summary>
		/// Error while loading scheme. Possibly file is corrupted, has an incorrect format or cannot be read.
		/// </summary>
		public const string LoadCompositionErrorKey = nameof(LoadCompositionError);

		/// <summary>
		/// Error while loading scheme. Possibly file is corrupted, has an incorrect format or cannot be read.
		/// </summary>
		public static string LoadCompositionError => GetString(LoadCompositionErrorKey);

		/// <summary>
		/// Selected storage does not contains market data for {0} {1} from {2} till {3}.
		/// </summary>
		public const string StorageHasNoDataParamsKey = nameof(StorageHasNoDataParams);

		/// <summary>
		/// Selected storage does not contains market data for {0} {1} from {2} till {3}.
		/// </summary>
		public static string StorageHasNoDataParams => GetString(StorageHasNoDataParamsKey);

		/// <summary>
		/// Incorrect time zone.
		/// </summary>
		public const string IncorrectTimeZoneKey = nameof(IncorrectTimeZone);

		/// <summary>
		/// Incorrect time zone.
		/// </summary>
		public static string IncorrectTimeZone => GetString(IncorrectTimeZoneKey);

		/// <summary>
		/// Download historical market data?
		/// </summary>
		public const string DownloadHistoricalMarketDataQuestionKey = nameof(DownloadHistoricalMarketDataQuestion);

		/// <summary>
		/// Download historical market data?
		/// </summary>
		public static string DownloadHistoricalMarketDataQuestion => GetString(DownloadHistoricalMarketDataQuestionKey);

		/// <summary>
		/// Publish strategy error: {0}
		/// </summary>
		public const string PublishErrorKey = nameof(PublishError);

		/// <summary>
		/// Publish strategy error: {0}
		/// </summary>
		public static string PublishError => GetString(PublishErrorKey);

		/// <summary>
		/// Service '{0}' not registered.
		/// </summary>
		public const string ServiceNotRegisteredKey = nameof(ServiceNotRegistered);

		/// <summary>
		/// Service '{0}' not registered.
		/// </summary>
		public static string ServiceNotRegistered => GetString(ServiceNotRegisteredKey);

		/// <summary>
		/// Clear items
		/// </summary>
		public const string ClearItemsKey = nameof(ClearItems);

		/// <summary>
		/// Clear items
		/// </summary>
		public static string ClearItems => GetString(ClearItemsKey);

		/// <summary>
		/// View only
		/// </summary>
		public const string ViewOnlyKey = nameof(ViewOnly);

		/// <summary>
		/// View only
		/// </summary>
		public static string ViewOnly => GetString(ViewOnlyKey);

		/// <summary>
		/// Is independent
		/// </summary>
		public const string IsIndependentKey = nameof(IsIndependent);

		/// <summary>
		/// Is independent
		/// </summary>
		public static string IsIndependent => GetString(IsIndependentKey);

		/// <summary>
		/// Days
		/// </summary>
		public const string DaysPartKey = nameof(DaysPart);

		/// <summary>
		/// Days
		/// </summary>
		public static string DaysPart => GetString(DaysPartKey);

		/// <summary>
		/// Hours
		/// </summary>
		public const string HoursPartKey = nameof(HoursPart);

		/// <summary>
		/// Hours
		/// </summary>
		public static string HoursPart => GetString(HoursPartKey);

		/// <summary>
		/// Minutes
		/// </summary>
		public const string MinutesPartKey = nameof(MinutesPart);

		/// <summary>
		/// Minutes
		/// </summary>
		public static string MinutesPart => GetString(MinutesPartKey);

		/// <summary>
		/// Seconds
		/// </summary>
		public const string SecondsPartKey = nameof(SecondsPart);

		/// <summary>
		/// Seconds
		/// </summary>
		public static string SecondsPart => GetString(SecondsPartKey);

		/// <summary>
		/// {0} not initialized.
		/// </summary>
		public const string NotInitializedParamsKey = nameof(NotInitializedParams);

		/// <summary>
		/// {0} not initialized.
		/// </summary>
		public static string NotInitializedParams => GetString(NotInitializedParamsKey);

		/// <summary>
		/// Order cancelling
		/// </summary>
		public const string OrderCancellingKey = nameof(OrderCancelling);

		/// <summary>
		/// Order cancelling
		/// </summary>
		public static string OrderCancelling => GetString(OrderCancellingKey);

		/// <summary>
		/// Order replacing
		/// </summary>
		public const string OrderReplacingKey = nameof(OrderReplacing);

		/// <summary>
		/// Order replacing
		/// </summary>
		public static string OrderReplacing => GetString(OrderReplacingKey);

		/// <summary>
		/// Not specified new value of price or volume.
		/// </summary>
		public const string NotSpecifiedPriceOrVolumeKey = nameof(NotSpecifiedPriceOrVolume);

		/// <summary>
		/// Not specified new value of price or volume.
		/// </summary>
		public static string NotSpecifiedPriceOrVolume => GetString(NotSpecifiedPriceOrVolumeKey);

		/// <summary>
		/// Duration
		/// </summary>
		public const string DurationKey = nameof(Duration);

		/// <summary>
		/// Duration
		/// </summary>
		public static string Duration => GetString(DurationKey);

		/// <summary>
		/// Issue size
		/// </summary>
		public const string IssueSizeKey = nameof(IssueSize);

		/// <summary>
		/// Issue size
		/// </summary>
		public static string IssueSize => GetString(IssueSizeKey);

		/// <summary>
		/// Date of issue
		/// </summary>
		public const string IssueDateKey = nameof(IssueDate);

		/// <summary>
		/// Date of issue
		/// </summary>
		public static string IssueDate => GetString(IssueDateKey);

		/// <summary>
		/// BuyBack date
		/// </summary>
		public const string BuyBackDateKey = nameof(BuyBackDate);

		/// <summary>
		/// BuyBack date
		/// </summary>
		public static string BuyBackDate => GetString(BuyBackDateKey);

		/// <summary>
		/// BuyBack price
		/// </summary>
		public const string BuyBackPriceKey = nameof(BuyBackPrice);

		/// <summary>
		/// BuyBack price
		/// </summary>
		public static string BuyBackPrice => GetString(BuyBackPriceKey);

		/// <summary>
		/// Start all
		/// </summary>
		public const string StartAllKey = nameof(StartAll);

		/// <summary>
		/// Start all
		/// </summary>
		public static string StartAll => GetString(StartAllKey);

		/// <summary>
		/// Stop all
		/// </summary>
		public const string StopAllKey = nameof(StopAll);

		/// <summary>
		/// Stop all
		/// </summary>
		public static string StopAll => GetString(StopAllKey);

		/// <summary>
		/// Composition {0} not found.
		/// </summary>
		public const string CompositionNotFoundParamsKey = nameof(CompositionNotFoundParams);

		/// <summary>
		/// Composition {0} not found.
		/// </summary>
		public static string CompositionNotFoundParams => GetString(CompositionNotFoundParamsKey);

		/// <summary>
		/// Composition {0} was changed. Update?
		/// </summary>
		public const string CompositionWasChangedParamsKey = nameof(CompositionWasChangedParams);

		/// <summary>
		/// Composition {0} was changed. Update?
		/// </summary>
		public static string CompositionWasChangedParams => GetString(CompositionWasChangedParamsKey);

		/// <summary>
		/// Sparsed market depth
		/// </summary>
		public const string SparsedMarketDepthKey = nameof(SparsedMarketDepth);

		/// <summary>
		/// Sparsed market depth
		/// </summary>
		public static string SparsedMarketDepth => GetString(SparsedMarketDepthKey);

		/// <summary>
		/// Grouped market depth
		/// </summary>
		public const string GroupedMarketDepthKey = nameof(GroupedMarketDepth);

		/// <summary>
		/// Grouped market depth
		/// </summary>
		public static string GroupedMarketDepth => GetString(GroupedMarketDepthKey);

		/// <summary>
		/// Price range
		/// </summary>
		public const string PriceRangeKey = nameof(PriceRange);

		/// <summary>
		/// Price range
		/// </summary>
		public static string PriceRange => GetString(PriceRangeKey);

		/// <summary>
		/// Need to add the option positions chart
		/// </summary>
		public const string NeedToAddOptionPositionChartKey = nameof(NeedToAddOptionPositionChart);

		/// <summary>
		/// Need to add the option positions chart
		/// </summary>
		public static string NeedToAddOptionPositionChart => GetString(NeedToAddOptionPositionChartKey);

		/// <summary>
		/// Math
		/// </summary>
		public const string MathKey = nameof(Math);

		/// <summary>
		/// Math
		/// </summary>
		public static string Math => GetString(MathKey);

		/// <summary>
		/// Diagram
		/// </summary>
		public const string DiagramKey = nameof(Diagram);

		/// <summary>
		/// Diagram
		/// </summary>
		public static string Diagram => GetString(DiagramKey);

		/// <summary>
		/// Need to add the option desk panel
		/// </summary>
		public const string NeedToAddOptionDeskKey = nameof(NeedToAddOptionDesk);

		/// <summary>
		/// Need to add the option desk panel
		/// </summary>
		public static string NeedToAddOptionDesk => GetString(NeedToAddOptionDeskKey);

		/// <summary>
		/// Implied volatility order book
		/// </summary>
		public const string ImpliedVolatilityMarketDepthKey = nameof(ImpliedVolatilityMarketDepth);

		/// <summary>
		/// Implied volatility order book
		/// </summary>
		public static string ImpliedVolatilityMarketDepth => GetString(ImpliedVolatilityMarketDepthKey);

		/// <summary>
		/// Offset to the left (less) from central strike. If not set, all less then central strikes will be collected.
		/// </summary>
		public const string StrikeLeftOffsetKey = nameof(StrikeLeftOffset);

		/// <summary>
		/// Offset to the left (less) from central strike. If not set, all less then central strikes will be collected.
		/// </summary>
		public static string StrikeLeftOffset => GetString(StrikeLeftOffsetKey);

		/// <summary>
		/// Offset to the right (more) from central strike. If not set, all more then central strikes will be collected.
		/// </summary>
		public const string StrikeRightOffsetKey = nameof(StrikeRightOffset);

		/// <summary>
		/// Offset to the right (more) from central strike. If not set, all more then central strikes will be collected.
		/// </summary>
		public static string StrikeRightOffset => GetString(StrikeRightOffsetKey);

		/// <summary>
		/// Black-Scholes
		/// </summary>
		public const string BlackScholesKey = nameof(BlackScholes);

		/// <summary>
		/// Black-Scholes
		/// </summary>
		public static string BlackScholes => GetString(BlackScholesKey);

		/// <summary>
		/// At least one connection must be connected.
		/// </summary>
		public const string NoActiveConnectionKey = nameof(NoActiveConnection);

		/// <summary>
		/// At least one connection must be connected.
		/// </summary>
		public static string NoActiveConnection => GetString(NoActiveConnectionKey);

		/// <summary>
		/// Lookup securities is not supported. Need to manually create appropriate security.
		/// </summary>
		public const string LookupSecuritiesNotSupportedKey = nameof(LookupSecuritiesNotSupported);

		/// <summary>
		/// Lookup securities is not supported. Need to manually create appropriate security.
		/// </summary>
		public static string LookupSecuritiesNotSupported => GetString(LookupSecuritiesNotSupportedKey);

		/// <summary>
		/// Historical market data
		/// </summary>
		public const string HistoricalMarketDataKey = nameof(HistoricalMarketData);

		/// <summary>
		/// Historical market data
		/// </summary>
		public static string HistoricalMarketData => GetString(HistoricalMarketDataKey);

		/// <summary>
		/// Tools
		/// </summary>
		public const string ToolsKey = nameof(Tools);

		/// <summary>
		/// Tools
		/// </summary>
		public static string Tools => GetString(ToolsKey);

		/// <summary>
		/// The database Quandl identifier.
		/// </summary>
		public const string QuandlDatabaseKey = nameof(QuandlDatabase);

		/// <summary>
		/// The database Quandl identifier.
		/// </summary>
		public static string QuandlDatabase => GetString(QuandlDatabaseKey);

		/// <summary>
		/// Source code was changed. Compiling...
		/// </summary>
		public const string SourceCodeWasChangedCompilingKey = nameof(SourceCodeWasChangedCompiling);

		/// <summary>
		/// Source code was changed. Compiling...
		/// </summary>
		public static string SourceCodeWasChangedCompiling => GetString(SourceCodeWasChangedCompilingKey);

		/// <summary>
		/// Initialization
		/// </summary>
		public const string InitializationKey = nameof(Initialization);

		/// <summary>
		/// Initialization
		/// </summary>
		public static string Initialization => GetString(InitializationKey);

		/// <summary>
		/// Directory '{0}' doesn't exist.
		/// </summary>
		public const string DirectoryNotExistKey = nameof(DirectoryNotExist);

		/// <summary>
		/// Directory '{0}' doesn't exist.
		/// </summary>
		public static string DirectoryNotExist => GetString(DirectoryNotExistKey);

		/// <summary>
		/// File mask
		/// </summary>
		public const string FileMaskKey = nameof(FileMask);

		/// <summary>
		/// File mask
		/// </summary>
		public static string FileMask => GetString(FileMaskKey);

		/// <summary>
		/// File mask that uses for scanning in directory. For example, candles_*.csv.
		/// </summary>
		public const string FileMaskDescriptionKey = nameof(FileMaskDescription);

		/// <summary>
		/// File mask that uses for scanning in directory. For example, candles_*.csv.
		/// </summary>
		public static string FileMaskDescription => GetString(FileMaskDescriptionKey);

		/// <summary>
		/// Indicator selection
		/// </summary>
		public const string IndicatorSelectionKey = nameof(IndicatorSelection);

		/// <summary>
		/// Indicator selection
		/// </summary>
		public static string IndicatorSelection => GetString(IndicatorSelectionKey);

		/// <summary>
		/// Securities '{0}' not found.
		/// </summary>
		public const string SecuritiesNotFoundKey = nameof(SecuritiesNotFound);

		/// <summary>
		/// Securities '{0}' not found.
		/// </summary>
		public static string SecuritiesNotFound => GetString(SecuritiesNotFoundKey);

		/// <summary>
		/// Cyclic dependency of '{0}'.
		/// </summary>
		public const string CyclicDependencyKey = nameof(CyclicDependency);

		/// <summary>
		/// Cyclic dependency of '{0}'.
		/// </summary>
		public static string CyclicDependency => GetString(CyclicDependencyKey);

		/// <summary>
		/// Subscription '{0}' does not exist.
		/// </summary>
		public const string SubscriptionNonExistKey = nameof(SubscriptionNonExist);

		/// <summary>
		/// Subscription '{0}' does not exist.
		/// </summary>
		public static string SubscriptionNonExist => GetString(SubscriptionNonExistKey);

		/// <summary>
		/// Subscription {0} has state {1}.
		/// </summary>
		public const string SubscriptionInvalidStateKey = nameof(SubscriptionInvalidState);

		/// <summary>
		/// Subscription {0} has state {1}.
		/// </summary>
		public static string SubscriptionInvalidState => GetString(SubscriptionInvalidStateKey);

		/// <summary>
		/// Subscription '{0}' for '{1}' is online.
		/// </summary>
		public const string SubscriptionOnlineKey = nameof(SubscriptionOnline);

		/// <summary>
		/// Subscription '{0}' for '{1}' is online.
		/// </summary>
		public static string SubscriptionOnline => GetString(SubscriptionOnlineKey);

		/// <summary>
		/// Sleep interval while batch candles downloading.
		/// </summary>
		public const string CandleDownloadIntervalKey = nameof(CandleDownloadInterval);

		/// <summary>
		/// Sleep interval while batch candles downloading.
		/// </summary>
		public static string CandleDownloadInterval => GetString(CandleDownloadIntervalKey);

		/// <summary>
		/// Download securities
		/// </summary>
		public const string DownloadSecuritiesKey = nameof(DownloadSecurities);

		/// <summary>
		/// Download securities
		/// </summary>
		public static string DownloadSecurities => GetString(DownloadSecuritiesKey);

		/// <summary>
		/// The source does not support automatically instruments downloading. Manually create an instrument?
		/// </summary>
		public const string NotSupportSecurityDownloadKey = nameof(NotSupportSecurityDownload);

		/// <summary>
		/// The source does not support automatically instruments downloading. Manually create an instrument?
		/// </summary>
		public static string NotSupportSecurityDownload => GetString(NotSupportSecurityDownloadKey);

		/// <summary>
		/// Ignore errors
		/// </summary>
		public const string IgnoreErrorsKey = nameof(IgnoreErrors);

		/// <summary>
		/// Ignore errors
		/// </summary>
		public static string IgnoreErrors => GetString(IgnoreErrorsKey);

		/// <summary>
		/// Calculate extended information
		/// </summary>
		public const string CalculateExtendedKey = nameof(CalculateExtended);

		/// <summary>
		/// Calculate extended information
		/// </summary>
		public static string CalculateExtended => GetString(CalculateExtendedKey);

		/// <summary>
		/// Volatility smile
		/// </summary>
		public const string VolatilitySmileKey = nameof(VolatilitySmile);

		/// <summary>
		/// Volatility smile
		/// </summary>
		public static string VolatilitySmile => GetString(VolatilitySmileKey);

		/// <summary>
		/// Options volatility smile chart.
		/// </summary>
		public const string VolatilitySmileChartKey = nameof(VolatilitySmileChart);

		/// <summary>
		/// Options volatility smile chart.
		/// </summary>
		public static string VolatilitySmileChart => GetString(VolatilitySmileChartKey);

		/// <summary>
		/// Strategy not initialized.
		/// </summary>
		public const string StrategyNotInitializedKey = nameof(StrategyNotInitialized);

		/// <summary>
		/// Strategy not initialized.
		/// </summary>
		public static string StrategyNotInitialized => GetString(StrategyNotInitializedKey);

		/// <summary>
		/// Type {0} must contain only one event with {1}.
		/// </summary>
		public const string ExternalSocketMoreEventsKey = nameof(ExternalSocketMoreEvents);

		/// <summary>
		/// Type {0} must contain only one event with {1}.
		/// </summary>
		public static string ExternalSocketMoreEvents => GetString(ExternalSocketMoreEventsKey);

		/// <summary>
		/// Event {0} must contains only one parameter.
		/// </summary>
		public const string ExternalSocketOneParamKey = nameof(ExternalSocketOneParam);

		/// <summary>
		/// Event {0} must contains only one parameter.
		/// </summary>
		public static string ExternalSocketOneParam => GetString(ExternalSocketOneParamKey);

		/// <summary>
		/// Max message count exceed.
		/// </summary>
		public const string MaxMessageCountExceedKey = nameof(MaxMessageCountExceed);

		/// <summary>
		/// Max message count exceed.
		/// </summary>
		public static string MaxMessageCountExceed => GetString(MaxMessageCountExceedKey);

		/// <summary>
		/// Type {0} not implemented the {1} interface.
		/// </summary>
		public const string TypeNotImplementedKey = nameof(TypeNotImplemented);

		/// <summary>
		/// Type {0} not implemented the {1} interface.
		/// </summary>
		public static string TypeNotImplemented => GetString(TypeNotImplementedKey);

		/// <summary>
		/// Event {0} should not return a value.
		/// </summary>
		public const string ExternalSocketReturnTypeKey = nameof(ExternalSocketReturnType);

		/// <summary>
		/// Event {0} should not return a value.
		/// </summary>
		public static string ExternalSocketReturnType => GetString(ExternalSocketReturnTypeKey);

		/// <summary>
		/// Session state request error.
		/// </summary>
		public const string SessionStateRequestErrorKey = nameof(SessionStateRequestError);

		/// <summary>
		/// Session state request error.
		/// </summary>
		public static string SessionStateRequestError => GetString(SessionStateRequestErrorKey);

		/// <summary>
		/// All rights reserved.
		/// </summary>
		public const string AllRightsReservedKey = nameof(AllRightsReserved);

		/// <summary>
		/// All rights reserved.
		/// </summary>
		public static string AllRightsReserved => GetString(AllRightsReservedKey);

		/// <summary>
		/// Model code
		/// </summary>
		public const string ModelCodeKey = nameof(ModelCode);

		/// <summary>
		/// Model code
		/// </summary>
		public static string ModelCode => GetString(ModelCodeKey);

		/// <summary>
		/// Expression '{0}' do not contains any identifiers.
		/// </summary>
		public const string NoIdsFoundKey = nameof(NoIdsFound);

		/// <summary>
		/// Expression '{0}' do not contains any identifiers.
		/// </summary>
		public static string NoIdsFound => GetString(NoIdsFoundKey);

		/// <summary>
		/// New version of the application available. Download updates?
		/// </summary>
		public const string DownloadUpdatesKey = nameof(DownloadUpdates);

		/// <summary>
		/// New version of the application available. Download updates?
		/// </summary>
		public static string DownloadUpdates => GetString(DownloadUpdatesKey);

		/// <summary>
		/// Updates are downloaded. Install updates now?
		/// </summary>
		public const string InstallUpdatesKey = nameof(InstallUpdates);

		/// <summary>
		/// Updates are downloaded. Install updates now?
		/// </summary>
		public static string InstallUpdates => GetString(InstallUpdatesKey);

		/// <summary>
		/// Show Board column
		/// </summary>
		public const string ShowBoardColumnKey = nameof(ShowBoardColumn);

		/// <summary>
		/// Show Board column
		/// </summary>
		public static string ShowBoardColumn => GetString(ShowBoardColumnKey);

		/// <summary>
		/// Scanner
		/// </summary>
		public const string ScannerKey = nameof(Scanner);

		/// <summary>
		/// Scanner
		/// </summary>
		public static string Scanner => GetString(ScannerKey);

		/// <summary>
		/// Country
		/// </summary>
		public const string CountryKey = nameof(Country);

		/// <summary>
		/// Country
		/// </summary>
		public static string Country => GetString(CountryKey);

		/// <summary>
		/// E-mail address
		/// </summary>
		public const string EmailAddressKey = nameof(EmailAddress);

		/// <summary>
		/// E-mail address
		/// </summary>
		public static string EmailAddress => GetString(EmailAddressKey);

		/// <summary>
		/// Phone
		/// </summary>
		public const string PhoneKey = nameof(Phone);

		/// <summary>
		/// Phone
		/// </summary>
		public static string Phone => GetString(PhoneKey);

		/// <summary>
		/// Web site
		/// </summary>
		public const string WebSiteKey = nameof(WebSite);

		/// <summary>
		/// Web site
		/// </summary>
		public static string WebSite => GetString(WebSiteKey);

		/// <summary>
		/// Skype
		/// </summary>
		public const string SkypeKey = nameof(Skype);

		/// <summary>
		/// Skype
		/// </summary>
		public static string Skype => GetString(SkypeKey);

		/// <summary>
		/// City
		/// </summary>
		public const string CityKey = nameof(City);

		/// <summary>
		/// City
		/// </summary>
		public static string City => GetString(CityKey);

		/// <summary>
		/// Gender
		/// </summary>
		public const string GenderKey = nameof(Gender);

		/// <summary>
		/// Gender
		/// </summary>
		public static string Gender => GetString(GenderKey);

		/// <summary>
		/// Zip code
		/// </summary>
		public const string ZipCodeKey = nameof(ZipCode);

		/// <summary>
		/// Zip code
		/// </summary>
		public static string ZipCode => GetString(ZipCodeKey);

		/// <summary>
		/// Deposit
		/// </summary>
		public const string DepositKey = nameof(Deposit);

		/// <summary>
		/// Deposit
		/// </summary>
		public static string Deposit => GetString(DepositKey);

		/// <summary>
		/// Withdraw
		/// </summary>
		public const string WithdrawKey = nameof(Withdraw);

		/// <summary>
		/// Withdraw
		/// </summary>
		public static string Withdraw => GetString(WithdrawKey);

		/// <summary>
		/// Start date (candles)
		/// </summary>
		public const string StartDateCandlesKey = nameof(StartDateCandles);

		/// <summary>
		/// Start date (candles)
		/// </summary>
		public static string StartDateCandles => GetString(StartDateCandlesKey);

		/// <summary>
		/// Start date (ticks)
		/// </summary>
		public const string StartDateTicksKey = nameof(StartDateTicks);

		/// <summary>
		/// Start date (ticks)
		/// </summary>
		public static string StartDateTicks => GetString(StartDateTicksKey);

		/// <summary>
		/// You need to select the remote storage.
		/// </summary>
		public const string NeedToSelectRemoteStorageKey = nameof(NeedToSelectRemoteStorage);

		/// <summary>
		/// You need to select the remote storage.
		/// </summary>
		public static string NeedToSelectRemoteStorage => GetString(NeedToSelectRemoteStorageKey);

		/// <summary>
		/// Remote storage
		/// </summary>
		public const string RemoteStorageKey = nameof(RemoteStorage);

		/// <summary>
		/// Remote storage
		/// </summary>
		public static string RemoteStorage => GetString(RemoteStorageKey);

		/// <summary>
		/// The specified server is unavailable.
		/// </summary>
		public const string ServerUnavailableKey = nameof(ServerUnavailable);

		/// <summary>
		/// The specified server is unavailable.
		/// </summary>
		public static string ServerUnavailable => GetString(ServerUnavailableKey);

		/// <summary>
		/// Suggestions
		/// </summary>
		public const string SuggestionsKey = nameof(Suggestions);

		/// <summary>
		/// Suggestions
		/// </summary>
		public static string Suggestions => GetString(SuggestionsKey);

		/// <summary>
		/// Do you have any questions or suggestions? Contact us now!
		/// </summary>
		public const string DoYouHaveQuestionsOrSuggestionsKey = nameof(DoYouHaveQuestionsOrSuggestions);

		/// <summary>
		/// Do you have any questions or suggestions? Contact us now!
		/// </summary>
		public static string DoYouHaveQuestionsOrSuggestions => GetString(DoYouHaveQuestionsOrSuggestionsKey);

		/// <summary>
		/// Do not show again
		/// </summary>
		public const string DoNotShowAgainKey = nameof(DoNotShowAgain);

		/// <summary>
		/// Do not show again
		/// </summary>
		public static string DoNotShowAgain => GetString(DoNotShowAgainKey);

		/// <summary>
		/// Contact us
		/// </summary>
		public const string ContactUsKey = nameof(ContactUs);

		/// <summary>
		/// Contact us
		/// </summary>
		public static string ContactUs => GetString(ContactUsKey);

		/// <summary>
		/// Thank you for your question. We will reply shortly.
		/// </summary>
		public const string ThankYouForQuestionKey = nameof(ThankYouForQuestion);

		/// <summary>
		/// Thank you for your question. We will reply shortly.
		/// </summary>
		public static string ThankYouForQuestion => GetString(ThankYouForQuestionKey);

		/// <summary>
		/// Login and password must be specified.
		/// </summary>
		public const string LoginAndPasswordMustBeSpecifiedKey = nameof(LoginAndPasswordMustBeSpecified);

		/// <summary>
		/// Login and password must be specified.
		/// </summary>
		public static string LoginAndPasswordMustBeSpecified => GetString(LoginAndPasswordMustBeSpecifiedKey);

		/// <summary>
		/// Add option
		/// </summary>
		public const string AddOptionKey = nameof(AddOption);

		/// <summary>
		/// Add option
		/// </summary>
		public static string AddOption => GetString(AddOptionKey);

		/// <summary>
		/// Remove option
		/// </summary>
		public const string RemoveOptionKey = nameof(RemoveOption);

		/// <summary>
		/// Remove option
		/// </summary>
		public static string RemoveOption => GetString(RemoveOptionKey);

		/// <summary>
		/// Evaluate greeks
		/// </summary>
		public const string EvaluateGreeksKey = nameof(EvaluateGreeks);

		/// <summary>
		/// Evaluate greeks
		/// </summary>
		public static string EvaluateGreeks => GetString(EvaluateGreeksKey);

		/// <summary>
		/// Finished
		/// </summary>
		public const string FinishedKey = nameof(Finished);

		/// <summary>
		/// Finished
		/// </summary>
		public static string Finished => GetString(FinishedKey);

		/// <summary>
		/// Send logs
		/// </summary>
		public const string SendLogsKey = nameof(SendLogs);

		/// <summary>
		/// Send logs
		/// </summary>
		public static string SendLogs => GetString(SendLogsKey);

		/// <summary>
		/// cannot create logs file.
		/// </summary>
		public const string CanNotCreateLogsFileKey = nameof(CanNotCreateLogsFile);

		/// <summary>
		/// cannot create logs file.
		/// </summary>
		public static string CanNotCreateLogsFile => GetString(CanNotCreateLogsFileKey);

		/// <summary>
		/// CSV
		/// </summary>
		public const string CSVKey = nameof(CSV);

		/// <summary>
		/// CSV
		/// </summary>
		public static string CSV => GetString(CSVKey);

		/// <summary>
		/// Trailing delta
		/// </summary>
		public const string TrailingDeltaKey = nameof(TrailingDelta);

		/// <summary>
		/// Trailing delta
		/// </summary>
		public static string TrailingDelta => GetString(TrailingDeltaKey);

		/// <summary>
		/// Trailing reference price
		/// </summary>
		public const string TrailingReferencePriceKey = nameof(TrailingReferencePrice);

		/// <summary>
		/// Trailing reference price
		/// </summary>
		public static string TrailingReferencePrice => GetString(TrailingReferencePriceKey);

		/// <summary>
		/// FIX server
		/// </summary>
		public const string FixServerKey = nameof(FixServer);

		/// <summary>
		/// FIX server
		/// </summary>
		public static string FixServer => GetString(FixServerKey);

		/// <summary>
		/// WCF server
		/// </summary>
		public const string WcfServerKey = nameof(WcfServer);

		/// <summary>
		/// WCF server
		/// </summary>
		public static string WcfServer => GetString(WcfServerKey);

		/// <summary>
		/// FIX server, spread live and historical market data.
		/// </summary>
		public const string HydraFixServerKey = nameof(HydraFixServer);

		/// <summary>
		/// FIX server, spread live and historical market data.
		/// </summary>
		public static string HydraFixServer => GetString(HydraFixServerKey);

		/// <summary>
		/// WCF server, spread historical market data in S# format files.
		/// </summary>
		public const string HydraWcfServerKey = nameof(HydraWcfServer);

		/// <summary>
		/// WCF server, spread historical market data in S# format files.
		/// </summary>
		public static string HydraWcfServer => GetString(HydraWcfServerKey);

		/// <summary>
		/// Candle (days)
		/// </summary>
		public const string CandleMaxDaysKey = nameof(CandleMaxDays);

		/// <summary>
		/// Candle (days)
		/// </summary>
		public static string CandleMaxDays => GetString(CandleMaxDaysKey);

		/// <summary>
		/// The maximum number of days available to download historical candles.
		/// </summary>
		public const string CandleMaxDaysDescriptionKey = nameof(CandleMaxDaysDescription);

		/// <summary>
		/// The maximum number of days available to download historical candles.
		/// </summary>
		public static string CandleMaxDaysDescription => GetString(CandleMaxDaysDescriptionKey);

		/// <summary>
		/// Tick (days)
		/// </summary>
		public const string TickMaxDaysKey = nameof(TickMaxDays);

		/// <summary>
		/// Tick (days)
		/// </summary>
		public static string TickMaxDays => GetString(TickMaxDaysKey);

		/// <summary>
		/// The maximum number of days available to download historical tick data.
		/// </summary>
		public const string TickMaxDaysDescriptionKey = nameof(TickMaxDaysDescription);

		/// <summary>
		/// The maximum number of days available to download historical tick data.
		/// </summary>
		public static string TickMaxDaysDescription => GetString(TickMaxDaysDescriptionKey);

		/// <summary>
		/// Book (days)
		/// </summary>
		public const string OrderBookMaxDaysKey = nameof(OrderBookMaxDays);

		/// <summary>
		/// Book (days)
		/// </summary>
		public static string OrderBookMaxDays => GetString(OrderBookMaxDaysKey);

		/// <summary>
		/// The maximum number of days available to download historical order book data.
		/// </summary>
		public const string OrderBookMaxDaysDescriptionKey = nameof(OrderBookMaxDaysDescription);

		/// <summary>
		/// The maximum number of days available to download historical order book data.
		/// </summary>
		public static string OrderBookMaxDaysDescription => GetString(OrderBookMaxDaysDescriptionKey);

		/// <summary>
		/// OL (days)
		/// </summary>
		public const string OrderLogMaxDaysKey = nameof(OrderLogMaxDays);

		/// <summary>
		/// OL (days)
		/// </summary>
		public static string OrderLogMaxDays => GetString(OrderLogMaxDaysKey);

		/// <summary>
		/// The maximum number of days available to download historical order log data.
		/// </summary>
		public const string OrderLogMaxDaysDescriptionKey = nameof(OrderLogMaxDaysDescription);

		/// <summary>
		/// The maximum number of days available to download historical order log data.
		/// </summary>
		public static string OrderLogMaxDaysDescription => GetString(OrderLogMaxDaysDescriptionKey);

		/// <summary>
		/// Transactions (days)
		/// </summary>
		public const string TransactionsMaxDaysKey = nameof(TransactionsMaxDays);

		/// <summary>
		/// Transactions (days)
		/// </summary>
		public static string TransactionsMaxDays => GetString(TransactionsMaxDaysKey);

		/// <summary>
		/// The maximum number of days available to download historical transaction data.
		/// </summary>
		public const string TransactionsMaxDaysDescriptionKey = nameof(TransactionsMaxDaysDescription);

		/// <summary>
		/// The maximum number of days available to download historical transaction data.
		/// </summary>
		public static string TransactionsMaxDaysDescription => GetString(TransactionsMaxDaysDescriptionKey);

		/// <summary>
		/// Sound
		/// </summary>
		public const string SoundKey = nameof(Sound);

		/// <summary>
		/// Sound
		/// </summary>
		public static string Sound => GetString(SoundKey);

		/// <summary>
		/// Popup window
		/// </summary>
		public const string PopupKey = nameof(Popup);

		/// <summary>
		/// Popup window
		/// </summary>
		public static string Popup => GetString(PopupKey);

		/// <summary>
		/// SMS
		/// </summary>
		public const string SmsKey = nameof(Sms);

		/// <summary>
		/// SMS
		/// </summary>
		public static string Sms => GetString(SmsKey);

		/// <summary>
		/// Log file
		/// </summary>
		public const string LogFileKey = nameof(LogFile);

		/// <summary>
		/// Log file
		/// </summary>
		public static string LogFile => GetString(LogFileKey);

		/// <summary>
		/// Need to add the market depth panel
		/// </summary>
		public const string NeedToAddMarketDepthPanelKey = nameof(NeedToAddMarketDepthPanel);

		/// <summary>
		/// Need to add the market depth panel
		/// </summary>
		public static string NeedToAddMarketDepthPanel => GetString(NeedToAddMarketDepthPanelKey);

		/// <summary>
		/// Market depth panel
		/// </summary>
		public const string MarketDepthPanelKey = nameof(MarketDepthPanel);

		/// <summary>
		/// Market depth panel
		/// </summary>
		public static string MarketDepthPanel => GetString(MarketDepthPanelKey);

		/// <summary>
		/// Underlying asset position
		/// </summary>
		public const string UnderlyingAssetPositionKey = nameof(UnderlyingAssetPosition);

		/// <summary>
		/// Underlying asset position
		/// </summary>
		public static string UnderlyingAssetPosition => GetString(UnderlyingAssetPositionKey);

		/// <summary>
		/// Total price size by bids
		/// </summary>
		public const string TotalBidsPriceKey = nameof(TotalBidsPrice);

		/// <summary>
		/// Total price size by bids
		/// </summary>
		public static string TotalBidsPrice => GetString(TotalBidsPriceKey);

		/// <summary>
		/// Total price size by offers
		/// </summary>
		public const string TotalAsksPriceKey = nameof(TotalAsksPrice);

		/// <summary>
		/// Total price size by offers
		/// </summary>
		public static string TotalAsksPrice => GetString(TotalAsksPriceKey);

		/// <summary>
		/// Bids total volume
		/// </summary>
		public const string TotalBidsVolumeKey = nameof(TotalBidsVolume);

		/// <summary>
		/// Bids total volume
		/// </summary>
		public static string TotalBidsVolume => GetString(TotalBidsVolumeKey);

		/// <summary>
		/// Asks total volume
		/// </summary>
		public const string TotalAsksVolumeKey = nameof(TotalAsksVolume);

		/// <summary>
		/// Asks total volume
		/// </summary>
		public static string TotalAsksVolume => GetString(TotalAsksVolumeKey);

		/// <summary>
		/// Total volume
		/// </summary>
		public const string TotalVolumeKey = nameof(TotalVolume);

		/// <summary>
		/// Total volume
		/// </summary>
		public static string TotalVolume => GetString(TotalVolumeKey);

		/// <summary>
		/// Total price size
		/// </summary>
		public const string TotalPriceKey = nameof(TotalPrice);

		/// <summary>
		/// Total price size
		/// </summary>
		public static string TotalPrice => GetString(TotalPriceKey);

		/// <summary>
		/// Total quotes count
		/// </summary>
		public const string TotalQuotesCountKey = nameof(TotalQuotesCount);

		/// <summary>
		/// Total quotes count
		/// </summary>
		public static string TotalQuotesCount => GetString(TotalQuotesCountKey);

		/// <summary>
		/// Maximum depth of book
		/// </summary>
		public const string MaxDepthOfBookKey = nameof(MaxDepthOfBook);

		/// <summary>
		/// Maximum depth of book
		/// </summary>
		public static string MaxDepthOfBook => GetString(MaxDepthOfBookKey);

		/// <summary>
		/// Build index {0} for {1} error.
		/// </summary>
		public const string BuildIndexErrorKey = nameof(BuildIndexError);

		/// <summary>
		/// Build index {0} for {1} error.
		/// </summary>
		public static string BuildIndexError => GetString(BuildIndexErrorKey);

		/// <summary>
		/// OS version
		/// </summary>
		public const string OSVersionKey = nameof(OSVersion);

		/// <summary>
		/// OS version
		/// </summary>
		public static string OSVersion => GetString(OSVersionKey);

		/// <summary>
		/// Bit mode
		/// </summary>
		public const string BitModeKey = nameof(BitMode);

		/// <summary>
		/// Bit mode
		/// </summary>
		public static string BitMode => GetString(BitModeKey);

		/// <summary>
		/// Save build
		/// </summary>
		public const string SaveBuildKey = nameof(SaveBuild);

		/// <summary>
		/// Save build
		/// </summary>
		public static string SaveBuild => GetString(SaveBuildKey);

		/// <summary>
		/// Select destination
		/// </summary>
		public const string SelectDestinationKey = nameof(SelectDestination);

		/// <summary>
		/// Select destination
		/// </summary>
		public static string SelectDestination => GetString(SelectDestinationKey);

		/// <summary>
		/// Expression not set.
		/// </summary>
		public const string ExpressionNotSetKey = nameof(ExpressionNotSet);

		/// <summary>
		/// Expression not set.
		/// </summary>
		public static string ExpressionNotSet => GetString(ExpressionNotSetKey);

		/// <summary>
		/// Analytics '{0}'. Result
		/// </summary>
		public const string AnalyticsResultKey = nameof(AnalyticsResult);

		/// <summary>
		/// Analytics '{0}'. Result
		/// </summary>
		public static string AnalyticsResult => GetString(AnalyticsResultKey);

		/// <summary>
		/// Sample: LOG(AAPL@NASDAQ) / LOG(MSFT@NADAQ)
		/// </summary>
		public const string IndexSampleKey = nameof(IndexSample);

		/// <summary>
		/// Sample: LOG(AAPL@NASDAQ) / LOG(MSFT@NADAQ)
		/// </summary>
		public static string IndexSample => GetString(IndexSampleKey);

		/// <summary>
		/// Available functions
		/// </summary>
		public const string AvailableFunctionsKey = nameof(AvailableFunctions);

		/// <summary>
		/// Available functions
		/// </summary>
		public static string AvailableFunctions => GetString(AvailableFunctionsKey);

		/// <summary>
		/// Rank
		/// </summary>
		public const string RankKey = nameof(Rank);

		/// <summary>
		/// Rank
		/// </summary>
		public static string Rank => GetString(RankKey);

		/// <summary>
		/// Legs
		/// </summary>
		public const string LegsKey = nameof(Legs);

		/// <summary>
		/// Legs
		/// </summary>
		public static string Legs => GetString(LegsKey);

		/// <summary>
		/// Distance
		/// </summary>
		public const string DistanceKey = nameof(Distance);

		/// <summary>
		/// Distance
		/// </summary>
		public static string Distance => GetString(DistanceKey);

		/// <summary>
		/// Benchmark
		/// </summary>
		public const string BenchmarkKey = nameof(Benchmark);

		/// <summary>
		/// Benchmark
		/// </summary>
		public static string Benchmark => GetString(BenchmarkKey);

		/// <summary>
		/// Projection
		/// </summary>
		public const string ProjectionKey = nameof(Projection);

		/// <summary>
		/// Projection
		/// </summary>
		public static string Projection => GetString(ProjectionKey);

		/// <summary>
		/// All period
		/// </summary>
		public const string AllPeriodKey = nameof(AllPeriod);

		/// <summary>
		/// All period
		/// </summary>
		public static string AllPeriod => GetString(AllPeriodKey);

		/// <summary>
		/// Preparation of logs
		/// </summary>
		public const string PreparationLogsKey = nameof(PreparationLogs);

		/// <summary>
		/// Preparation of logs
		/// </summary>
		public static string PreparationLogs => GetString(PreparationLogsKey);

		/// <summary>
		/// Select the duration of logs for export
		/// </summary>
		public const string SelectLogsDurationToExportKey = nameof(SelectLogsDurationToExport);

		/// <summary>
		/// Select the duration of logs for export
		/// </summary>
		public static string SelectLogsDurationToExport => GetString(SelectLogsDurationToExportKey);

		/// <summary>
		/// MICEX TEAP
		/// </summary>
		public const string MicexTeapKey = nameof(MicexTeap);

		/// <summary>
		/// MICEX TEAP
		/// </summary>
		public static string MicexTeap => GetString(MicexTeapKey);

		/// <summary>
		/// Xignite
		/// </summary>
		public const string XigniteKey = nameof(Xignite);

		/// <summary>
		/// Xignite
		/// </summary>
		public static string Xignite => GetString(XigniteKey);

		/// <summary>
		/// Sterling
		/// </summary>
		public const string SterlingKey = nameof(Sterling);

		/// <summary>
		/// Sterling
		/// </summary>
		public static string Sterling => GetString(SterlingKey);

		/// <summary>
		/// FinViz
		/// </summary>
		public const string FinVizKey = nameof(FinViz);

		/// <summary>
		/// FinViz
		/// </summary>
		public static string FinViz => GetString(FinVizKey);

		/// <summary>
		/// Synchronize
		/// </summary>
		public const string SynchronizeKey = nameof(Synchronize);

		/// <summary>
		/// Synchronize
		/// </summary>
		public static string Synchronize => GetString(SynchronizeKey);

		/// <summary>
		/// Volume at open
		/// </summary>
		public const string OpenVolumeKey = nameof(OpenVolume);

		/// <summary>
		/// Volume at open
		/// </summary>
		public static string OpenVolume => GetString(OpenVolumeKey);

		/// <summary>
		/// Volume at close
		/// </summary>
		public const string CloseVolumeKey = nameof(CloseVolume);

		/// <summary>
		/// Volume at close
		/// </summary>
		public static string CloseVolume => GetString(CloseVolumeKey);

		/// <summary>
		/// Volume at high
		/// </summary>
		public const string HighVolumeKey = nameof(HighVolume);

		/// <summary>
		/// Volume at high
		/// </summary>
		public static string HighVolume => GetString(HighVolumeKey);

		/// <summary>
		/// Volume at low
		/// </summary>
		public const string LowVolumeKey = nameof(LowVolume);

		/// <summary>
		/// Volume at low
		/// </summary>
		public static string LowVolume => GetString(LowVolumeKey);

		/// <summary>
		/// Relative volume
		/// </summary>
		public const string RelativeVolumeKey = nameof(RelativeVolume);

		/// <summary>
		/// Relative volume
		/// </summary>
		public static string RelativeVolume => GetString(RelativeVolumeKey);

		/// <summary>
		/// Price levels
		/// </summary>
		public const string PriceLevelsKey = nameof(PriceLevels);

		/// <summary>
		/// Price levels
		/// </summary>
		public static string PriceLevels => GetString(PriceLevelsKey);

		/// <summary>
		/// Tables that need to be monitored for revision changes
		/// </summary>
		public const string RevisionTablesDescKey = nameof(RevisionTablesDesc);

		/// <summary>
		/// Tables that need to be monitored for revision changes
		/// </summary>
		public static string RevisionTablesDesc => GetString(RevisionTablesDescKey);

		/// <summary>
		/// Used connection
		/// </summary>
		public const string UsedConnectionKey = nameof(UsedConnection);

		/// <summary>
		/// Used connection
		/// </summary>
		public static string UsedConnection => GetString(UsedConnectionKey);

		/// <summary>
		/// Session {0}. Uploading securities.
		/// </summary>
		public const string SessionUploadingSecuritiesKey = nameof(SessionUploadingSecurities);

		/// <summary>
		/// Session {0}. Uploading securities.
		/// </summary>
		public static string SessionUploadingSecurities => GetString(SessionUploadingSecuritiesKey);

		/// <summary>
		/// User {0} not found or password is incorrect.
		/// </summary>
		public const string UserNotFoundKey = nameof(UserNotFound);

		/// <summary>
		/// User {0} not found or password is incorrect.
		/// </summary>
		public static string UserNotFound => GetString(UserNotFoundKey);

		/// <summary>
		/// Load securities
		/// </summary>
		public const string LoadSecuritiesKey = nameof(LoadSecurities);

		/// <summary>
		/// Load securities
		/// </summary>
		public static string LoadSecurities => GetString(LoadSecuritiesKey);

		/// <summary>
		/// Edit securities
		/// </summary>
		public const string EditSecuritiesKey = nameof(EditSecurities);

		/// <summary>
		/// Edit securities
		/// </summary>
		public static string EditSecurities => GetString(EditSecuritiesKey);

		/// <summary>
		/// Delete securities
		/// </summary>
		public const string DeleteSecuritiesKey = nameof(DeleteSecurities);

		/// <summary>
		/// Delete securities
		/// </summary>
		public static string DeleteSecurities => GetString(DeleteSecuritiesKey);

		/// <summary>
		/// Load exchanges
		/// </summary>
		public const string LoadExchangesKey = nameof(LoadExchanges);

		/// <summary>
		/// Load exchanges
		/// </summary>
		public static string LoadExchanges => GetString(LoadExchangesKey);

		/// <summary>
		/// Edit exchanges
		/// </summary>
		public const string EditExchangesKey = nameof(EditExchanges);

		/// <summary>
		/// Edit exchanges
		/// </summary>
		public static string EditExchanges => GetString(EditExchangesKey);

		/// <summary>
		/// Delete exchanges
		/// </summary>
		public const string DeleteExchangesKey = nameof(DeleteExchanges);

		/// <summary>
		/// Delete exchanges
		/// </summary>
		public static string DeleteExchanges => GetString(DeleteExchangesKey);

		/// <summary>
		/// Load boards
		/// </summary>
		public const string LoadBoardsKey = nameof(LoadBoards);

		/// <summary>
		/// Load boards
		/// </summary>
		public static string LoadBoards => GetString(LoadBoardsKey);

		/// <summary>
		/// Edit boards
		/// </summary>
		public const string EditBoardsKey = nameof(EditBoards);

		/// <summary>
		/// Edit boards
		/// </summary>
		public static string EditBoards => GetString(EditBoardsKey);

		/// <summary>
		/// Delete boards
		/// </summary>
		public const string DeleteBoardsKey = nameof(DeleteBoards);

		/// <summary>
		/// Delete boards
		/// </summary>
		public static string DeleteBoards => GetString(DeleteBoardsKey);

		/// <summary>
		/// Load data
		/// </summary>
		public const string LoadMarketDataKey = nameof(LoadMarketData);

		/// <summary>
		/// Load data
		/// </summary>
		public static string LoadMarketData => GetString(LoadMarketDataKey);

		/// <summary>
		/// Edit data
		/// </summary>
		public const string EditMarketDataKey = nameof(EditMarketData);

		/// <summary>
		/// Edit data
		/// </summary>
		public static string EditMarketData => GetString(EditMarketDataKey);

		/// <summary>
		/// Delete data
		/// </summary>
		public const string DeleteMarketDataKey = nameof(DeleteMarketData);

		/// <summary>
		/// Delete data
		/// </summary>
		public static string DeleteMarketData => GetString(DeleteMarketDataKey);

		/// <summary>
		/// IP restrictions
		/// </summary>
		public const string IpRestrictionsKey = nameof(IpRestrictions);

		/// <summary>
		/// IP restrictions
		/// </summary>
		public static string IpRestrictions => GetString(IpRestrictionsKey);

		/// <summary>
		/// IP address '{0}' is not valid.
		/// </summary>
		public const string IpAddrNotValidKey = nameof(IpAddrNotValid);

		/// <summary>
		/// IP address '{0}' is not valid.
		/// </summary>
		public static string IpAddrNotValid => GetString(IpAddrNotValidKey);

		/// <summary>
		/// Max bytes (read)
		/// </summary>
		public const string MaxReadBytesKey = nameof(MaxReadBytes);

		/// <summary>
		/// Max bytes (read)
		/// </summary>
		public static string MaxReadBytes => GetString(MaxReadBytesKey);

		/// <summary>
		/// Max bytes (write)
		/// </summary>
		public const string MaxWriteBytesKey = nameof(MaxWriteBytes);

		/// <summary>
		/// Max bytes (write)
		/// </summary>
		public static string MaxWriteBytes => GetString(MaxWriteBytesKey);

		/// <summary>
		/// Gets and sets the maximum allowed bytes per read.
		/// </summary>
		public const string MaxReadBytesDescKey = nameof(MaxReadBytesDesc);

		/// <summary>
		/// Gets and sets the maximum allowed bytes per read.
		/// </summary>
		public static string MaxReadBytesDesc => GetString(MaxReadBytesDescKey);

		/// <summary>
		/// Gets and sets the maximum allowed bytes per write.
		/// </summary>
		public const string MaxWriteBytesDescKey = nameof(MaxWriteBytesDesc);

		/// <summary>
		/// Gets and sets the maximum allowed bytes per write.
		/// </summary>
		public static string MaxWriteBytesDesc => GetString(MaxWriteBytesDescKey);

		/// <summary>
		/// Current count of bytes '{0}' exceeded the allowed size '{1}'.
		/// </summary>
		public const string MaxBytesExceededKey = nameof(MaxBytesExceeded);

		/// <summary>
		/// Current count of bytes '{0}' exceeded the allowed size '{1}'.
		/// </summary>
		public static string MaxBytesExceeded => GetString(MaxBytesExceededKey);

		/// <summary>
		/// Session '{0}' not found.
		/// </summary>
		public const string SessionNotFoundKey = nameof(SessionNotFound);

		/// <summary>
		/// Session '{0}' not found.
		/// </summary>
		public static string SessionNotFound => GetString(SessionNotFoundKey);

		/// <summary>
		/// Time {0} more than close time {1}.
		/// </summary>
		public const string MoreThanCloseTimeKey = nameof(MoreThanCloseTime);

		/// <summary>
		/// Time {0} more than close time {1}.
		/// </summary>
		public static string MoreThanCloseTime => GetString(MoreThanCloseTimeKey);

		/// <summary>
		/// The difference between {0} and {1} cannot be more than 1 day.
		/// </summary>
		public const string BigRangeErrorKey = nameof(BigRangeError);

		/// <summary>
		/// The difference between {0} and {1} cannot be more than 1 day.
		/// </summary>
		public static string BigRangeError => GetString(BigRangeErrorKey);

		/// <summary>
		/// Native id lookup for '{0}'.
		/// </summary>
		public const string NativeIdLookupKey = nameof(NativeIdLookup);

		/// <summary>
		/// Native id lookup for '{0}'.
		/// </summary>
		public static string NativeIdLookup => GetString(NativeIdLookupKey);

		/// <summary>
		/// Is trade allowed
		/// </summary>
		public const string IsTradeAllowedKey = nameof(IsTradeAllowed);

		/// <summary>
		/// Is trade allowed
		/// </summary>
		public static string IsTradeAllowed => GetString(IsTradeAllowedKey);

		/// <summary>
		/// Session {0}. Exchanges search.
		/// </summary>
		public const string RemoteStorageLookupExchangesKey = nameof(RemoteStorageLookupExchanges);

		/// <summary>
		/// Session {0}. Exchanges search.
		/// </summary>
		public static string RemoteStorageLookupExchanges => GetString(RemoteStorageLookupExchangesKey);

		/// <summary>
		/// Session {0}. Exchange boards search.
		/// </summary>
		public const string RemoteStorageLookupExchangeBoardsKey = nameof(RemoteStorageLookupExchangeBoards);

		/// <summary>
		/// Session {0}. Exchange boards search.
		/// </summary>
		public static string RemoteStorageLookupExchangeBoards => GetString(RemoteStorageLookupExchangeBoardsKey);

		/// <summary>
		/// Session {0}. Gettings info about '{1}' exchanges.
		/// </summary>
		public const string RemoteStorageGetExchangesKey = nameof(RemoteStorageGetExchanges);

		/// <summary>
		/// Session {0}. Gettings info about '{1}' exchanges.
		/// </summary>
		public static string RemoteStorageGetExchanges => GetString(RemoteStorageGetExchangesKey);

		/// <summary>
		/// Session {0}. Gettings info about '{1}' boards.
		/// </summary>
		public const string RemoteStorageGetExchangeBoardsKey = nameof(RemoteStorageGetExchangeBoards);

		/// <summary>
		/// Session {0}. Gettings info about '{1}' boards.
		/// </summary>
		public static string RemoteStorageGetExchangeBoards => GetString(RemoteStorageGetExchangeBoardsKey);

		/// <summary>
		/// Session {0}. Save exchanges.
		/// </summary>
		public const string RemoteStorageSaveExchangesKey = nameof(RemoteStorageSaveExchanges);

		/// <summary>
		/// Session {0}. Save exchanges.
		/// </summary>
		public static string RemoteStorageSaveExchanges => GetString(RemoteStorageSaveExchangesKey);

		/// <summary>
		/// Session {0}. Save exchange boards.
		/// </summary>
		public const string RemoteStorageSaveExchangeBoardsKey = nameof(RemoteStorageSaveExchangeBoards);

		/// <summary>
		/// Session {0}. Save exchange boards.
		/// </summary>
		public static string RemoteStorageSaveExchangeBoards => GetString(RemoteStorageSaveExchangeBoardsKey);

		/// <summary>
		/// Session {0}. Deleting '{1}' exchanges.
		/// </summary>
		public const string RemoteStorageDeleteExchangesKey = nameof(RemoteStorageDeleteExchanges);

		/// <summary>
		/// Session {0}. Deleting '{1}' exchanges.
		/// </summary>
		public static string RemoteStorageDeleteExchanges => GetString(RemoteStorageDeleteExchangesKey);

		/// <summary>
		/// Session {0}. Deleting '{1}' boards.
		/// </summary>
		public const string RemoteStorageDeleteExchangeBoardsKey = nameof(RemoteStorageDeleteExchangeBoards);

		/// <summary>
		/// Session {0}. Deleting '{1}' boards.
		/// </summary>
		public static string RemoteStorageDeleteExchangeBoards => GetString(RemoteStorageDeleteExchangeBoardsKey);

		/// <summary>
		/// Session {0}. Get extended fields from '{1}' storage.
		/// </summary>
		public const string RemoteStorageGetSecurityExtendedFieldsKey = nameof(RemoteStorageGetSecurityExtendedFields);

		/// <summary>
		/// Session {0}. Get extended fields from '{1}' storage.
		/// </summary>
		public static string RemoteStorageGetSecurityExtendedFields => GetString(RemoteStorageGetSecurityExtendedFieldsKey);

		/// <summary>
		/// Session {0}. Create extended '{1}' storage with '{2}' fields.
		/// </summary>
		public const string RemoteStorageCreateSecurityExtendedFieldsKey = nameof(RemoteStorageCreateSecurityExtendedFields);

		/// <summary>
		/// Session {0}. Create extended '{1}' storage with '{2}' fields.
		/// </summary>
		public static string RemoteStorageCreateSecurityExtendedFields => GetString(RemoteStorageCreateSecurityExtendedFieldsKey);

		/// <summary>
		/// Session {0}. Delete extended '{1}' storage.
		/// </summary>
		public const string RemoteStorageDeleteSecurityExtendedFieldsKey = nameof(RemoteStorageDeleteSecurityExtendedFields);

		/// <summary>
		/// Session {0}. Delete extended '{1}' storage.
		/// </summary>
		public static string RemoteStorageDeleteSecurityExtendedFields => GetString(RemoteStorageDeleteSecurityExtendedFieldsKey);

		/// <summary>
		/// Session {0}. Add extended info to '{1}' storage for '{2}' security.
		/// </summary>
		public const string RemoteStorageAddSecurityExtendedInfoKey = nameof(RemoteStorageAddSecurityExtendedInfo);

		/// <summary>
		/// Session {0}. Add extended info to '{1}' storage for '{2}' security.
		/// </summary>
		public static string RemoteStorageAddSecurityExtendedInfo => GetString(RemoteStorageAddSecurityExtendedInfoKey);

		/// <summary>
		/// Session {0}. Delete extended info from '{1}' storage for '{2}' security.
		/// </summary>
		public const string RemoteStorageDeleteSecurityExtendedInfoKey = nameof(RemoteStorageDeleteSecurityExtendedInfo);

		/// <summary>
		/// Session {0}. Delete extended info from '{1}' storage for '{2}' security.
		/// </summary>
		public static string RemoteStorageDeleteSecurityExtendedInfo => GetString(RemoteStorageDeleteSecurityExtendedInfoKey);

		/// <summary>
		/// Session {0}. Get extended info storages.
		/// </summary>
		public const string RemoteStorageGetSecurityExtendedStoragesKey = nameof(RemoteStorageGetSecurityExtendedStorages);

		/// <summary>
		/// Session {0}. Get extended info storages.
		/// </summary>
		public static string RemoteStorageGetSecurityExtendedStorages => GetString(RemoteStorageGetSecurityExtendedStoragesKey);

		/// <summary>
		/// Session {0}. Get securities with extended info from '{1}' storage.
		/// </summary>
		public const string RemoteStorageGetExtendedInfoSecuritiesKey = nameof(RemoteStorageGetExtendedInfoSecurities);

		/// <summary>
		/// Session {0}. Get securities with extended info from '{1}' storage.
		/// </summary>
		public static string RemoteStorageGetExtendedInfoSecurities => GetString(RemoteStorageGetExtendedInfoSecuritiesKey);

		/// <summary>
		/// Session {0}. Get extended info from '{1}' storage for '{2}' security.
		/// </summary>
		public const string RemoteStorageGetSecurityExtendedInfoKey = nameof(RemoteStorageGetSecurityExtendedInfo);

		/// <summary>
		/// Session {0}. Get extended info from '{1}' storage for '{2}' security.
		/// </summary>
		public static string RemoteStorageGetSecurityExtendedInfo => GetString(RemoteStorageGetSecurityExtendedInfoKey);

		/// <summary>
		/// Session {0}. Get all extended info from '{1}' storage.
		/// </summary>
		public const string RemoteStorageGetAllExtendedInfoKey = nameof(RemoteStorageGetAllExtendedInfo);

		/// <summary>
		/// Session {0}. Get all extended info from '{1}' storage.
		/// </summary>
		public static string RemoteStorageGetAllExtendedInfo => GetString(RemoteStorageGetAllExtendedInfoKey);

		/// <summary>
		/// Session {0}. Getting users.
		/// </summary>
		public const string RemoteStorageGetUsersKey = nameof(RemoteStorageGetUsers);

		/// <summary>
		/// Session {0}. Getting users.
		/// </summary>
		public static string RemoteStorageGetUsers => GetString(RemoteStorageGetUsersKey);

		/// <summary>
		/// Session {0}. Saving user: login='{1}', IP={2}, permissions={3}.
		/// </summary>
		public const string RemoteStorageSaveUserKey = nameof(RemoteStorageSaveUser);

		/// <summary>
		/// Session {0}. Saving user: login='{1}', IP={2}, permissions={3}.
		/// </summary>
		public static string RemoteStorageSaveUser => GetString(RemoteStorageSaveUserKey);

		/// <summary>
		/// Session {0}. Deleting user '{1}'.
		/// </summary>
		public const string RemoteStorageDeleteUserKey = nameof(RemoteStorageDeleteUser);

		/// <summary>
		/// Session {0}. Deleting user '{1}'.
		/// </summary>
		public static string RemoteStorageDeleteUser => GetString(RemoteStorageDeleteUserKey);

		/// <summary>
		/// Session {0}. Restart.
		/// </summary>
		public const string RemoteStorageRestartKey = nameof(RemoteStorageRestart);

		/// <summary>
		/// Session {0}. Restart.
		/// </summary>
		public static string RemoteStorageRestart => GetString(RemoteStorageRestartKey);

		/// <summary>
		/// Session {0}. Start downloading.
		/// </summary>
		public const string RemoteStorageStartDownloadingKey = nameof(RemoteStorageStartDownloading);

		/// <summary>
		/// Session {0}. Start downloading.
		/// </summary>
		public static string RemoteStorageStartDownloading => GetString(RemoteStorageStartDownloadingKey);

		/// <summary>
		/// Session {0}. Stop downloading.
		/// </summary>
		public const string RemoteStorageStopDownloadingKey = nameof(RemoteStorageStopDownloading);

		/// <summary>
		/// Session {0}. Stop downloading.
		/// </summary>
		public static string RemoteStorageStopDownloading => GetString(RemoteStorageStopDownloadingKey);

		/// <summary>
		/// Get users
		/// </summary>
		public const string GetUsersKey = nameof(GetUsers);

		/// <summary>
		/// Get users
		/// </summary>
		public static string GetUsers => GetString(GetUsersKey);

		/// <summary>
		/// Edit users
		/// </summary>
		public const string EditUsersKey = nameof(EditUsers);

		/// <summary>
		/// Edit users
		/// </summary>
		public static string EditUsers => GetString(EditUsersKey);

		/// <summary>
		/// Delete users
		/// </summary>
		public const string DeleteUsersKey = nameof(DeleteUsers);

		/// <summary>
		/// Delete users
		/// </summary>
		public static string DeleteUsers => GetString(DeleteUsersKey);

		/// <summary>
		/// Restart
		/// </summary>
		public const string RestartKey = nameof(Restart);

		/// <summary>
		/// Restart
		/// </summary>
		public static string Restart => GetString(RestartKey);

		/// <summary>
		/// Manage server
		/// </summary>
		public const string ManageServerKey = nameof(ManageServer);

		/// <summary>
		/// Manage server
		/// </summary>
		public static string ManageServer => GetString(ManageServerKey);

		/// <summary>
		/// Market maker
		/// </summary>
		public const string MarketMakerKey = nameof(MarketMaker);

		/// <summary>
		/// Market maker
		/// </summary>
		public static string MarketMaker => GetString(MarketMakerKey);

		/// <summary>
		/// Is the order of market-maker
		/// </summary>
		public const string MarketMakerOrderKey = nameof(MarketMakerOrder);

		/// <summary>
		/// Is the order of market-maker
		/// </summary>
		public static string MarketMakerOrder => GetString(MarketMakerOrderKey);

		/// <summary>
		/// Connection state: {0}
		/// </summary>
		public const string ConnectionStateParamsKey = nameof(ConnectionStateParams);

		/// <summary>
		/// Connection state: {0}
		/// </summary>
		public static string ConnectionStateParams => GetString(ConnectionStateParamsKey);

		/// <summary>
		/// Create scheme
		/// </summary>
		public const string CreateSchemeKey = nameof(CreateScheme);

		/// <summary>
		/// Create scheme
		/// </summary>
		public static string CreateScheme => GetString(CreateSchemeKey);

		/// <summary>
		/// Order price is not a multiple of security price step. Price step is '{0}', order price is '{1}'.
		/// </summary>
		public const string OrderPriceNotMultipleOfPriceStepKey = nameof(OrderPriceNotMultipleOfPriceStep);

		/// <summary>
		/// Order price is not a multiple of security price step. Price step is '{0}', order price is '{1}'.
		/// </summary>
		public static string OrderPriceNotMultipleOfPriceStep => GetString(OrderPriceNotMultipleOfPriceStepKey);

		/// <summary>
		/// Volume {0} of order {1} is not a multiple of security volume step {2}.
		/// </summary>
		public const string OrderVolumeNotMultipleOfVolumeStepKey = nameof(OrderVolumeNotMultipleOfVolumeStep);

		/// <summary>
		/// Volume {0} of order {1} is not a multiple of security volume step {2}.
		/// </summary>
		public static string OrderVolumeNotMultipleOfVolumeStep => GetString(OrderVolumeNotMultipleOfVolumeStepKey);

		/// <summary>
		/// Delete all breakpoints
		/// </summary>
		public const string DeleteAllBreakPointsKey = nameof(DeleteAllBreakPoints);

		/// <summary>
		/// Delete all breakpoints
		/// </summary>
		public static string DeleteAllBreakPoints => GetString(DeleteAllBreakPointsKey);

		/// <summary>
		/// Order price is not specified
		/// </summary>
		public const string OrderPriceNotSpecifiedKey = nameof(OrderPriceNotSpecified);

		/// <summary>
		/// Order price is not specified
		/// </summary>
		public static string OrderPriceNotSpecified => GetString(OrderPriceNotSpecifiedKey);

		/// <summary>
		/// Order volume is not specified
		/// </summary>
		public const string OrderVolumeNotSpecifiedKey = nameof(OrderVolumeNotSpecified);

		/// <summary>
		/// Order volume is not specified
		/// </summary>
		public static string OrderVolumeNotSpecified => GetString(OrderVolumeNotSpecifiedKey);

		/// <summary>
		/// Order side is not specified
		/// </summary>
		public const string OrderSideNotSpecifiedKey = nameof(OrderSideNotSpecified);

		/// <summary>
		/// Order side is not specified
		/// </summary>
		public static string OrderSideNotSpecified => GetString(OrderSideNotSpecifiedKey);

		/// <summary>
		/// Raise on start
		/// </summary>
		public const string RaiseOnStartKey = nameof(RaiseOnStart);

		/// <summary>
		/// Raise on start
		/// </summary>
		public static string RaiseOnStart => GetString(RaiseOnStartKey);

		/// <summary>
		/// Delete all
		/// </summary>
		public const string DeleteAllKey = nameof(DeleteAll);

		/// <summary>
		/// Delete all
		/// </summary>
		public static string DeleteAll => GetString(DeleteAllKey);

		/// <summary>
		/// Next
		/// </summary>
		public const string NextKey = nameof(Next);

		/// <summary>
		/// Next
		/// </summary>
		public static string Next => GetString(NextKey);

		/// <summary>
		/// Step in
		/// </summary>
		public const string StepInKey = nameof(StepIn);

		/// <summary>
		/// Step in
		/// </summary>
		public static string StepIn => GetString(StepInKey);

		/// <summary>
		/// Step out
		/// </summary>
		public const string StepOutKey = nameof(StepOut);

		/// <summary>
		/// Step out
		/// </summary>
		public static string StepOut => GetString(StepOutKey);

		/// <summary>
		/// Microseconds
		/// </summary>
		public const string MicrosecondsKey = nameof(Microseconds);

		/// <summary>
		/// Microseconds
		/// </summary>
		public static string Microseconds => GetString(MicrosecondsKey);

		/// <summary>
		/// Milliseconds
		/// </summary>
		public const string MillisecondsKey = nameof(Milliseconds);

		/// <summary>
		/// Milliseconds
		/// </summary>
		public static string Milliseconds => GetString(MillisecondsKey);

		/// <summary>
		/// SPB Exchange
		/// </summary>
		public const string SpbExKey = nameof(SpbEx);

		/// <summary>
		/// SPB Exchange
		/// </summary>
		public static string SpbEx => GetString(SpbExKey);

		/// <summary>
		/// Items count: {0}
		/// </summary>
		public const string ItemsCountParamKey = nameof(ItemsCountParam);

		/// <summary>
		/// Items count: {0}
		/// </summary>
		public static string ItemsCountParam => GetString(ItemsCountParamKey);

		/// <summary>
		/// Simulator settings
		/// </summary>
		public const string SimulatorSettingsKey = nameof(SimulatorSettings);

		/// <summary>
		/// Simulator settings
		/// </summary>
		public static string SimulatorSettings => GetString(SimulatorSettingsKey);

		/// <summary>
		/// The security is used in the running strategy.
		/// </summary>
		public const string SecurityIsUsedInRunningStrategyKey = nameof(SecurityIsUsedInRunningStrategy);

		/// <summary>
		/// The security is used in the running strategy.
		/// </summary>
		public static string SecurityIsUsedInRunningStrategy => GetString(SecurityIsUsedInRunningStrategyKey);

		/// <summary>
		/// The security is used in some strategies. Remove anyway?
		/// </summary>
		public const string SecurityIsUsedInSomeStrategiesKey = nameof(SecurityIsUsedInSomeStrategies);

		/// <summary>
		/// The security is used in some strategies. Remove anyway?
		/// </summary>
		public static string SecurityIsUsedInSomeStrategies => GetString(SecurityIsUsedInSomeStrategiesKey);

		/// <summary>
		/// Mass orders cancelling
		/// </summary>
		public const string OrderMassCancellingKey = nameof(OrderMassCancelling);

		/// <summary>
		/// Mass orders cancelling
		/// </summary>
		public static string OrderMassCancelling => GetString(OrderMassCancellingKey);

		/// <summary>
		/// Sockets
		/// </summary>
		public const string SocketsKey = nameof(Sockets);

		/// <summary>
		/// Sockets
		/// </summary>
		public static string Sockets => GetString(SocketsKey);

		/// <summary>
		/// Show element sockets in higher order elements.
		/// </summary>
		public const string ShowSocketsKey = nameof(ShowSockets);

		/// <summary>
		/// Show element sockets in higher order elements.
		/// </summary>
		public static string ShowSockets => GetString(ShowSocketsKey);

		/// <summary>
		/// Use auto naming
		/// </summary>
		public const string UseAutoNamingKey = nameof(UseAutoNaming);

		/// <summary>
		/// Use auto naming
		/// </summary>
		public static string UseAutoNaming => GetString(UseAutoNamingKey);

		/// <summary>
		/// CFI code
		/// </summary>
		public const string CfiCodeKey = nameof(CfiCode);

		/// <summary>
		/// CFI code
		/// </summary>
		public static string CfiCode => GetString(CfiCodeKey);

		/// <summary>
		/// Type in ISO 10962 standard.
		/// </summary>
		public const string CfiCodeDescKey = nameof(CfiCodeDesc);

		/// <summary>
		/// Type in ISO 10962 standard.
		/// </summary>
		public static string CfiCodeDesc => GetString(CfiCodeDescKey);

		/// <summary>
		/// Enable simulator
		/// </summary>
		public const string EnableSimulatorKey = nameof(EnableSimulator);

		/// <summary>
		/// Enable simulator
		/// </summary>
		public static string EnableSimulator => GetString(EnableSimulatorKey);

		/// <summary>
		/// Order side
		/// </summary>
		public const string OrderSideKey = nameof(OrderSide);

		/// <summary>
		/// Order side
		/// </summary>
		public static string OrderSide => GetString(OrderSideKey);

		/// <summary>
		/// Side
		/// </summary>
		public const string SideKey = nameof(Side);

		/// <summary>
		/// Side
		/// </summary>
		public static string Side => GetString(SideKey);

		/// <summary>
		/// Pegged
		/// </summary>
		public const string PeggedKey = nameof(Pegged);

		/// <summary>
		/// Pegged
		/// </summary>
		public static string Pegged => GetString(PeggedKey);

		/// <summary>
		/// Market or better
		/// </summary>
		public const string MarketOrBetterKey = nameof(MarketOrBetter);

		/// <summary>
		/// Market or better
		/// </summary>
		public static string MarketOrBetter => GetString(MarketOrBetterKey);

		/// <summary>
		/// Market or better
		/// </summary>
		public const string MarketNoWaitKey = nameof(MarketNoWait);

		/// <summary>
		/// Market or better
		/// </summary>
		public static string MarketNoWait => GetString(MarketNoWaitKey);

		/// <summary>
		/// Limit or better
		/// </summary>
		public const string LimitOrBetterKey = nameof(LimitOrBetter);

		/// <summary>
		/// Limit or better
		/// </summary>
		public static string LimitOrBetter => GetString(LimitOrBetterKey);

		/// <summary>
		/// Limit no wait
		/// </summary>
		public const string LimitNoWaitKey = nameof(LimitNoWait);

		/// <summary>
		/// Limit no wait
		/// </summary>
		public static string LimitNoWait => GetString(LimitNoWaitKey);

		/// <summary>
		/// No wait
		/// </summary>
		public const string NoWaitKey = nameof(NoWait);

		/// <summary>
		/// No wait
		/// </summary>
		public static string NoWait => GetString(NoWaitKey);

		/// <summary>
		/// On close
		/// </summary>
		public const string OnCloseKey = nameof(OnClose);

		/// <summary>
		/// On close
		/// </summary>
		public static string OnClose => GetString(OnCloseKey);

		/// <summary>
		/// Server stop
		/// </summary>
		public const string ServerStopKey = nameof(ServerStop);

		/// <summary>
		/// Server stop
		/// </summary>
		public static string ServerStop => GetString(ServerStopKey);

		/// <summary>
		/// Server stop-limit
		/// </summary>
		public const string ServerStopLimitKey = nameof(ServerStopLimit);

		/// <summary>
		/// Server stop-limit
		/// </summary>
		public static string ServerStopLimit => GetString(ServerStopLimitKey);

		/// <summary>
		/// By last price
		/// </summary>
		public const string ByLastPriceKey = nameof(ByLastPrice);

		/// <summary>
		/// By last price
		/// </summary>
		public static string ByLastPrice => GetString(ByLastPriceKey);

		/// <summary>
		/// There are errors in the application logs, help us to improve the program by sending your logs. Send now?
		/// </summary>
		public const string SendLogsNowQuestionKey = nameof(SendLogsNowQuestion);

		/// <summary>
		/// There are errors in the application logs, help us to improve the program by sending your logs. Send now?
		/// </summary>
		public static string SendLogsNowQuestion => GetString(SendLogsNowQuestionKey);

		/// <summary>
		/// If you have any questions, you can always ask them through the suggestions form. Ask now?
		/// </summary>
		public const string IfYouHaveAnyQuestionsKey = nameof(IfYouHaveAnyQuestions);

		/// <summary>
		/// If you have any questions, you can always ask them through the suggestions form. Ask now?
		/// </summary>
		public static string IfYouHaveAnyQuestions => GetString(IfYouHaveAnyQuestionsKey);

		/// <summary>
		/// Left to enter
		/// </summary>
		public const string LeftToEnterKey = nameof(LeftToEnter);

		/// <summary>
		/// Left to enter
		/// </summary>
		public static string LeftToEnter => GetString(LeftToEnterKey);

		/// <summary>
		/// Please, give a rating to our application.
		/// </summary>
		public const string GiveRatingToOurApplicationKey = nameof(GiveRatingToOurApplication);

		/// <summary>
		/// Please, give a rating to our application.
		/// </summary>
		public static string GiveRatingToOurApplication => GetString(GiveRatingToOurApplicationKey);

		/// <summary>
		/// Text (optional)
		/// </summary>
		public const string TextOptionalKey = nameof(TextOptional);

		/// <summary>
		/// Text (optional)
		/// </summary>
		public static string TextOptional => GetString(TextOptionalKey);

		/// <summary>
		/// Your feedback is very valuable to us. Thank you!
		/// </summary>
		public const string ThankYouForFeedbackKey = nameof(ThankYouForFeedback);

		/// <summary>
		/// Your feedback is very valuable to us. Thank you!
		/// </summary>
		public static string ThankYouForFeedback => GetString(ThankYouForFeedbackKey);

		/// <summary>
		/// Commodity
		/// </summary>
		public const string CommodityKey = nameof(Commodity);

		/// <summary>
		/// Commodity
		/// </summary>
		public static string Commodity => GetString(CommodityKey);

		/// <summary>
		/// CFD
		/// </summary>
		public const string CfdKey = nameof(Cfd);

		/// <summary>
		/// CFD
		/// </summary>
		public static string Cfd => GetString(CfdKey);

		/// <summary>
		/// ADR
		/// </summary>
		public const string AdrKey = nameof(Adr);

		/// <summary>
		/// ADR
		/// </summary>
		public static string Adr => GetString(AdrKey);

		/// <summary>
		/// Bug report
		/// </summary>
		public const string BugReportKey = nameof(BugReport);

		/// <summary>
		/// Bug report
		/// </summary>
		public static string BugReport => GetString(BugReportKey);

		/// <summary>
		/// Candlestick
		/// </summary>
		public const string CandleStickKey = nameof(CandleStick);

		/// <summary>
		/// Candlestick
		/// </summary>
		public static string CandleStick => GetString(CandleStickKey);

		/// <summary>
		/// Selected strategy is not compatible with S#.Designer. You can continue subscribing, but then download separately from web site. Continue subscription?
		/// </summary>
		public const string NotCompatibleStrategyKey = nameof(NotCompatibleStrategy);

		/// <summary>
		/// Selected strategy is not compatible with S#.Designer. You can continue subscribing, but then download separately from web site. Continue subscription?
		/// </summary>
		public static string NotCompatibleStrategy => GetString(NotCompatibleStrategyKey);

		/// <summary>
		/// Lifetime
		/// </summary>
		public const string LifetimeKey = nameof(Lifetime);

		/// <summary>
		/// Lifetime
		/// </summary>
		public static string Lifetime => GetString(LifetimeKey);

		/// <summary>
		/// Per month
		/// </summary>
		public const string PerMonthKey = nameof(PerMonth);

		/// <summary>
		/// Per month
		/// </summary>
		public static string PerMonth => GetString(PerMonthKey);

		/// <summary>
		/// Annual
		/// </summary>
		public const string AnnualKey = nameof(Annual);

		/// <summary>
		/// Annual
		/// </summary>
		public static string Annual => GetString(AnnualKey);

		/// <summary>
		/// FXCM
		/// </summary>
		public const string FxcmKey = nameof(Fxcm);

		/// <summary>
		/// FXCM
		/// </summary>
		public static string Fxcm => GetString(FxcmKey);

		/// <summary>
		/// FXCM (history)
		/// </summary>
		public const string FxcmHistoryKey = nameof(FxcmHistory);

		/// <summary>
		/// FXCM (history)
		/// </summary>
		public static string FxcmHistory => GetString(FxcmHistoryKey);

		/// <summary>
		/// Export to '{0}' done. Would you like to open it?
		/// </summary>
		public const string ExportDoneOpenFileKey = nameof(ExportDoneOpenFile);

		/// <summary>
		/// Export to '{0}' done. Would you like to open it?
		/// </summary>
		public static string ExportDoneOpenFile => GetString(ExportDoneOpenFileKey);

		/// <summary>
		/// Show spread on chart...
		/// </summary>
		public const string ChartShowSpreadKey = nameof(ChartShowSpread);

		/// <summary>
		/// Show spread on chart...
		/// </summary>
		public static string ChartShowSpread => GetString(ChartShowSpreadKey);

		/// <summary>
		/// Import securities?
		/// </summary>
		public const string ImportSecuritiesKey = nameof(ImportSecurities);

		/// <summary>
		/// Import securities?
		/// </summary>
		public static string ImportSecurities => GetString(ImportSecuritiesKey);

		/// <summary>
		/// Remove selected storage?
		/// </summary>
		public const string RemoveDriveQuestionKey = nameof(RemoveDriveQuestion);

		/// <summary>
		/// Remove selected storage?
		/// </summary>
		public static string RemoveDriveQuestion => GetString(RemoveDriveQuestionKey);

		/// <summary>
		/// Transactions only
		/// </summary>
		public const string OnlyTransactionsKey = nameof(OnlyTransactions);

		/// <summary>
		/// Transactions only
		/// </summary>
		public static string OnlyTransactions => GetString(OnlyTransactionsKey);

		/// <summary>
		/// Write log messages only for transaction stream.
		/// </summary>
		public const string OnlyTransactionsLogKey = nameof(OnlyTransactionsLog);

		/// <summary>
		/// Write log messages only for transaction stream.
		/// </summary>
		public static string OnlyTransactionsLog => GetString(OnlyTransactionsLogKey);

		/// <summary>
		/// Last position time
		/// </summary>
		public const string LastPosChangeTimeKey = nameof(LastPosChangeTime);

		/// <summary>
		/// Last position time
		/// </summary>
		public static string LastPosChangeTime => GetString(LastPosChangeTimeKey);

		/// <summary>
		/// Security codes &lt;-&gt; Adapters codes
		/// </summary>
		public const string SecurityCodesAdaptersCodesKey = nameof(SecurityCodesAdaptersCodes);

		/// <summary>
		/// Security codes &lt;-&gt; Adapters codes
		/// </summary>
		public static string SecurityCodesAdaptersCodes => GetString(SecurityCodesAdaptersCodesKey);

		/// <summary>
		/// Securities and connections
		/// </summary>
		public const string SecuritiesAndConnectionsKey = nameof(SecuritiesAndConnections);

		/// <summary>
		/// Securities and connections
		/// </summary>
		public static string SecuritiesAndConnections => GetString(SecuritiesAndConnectionsKey);

		/// <summary>
		/// Adapter code
		/// </summary>
		public const string AdapterCodeKey = nameof(AdapterCode);

		/// <summary>
		/// Adapter code
		/// </summary>
		public static string AdapterCode => GetString(AdapterCodeKey);

		/// <summary>
		/// Incremental
		/// </summary>
		public const string IncrementalKey = nameof(Incremental);

		/// <summary>
		/// Incremental
		/// </summary>
		public static string Incremental => GetString(IncrementalKey);

		/// <summary>
		/// Incremental data feed.
		/// </summary>
		public const string IncrementalFeedKey = nameof(IncrementalFeed);

		/// <summary>
		/// Incremental data feed.
		/// </summary>
		public static string IncrementalFeed => GetString(IncrementalFeedKey);

		/// <summary>
		/// Snapshot
		/// </summary>
		public const string SnapshotKey = nameof(Snapshot);

		/// <summary>
		/// Snapshot
		/// </summary>
		public static string Snapshot => GetString(SnapshotKey);

		/// <summary>
		/// Snapshot data feed.
		/// </summary>
		public const string SnapshotFeedKey = nameof(SnapshotFeed);

		/// <summary>
		/// Snapshot data feed.
		/// </summary>
		public static string SnapshotFeed => GetString(SnapshotFeedKey);

		/// <summary>
		/// FAST settings
		/// </summary>
		public const string FastSettingsKey = nameof(FastSettings);

		/// <summary>
		/// FAST settings
		/// </summary>
		public static string FastSettings => GetString(FastSettingsKey);

		/// <summary>
		/// News (SKRIN)
		/// </summary>
		public const string NewsSkrinKey = nameof(NewsSkrin);

		/// <summary>
		/// News (SKRIN)
		/// </summary>
		public static string NewsSkrin => GetString(NewsSkrinKey);

		/// <summary>
		/// Enabled
		/// </summary>
		public const string EnabledKey = nameof(Enabled);

		/// <summary>
		/// Enabled
		/// </summary>
		public static string Enabled => GetString(EnabledKey);

		/// <summary>
		/// FAST
		/// </summary>
		public const string FastKey = nameof(Fast);

		/// <summary>
		/// FAST
		/// </summary>
		public static string Fast => GetString(FastKey);

		/// <summary>
		/// Settings file
		/// </summary>
		public const string SettingsFileKey = nameof(SettingsFile);

		/// <summary>
		/// Settings file
		/// </summary>
		public static string SettingsFile => GetString(SettingsFileKey);

		/// <summary>
		/// Adapter board code
		/// </summary>
		public const string AdapterBoardKey = nameof(AdapterBoard);

		/// <summary>
		/// Adapter board code
		/// </summary>
		public static string AdapterBoard => GetString(AdapterBoardKey);

		/// <summary>
		/// Connection not specified for {0}
		/// </summary>
		public const string ConnectionNotSpecifiedParamsKey = nameof(ConnectionNotSpecifiedParams);

		/// <summary>
		/// Connection not specified for {0}
		/// </summary>
		public static string ConnectionNotSpecifiedParams => GetString(ConnectionNotSpecifiedParamsKey);

		/// <summary>
		/// Security or board code not specified for {0}
		/// </summary>
		public const string SecurityOrBoardCodeNotSpecifiedParamsKey = nameof(SecurityOrBoardCodeNotSpecifiedParams);

		/// <summary>
		/// Security or board code not specified for {0}
		/// </summary>
		public static string SecurityOrBoardCodeNotSpecifiedParams => GetString(SecurityOrBoardCodeNotSpecifiedParamsKey);

		/// <summary>
		/// Security or board code are duplicated for {0}
		/// </summary>
		public const string SecurityOrBoardCodeDuplicatedParamsKey = nameof(SecurityOrBoardCodeDuplicatedParams);

		/// <summary>
		/// Security or board code are duplicated for {0}
		/// </summary>
		public static string SecurityOrBoardCodeDuplicatedParams => GetString(SecurityOrBoardCodeDuplicatedParamsKey);

		/// <summary>
		/// Bytes
		/// </summary>
		public const string BytesKey = nameof(Bytes);

		/// <summary>
		/// Bytes
		/// </summary>
		public static string Bytes => GetString(BytesKey);

		/// <summary>
		/// Project
		/// </summary>
		public const string ProjectKey = nameof(Project);

		/// <summary>
		/// Project
		/// </summary>
		public static string Project => GetString(ProjectKey);

		/// <summary>
		/// Later
		/// </summary>
		public const string LaterKey = nameof(Later);

		/// <summary>
		/// Later
		/// </summary>
		public static string Later => GetString(LaterKey);

		/// <summary>
		/// The source is obsolete and can no longer be used.
		/// </summary>
		public const string SourceObsoleteKey = nameof(SourceObsolete);

		/// <summary>
		/// The source is obsolete and can no longer be used.
		/// </summary>
		public static string SourceObsolete => GetString(SourceObsoleteKey);

		/// <summary>
		/// Currency market
		/// </summary>
		public const string CurrencyMarketKey = nameof(CurrencyMarket);

		/// <summary>
		/// Currency market
		/// </summary>
		public static string CurrencyMarket => GetString(CurrencyMarketKey);

		/// <summary>
		/// Fond market
		/// </summary>
		public const string FondMarketKey = nameof(FondMarket);

		/// <summary>
		/// Fond market
		/// </summary>
		public static string FondMarket => GetString(FondMarketKey);

		/// <summary>
		/// Enqueue non ordered
		/// </summary>
		public const string SuspendKey = nameof(Suspend);

		/// <summary>
		/// Enqueue non ordered
		/// </summary>
		public static string Suspend => GetString(SuspendKey);

		/// <summary>
		/// Enable suspend mode (enqueue non ordered messages).
		/// </summary>
		public const string SuspendDescKey = nameof(SuspendDesc);

		/// <summary>
		/// Enable suspend mode (enqueue non ordered messages).
		/// </summary>
		public static string SuspendDesc => GetString(SuspendDescKey);

		/// <summary>
		/// Breakpoints
		/// </summary>
		public const string BreakpointsKey = nameof(Breakpoints);

		/// <summary>
		/// Breakpoints
		/// </summary>
		public static string Breakpoints => GetString(BreakpointsKey);

		/// <summary>
		/// Import (auto)
		/// </summary>
		public const string ImportAutoKey = nameof(ImportAuto);

		/// <summary>
		/// Import (auto)
		/// </summary>
		public static string ImportAuto => GetString(ImportAutoKey);

		/// <summary>
		/// Task designed for automatic schedule data importing from text files.
		/// </summary>
		public const string ImportAutoTaskKey = nameof(ImportAutoTask);

		/// <summary>
		/// Task designed for automatic schedule data importing from text files.
		/// </summary>
		public static string ImportAutoTask => GetString(ImportAutoTaskKey);

		/// <summary>
		/// Subdirectories
		/// </summary>
		public const string SubDirectoriesKey = nameof(SubDirectories);

		/// <summary>
		/// Subdirectories
		/// </summary>
		public static string SubDirectories => GetString(SubDirectoriesKey);

		/// <summary>
		/// Include subdirectories.
		/// </summary>
		public const string SubDirectoriesIncludeKey = nameof(SubDirectoriesInclude);

		/// <summary>
		/// Include subdirectories.
		/// </summary>
		public static string SubDirectoriesInclude => GetString(SubDirectoriesIncludeKey);

		/// <summary>
		/// Save imported extended fields into extended storage.
		/// </summary>
		public const string ExtendedInfoImportKey = nameof(ExtendedInfoImport);

		/// <summary>
		/// Save imported extended fields into extended storage.
		/// </summary>
		public static string ExtendedInfoImport => GetString(ExtendedInfoImportKey);

		/// <summary>
		/// Duplicates
		/// </summary>
		public const string DuplicatesKey = nameof(Duplicates);

		/// <summary>
		/// Duplicates
		/// </summary>
		public static string Duplicates => GetString(DuplicatesKey);

		/// <summary>
		/// Update duplicate securities if they already exists.
		/// </summary>
		public const string UpdateDuplicateSecuritiesKey = nameof(UpdateDuplicateSecurities);

		/// <summary>
		/// Update duplicate securities if they already exists.
		/// </summary>
		public static string UpdateDuplicateSecurities => GetString(UpdateDuplicateSecuritiesKey);

		/// <summary>
		/// Create from sample
		/// </summary>
		public const string CreateFromSampleKey = nameof(CreateFromSample);

		/// <summary>
		/// Create from sample
		/// </summary>
		public static string CreateFromSample => GetString(CreateFromSampleKey);

		/// <summary>
		/// Storage '{0}' already exist.
		/// </summary>
		public const string StorageAlreadyExistKey = nameof(StorageAlreadyExist);

		/// <summary>
		/// Storage '{0}' already exist.
		/// </summary>
		public static string StorageAlreadyExist => GetString(StorageAlreadyExistKey);

		/// <summary>
		/// Ignore non id
		/// </summary>
		public const string IgnoreNonIdSecuritiesKey = nameof(IgnoreNonIdSecurities);

		/// <summary>
		/// Ignore non id
		/// </summary>
		public static string IgnoreNonIdSecurities => GetString(IgnoreNonIdSecuritiesKey);

		/// <summary>
		/// Ignore securities without identifiers.
		/// </summary>
		public const string IgnoreNonIdSecuritiesDescKey = nameof(IgnoreNonIdSecuritiesDesc);

		/// <summary>
		/// Ignore securities without identifiers.
		/// </summary>
		public static string IgnoreNonIdSecuritiesDesc => GetString(IgnoreNonIdSecuritiesDescKey);

		/// <summary>
		/// Line '{0}' does not contain security identifier.
		/// </summary>
		public const string LineNoSecurityIdKey = nameof(LineNoSecurityId);

		/// <summary>
		/// Line '{0}' does not contain security identifier.
		/// </summary>
		public static string LineNoSecurityId => GetString(LineNoSecurityIdKey);

		/// <summary>
		/// QuantFEED
		/// </summary>
		public const string QuantFeedKey = nameof(QuantFeed);

		/// <summary>
		/// QuantFEED
		/// </summary>
		public static string QuantFeed => GetString(QuantFeedKey);

		/// <summary>
		/// Verbose
		/// </summary>
		public const string VerboseKey = nameof(Verbose);

		/// <summary>
		/// Verbose
		/// </summary>
		public static string Verbose => GetString(VerboseKey);

		/// <summary>
		/// Limits
		/// </summary>
		public const string LimitsKey = nameof(Limits);

		/// <summary>
		/// Limits
		/// </summary>
		public static string Limits => GetString(LimitsKey);

		/// <summary>
		/// Ignore limits.
		/// </summary>
		public const string IgnoreLimitsKey = nameof(IgnoreLimits);

		/// <summary>
		/// Ignore limits.
		/// </summary>
		public static string IgnoreLimits => GetString(IgnoreLimitsKey);

		/// <summary>
		/// Work area
		/// </summary>
		public const string WorkAreaKey = nameof(WorkArea);

		/// <summary>
		/// Work area
		/// </summary>
		public static string WorkArea => GetString(WorkAreaKey);

		/// <summary>
		/// Create a new work area
		/// </summary>
		public const string CreateWorkAreaKey = nameof(CreateWorkArea);

		/// <summary>
		/// Create a new work area
		/// </summary>
		public static string CreateWorkArea => GetString(CreateWorkAreaKey);

		/// <summary>
		/// Level2
		/// </summary>
		public const string Level2Key = nameof(Level2);

		/// <summary>
		/// Level2
		/// </summary>
		public static string Level2 => GetString(Level2Key);

		/// <summary>
		/// Buy/Sell
		/// </summary>
		public const string BuySellKey = nameof(BuySell);

		/// <summary>
		/// Buy/Sell
		/// </summary>
		public static string BuySell => GetString(BuySellKey);

		/// <summary>
		/// Panel for buy/sell operations.
		/// </summary>
		public const string BuySellPanelKey = nameof(BuySellPanel);

		/// <summary>
		/// Panel for buy/sell operations.
		/// </summary>
		public static string BuySellPanel => GetString(BuySellPanelKey);

		/// <summary>
		/// Select indicator.
		/// </summary>
		public const string SelectIndicatorKey = nameof(SelectIndicator);

		/// <summary>
		/// Select indicator.
		/// </summary>
		public static string SelectIndicator => GetString(SelectIndicatorKey);

		/// <summary>
		/// Wait all trades
		/// </summary>
		public const string WaitAllTradesKey = nameof(WaitAllTrades);

		/// <summary>
		/// Wait all trades
		/// </summary>
		public static string WaitAllTrades => GetString(WaitAllTradesKey);

		/// <summary>
		/// Process null values
		/// </summary>
		public const string ProcessNullValuesKey = nameof(ProcessNullValues);

		/// <summary>
		/// Process null values
		/// </summary>
		public static string ProcessNullValues => GetString(ProcessNullValuesKey);

		/// <summary>
		/// {0} securities will be delete permanently.
		/// </summary>
		public const string DeleteNSecuritiesKey = nameof(DeleteNSecurities);

		/// <summary>
		/// {0} securities will be delete permanently.
		/// </summary>
		public static string DeleteNSecurities => GetString(DeleteNSecuritiesKey);

		/// <summary>
		/// Security {0} is not composite.
		/// </summary>
		public const string NotCompositeSecurityKey = nameof(NotCompositeSecurity);

		/// <summary>
		/// Security {0} is not composite.
		/// </summary>
		public static string NotCompositeSecurity => GetString(NotCompositeSecurityKey);

		/// <summary>
		/// Cut the price for the order
		/// </summary>
		public const string ShrinkPriceKey = nameof(ShrinkPrice);

		/// <summary>
		/// Cut the price for the order
		/// </summary>
		public static string ShrinkPrice => GetString(ShrinkPriceKey);

		/// <summary>
		/// Heatmap
		/// </summary>
		public const string HeatmapKey = nameof(Heatmap);

		/// <summary>
		/// Heatmap
		/// </summary>
		public static string Heatmap => GetString(HeatmapKey);

		/// <summary>
		/// Saving
		/// </summary>
		public const string SavingKey = nameof(Saving);

		/// <summary>
		/// Saving
		/// </summary>
		public static string Saving => GetString(SavingKey);

		/// <summary>
		/// Result type
		/// </summary>
		public const string ResultTypeKey = nameof(ResultType);

		/// <summary>
		/// Result type
		/// </summary>
		public static string ResultType => GetString(ResultTypeKey);

		/// <summary>
		/// Portfolio '{0}' already exist.
		/// </summary>
		public const string PortfolioAlreadyExistKey = nameof(PortfolioAlreadyExist);

		/// <summary>
		/// Portfolio '{0}' already exist.
		/// </summary>
		public static string PortfolioAlreadyExist => GetString(PortfolioAlreadyExistKey);

		/// <summary>
		/// Position '{0}' already exist.
		/// </summary>
		public const string PositionAlreadyExistKey = nameof(PositionAlreadyExist);

		/// <summary>
		/// Position '{0}' already exist.
		/// </summary>
		public static string PositionAlreadyExist => GetString(PositionAlreadyExistKey);

		/// <summary>
		/// Bids above
		/// </summary>
		public const string BidsOnTopKey = nameof(BidsOnTop);

		/// <summary>
		/// Bids above
		/// </summary>
		public static string BidsOnTop => GetString(BidsOnTopKey);

		/// <summary>
		/// Whether to show the bids above. The default is off.
		/// </summary>
		public const string BidsOnTopDescKey = nameof(BidsOnTopDesc);

		/// <summary>
		/// Whether to show the bids above. The default is off.
		/// </summary>
		public static string BidsOnTopDesc => GetString(BidsOnTopDescKey);

		/// <summary>
		/// Math formula. For example: (sin(x)+log(y)) / z
		/// </summary>
		public const string MathFormulaDescKey = nameof(MathFormulaDesc);

		/// <summary>
		/// Math formula. For example: (sin(x)+log(y)) / z
		/// </summary>
		public static string MathFormulaDesc => GetString(MathFormulaDescKey);

		/// <summary>
		/// +{0} more
		/// </summary>
		public const string NMoreKey = nameof(NMore);

		/// <summary>
		/// +{0} more
		/// </summary>
		public static string NMore => GetString(NMoreKey);

		/// <summary>
		/// Update securities
		/// </summary>
		public const string UpdateSecuritiesKey = nameof(UpdateSecurities);

		/// <summary>
		/// Update securities
		/// </summary>
		public static string UpdateSecurities => GetString(UpdateSecuritiesKey);

		/// <summary>
		/// Update securities when connected.
		/// </summary>
		public const string UpdateSecuritiesOnConnectKey = nameof(UpdateSecuritiesOnConnect);

		/// <summary>
		/// Update securities when connected.
		/// </summary>
		public static string UpdateSecuritiesOnConnect => GetString(UpdateSecuritiesOnConnectKey);

		/// <summary>
		/// Need {0} securities.
		/// </summary>
		public const string NeedNSecuritiesKey = nameof(NeedNSecurities);

		/// <summary>
		/// Need {0} securities.
		/// </summary>
		public static string NeedNSecurities => GetString(NeedNSecuritiesKey);

		/// <summary>
		/// Closing price (chart)
		/// </summary>
		public const string ClosingPriceChartKey = nameof(ClosingPriceChart);

		/// <summary>
		/// Closing price (chart)
		/// </summary>
		public static string ClosingPriceChart => GetString(ClosingPriceChartKey);

		/// <summary>
		/// P&amp;L (chart)
		/// </summary>
		public const string PnLChartKey = nameof(PnLChart);

		/// <summary>
		/// P&amp;L (chart)
		/// </summary>
		public static string PnLChart => GetString(PnLChartKey);

		/// <summary>
		/// Expiry (days)
		/// </summary>
		public const string ExpirationDaysKey = nameof(ExpirationDays);

		/// <summary>
		/// Expiry (days)
		/// </summary>
		public static string ExpirationDays => GetString(ExpirationDaysKey);

		/// <summary>
		/// Set up task '{0}' now?
		/// </summary>
		public const string SetupTaskNowKey = nameof(SetupTaskNow);

		/// <summary>
		/// Set up task '{0}' now?
		/// </summary>
		public static string SetupTaskNow => GetString(SetupTaskNowKey);

		/// <summary>
		/// Enable task '{0}' now (the task will go into the active mode)?
		/// </summary>
		public const string EnableTaskNowKey = nameof(EnableTaskNow);

		/// <summary>
		/// Enable task '{0}' now (the task will go into the active mode)?
		/// </summary>
		public static string EnableTaskNow => GetString(EnableTaskNowKey);

		/// <summary>
		/// At the moment, no instruments are specified for task '{0}'. Add them now (or download if they are not yet exist)?
		/// </summary>
		public const string AddSecuritiesNowKey = nameof(AddSecuritiesNow);

		/// <summary>
		/// At the moment, no instruments are specified for task '{0}'. Add them now (or download if they are not yet exist)?
		/// </summary>
		public static string AddSecuritiesNow => GetString(AddSecuritiesNowKey);

		/// <summary>
		/// Open account
		/// </summary>
		public const string OpenAccountKey = nameof(OpenAccount);

		/// <summary>
		/// Open account
		/// </summary>
		public static string OpenAccount => GetString(OpenAccountKey);

		/// <summary>
		/// Sender ID not set.
		/// </summary>
		public const string SenderIdNotSetKey = nameof(SenderIdNotSet);

		/// <summary>
		/// Sender ID not set.
		/// </summary>
		public static string SenderIdNotSet => GetString(SenderIdNotSetKey);

		/// <summary>
		/// Target ID not set.
		/// </summary>
		public const string TargetIdNotSetKey = nameof(TargetIdNotSet);

		/// <summary>
		/// Target ID not set.
		/// </summary>
		public static string TargetIdNotSet => GetString(TargetIdNotSetKey);

		/// <summary>
		/// The database is corrupted and can not continue. Do you want to reset all settings?
		/// </summary>
		public const string DatabaseCorruptedResetConfigKey = nameof(DatabaseCorruptedResetConfig);

		/// <summary>
		/// The database is corrupted and can not continue. Do you want to reset all settings?
		/// </summary>
		public static string DatabaseCorruptedResetConfig => GetString(DatabaseCorruptedResetConfigKey);

		/// <summary>
		/// Insufficient memory to download all instruments. The option turned off.
		/// </summary>
		public const string InsufficientMemoryKey = nameof(InsufficientMemory);

		/// <summary>
		/// Insufficient memory to download all instruments. The option turned off.
		/// </summary>
		public static string InsufficientMemory => GetString(InsufficientMemoryKey);

		/// <summary>
		/// Cancelling
		/// </summary>
		public const string CancellingKey = nameof(Cancelling);

		/// <summary>
		/// Cancelling
		/// </summary>
		public static string Cancelling => GetString(CancellingKey);

		/// <summary>
		/// Candle {0} has active state and cannot be stored.
		/// </summary>
		public const string CandleActiveNotSupportKey = nameof(CandleActiveNotSupport);

		/// <summary>
		/// Candle {0} has active state and cannot be stored.
		/// </summary>
		public static string CandleActiveNotSupport => GetString(CandleActiveNotSupportKey);

		/// <summary>
		/// {0} options
		/// </summary>
		public const string NNOptionsKey = nameof(NNOptions);

		/// <summary>
		/// {0} options
		/// </summary>
		public static string NNOptions => GetString(NNOptionsKey);

		/// <summary>
		/// Cannot open link '{0}'. Please try it manually (was copied to clipboard).
		/// </summary>
		public const string CannotOpenLinkKey = nameof(CannotOpenLink);

		/// <summary>
		/// Cannot open link '{0}'. Please try it manually (was copied to clipboard).
		/// </summary>
		public static string CannotOpenLink => GetString(CannotOpenLinkKey);

		/// <summary>
		/// Underlying security type
		/// </summary>
		public const string UnderlyingSecurityTypeKey = nameof(UnderlyingSecurityType);

		/// <summary>
		/// Underlying security type
		/// </summary>
		public static string UnderlyingSecurityType => GetString(UnderlyingSecurityTypeKey);

		/// <summary>
		/// Underlying
		/// </summary>
		public const string UnderlyingKey = nameof(Underlying);

		/// <summary>
		/// Underlying
		/// </summary>
		public static string Underlying => GetString(UnderlyingKey);

		/// <summary>
		/// New folder
		/// </summary>
		public const string NewFolderKey = nameof(NewFolder);

		/// <summary>
		/// New folder
		/// </summary>
		public static string NewFolder => GetString(NewFolderKey);

		/// <summary>
		/// Cancel operation?
		/// </summary>
		public const string CancelOperationQuestionKey = nameof(CancelOperationQuestion);

		/// <summary>
		/// Cancel operation?
		/// </summary>
		public static string CancelOperationQuestion => GetString(CancelOperationQuestionKey);

		/// <summary>
		/// Passphrase
		/// </summary>
		public const string PassphraseKey = nameof(Passphrase);

		/// <summary>
		/// Passphrase
		/// </summary>
		public static string Passphrase => GetString(PassphraseKey);

		/// <summary>
		/// Middle line
		/// </summary>
		public const string MiddleLineKey = nameof(MiddleLine);

		/// <summary>
		/// Middle line
		/// </summary>
		public static string MiddleLine => GetString(MiddleLineKey);

		/// <summary>
		/// Upper line
		/// </summary>
		public const string UpperLineKey = nameof(UpperLine);

		/// <summary>
		/// Upper line
		/// </summary>
		public static string UpperLine => GetString(UpperLineKey);

		/// <summary>
		/// Lower line
		/// </summary>
		public const string LowerLineKey = nameof(LowerLine);

		/// <summary>
		/// Lower line
		/// </summary>
		public static string LowerLine => GetString(LowerLineKey);

		/// <summary>
		/// Connector is stub only. Please contact info@stocksharp.com to real module.
		/// </summary>
		public const string ConnectorIsStubKey = nameof(ConnectorIsStub);

		/// <summary>
		/// Connector is stub only. Please contact info@stocksharp.com to real module.
		/// </summary>
		public static string ConnectorIsStub => GetString(ConnectorIsStubKey);

		/// <summary>
		/// Bitfinex
		/// </summary>
		public const string BitfinexKey = nameof(Bitfinex);

		/// <summary>
		/// Bitfinex
		/// </summary>
		public static string Bitfinex => GetString(BitfinexKey);

		/// <summary>
		/// Bithumb
		/// </summary>
		public const string BithumbKey = nameof(Bithumb);

		/// <summary>
		/// Bithumb
		/// </summary>
		public static string Bithumb => GetString(BithumbKey);

		/// <summary>
		/// Bittrex
		/// </summary>
		public const string BittrexKey = nameof(Bittrex);

		/// <summary>
		/// Bittrex
		/// </summary>
		public static string Bittrex => GetString(BittrexKey);

		/// <summary>
		/// Coinbase
		/// </summary>
		public const string CoinbaseKey = nameof(Coinbase);

		/// <summary>
		/// Coinbase
		/// </summary>
		public static string Coinbase => GetString(CoinbaseKey);

		/// <summary>
		/// Coincheck
		/// </summary>
		public const string CoincheckKey = nameof(Coincheck);

		/// <summary>
		/// Coincheck
		/// </summary>
		public static string Coincheck => GetString(CoincheckKey);

		/// <summary>
		/// Gdax
		/// </summary>
		public const string GdaxKey = nameof(Gdax);

		/// <summary>
		/// Gdax
		/// </summary>
		public static string Gdax => GetString(GdaxKey);

		/// <summary>
		/// HitBtc
		/// </summary>
		public const string HitBtcKey = nameof(HitBtc);

		/// <summary>
		/// HitBtc
		/// </summary>
		public static string HitBtc => GetString(HitBtcKey);

		/// <summary>
		/// Kraken
		/// </summary>
		public const string KrakenKey = nameof(Kraken);

		/// <summary>
		/// Kraken
		/// </summary>
		public static string Kraken => GetString(KrakenKey);

		/// <summary>
		/// Okcoin
		/// </summary>
		public const string OkcoinKey = nameof(Okcoin);

		/// <summary>
		/// Okcoin
		/// </summary>
		public static string Okcoin => GetString(OkcoinKey);

		/// <summary>
		/// Poloniex
		/// </summary>
		public const string PoloniexKey = nameof(Poloniex);

		/// <summary>
		/// Poloniex
		/// </summary>
		public static string Poloniex => GetString(PoloniexKey);

		/// <summary>
		/// Restore positions
		/// </summary>
		public const string RestorePositionsKey = nameof(RestorePositions);

		/// <summary>
		/// Restore positions
		/// </summary>
		public static string RestorePositions => GetString(RestorePositionsKey);

		/// <summary>
		/// Restore positions when strategy starts
		/// </summary>
		public const string RestorePositionsWhenStrategyStartsKey = nameof(RestorePositionsWhenStrategyStarts);

		/// <summary>
		/// RRestore positions when strategy starts
		/// </summary>
		public static string RestorePositionsWhenStrategyStarts => GetString(RestorePositionsWhenStrategyStartsKey);

		/// <summary>
		/// Warranty provisions
		/// </summary>
		public const string WarrantyProvisionsKey = nameof(WarrantyProvisions);

		/// <summary>
		/// Warranty provisions
		/// </summary>
		public static string WarrantyProvisions => GetString(WarrantyProvisionsKey);

		/// <summary>
		/// Warranty on one contract for testing
		/// </summary>
		public const string WarrantyOnOneContractForTestingKey = nameof(WarrantyOnOneContractForTesting);

		/// <summary>
		/// Warranty on one contract for testing
		/// </summary>
		public static string WarrantyOnOneContractForTesting => GetString(WarrantyOnOneContractForTestingKey);

		/// <summary>
		/// The minimum size of the spread in the price steps for placing orders
		/// </summary>
		public const string MinimumSizeSpreadPriceStepsKey = nameof(MinimumSizeSpreadPriceSteps);

		/// <summary>
		/// The minimum size of the spread in the price steps for placing orders
		/// </summary>
		public static string MinimumSizeSpreadPriceSteps => GetString(MinimumSizeSpreadPriceStepsKey);

		/// <summary>
		/// Indent in the price steps from the edge of the order glass. more 0 - far from the spread, less 0 - the spread of the spread
		/// </summary>
		public const string IndentThePriceStepsKey = nameof(IndentThePriceSteps);

		/// <summary>
		/// Indent in the price steps from the edge of the order glass. more 0 - far from the spread, less0 - the spread of the spread
		/// </summary>
		public static string IndentThePriceSteps => GetString(IndentThePriceStepsKey);

		/// <summary>
		/// Stop in seconds how much to keep open position
		/// </summary>
		public const string StopSecondsOpenPositionKey = nameof(StopSecondsOpenPosition);

		/// <summary>
		/// Stop in seconds how much to keep open position
		/// </summary>
		public static string StopSecondsOpenPosition => GetString(StopSecondsOpenPositionKey);

		/// <summary>
		/// Stop order closing order type
		/// </summary>
		public const string StopClosingOrderTypeKey = nameof(StopClosingOrderType);

		/// <summary>
		/// Stop order closing order type
		/// </summary>
		public static string StopClosingOrderType => GetString(StopClosingOrderTypeKey);

		/// <summary>
		/// A shift in the price steps from the edge of the spread in price steps. To buy at a value of more 0 shifts the spread inside, less 0 away from the spread.
		/// </summary>
		public const string ShiftThePriceStepsFromTheEdgeKey = nameof(ShiftThePriceStepsFromTheEdge);

		/// <summary>
		/// A shift in the price steps from the edge of the spread in price steps. To buy at a value of more 0 shifts the spread inside, less0 away from the spread.
		/// </summary>
		public static string ShiftThePriceStepsFromTheEdge => GetString(ShiftThePriceStepsFromTheEdgeKey);

		/// <summary>
		/// Timeout (sec)
		/// </summary>
		public const string TimeOutSecondKey = nameof(TimeOutSecond);

		/// <summary>
		/// Timeout (sec)
		/// </summary>
		public static string TimeOutSecond => GetString(TimeOutSecondKey);

		/// <summary>
		/// The interval in seconds, not more than which you can rearrange orders.
		/// </summary>
		public const string IntervalInSecondsKey = nameof(IntervalInSeconds);

		/// <summary>
		/// The interval in seconds, not more than which you can rearrange orders.
		/// </summary>
		public static string IntervalInSeconds => GetString(IntervalInSecondsKey);

		/// <summary>
		/// Stop and close positions
		/// </summary>
		public const string StopAndClosePositionsKey = nameof(StopAndClosePositions);

		/// <summary>
		/// Stop and close positions
		/// </summary>
		public static string StopAndClosePositions => GetString(StopAndClosePositionsKey);

		/// <summary>
		/// Strategy added
		/// </summary>
		public const string StrategyAddedKey = nameof(StrategyAdded);

		/// <summary>
		/// Strategy added
		/// </summary>
		public static string StrategyAdded => GetString(StrategyAddedKey);

		/// <summary>
		/// Field order
		/// </summary>
		public const string FieldOrderKey = nameof(FieldOrder);

		/// <summary>
		/// Field order
		/// </summary>
		public static string FieldOrder => GetString(FieldOrderKey);

		/// <summary>
		/// Fields '{0}' has the same order {1}.
		/// </summary>
		public const string FieldOrderDuplicatedKey = nameof(FieldOrderDuplicated);

		/// <summary>
		/// Fields '{0}' has the same order {1}.
		/// </summary>
		public static string FieldOrderDuplicated => GetString(FieldOrderDuplicatedKey);

		/// <summary>
		/// CSV directory
		/// </summary>
		public const string CsvDirectoryKey = nameof(CsvDirectory);

		/// <summary>
		/// CSV directory
		/// </summary>
		public static string CsvDirectory => GetString(CsvDirectoryKey);

		/// <summary>
		/// Directory with CSV files.
		/// </summary>
		public const string CsvDirectoryDescKey = nameof(CsvDirectoryDesc);

		/// <summary>
		/// Directory with CSV files.
		/// </summary>
		public static string CsvDirectoryDesc => GetString(CsvDirectoryDescKey);

		/// <summary>
		/// Heartbeat
		/// </summary>
		public const string HeartbeatKey = nameof(Heartbeat);

		/// <summary>
		/// Heartbeat
		/// </summary>
		public static string Heartbeat => GetString(HeartbeatKey);

		/// <summary>
		/// Heartbeat interval
		/// </summary>
		public const string HeartbeatIntervalKey = nameof(HeartbeatInterval);

		/// <summary>
		/// Heartbeat interval
		/// </summary>
		public static string HeartbeatInterval => GetString(HeartbeatIntervalKey);

		/// <summary>
		/// Custom colors
		/// </summary>
		public const string CustomColorsKey = nameof(CustomColors);

		/// <summary>
		/// Custom colors
		/// </summary>
		public static string CustomColors => GetString(CustomColorsKey);

		/// <summary>
		/// Range of price above which increase the candle body
		/// </summary>
		public const string PnFBoxSizeKey = nameof(PnFBoxSize);

		/// <summary>
		/// Range of price above which increase the candle body
		/// </summary>
		public static string PnFBoxSize => GetString(PnFBoxSizeKey);

		/// <summary>
		/// X0 candle
		/// </summary>
		public const string PnFCandleKey = nameof(PnFCandle);

		/// <summary>
		/// X0 candle
		/// </summary>
		public static string PnFCandle => GetString(PnFCandleKey);

		/// <summary>
		/// The candle of point-and-figure chart (tac-toe chart).
		/// </summary>
		public const string PnFCandleDescKey = nameof(PnFCandleDesc);

		/// <summary>
		/// The candle of point-and-figure chart (tac-toe chart).
		/// </summary>
		public static string PnFCandleDesc => GetString(PnFCandleDescKey);

		/// <summary>
		/// Check dates
		/// </summary>
		public const string CheckDatesKey = nameof(CheckDates);

		/// <summary>
		/// Check dates
		/// </summary>
		public static string CheckDates => GetString(CheckDatesKey);

		/// <summary>
		/// Check loading dates are they tradable.
		/// </summary>
		public const string CheckDatesDescKey = nameof(CheckDatesDesc);

		/// <summary>
		/// Check loading dates are they tradable.
		/// </summary>
		public static string CheckDatesDesc => GetString(CheckDatesDescKey);

		/// <summary>
		/// Order flags
		/// </summary>
		public const string OrderFlagsKey = nameof(OrderFlags);

		/// <summary>
		/// Order flags
		/// </summary>
		public static string OrderFlags => GetString(OrderFlagsKey);

		/// <summary>
		/// Bank wire
		/// </summary>
		public const string BankWireKey = nameof(BankWire);

		/// <summary>
		/// Bank wire
		/// </summary>
		public static string BankWire => GetString(BankWireKey);

		/// <summary>
		/// Bank card
		/// </summary>
		public const string BankCardKey = nameof(BankCard);

		/// <summary>
		/// Bank card
		/// </summary>
		public static string BankCard => GetString(BankCardKey);

		/// <summary>
		/// Bank account
		/// </summary>
		public const string BankAccountKey = nameof(BankAccount);

		/// <summary>
		/// Bank account
		/// </summary>
		public static string BankAccount => GetString(BankAccountKey);

		/// <summary>
		/// Bank
		/// </summary>
		public const string BankKey = nameof(Bank);

		/// <summary>
		/// Bank
		/// </summary>
		public static string Bank => GetString(BankKey);

		/// <summary>
		/// SWIFT
		/// </summary>
		public const string SwiftKey = nameof(Swift);

		/// <summary>
		/// SWIFT
		/// </summary>
		public static string Swift => GetString(SwiftKey);

		/// <summary>
		/// Bank SWIFT.
		/// </summary>
		public const string BankSwiftKey = nameof(BankSwift);

		/// <summary>
		/// Bank SWIFT.
		/// </summary>
		public static string BankSwift => GetString(BankSwiftKey);

		/// <summary>
		/// Withdraw type.
		/// </summary>
		public const string WithdrawTypeKey = nameof(WithdrawType);

		/// <summary>
		/// Withdraw type.
		/// </summary>
		public static string WithdrawType => GetString(WithdrawTypeKey);

		/// <summary>
		/// Crypto address
		/// </summary>
		public const string CryptoAddressKey = nameof(CryptoAddress);

		/// <summary>
		/// Crypto address
		/// </summary>
		public static string CryptoAddress => GetString(CryptoAddressKey);

		/// <summary>
		/// Payment id
		/// </summary>
		public const string PaymentIdKey = nameof(PaymentId);

		/// <summary>
		/// Payment id
		/// </summary>
		public static string PaymentId => GetString(PaymentIdKey);

		/// <summary>
		/// Bank details.
		/// </summary>
		public const string BankDetailsKey = nameof(BankDetails);

		/// <summary>
		/// Bank details.
		/// </summary>
		public static string BankDetails => GetString(BankDetailsKey);

		/// <summary>
		/// Intermediary bank
		/// </summary>
		public const string IntermediaryBankKey = nameof(IntermediaryBank);

		/// <summary>
		/// Intermediary bank
		/// </summary>
		public static string IntermediaryBank => GetString(IntermediaryBankKey);

		/// <summary>
		/// Intermediary bank details.
		/// </summary>
		public const string IntermediaryBankDetailsKey = nameof(IntermediaryBankDetails);

		/// <summary>
		/// Intermediary bank details.
		/// </summary>
		public static string IntermediaryBankDetails => GetString(IntermediaryBankDetailsKey);

		/// <summary>
		/// Bank card number.
		/// </summary>
		public const string BankCardNumberKey = nameof(BankCardNumber);

		/// <summary>
		/// Bank card number.
		/// </summary>
		public static string BankCardNumber => GetString(BankCardNumberKey);

		/// <summary>
		/// IBAN
		/// </summary>
		public const string IbanKey = nameof(Iban);

		/// <summary>
		/// IBAN
		/// </summary>
		public static string Iban => GetString(IbanKey);

		/// <summary>
		/// BIC
		/// </summary>
		public const string BicKey = nameof(Bic);

		/// <summary>
		/// BIC
		/// </summary>
		public static string Bic => GetString(BicKey);

		/// <summary>
		/// Bank BIC.
		/// </summary>
		public const string BankBicKey = nameof(BankBic);

		/// <summary>
		/// Bank BIC.
		/// </summary>
		public static string BankBic => GetString(BankBicKey);

		/// <summary>
		/// Withdraw info
		/// </summary>
		public const string WithdrawInfoKey = nameof(WithdrawInfo);

		/// <summary>
		/// Withdraw info
		/// </summary>
		public static string WithdrawInfo => GetString(WithdrawInfoKey);

		/// <summary>
		/// Account name
		/// </summary>
		public const string AccountNameKey = nameof(AccountName);

		/// <summary>
		/// Account name
		/// </summary>
		public static string AccountName => GetString(AccountNameKey);

		/// <summary>
		/// Bank account name.
		/// </summary>
		public const string BankAccountNameKey = nameof(BankAccountName);

		/// <summary>
		/// Bank account name.
		/// </summary>
		public static string BankAccountName => GetString(BankAccountNameKey);

		/// <summary>
		/// Comment of bank transaction.
		/// </summary>
		public const string BankCommentKey = nameof(BankComment);

		/// <summary>
		/// Comment of bank transaction.
		/// </summary>
		public static string BankComment => GetString(BankCommentKey);

		/// <summary>
		/// Bank details is missing.
		/// </summary>
		public const string BankDetailsIsMissingKey = nameof(BankDetailsIsMissing);

		/// <summary>
		/// Bank details is missing.
		/// </summary>
		public static string BankDetailsIsMissing => GetString(BankDetailsIsMissingKey);

		/// <summary>
		/// Withdraw type '{0}' not supported.
		/// </summary>
		public const string WithdrawTypeNotSupportedKey = nameof(WithdrawTypeNotSupported);

		/// <summary>
		/// Withdraw type '{0}' not supported.
		/// </summary>
		public static string WithdrawTypeNotSupported => GetString(WithdrawTypeNotSupportedKey);

		/// <summary>
		/// Company
		/// </summary>
		public const string CompanyKey = nameof(Company);

		/// <summary>
		/// Company
		/// </summary>
		public static string Company => GetString(CompanyKey);

		/// <summary>
		/// Company details.
		/// </summary>
		public const string CompanyDetailsKey = nameof(CompanyDetails);

		/// <summary>
		/// Company details.
		/// </summary>
		public static string CompanyDetails => GetString(CompanyDetailsKey);

		/// <summary>
		/// Express
		/// </summary>
		public const string ExpressKey = nameof(Express);

		/// <summary>
		/// Express
		/// </summary>
		public static string Express => GetString(ExpressKey);

		/// <summary>
		/// Express withdraw.
		/// </summary>
		public const string ExpressWithdrawKey = nameof(ExpressWithdraw);

		/// <summary>
		/// Express withdraw.
		/// </summary>
		public static string ExpressWithdraw => GetString(ExpressWithdrawKey);

		/// <summary>
		/// Postal code
		/// </summary>
		public const string PostalCodeKey = nameof(PostalCode);

		/// <summary>
		/// Postal code
		/// </summary>
		public static string PostalCode => GetString(PostalCodeKey);

		/// <summary>
		/// Charge fee
		/// </summary>
		public const string ChargeFeeKey = nameof(ChargeFee);

		/// <summary>
		/// Charge fee
		/// </summary>
		public static string ChargeFee => GetString(ChargeFeeKey);

		/// <summary>
		/// Administrative password.
		/// </summary>
		public const string AdminPasswordKey = nameof(AdminPassword);

		/// <summary>
		/// Administrative password.
		/// </summary>
		public static string AdminPassword => GetString(AdminPasswordKey);

		/// <summary>
		/// Margin
		/// </summary>
		public const string MarginKey = nameof(Margin);

		/// <summary>
		/// Margin
		/// </summary>
		public static string Margin => GetString(MarginKey);

		/// <summary>
		/// Is margin enabled.
		/// </summary>
		public const string IsMarginKey = nameof(IsMargin);

		/// <summary>
		/// Is margin enabled.
		/// </summary>
		public static string IsMargin => GetString(IsMarginKey);

		/// <summary>
		/// SSL
		/// </summary>
		public const string SslKey = nameof(Ssl);

		/// <summary>
		/// SSL
		/// </summary>
		public static string Ssl => GetString(SslKey);

		/// <summary>
		/// SSL protocol to establish connect.
		/// </summary>
		public const string SslProtocolKey = nameof(SslProtocol);

		/// <summary>
		/// SSL protocol to establish connect.
		/// </summary>
		public static string SslProtocol => GetString(SslProtocolKey);

		/// <summary>
		/// SSL certificate
		/// </summary>
		public const string SslCertificateKey = nameof(SslCertificate);

		/// <summary>
		/// SSL certificate
		/// </summary>
		public static string SslCertificate => GetString(SslCertificateKey);

		/// <summary>
		/// Security '{0}' is not available for trading.
		/// </summary>
		public const string SecurityStoppedKey = nameof(SecurityStopped);

		/// <summary>
		/// Security '{0}' is not available for trading.
		/// </summary>
		public static string SecurityStopped => GetString(SecurityStoppedKey);

		/// <summary>
		/// Board '{0}' has state '{1}' and not available for trading.
		/// </summary>
		public const string SessionStoppedKey = nameof(SessionStopped);

		/// <summary>
		/// Board '{0}' has state '{1}' and not available for trading.
		/// </summary>
		public static string SessionStopped => GetString(SessionStoppedKey);

		/// <summary>
		/// Session state
		/// </summary>
		public const string SessionStateKey = nameof(SessionState);

		/// <summary>
		/// Session state
		/// </summary>
		public static string SessionState => GetString(SessionStateKey);

		/// <summary>
		/// Check trading state.
		/// </summary>
		public const string CheckTradingStateKey = nameof(CheckTradingState);

		/// <summary>
		/// Check trading state.
		/// </summary>
		public static string CheckTradingState => GetString(CheckTradingStateKey);

		/// <summary>
		/// Yobit
		/// </summary>
		public const string YobitKey = nameof(Yobit);

		/// <summary>
		/// Yobit
		/// </summary>
		public static string Yobit => GetString(YobitKey);

		/// <summary>
		/// OKEx
		/// </summary>
		public const string OkexKey = nameof(Okex);

		/// <summary>
		/// OKEx
		/// </summary>
		public static string Okex => GetString(OkexKey);

		/// <summary>
		/// Livecoin
		/// </summary>
		public const string LiveCoinKey = nameof(LiveCoin);

		/// <summary>
		/// Livecoin
		/// </summary>
		public static string LiveCoin => GetString(LiveCoinKey);

		/// <summary>
		/// Liqui
		/// </summary>
		public const string LiquiKey = nameof(Liqui);

		/// <summary>
		/// Liqui
		/// </summary>
		public static string Liqui => GetString(LiquiKey);

		/// <summary>
		/// Kucoin
		/// </summary>
		public const string KucoinKey = nameof(Kucoin);

		/// <summary>
		/// Kucoin
		/// </summary>
		public static string Kucoin => GetString(KucoinKey);

		/// <summary>
		/// Huobi
		/// </summary>
		public const string HuobiKey = nameof(Huobi);

		/// <summary>
		/// Huobi
		/// </summary>
		public static string Huobi => GetString(HuobiKey);

		/// <summary>
		/// EXMO
		/// </summary>
		public const string ExmoKey = nameof(Exmo);

		/// <summary>
		/// EXMO
		/// </summary>
		public static string Exmo => GetString(ExmoKey);

		/// <summary>
		/// Deribit
		/// </summary>
		public const string DeribitKey = nameof(Deribit);

		/// <summary>
		/// Deribit
		/// </summary>
		public static string Deribit => GetString(DeribitKey);

		/// <summary>
		/// Cryptopia
		/// </summary>
		public const string CryptopiaKey = nameof(Cryptopia);

		/// <summary>
		/// Cryptopia
		/// </summary>
		public static string Cryptopia => GetString(CryptopiaKey);

		/// <summary>
		/// CoinExchange
		/// </summary>
		public const string CoinExchangeKey = nameof(CoinExchange);

		/// <summary>
		/// CoinExchange
		/// </summary>
		public static string CoinExchange => GetString(CoinExchangeKey);

		/// <summary>
		/// CEX.IO
		/// </summary>
		public const string CexKey = nameof(Cex);

		/// <summary>
		/// CEX.IO
		/// </summary>
		public static string Cex => GetString(CexKey);

		/// <summary>
		/// BitMEX
		/// </summary>
		public const string BitmexKey = nameof(Bitmex);

		/// <summary>
		/// BitMEX
		/// </summary>
		public static string Bitmex => GetString(BitmexKey);

		/// <summary>
		/// Bitexbook
		/// </summary>
		public const string BitexbookKey = nameof(Bitexbook);

		/// <summary>
		/// Bitexbook
		/// </summary>
		public static string Bitexbook => GetString(BitexbookKey);

		/// <summary>
		/// Binance
		/// </summary>
		public const string BinanceKey = nameof(Binance);

		/// <summary>
		/// Binance
		/// </summary>
		public static string Binance => GetString(BinanceKey);

		/// <summary>
		/// Unknown transactions
		/// </summary>
		public const string UnknownTransactionsKey = nameof(UnknownTransactions);

		/// <summary>
		/// Unknown transactions
		/// </summary>
		public static string UnknownTransactions => GetString(UnknownTransactionsKey);

		/// <summary>
		/// Support executions processing, generated by third-party software.
		/// </summary>
		public const string UnknownTransactionsDescKey = nameof(UnknownTransactionsDesc);

		/// <summary>
		/// Support executions processing, generated by third-party software.
		/// </summary>
		public static string UnknownTransactionsDesc => GetString(UnknownTransactionsDescKey);

		/// <summary>
		/// Dividend
		/// </summary>
		public const string DividendKey = nameof(Dividend);

		/// <summary>
		/// Dividend
		/// </summary>
		public static string Dividend => GetString(DividendKey);

		/// <summary>
		/// Split (after)
		/// </summary>
		public const string AfterSplitKey = nameof(AfterSplit);

		/// <summary>
		/// Split (after)
		/// </summary>
		public static string AfterSplit => GetString(AfterSplitKey);

		/// <summary>
		/// Split (before)
		/// </summary>
		public const string BeforeSplitKey = nameof(BeforeSplit);

		/// <summary>
		/// Split (before)
		/// </summary>
		public static string BeforeSplit => GetString(BeforeSplitKey);

		/// <summary>
		/// Select dates
		/// </summary>
		public const string SelectDatesKey = nameof(SelectDates);

		/// <summary>
		/// Select dates
		/// </summary>
		public static string SelectDates => GetString(SelectDatesKey);

		/// <summary>
		/// %K
		/// </summary>
		public const string SOKKey = nameof(SOK);

		/// <summary>
		/// %K
		/// </summary>
		public static string SOK => GetString(SOKKey);

		/// <summary>
		/// %D
		/// </summary>
		public const string SODKey = nameof(SOD);

		/// <summary>
		/// %D
		/// </summary>
		public static string SOD => GetString(SODKey);

		/// <summary>
		/// Selected elements
		/// </summary>
		public const string SelectedElementsKey = nameof(SelectedElements);

		/// <summary>
		/// Selected elements
		/// </summary>
		public static string SelectedElements => GetString(SelectedElementsKey);

		/// <summary>
		/// Selected element
		/// </summary>
		public const string SelectedElementKey = nameof(SelectedElement);

		/// <summary>
		/// Selected element
		/// </summary>
		public static string SelectedElement => GetString(SelectedElementKey);

		/// <summary>
		/// Auto select candles
		/// </summary>
		public const string AutoSelectCandlesKey = nameof(AutoSelectCandles);

		/// <summary>
		/// Auto select candles
		/// </summary>
		public static string AutoSelectCandles => GetString(AutoSelectCandlesKey);

		/// <summary>
		/// Select candles
		/// </summary>
		public const string SelectCandlesKey = nameof(SelectCandles);

		/// <summary>
		/// Select candles
		/// </summary>
		public static string SelectCandles => GetString(SelectCandlesKey);

		/// <summary>
		/// Asset price
		/// </summary>
		public const string AssetPriceKey = nameof(AssetPrice);

		/// <summary>
		/// Asset price
		/// </summary>
		public static string AssetPrice => GetString(AssetPriceKey);

		/// <summary>
		/// Strike range
		/// </summary>
		public const string StrikeRangeKey = nameof(StrikeRange);

		/// <summary>
		/// Strike range
		/// </summary>
		public static string StrikeRange => GetString(StrikeRangeKey);

		/// <summary>
		/// Access token.
		/// </summary>
		public const string AccessTokenKey = nameof(AccessToken);

		/// <summary>
		/// Access token.
		/// </summary>
		public static string AccessToken => GetString(AccessTokenKey);

		/// <summary>
		/// Smaller time-frame
		/// </summary>
		public const string SmallerTimeFrameKey = nameof(SmallerTimeFrame);

		/// <summary>
		/// Smaller time-frame
		/// </summary>
		public static string SmallerTimeFrame => GetString(SmallerTimeFrameKey);

		/// <summary>
		/// Candles '{0}' cannot compress from smaller time frames.
		/// </summary>
		public const string CannotBuildFromSmallerTimeFrameKey = nameof(CannotBuildFromSmallerTimeFrame);

		/// <summary>
		/// Candles '{0}' cannot compress from smaller time frames.
		/// </summary>
		public static string CannotBuildFromSmallerTimeFrame => GetString(CannotBuildFromSmallerTimeFrameKey);

		/// <summary>
		/// Allow build candles from smaller timeframe.
		/// </summary>
		public const string SmallerTimeFrameDescKey = nameof(SmallerTimeFrameDesc);

		/// <summary>
		/// Allow build candles from smaller timeframe.
		/// </summary>
		public static string SmallerTimeFrameDesc => GetString(SmallerTimeFrameDescKey);

		/// <summary>
		/// Build
		/// </summary>
		public const string BuildKey = nameof(Build);

		/// <summary>
		/// Build
		/// </summary>
		public static string Build => GetString(BuildKey);

		/// <summary>
		/// Load
		/// </summary>
		public const string LoadKey = nameof(Load);

		/// <summary>
		/// Load
		/// </summary>
		public static string Load => GetString(LoadKey);

		/// <summary>
		/// Load and build
		/// </summary>
		public const string LoadAndBuildKey = nameof(LoadAndBuild);

		/// <summary>
		/// Load and build
		/// </summary>
		public static string LoadAndBuild => GetString(LoadAndBuildKey);

		/// <summary>
		/// Mode
		/// </summary>
		public const string ModeKey = nameof(Mode);

		/// <summary>
		/// Mode
		/// </summary>
		public static string Mode => GetString(ModeKey);

		/// <summary>
		/// Build mode.
		/// </summary>
		public const string BuildModeKey = nameof(BuildMode);

		/// <summary>
		/// Build mode.
		/// </summary>
		public static string BuildMode => GetString(BuildModeKey);

		/// <summary>
		/// Which market-data type is used as a source value.
		/// </summary>
		public const string BuildFromKey = nameof(BuildFrom);

		/// <summary>
		/// Which market-data type is used as a source value.
		/// </summary>
		public static string BuildFrom => GetString(BuildFromKey);

		/// <summary>
		/// Level1 field.
		/// </summary>
		public const string Level1FieldKey = nameof(Level1Field);

		/// <summary>
		/// Level1 field.
		/// </summary>
		public static string Level1Field => GetString(Level1FieldKey);

		/// <summary>
		/// Candles type
		/// </summary>
		public const string CandlesTypeKey = nameof(CandlesType);

		/// <summary>
		/// Candles type
		/// </summary>
		public static string CandlesType => GetString(CandlesTypeKey);

		/// <summary>
		/// Waiting interval. Make some pause before sending the next request.
		/// </summary>
		public const string WaitIntervalKey = nameof(WaitInterval);

		/// <summary>
		/// Waiting interval. Make some pause before sending the next request.
		/// </summary>
		public static string WaitInterval => GetString(WaitIntervalKey);

		/// <summary>
		/// Timeframe candle
		/// </summary>
		public const string TimeFrameCandleKey = nameof(TimeFrameCandle);

		/// <summary>
		/// Timeframe candle
		/// </summary>
		public static string TimeFrameCandle => GetString(TimeFrameCandleKey);

		/// <summary>
		/// Tick candle
		/// </summary>
		public const string TickCandleKey = nameof(TickCandle);

		/// <summary>
		/// Tick candle
		/// </summary>
		public static string TickCandle => GetString(TickCandleKey);

		/// <summary>
		/// Volume candle
		/// </summary>
		public const string VolumeCandleKey = nameof(VolumeCandle);

		/// <summary>
		/// Volume candle
		/// </summary>
		public static string VolumeCandle => GetString(VolumeCandleKey);

		/// <summary>
		/// Range candle
		/// </summary>
		public const string RangeCandleKey = nameof(RangeCandle);

		/// <summary>
		/// Range candle
		/// </summary>
		public static string RangeCandle => GetString(RangeCandleKey);

		/// <summary>
		/// Renko candle
		/// </summary>
		public const string RenkoCandleKey = nameof(RenkoCandle);

		/// <summary>
		/// Renko candle
		/// </summary>
		public static string RenkoCandle => GetString(RenkoCandleKey);

		/// <summary>
		/// File '{0}' has processed with errors. Please fix it or delete the file entirely and restart the app.
		/// </summary>
		public const string CorruptedFileKey = nameof(CorruptedFile);

		/// <summary>
		/// File '{0}' has processed with errors. Please fix it or delete the file entirely and restart the app.
		/// </summary>
		public static string CorruptedFile => GetString(CorruptedFileKey);

		/// <summary>
		/// Set new limit
		/// </summary>
		public const string SetNewLimitKey = nameof(SetNewLimit);

		/// <summary>
		/// Set new limit
		/// </summary>
		public static string SetNewLimit => GetString(SetNewLimitKey);

		/// <summary>
		/// The count of loaded data has reached the value {0}. To download more, you need to increase the limit.
		/// </summary>
		public const string IncreaseLimitKey = nameof(IncreaseLimit);

		/// <summary>
		/// The count of loaded data has reached the value {0}. To download more, you need to increase the limit.
		/// </summary>
		public static string IncreaseLimit => GetString(IncreaseLimitKey);

		/// <summary>
		/// Candles build source (tick trades, order book, level1 etc.).
		/// </summary>
		public const string CandlesBuildSourceKey = nameof(CandlesBuildSource);

		/// <summary>
		/// Candles build source (tick trades, order book, level1 etc.).
		/// </summary>
		public static string CandlesBuildSource => GetString(CandlesBuildSourceKey);

		/// <summary>
		/// Market-data time zone.
		/// </summary>
		public const string MarketDataTimeZoneKey = nameof(MarketDataTimeZone);

		/// <summary>
		/// Market-data time zone.
		/// </summary>
		public static string MarketDataTimeZone => GetString(MarketDataTimeZoneKey);

		/// <summary>
		/// Exchange
		/// </summary>
		public const string ExchangeKey = nameof(Exchange);

		/// <summary>
		/// Exchange
		/// </summary>
		public static string Exchange => GetString(ExchangeKey);

		/// <summary>
		/// Average
		/// </summary>
		public const string AverageKey = nameof(Average);

		/// <summary>
		/// Average
		/// </summary>
		public static string Average => GetString(AverageKey);

		/// <summary>
		/// Check money balance.
		/// </summary>
		public const string CheckMoneyKey = nameof(CheckMoney);

		/// <summary>
		/// Check money balance.
		/// </summary>
		public static string CheckMoney => GetString(CheckMoneyKey);

		/// <summary>
		/// SSL certificate password.
		/// </summary>
		public const string SslCertificatePasswordKey = nameof(SslCertificatePassword);

		/// <summary>
		/// SSL certificate password.
		/// </summary>
		public static string SslCertificatePassword => GetString(SslCertificatePasswordKey);

		/// <summary>
		/// Check revocation
		/// </summary>
		public const string CheckCertificateRevocationKey = nameof(CheckCertificateRevocation);

		/// <summary>
		/// Check revocation
		/// </summary>
		public static string CheckCertificateRevocation => GetString(CheckCertificateRevocationKey);

		/// <summary>
		/// Check certificate revocation.
		/// </summary>
		public const string CheckCertificateRevocationDescKey = nameof(CheckCertificateRevocationDesc);

		/// <summary>
		/// Check certificate revocation.
		/// </summary>
		public static string CheckCertificateRevocationDesc => GetString(CheckCertificateRevocationDescKey);

		/// <summary>
		/// Validate remote
		/// </summary>
		public const string ValidateRemoteCertificatesKey = nameof(ValidateRemoteCertificates);

		/// <summary>
		/// Validate remote
		/// </summary>
		public static string ValidateRemoteCertificates => GetString(ValidateRemoteCertificatesKey);

		/// <summary>
		/// Validate remove certificates.
		/// </summary>
		public const string ValidateRemoteCertificatesDescKey = nameof(ValidateRemoteCertificatesDesc);

		/// <summary>
		/// Validate remove certificates.
		/// </summary>
		public static string ValidateRemoteCertificatesDesc => GetString(ValidateRemoteCertificatesDescKey);

		/// <summary>
		/// Host name
		/// </summary>
		public const string TargetHostKey = nameof(TargetHost);

		/// <summary>
		/// Host name
		/// </summary>
		public static string TargetHost => GetString(TargetHostKey);

		/// <summary>
		/// The name of the server that shares SSL connection.
		/// </summary>
		public const string TargetHostDescKey = nameof(TargetHostDesc);

		/// <summary>
		/// The name of the server that shares SSL connection.
		/// </summary>
		public static string TargetHostDesc => GetString(TargetHostDescKey);

		/// <summary>
		/// Regular hours
		/// </summary>
		public const string RegularHoursKey = nameof(RegularHours);

		/// <summary>
		/// Regular hours
		/// </summary>
		public static string RegularHours => GetString(RegularHoursKey);

		/// <summary>
		/// Use only the regular trading hours for which data will be requested.
		/// </summary>
		public const string RegularTradingHoursKey = nameof(RegularTradingHours);

		/// <summary>
		/// Use only the regular trading hours for which data will be requested.
		/// </summary>
		public static string RegularTradingHours => GetString(RegularTradingHoursKey);

		/// <summary>
		/// The strategy is in the warm-up mode, the trading is disabled. The trading mode can be turned on with the 'Trading' button.
		/// </summary>
		public const string AllowTradingKey = nameof(AllowTrading);

		/// <summary>
		/// The strategy is in the warm-up mode, the trading is disabled. The trading mode can be turned on with the 'Trading' button.
		/// </summary>
		public static string AllowTrading => GetString(AllowTradingKey);

		/// <summary>
		/// CFH
		/// </summary>
		public const string CFHKey = nameof(CFH);

		/// <summary>
		/// CFH
		/// </summary>
		public static string CFH => GetString(CFHKey);

		/// <summary>
		/// ASTS
		/// </summary>
		public const string AstsKey = nameof(Asts);

		/// <summary>
		/// ASTS
		/// </summary>
		public static string Asts => GetString(AstsKey);

		/// <summary>
		/// ASTS (Currencies)
		/// </summary>
		public const string AstsCurrenciesKey = nameof(AstsCurrencies);

		/// <summary>
		/// ASTS (Currencies)
		/// </summary>
		public static string AstsCurrencies => GetString(AstsCurrenciesKey);

		/// <summary>
		/// ASTS (Equities)
		/// </summary>
		public const string AstsEquitiesKey = nameof(AstsEquities);

		/// <summary>
		/// ASTS (Equities)
		/// </summary>
		public static string AstsEquities => GetString(AstsEquitiesKey);

		/// <summary>
		/// Spectra
		/// </summary>
		public const string SpectraKey = nameof(Spectra);

		/// <summary>
		/// Spectra
		/// </summary>
		public static string Spectra => GetString(SpectraKey);

		/// <summary>
		/// Otkritie
		/// </summary>
		public const string OtkritieKey = nameof(Otkritie);

		/// <summary>
		/// Otkritie
		/// </summary>
		public static string Otkritie => GetString(OtkritieKey);

		/// <summary>
		/// QUIK (server)
		/// </summary>
		public const string QuikServerKey = nameof(QuikServer);

		/// <summary>
		/// QUIK (server)
		/// </summary>
		public static string QuikServer => GetString(QuikServerKey);

		/// <summary>
		/// QUIK (pre trade)
		/// </summary>
		public const string QuikPreTradeKey = nameof(QuikPreTrade);

		/// <summary>
		/// QUIK (pre trade)
		/// </summary>
		public static string QuikPreTrade => GetString(QuikPreTradeKey);

		/// <summary>
		/// QUIK (drop copy)
		/// </summary>
		public const string QuikDropCopyKey = nameof(QuikDropCopy);

		/// <summary>
		/// QUIK (drop copy)
		/// </summary>
		public static string QuikDropCopy => GetString(QuikDropCopyKey);

		/// <summary>
		/// Exante
		/// </summary>
		public const string ExanteKey = nameof(Exante);

		/// <summary>
		/// Exante
		/// </summary>
		public static string Exante => GetString(ExanteKey);

		/// <summary>
		/// IB FIX CTCI
		/// </summary>
		public const string IBFIXKey = nameof(IBFIX);

		/// <summary>
		/// IB FIX CTCI
		/// </summary>
		public static string IBFIX => GetString(IBFIXKey);

		/// <summary>
		/// Thomson Reuters
		/// </summary>
		public const string ReutersKey = nameof(Reuters);

		/// <summary>
		/// Thomson Reuters
		/// </summary>
		public static string Reuters => GetString(ReutersKey);

		/// <summary>
		/// BRVM
		/// </summary>
		public const string BrvmKey = nameof(Brvm);

		/// <summary>
		/// BRVM
		/// </summary>
		public static string Brvm => GetString(BrvmKey);

		/// <summary>
		/// Default
		/// </summary>
		public const string DefaultKey = nameof(Default);

		/// <summary>
		/// Default
		/// </summary>
		public static string Default => GetString(DefaultKey);

		/// <summary>
		/// Count
		/// </summary>
		public const string CountKey = nameof(Count);

		/// <summary>
		/// Count
		/// </summary>
		public static string Count => GetString(CountKey);

		/// <summary>
		/// Candles count.
		/// </summary>
		public const string CandlesCountKey = nameof(CandlesCount);

		/// <summary>
		/// Candles count.
		/// </summary>
		public static string CandlesCount => GetString(CandlesCountKey);

		/// <summary>
		/// Tasks '{0}' are running for all instruments. Often these are incorrect settings. It is recommended to set specific instruments for each task. Do you want to continue as is or stop the launch?
		/// </summary>
		public const string TasksAllInstrumentsKey = nameof(TasksAllInstruments);

		/// <summary>
		/// Tasks '{0}' are running for all instruments. Often these are incorrect settings. It is recommended to set specific instruments for each task. Do you want to continue as is or stop the launch?
		/// </summary>
		public static string TasksAllInstruments => GetString(TasksAllInstrumentsKey);

		/// <summary>
		/// Schema
		/// </summary>
		public const string SchemaKey = nameof(Schema);

		/// <summary>
		/// Schema
		/// </summary>
		public static string Schema => GetString(SchemaKey);

		/// <summary>
		/// Alert type
		/// </summary>
		public const string AlertTypeKey = nameof(AlertType);

		/// <summary>
		/// Alert type
		/// </summary>
		public static string AlertType => GetString(AlertTypeKey);

		/// <summary>
		/// Alerts
		/// </summary>
		public const string AlertsKey = nameof(Alerts);

		/// <summary>
		/// Alerts
		/// </summary>
		public static string Alerts => GetString(AlertsKey);

		/// <summary>
		/// Alerts settings.
		/// </summary>
		public const string AlertsSettingsKey = nameof(AlertsSettings);

		/// <summary>
		/// Alerts settings.
		/// </summary>
		public static string AlertsSettings => GetString(AlertsSettingsKey);

		/// <summary>
		/// The position by the instrument.
		/// </summary>
		public const string PositionDescKey = nameof(PositionDesc);

		/// <summary>
		/// The position by the instrument.
		/// </summary>
		public static string PositionDesc => GetString(PositionDescKey);

		/// <summary>
		/// Level1 market data.
		/// </summary>
		public const string Level1MarketDataKey = nameof(Level1MarketData);

		/// <summary>
		/// Level1 market data.
		/// </summary>
		public static string Level1MarketData => GetString(Level1MarketDataKey);

		/// <summary>
		/// Use web sockets.
		/// </summary>
		public const string UseWebSocketsKey = nameof(UseWebSockets);

		/// <summary>
		/// Use web sockets.
		/// </summary>
		public static string UseWebSockets => GetString(UseWebSocketsKey);

		/// <summary>
		/// View downloaded
		/// </summary>
		public const string ViewDownloadedKey = nameof(ViewDownloaded);

		/// <summary>
		/// View downloaded
		/// </summary>
		public static string ViewDownloaded => GetString(ViewDownloadedKey);

		/// <summary>
		/// Balance check interval. Required in case of deposit and withdraw actions.
		/// </summary>
		public const string BalanceCheckIntervalKey = nameof(BalanceCheckInterval);

		/// <summary>
		/// Balance check interval. Required in case of deposit and withdraw actions.
		/// </summary>
		public static string BalanceCheckInterval => GetString(BalanceCheckIntervalKey);

		/// <summary>
		/// HADAX
		/// </summary>
		public const string HadaxKey = nameof(Hadax);

		/// <summary>
		/// HADAX
		/// </summary>
		public static string Hadax => GetString(HadaxKey);

		/// <summary>
		/// Use HADAX.
		/// </summary>
		public const string UseHadaxKey = nameof(UseHadax);

		/// <summary>
		/// Use HADAX.
		/// </summary>
		public static string UseHadax => GetString(UseHadaxKey);

		/// <summary>
		/// Truncated order book
		/// </summary>
		public const string TruncatedBookKey = nameof(TruncatedBook);

		/// <summary>
		/// Truncated order book
		/// </summary>
		public static string TruncatedBook => GetString(TruncatedBookKey);

		/// <summary>
		/// Truncate market depth element.
		/// </summary>
		public const string TruncatedBookDescKey = nameof(TruncatedBookDesc);

		/// <summary>
		/// Truncate market depth element.
		/// </summary>
		public static string TruncatedBookDesc => GetString(TruncatedBookDescKey);

		/// <summary>
		/// Search columns...
		/// </summary>
		public const string SearchColumnsKey = nameof(SearchColumns);

		/// <summary>
		/// Search columns...
		/// </summary>
		public static string SearchColumns => GetString(SearchColumnsKey);

		/// <summary>
		/// AlphaVantage
		/// </summary>
		public const string AlphaVantageKey = nameof(AlphaVantage);

		/// <summary>
		/// AlphaVantage
		/// </summary>
		public static string AlphaVantage => GetString(AlphaVantageKey);

		/// <summary>
		/// IEX
		/// </summary>
		public const string IEXKey = nameof(IEX);

		/// <summary>
		/// IEX
		/// </summary>
		public static string IEX => GetString(IEXKey);

		/// <summary>
		/// QUOINEX
		/// </summary>
		public const string QuoinexKey = nameof(Quoinex);

		/// <summary>
		/// QUOINEX
		/// </summary>
		public static string Quoinex => GetString(QuoinexKey);

		/// <summary>
		/// Zaif
		/// </summary>
		public const string ZaifKey = nameof(Zaif);

		/// <summary>
		/// Zaif
		/// </summary>
		public static string Zaif => GetString(ZaifKey);

		/// <summary>
		/// Bitbank
		/// </summary>
		public const string BitbankKey = nameof(Bitbank);

		/// <summary>
		/// Bitbank
		/// </summary>
		public static string Bitbank => GetString(BitbankKey);

		/// <summary>
		/// Funding
		/// </summary>
		public const string FundingKey = nameof(Funding);

		/// <summary>
		/// Funding
		/// </summary>
		public static string Funding => GetString(FundingKey);

		/// <summary>
		/// Currency used to fund the trade with.
		/// </summary>
		public const string FundingCurrencyKey = nameof(FundingCurrency);

		/// <summary>
		/// Currency used to fund the trade with.
		/// </summary>
		public static string FundingCurrency => GetString(FundingCurrencyKey);

		/// <summary>
		/// User id.
		/// </summary>
		public const string UserIdKey = nameof(UserId);

		/// <summary>
		/// User id.
		/// </summary>
		public static string UserId => GetString(UserIdKey);

		/// <summary>
		/// DLL
		/// </summary>
		public const string DllKey = nameof(Dll);

		/// <summary>
		/// DLL
		/// </summary>
		public static string Dll => GetString(DllKey);

		/// <summary>
		/// The element which is using compiled strategy, based on S#.API.
		/// </summary>
		public const string DllDescKey = nameof(DllDesc);

		/// <summary>
		/// The element which is using compiled strategy, based on S#.API.
		/// </summary>
		public static string DllDesc => GetString(DllDescKey);

		/// <summary>
		/// Options hedging diagram element.
		/// </summary>
		public const string OptionsHedgeDiagramElementKey = nameof(OptionsHedgeDiagramElement);

		/// <summary>
		/// Options hedging diagram element.
		/// </summary>
		public static string OptionsHedgeDiagramElement => GetString(OptionsHedgeDiagramElementKey);

		/// <summary>
		/// Options quoting diagram element.
		/// </summary>
		public const string OptionsQuotingDiagramElementKey = nameof(OptionsQuotingDiagramElement);

		/// <summary>
		/// Options quoting diagram element.
		/// </summary>
		public static string OptionsQuotingDiagramElement => GetString(OptionsQuotingDiagramElementKey);

		/// <summary>
		/// Filtering derivatives by underlying asset diagram element.
		/// </summary>
		public const string OptionsStrikesDiagramElementKey = nameof(OptionsStrikesDiagramElement);

		/// <summary>
		/// Filtering derivatives by underlying asset diagram element.
		/// </summary>
		public static string OptionsStrikesDiagramElement => GetString(OptionsStrikesDiagramElementKey);

		/// <summary>
		/// The Black-Scholes "Greeks" evaluation element.
		/// </summary>
		public const string OptionsBlackScholesDiagramElementKey = nameof(OptionsBlackScholesDiagramElement);

		/// <summary>
		/// The Black-Scholes "Greeks" evaluation element.
		/// </summary>
		public static string OptionsBlackScholesDiagramElement => GetString(OptionsBlackScholesDiagramElementKey);

		/// <summary>
		/// Basket security '{0}' do not contains legs.
		/// </summary>
		public const string SecurityDoNotContainsLegsKey = nameof(SecurityDoNotContainsLegs);

		/// <summary>
		/// Basket security '{0}' do not contains legs.
		/// </summary>
		public static string SecurityDoNotContainsLegs => GetString(SecurityDoNotContainsLegsKey);

		/// <summary>
		/// Basket
		/// </summary>
		public const string BasketKey = nameof(Basket);

		/// <summary>
		/// Basket
		/// </summary>
		public static string Basket => GetString(BasketKey);

		/// <summary>
		/// Basket type code.
		/// </summary>
		public const string BasketCodeKey = nameof(BasketCode);

		/// <summary>
		/// Basket type code.
		/// </summary>
		public static string BasketCode => GetString(BasketCodeKey);

		/// <summary>
		/// Expression
		/// </summary>
		public const string ExpressionKey = nameof(Expression);

		/// <summary>
		/// Expression
		/// </summary>
		public static string Expression => GetString(ExpressionKey);

		/// <summary>
		/// The mathematical formula of index.
		/// </summary>
		public const string ExpressionDescKey = nameof(ExpressionDesc);

		/// <summary>
		/// The mathematical formula of index.
		/// </summary>
		public static string ExpressionDesc => GetString(ExpressionDescKey);

		/// <summary>
		/// Volume trigger causes switch to the next contract.
		/// </summary>
		public const string VolumeTriggerKey = nameof(VolumeTrigger);

		/// <summary>
		/// Volume trigger causes switch to the next contract.
		/// </summary>
		public static string VolumeTrigger => GetString(VolumeTriggerKey);

		/// <summary>
		/// Add folder.
		/// </summary>
		public const string AddFolderKey = nameof(AddFolder);

		/// <summary>
		/// Add folder.
		/// </summary>
		public static string AddFolder => GetString(AddFolderKey);

		/// <summary>
		/// Asset type
		/// </summary>
		public const string AssetTypeKey = nameof(AssetType);

		/// <summary>
		/// Asset type
		/// </summary>
		public static string AssetType => GetString(AssetTypeKey);

		/// <summary>
		/// To close the tab {0} strategy must be stopped. Stop strategy?
		/// </summary>
		public const string StopStrategyOnTabClosingKey = nameof(StopStrategyOnTabClosing);

		/// <summary>
		/// To close the tab {0} strategy must be stopped. Stop strategy?
		/// </summary>
		public static string StopStrategyOnTabClosing => GetString(StopStrategyOnTabClosingKey);

		/// <summary>
		/// Commission (taker)
		/// </summary>
		public const string CommissionTakerKey = nameof(CommissionTaker);

		/// <summary>
		/// Commission (taker)
		/// </summary>
		public static string CommissionTaker => GetString(CommissionTakerKey);

		/// <summary>
		/// Commission (maker)
		/// </summary>
		public const string CommissionMakerKey = nameof(CommissionMaker);

		/// <summary>
		/// Commission (maker)
		/// </summary>
		public static string CommissionMaker => GetString(CommissionMakerKey);

		/// <summary>
		/// Special days
		/// </summary>
		public const string SpecialDaysKey = nameof(SpecialDays);

		/// <summary>
		/// Special days
		/// </summary>
		public static string SpecialDays => GetString(SpecialDaysKey);

		/// <summary>
		/// Special working days and holidays.
		/// </summary>
		public const string SpecialDaysDescKey = nameof(SpecialDaysDesc);

		/// <summary>
		/// Special working days and holidays.
		/// </summary>
		public static string SpecialDaysDesc => GetString(SpecialDaysDescKey);

		/// <summary>
		/// LMAX location
		/// </summary>
		public const string LmaxLocationKey = nameof(LmaxLocation);

		/// <summary>
		/// LMAX location
		/// </summary>
		public static string LmaxLocation => GetString(LmaxLocationKey);

		/// <summary>
		/// LMAX exchange location.
		/// </summary>
		public const string LmaxLocationDescKey = nameof(LmaxLocationDesc);

		/// <summary>
		/// LMAX exchange location.
		/// </summary>
		public static string LmaxLocationDesc => GetString(LmaxLocationDescKey);

		/// <summary>
		/// London
		/// </summary>
		public const string LondonKey = nameof(London);

		/// <summary>
		/// London
		/// </summary>
		public static string London => GetString(LondonKey);

		/// <summary>
		/// New York
		/// </summary>
		public const string NewYorkKey = nameof(NewYork);

		/// <summary>
		/// New York
		/// </summary>
		public static string NewYork => GetString(NewYorkKey);

		/// <summary>
		/// Tokyo
		/// </summary>
		public const string TokyoKey = nameof(Tokyo);

		/// <summary>
		/// Tokyo
		/// </summary>
		public static string Tokyo => GetString(TokyoKey);

		/// <summary>
		/// Premium service
		/// </summary>
		public const string PremiumServiceKey = nameof(PremiumService);

		/// <summary>
		/// Premium service
		/// </summary>
		public static string PremiumService => GetString(PremiumServiceKey);

		/// <summary>
		/// Securities associations
		/// </summary>
		public const string SecuritiesAssociationsKey = nameof(SecuritiesAssociations);

		/// <summary>
		/// Securities associations
		/// </summary>
		public static string SecuritiesAssociations => GetString(SecuritiesAssociationsKey);

		/// <summary>
		/// Futures section
		/// </summary>
		public const string FuturesSectionKey = nameof(FuturesSection);

		/// <summary>
		/// Futures section
		/// </summary>
		public static string FuturesSection => GetString(FuturesSectionKey);

		/// <summary>
		/// Spot section
		/// </summary>
		public const string SpotSectionKey = nameof(SpotSection);

		/// <summary>
		/// Spot section
		/// </summary>
		public static string SpotSection => GetString(SpotSectionKey);

		/// <summary>
		/// Spot
		/// </summary>
		public const string SpotKey = nameof(Spot);

		/// <summary>
		/// Spot
		/// </summary>
		public static string Spot => GetString(SpotKey);

		/// <summary>
		/// User name (hist)
		/// </summary>
		public const string HistoricalUserNameKey = nameof(HistoricalUserName);

		/// <summary>
		/// User name (hist)
		/// </summary>
		public static string HistoricalUserName => GetString(HistoricalUserNameKey);

		/// <summary>
		/// Additional login. User id used for authentication with the history plant.
		/// </summary>
		public const string HistoricalUserNameDescKey = nameof(HistoricalUserNameDesc);

		/// <summary>
		/// Additional login. User id used for authentication with the history plant.
		/// </summary>
		public static string HistoricalUserNameDesc => GetString(HistoricalUserNameDescKey);

		/// <summary>
		/// Password (hist)
		/// </summary>
		public const string HistoricalPasswordKey = nameof(HistoricalPassword);

		/// <summary>
		/// Password (hist)
		/// </summary>
		public static string HistoricalPassword => GetString(HistoricalPasswordKey);

		/// <summary>
		/// Additional password. Password used for authentication with the history plant.
		/// </summary>
		public const string HistoricalPasswordDescKey = nameof(HistoricalPasswordDesc);

		/// <summary>
		/// Additional password. Password used for authentication with the history plant.
		/// </summary>
		public static string HistoricalPasswordDesc => GetString(HistoricalPasswordDescKey);

		/// <summary>
		/// IDAX
		/// </summary>
		public const string IdaxKey = nameof(Idax);

		/// <summary>
		/// IDAX
		/// </summary>
		public static string Idax => GetString(IdaxKey);

		/// <summary>
		/// DigiFinex
		/// </summary>
		public const string DigifinexKey = nameof(Digifinex);

		/// <summary>
		/// DigiFinex
		/// </summary>
		public static string Digifinex => GetString(DigifinexKey);

		/// <summary>
		/// TradeOgre
		/// </summary>
		public const string TradeOgreKey = nameof(TradeOgre);

		/// <summary>
		/// TradeOgre
		/// </summary>
		public static string TradeOgre => GetString(TradeOgreKey);

		/// <summary>
		/// CoinCap
		/// </summary>
		public const string CoinCapKey = nameof(CoinCap);

		/// <summary>
		/// CoinCap
		/// </summary>
		public static string CoinCap => GetString(CoinCapKey);

		/// <summary>
		/// Low
		/// </summary>
		public const string LowKey = nameof(Low);

		/// <summary>
		/// Low
		/// </summary>
		public static string Low => GetString(LowKey);

		/// <summary>
		/// High
		/// </summary>
		public const string HighKey = nameof(High);

		/// <summary>
		/// High
		/// </summary>
		public static string High => GetString(HighKey);

		/// <summary>
		/// Priority
		/// </summary>
		public const string PriorityKey = nameof(Priority);

		/// <summary>
		/// Priority
		/// </summary>
		public static string Priority => GetString(PriorityKey);

		/// <summary>
		/// News priority.
		/// </summary>
		public const string NewsPriorityKey = nameof(NewsPriority);

		/// <summary>
		/// News priority.
		/// </summary>
		public static string NewsPriority => GetString(NewsPriorityKey);

		/// <summary>
		/// Coinigy
		/// </summary>
		public const string CoinigyKey = nameof(Coinigy);

		/// <summary>
		/// Coinigy
		/// </summary>
		public static string Coinigy => GetString(CoinigyKey);

		/// <summary>
		/// Websocket
		/// </summary>
		public const string WebSocketKey = nameof(WebSocket);

		/// <summary>
		/// Websocket
		/// </summary>
		public static string WebSocket => GetString(WebSocketKey);

		/// <summary>
		/// Websocket id.
		/// </summary>
		public const string WebSocketIdKey = nameof(WebSocketId);

		/// <summary>
		/// Websocket id.
		/// </summary>
		public static string WebSocketId => GetString(WebSocketIdKey);

		/// <summary>
		/// Swap section.
		/// </summary>
		public const string SwapSectionKey = nameof(SwapSection);

		/// <summary>
		/// Swap section.
		/// </summary>
		public static string SwapSection => GetString(SwapSectionKey);

		/// <summary>
		/// Colocation
		/// </summary>
		public const string ColocationKey = nameof(Colocation);

		/// <summary>
		/// Colocation
		/// </summary>
		public static string Colocation => GetString(ColocationKey);

		/// <summary>
		/// Select data types
		/// </summary>
		public const string SelectDataTypesKey = nameof(SelectDataTypes);

		/// <summary>
		/// Select data types
		/// </summary>
		public static string SelectDataTypes => GetString(SelectDataTypesKey);

		/// <summary>
		/// Expand all
		/// </summary>
		public const string ExpandAllKey = nameof(ExpandAll);

		/// <summary>
		/// Expand all
		/// </summary>
		public static string ExpandAll => GetString(ExpandAllKey);

		/// <summary>
		/// Collapse all
		/// </summary>
		public const string CollapseAllKey = nameof(CollapseAll);

		/// <summary>
		/// Collapse all
		/// </summary>
		public static string CollapseAll => GetString(CollapseAllKey);

		/// <summary>
		/// Market on close (pit)
		/// </summary>
		public const string MarketOnPitCloseKey = nameof(MarketOnPitClose);

		/// <summary>
		/// Market on close (pit)
		/// </summary>
		public static string MarketOnPitClose => GetString(MarketOnPitCloseKey);

		/// <summary>
		/// Market on open (pit)
		/// </summary>
		public const string MarketOnPitOpenKey = nameof(MarketOnPitOpen);

		/// <summary>
		/// Market on open (pit)
		/// </summary>
		public static string MarketOnPitOpen => GetString(MarketOnPitOpenKey);

		/// <summary>
		/// Market-&gt;Limit
		/// </summary>
		public const string MarketToLimitKey = nameof(MarketToLimit);

		/// <summary>
		/// Market-&gt;Limit
		/// </summary>
		public static string MarketToLimit => GetString(MarketToLimitKey);

		/// <summary>
		/// Execution start time.
		/// </summary>
		public const string ExecutionStartKey = nameof(ExecutionStart);

		/// <summary>
		/// Execution start time.
		/// </summary>
		public static string ExecutionStart => GetString(ExecutionStartKey);

		/// <summary>
		/// Execution end time.
		/// </summary>
		public const string ExecutionEndKey = nameof(ExecutionEnd);

		/// <summary>
		/// Execution end time.
		/// </summary>
		public static string ExecutionEnd => GetString(ExecutionEndKey);

		/// <summary>
		/// End
		/// </summary>
		public const string EndKey = nameof(End);

		/// <summary>
		/// End
		/// </summary>
		public static string End => GetString(EndKey);

		/// <summary>
		/// Price format.
		/// </summary>
		public const string PriceTextFormatKey = nameof(PriceTextFormat);

		/// <summary>
		/// Price format.
		/// </summary>
		public static string PriceTextFormat => GetString(PriceTextFormatKey);

		/// <summary>
		/// Volume format.
		/// </summary>
		public const string VolumeTextFormatKey = nameof(VolumeTextFormat);

		/// <summary>
		/// Volume format.
		/// </summary>
		public static string VolumeTextFormat => GetString(VolumeTextFormatKey);

		/// <summary>
		/// Market data finished: sec='{0}' msg='{1}'.
		/// </summary>
		public const string SubscriptionFinishedKey = nameof(SubscriptionFinished);

		/// <summary>
		/// Market data finished: sec='{0}' msg='{1}'.
		/// </summary>
		public static string SubscriptionFinished => GetString(SubscriptionFinishedKey);

		/// <summary>
		/// Subscription '{0}' to {1} unexpected cancelled with error '{2}'.
		/// </summary>
		public const string SubscriptionUnexpectedCancelledKey = nameof(SubscriptionUnexpectedCancelled);

		/// <summary>
		/// Subscription '{0}' to {1} unexpected cancelled with error '{2}'.
		/// </summary>
		public static string SubscriptionUnexpectedCancelled => GetString(SubscriptionUnexpectedCancelledKey);

		/// <summary>
		/// Manual
		/// </summary>
		public const string ManualKey = nameof(Manual);

		/// <summary>
		/// Manual
		/// </summary>
		public static string Manual => GetString(ManualKey);

		/// <summary>
		/// Is order manual.
		/// </summary>
		public const string IsOrderManualKey = nameof(IsOrderManual);

		/// <summary>
		/// Is order manual.
		/// </summary>
		public static string IsOrderManual => GetString(IsOrderManualKey);

		/// <summary>
		/// LBank
		/// </summary>
		public const string LBankKey = nameof(LBank);

		/// <summary>
		/// LBank
		/// </summary>
		public static string LBank => GetString(LBankKey);

		/// <summary>
		/// BitMax
		/// </summary>
		public const string BitMaxKey = nameof(BitMax);

		/// <summary>
		/// BitMax
		/// </summary>
		public static string BitMax => GetString(BitMaxKey);

		/// <summary>
		/// BW
		/// </summary>
		public const string BWKey = nameof(BW);

		/// <summary>
		/// BW
		/// </summary>
		public static string BW => GetString(BWKey);

		/// <summary>
		/// Bibox
		/// </summary>
		public const string BiboxKey = nameof(Bibox);

		/// <summary>
		/// Bibox
		/// </summary>
		public static string Bibox => GetString(BiboxKey);

		/// <summary>
		/// Bit-Z
		/// </summary>
		public const string BitZKey = nameof(BitZ);

		/// <summary>
		/// Bit-Z
		/// </summary>
		public static string BitZ => GetString(BitZKey);

		/// <summary>
		/// ZB.COM
		/// </summary>
		public const string ZBKey = nameof(ZB);

		/// <summary>
		/// ZB.COM
		/// </summary>
		public static string ZB => GetString(ZBKey);

		/// <summary>
		/// CoinBene
		/// </summary>
		public const string CoinBeneKey = nameof(CoinBene);

		/// <summary>
		/// CoinBene
		/// </summary>
		public static string CoinBene => GetString(CoinBeneKey);

		/// <summary>
		/// E*TRADE
		/// </summary>
		public const string ETradeKey = nameof(ETrade);

		/// <summary>
		/// E*TRADE
		/// </summary>
		public static string ETrade => GetString(ETradeKey);

		/// <summary>
		/// Mark
		/// </summary>
		public const string MarkKey = nameof(Mark);

		/// <summary>
		/// Mark
		/// </summary>
		public static string Mark => GetString(MarkKey);

		/// <summary>
		/// Post-only
		/// </summary>
		public const string PostOnlyKey = nameof(PostOnly);

		/// <summary>
		/// Post-only
		/// </summary>
		public static string PostOnly => GetString(PostOnlyKey);

		/// <summary>
		/// Post-only order.
		/// </summary>
		public const string PostOnlyOrderKey = nameof(PostOnlyOrder);

		/// <summary>
		/// Post-only order.
		/// </summary>
		public static string PostOnlyOrder => GetString(PostOnlyOrderKey);

		/// <summary>
		/// Reduce
		/// </summary>
		public const string ReduceKey = nameof(Reduce);

		/// <summary>
		/// Reduce
		/// </summary>
		public static string Reduce => GetString(ReduceKey);

		/// <summary>
		/// Reduce position only.
		/// </summary>
		public const string ReducePositionKey = nameof(ReducePosition);

		/// <summary>
		/// Reduce position only.
		/// </summary>
		public static string ReducePosition => GetString(ReducePositionKey);

		/// <summary>
		/// OCO
		/// </summary>
		public const string OcoKey = nameof(Oco);

		/// <summary>
		/// OCO
		/// </summary>
		public static string Oco => GetString(OcoKey);

		/// <summary>
		/// One Cancels Other.
		/// </summary>
		public const string OcoDescKey = nameof(OcoDesc);

		/// <summary>
		/// One Cancels Other.
		/// </summary>
		public static string OcoDesc => GetString(OcoDescKey);

		/// <summary>
		/// SwissQuote
		/// </summary>
		public const string SwissQuoteKey = nameof(SwissQuote);

		/// <summary>
		/// SwissQuote
		/// </summary>
		public static string SwissQuote => GetString(SwissQuoteKey);

		/// <summary>
		/// X Open Hub
		/// </summary>
		public const string XOpenHubKey = nameof(XOpenHub);

		/// <summary>
		/// X Open Hub
		/// </summary>
		public static string XOpenHub => GetString(XOpenHubKey);

		/// <summary>
		/// SuperDerivatives
		/// </summary>
		public const string SuperDerivativesKey = nameof(SuperDerivatives);

		/// <summary>
		/// SuperDerivatives
		/// </summary>
		public static string SuperDerivatives => GetString(SuperDerivativesKey);

		/// <summary>
		/// Tradier
		/// </summary>
		public const string TradierKey = nameof(Tradier);

		/// <summary>
		/// Tradier
		/// </summary>
		public static string Tradier => GetString(TradierKey);

		/// <summary>
		/// Subscribe on signal
		/// </summary>
		public const string SubscribeOnSignalKey = nameof(SubscribeOnSignal);

		/// <summary>
		/// Subscribe on signal
		/// </summary>
		public static string SubscribeOnSignal => GetString(SubscribeOnSignalKey);

		/// <summary>
		/// Data types
		/// </summary>
		public const string DataTypesKey = nameof(DataTypes);

		/// <summary>
		/// Data types
		/// </summary>
		public static string DataTypes => GetString(DataTypesKey);

		/// <summary>
		/// Market-data types
		/// </summary>
		public const string MarketDataTypesKey = nameof(MarketDataTypes);

		/// <summary>
		/// Market-data types
		/// </summary>
		public static string MarketDataTypes => GetString(MarketDataTypesKey);

		/// <summary>
		/// To send changes by the order book. If disabled, the order book is sent entirely. The default is enabled.
		/// </summary>
		public const string IncrementalDepthUpdatesKey = nameof(IncrementalDepthUpdates);

		/// <summary>
		/// To send changes by the order book. If disabled, the order book is sent entirely. The default is enabled.
		/// </summary>
		public static string IncrementalDepthUpdates => GetString(IncrementalDepthUpdatesKey);

		/// <summary>
		/// Indicators
		/// </summary>
		public const string IndicatorsKey = nameof(Indicators);

		/// <summary>
		/// Indicators
		/// </summary>
		public static string Indicators => GetString(IndicatorsKey);

		/// <summary>
		/// Subscriptions
		/// </summary>
		public const string SubscriptionsKey = nameof(Subscriptions);

		/// <summary>
		/// Subscriptions
		/// </summary>
		public static string Subscriptions => GetString(SubscriptionsKey);

		/// <summary>
		/// Data type must be '{0}'.
		/// </summary>
		public const string DataTypeMustBeKey = nameof(DataTypeMustBe);

		/// <summary>
		/// Data type must be '{0}'.
		/// </summary>
		public static string DataTypeMustBe => GetString(DataTypeMustBeKey);

		/// <summary>
		/// Security must be '{0}'.
		/// </summary>
		public const string SecurityMustBeKey = nameof(SecurityMustBe);

		/// <summary>
		/// Security must be '{0}'.
		/// </summary>
		public static string SecurityMustBe => GetString(SecurityMustBeKey);

		/// <summary>
		/// TWIME
		/// </summary>
		public const string TwimeKey = nameof(Twime);

		/// <summary>
		/// TWIME
		/// </summary>
		public static string Twime => GetString(TwimeKey);

		/// <summary>
		/// File name format
		/// </summary>
		public const string FileNameFormatKey = nameof(FileNameFormat);

		/// <summary>
		/// File name format
		/// </summary>
		public static string FileNameFormat => GetString(FileNameFormatKey);

		/// <summary>
		/// File name format. For ex., 'candles_{Security.Id}_{From:yyyy_MM_dd}_{To:yyyy_MM_dd}.csv'.
		/// </summary>
		public const string FileNameFormatDescKey = nameof(FileNameFormatDesc);

		/// <summary>
		/// File name format. For ex., 'candles_{Security.Id}_{From:yyyy_MM_dd}_{To:yyyy_MM_dd}.csv'.
		/// </summary>
		public static string FileNameFormatDesc => GetString(FileNameFormatDescKey);

		/// <summary>
		/// Min volume
		/// </summary>
		public const string MinVolumeKey = nameof(MinVolume);

		/// <summary>
		/// Min volume
		/// </summary>
		public static string MinVolume => GetString(MinVolumeKey);

		/// <summary>
		/// Minimum volume allowed in order.
		/// </summary>
		public const string MinVolumeDescKey = nameof(MinVolumeDesc);

		/// <summary>
		/// Minimum volume allowed in order.
		/// </summary>
		public static string MinVolumeDesc => GetString(MinVolumeDescKey);

		/// <summary>
		/// Max volume
		/// </summary>
		public const string MaxVolumeKey = nameof(MaxVolume);

		/// <summary>
		/// Max volume
		/// </summary>
		public static string MaxVolume => GetString(MaxVolumeKey);

		/// <summary>
		/// Maximum volume allowed in order.
		/// </summary>
		public const string MaxVolumeDescKey = nameof(MaxVolumeDesc);

		/// <summary>
		/// Maximum volume allowed in order.
		/// </summary>
		public static string MaxVolumeDesc => GetString(MaxVolumeDescKey);

		/// <summary>
		/// Shortable
		/// </summary>
		public const string ShortableKey = nameof(Shortable);

		/// <summary>
		/// Shortable
		/// </summary>
		public static string Shortable => GetString(ShortableKey);

		/// <summary>
		/// Can have short positions.
		/// </summary>
		public const string ShortableDescKey = nameof(ShortableDesc);

		/// <summary>
		/// Can have short positions.
		/// </summary>
		public static string ShortableDesc => GetString(ShortableDescKey);

		/// <summary>
		/// The interval between data updates.
		/// </summary>
		public const string IntervalDataUpdatesKey = nameof(IntervalDataUpdates);

		/// <summary>
		/// The interval between data updates.
		/// </summary>
		public static string IntervalDataUpdates => GetString(IntervalDataUpdatesKey);

		/// <summary>
		/// Zero
		/// </summary>
		public const string ZeroKey = nameof(Zero);

		/// <summary>
		/// Zero
		/// </summary>
		public static string Zero => GetString(ZeroKey);

		/// <summary>
		/// Connector
		/// </summary>
		public const string ConnectorKey = nameof(Connector);

		/// <summary>
		/// Connector
		/// </summary>
		public static string Connector => GetString(ConnectorKey);

		/// <summary>
		/// Volume {0} of order '{1}' is less than minimum allowed {2}.
		/// </summary>
		public const string OrderVolumeLessMinKey = nameof(OrderVolumeLessMin);

		/// <summary>
		/// Volume {0} of order '{1}' is less than minimum allowed {2}.
		/// </summary>
		public static string OrderVolumeLessMin => GetString(OrderVolumeLessMinKey);

		/// <summary>
		/// Volume {0} of order '{1}' is more than maximum allowed {2}.
		/// </summary>
		public const string OrderVolumeMoreMaxKey = nameof(OrderVolumeMoreMax);

		/// <summary>
		/// Volume {0} of order '{1}' is more than maximum allowed {2}.
		/// </summary>
		public static string OrderVolumeMoreMax => GetString(OrderVolumeMoreMaxKey);

		/// <summary>
		/// Show strategy socket
		/// </summary>
		public const string ShowStrategySocketKey = nameof(ShowStrategySocket);

		/// <summary>
		/// Show strategy socket
		/// </summary>
		public static string ShowStrategySocket => GetString(ShowStrategySocketKey);

		/// <summary>
		/// Show position socket
		/// </summary>
		public const string ShowPositionSocketKey = nameof(ShowPositionSocket);

		/// <summary>
		/// Show position socket
		/// </summary>
		public static string ShowPositionSocket => GetString(ShowPositionSocketKey);

		/// <summary>
		/// Encrypted scheme
		/// </summary>
		public const string EncryptedSchemaKey = nameof(EncryptedSchema);

		/// <summary>
		/// Encrypted scheme
		/// </summary>
		public static string EncryptedSchema => GetString(EncryptedSchemaKey);

		/// <summary>
		/// Standalone app
		/// </summary>
		public const string StandaloneAppKey = nameof(StandaloneApp);

		/// <summary>
		/// Standalone app
		/// </summary>
		public static string StandaloneApp => GetString(StandaloneAppKey);

		/// <summary>
		/// Min volume (under)
		/// </summary>
		public const string UnderlyingMinVolumeKey = nameof(UnderlyingMinVolume);

		/// <summary>
		/// Min volume (under)
		/// </summary>
		public static string UnderlyingMinVolume => GetString(UnderlyingMinVolumeKey);

		/// <summary>
		/// Minimum volume allowed in order for underlying security.
		/// </summary>
		public const string UnderlyingMinVolumeDescKey = nameof(UnderlyingMinVolumeDesc);

		/// <summary>
		/// Minimum volume allowed in order for underlying security.
		/// </summary>
		public static string UnderlyingMinVolumeDesc => GetString(UnderlyingMinVolumeDescKey);

		/// <summary>
		/// Shift {0}
		/// </summary>
		public const string ShiftIsKey = nameof(ShiftIs);

		/// <summary>
		/// Shift {0}
		/// </summary>
		public static string ShiftIs => GetString(ShiftIsKey);

		/// <summary>
		/// Take {0}
		/// </summary>
		public const string TakeIsKey = nameof(TakeIs);

		/// <summary>
		/// Take {0}
		/// </summary>
		public static string TakeIs => GetString(TakeIsKey);

		/// <summary>
		/// Stop {0}
		/// </summary>
		public const string StopIsKey = nameof(StopIs);

		/// <summary>
		/// Stop {0}
		/// </summary>
		public static string StopIs => GetString(StopIsKey);

		/// <summary>
		/// Identifiers '{0}' and '{1}' are the same.
		/// </summary>
		public const string IdentifiersAreSameKey = nameof(IdentifiersAreSame);

		/// <summary>
		/// Identifiers '{0}' and '{1}' are the same.
		/// </summary>
		public static string IdentifiersAreSame => GetString(IdentifiersAreSameKey);

		/// <summary>
		/// For security {0} and type {1} adapter is already specified.
		/// </summary>
		public const string SecIdDataTypeAlreadyAdapterKey = nameof(SecIdDataTypeAlreadyAdapter);

		/// <summary>
		/// For security {0} and type {1} adapter is already specified.
		/// </summary>
		public static string SecIdDataTypeAlreadyAdapter => GetString(SecIdDataTypeAlreadyAdapterKey);

		/// <summary>
		/// Order {0} has balance {1}.
		/// </summary>
		public const string OrderHasBalanceKey = nameof(OrderHasBalance);

		/// <summary>
		/// Order {0} has balance {1}.
		/// </summary>
		public static string OrderHasBalance => GetString(OrderHasBalanceKey);

		/// <summary>
		/// Order {0} has state {1}.
		/// </summary>
		public const string OrderHasStateKey = nameof(OrderHasState);

		/// <summary>
		/// Order {0} has state {1}.
		/// </summary>
		public static string OrderHasState => GetString(OrderHasStateKey);

		/// <summary>
		/// Zero price
		/// </summary>
		public const string ZeroPriceKey = nameof(ZeroPrice);

		/// <summary>
		/// Zero price
		/// </summary>
		public static string ZeroPrice => GetString(ZeroPriceKey);

		/// <summary>
		/// Zero price makes market order.
		/// </summary>
		public const string ZeroAsMarketKey = nameof(ZeroAsMarket);

		/// <summary>
		/// Zero price makes market order.
		/// </summary>
		public static string ZeroAsMarket => GetString(ZeroAsMarketKey);

		/// <summary>
		/// Send values only when the indicator is formed.
		/// </summary>
		public const string SendOnlyFormedIndicatorsKey = nameof(SendOnlyFormedIndicators);

		/// <summary>
		/// Send values only when the indicator is formed.
		/// </summary>
		public static string SendOnlyFormedIndicators => GetString(SendOnlyFormedIndicatorsKey);

		/// <summary>
		/// Final
		/// </summary>
		public const string FinalKey = nameof(Final);

		/// <summary>
		/// Final
		/// </summary>
		public static string Final => GetString(FinalKey);

		/// <summary>
		/// Formed
		/// </summary>
		public const string FormedKey = nameof(Formed);

		/// <summary>
		/// Formed
		/// </summary>
		public static string Formed => GetString(FormedKey);

		/// <summary>
		/// Send only final values.
		/// </summary>
		public const string SendOnlyFinalKey = nameof(SendOnlyFinal);

		/// <summary>
		/// Send only final values.
		/// </summary>
		public static string SendOnlyFinal => GetString(SendOnlyFinalKey);

		/// <summary>
		/// Show non formed indicators values.
		/// </summary>
		public const string ShowNonFormedIndicatorsKey = nameof(ShowNonFormedIndicators);

		/// <summary>
		/// Show non formed indicators values.
		/// </summary>
		public static string ShowNonFormedIndicators => GetString(ShowNonFormedIndicatorsKey);

		/// <summary>
		/// Non formed
		/// </summary>
		public const string NonFormedKey = nameof(NonFormed);

		/// <summary>
		/// Non formed
		/// </summary>
		public static string NonFormed => GetString(NonFormedKey);

		/// <summary>
		/// Cannot provide short position on account {0} to register order {1}. Currently position is {2}, order size is {3}.
		/// </summary>
		public const string CannotShortPositionKey = nameof(CannotShortPosition);

		/// <summary>
		/// Cannot provide short position on account {0} to register order {1}. Currently position is {2}, order size is {3}.
		/// </summary>
		public static string CannotShortPosition => GetString(CannotShortPositionKey);

		/// <summary>
		/// Native ID
		/// </summary>
		public const string NativeIdKey = nameof(NativeId);

		/// <summary>
		/// Native ID
		/// </summary>
		public static string NativeId => GetString(NativeIdKey);

		/// <summary>
		/// Native (internal) trading system security id.
		/// </summary>
		public const string NativeIdDescKey = nameof(NativeIdDesc);

		/// <summary>
		/// Native (internal) trading system security id.
		/// </summary>
		public static string NativeIdDesc => GetString(NativeIdDescKey);

		/// <summary>
		/// Adapter
		/// </summary>
		public const string AdapterKey = nameof(Adapter);

		/// <summary>
		/// Adapter
		/// </summary>
		public static string Adapter => GetString(AdapterKey);

		/// <summary>
		/// Adapter for field {0} isn't specified.
		/// </summary>
		public const string AdapterNotSpecifiedKey = nameof(AdapterNotSpecified);

		/// <summary>
		/// Adapter for field {0} isn't specified.
		/// </summary>
		public static string AdapterNotSpecified => GetString(AdapterNotSpecifiedKey);

		/// <summary>
		/// Face value
		/// </summary>
		public const string FaceValueKey = nameof(FaceValue);

		/// <summary>
		/// Face value
		/// </summary>
		public static string FaceValue => GetString(FaceValueKey);

		/// <summary>
		/// Face value.
		/// </summary>
		public const string FaceValueDescKey = nameof(FaceValueDesc);

		/// <summary>
		/// Face value.
		/// </summary>
		public static string FaceValueDesc => GetString(FaceValueDescKey);

		/// <summary>
		/// Coupon value.
		/// </summary>
		public const string CouponValueKey = nameof(CouponValue);

		/// <summary>
		/// Coupon value.
		/// </summary>
		public static string CouponValue => GetString(CouponValueKey);

		/// <summary>
		/// Coupon date.
		/// </summary>
		public const string CouponDateKey = nameof(CouponDate);

		/// <summary>
		/// Coupon date.
		/// </summary>
		public static string CouponDate => GetString(CouponDateKey);

		/// <summary>
		/// Coupon period.
		/// </summary>
		public const string CouponPeriodKey = nameof(CouponPeriod);

		/// <summary>
		/// Coupon period.
		/// </summary>
		public static string CouponPeriod => GetString(CouponPeriodKey);

		/// <summary>
		/// Market price (yesterday).
		/// </summary>
		public const string MarketPriceYesterdayKey = nameof(MarketPriceYesterday);

		/// <summary>
		/// Market price (yesterday).
		/// </summary>
		public static string MarketPriceYesterday => GetString(MarketPriceYesterdayKey);

		/// <summary>
		/// Market price (today).
		/// </summary>
		public const string MarketPriceTodayKey = nameof(MarketPriceToday);

		/// <summary>
		/// Market price (today).
		/// </summary>
		public static string MarketPriceToday => GetString(MarketPriceTodayKey);

		/// <summary>
		/// VWAP (prev).
		/// </summary>
		public const string VWAPPrevKey = nameof(VWAPPrev);

		/// <summary>
		/// VWAP (prev).
		/// </summary>
		public static string VWAPPrev => GetString(VWAPPrevKey);

		/// <summary>
		/// Yield by VWAP.
		/// </summary>
		public const string YieldVWAPKey = nameof(YieldVWAP);

		/// <summary>
		/// Yield by VWAP.
		/// </summary>
		public static string YieldVWAP => GetString(YieldVWAPKey);

		/// <summary>
		/// Yield by VWAP (prev).
		/// </summary>
		public const string YieldVWAPPrevKey = nameof(YieldVWAPPrev);

		/// <summary>
		/// Yield by VWAP (prev).
		/// </summary>
		public static string YieldVWAPPrev => GetString(YieldVWAPPrevKey);

		/// <summary>
		/// You are running the application the first time. Would you like establish a connection with our simulation server and start trading now?
		/// </summary>
		public const string SetupStockSharpConnectionFirstTimeKey = nameof(SetupStockSharpConnectionFirstTime);

		/// <summary>
		/// You are running the application the first time. Would you like establish a connection with our simulation server and start trading now?
		/// </summary>
		public static string SetupStockSharpConnectionFirstTime => GetString(SetupStockSharpConnectionFirstTimeKey);

		/// <summary>
		/// Order state
		/// </summary>
		public const string OrderStateKey = nameof(OrderState);

		/// <summary>
		/// Order state
		/// </summary>
		public static string OrderState => GetString(OrderStateKey);

		/// <summary>
		/// Pending
		/// </summary>
		public const string PendingKey = nameof(Pending);

		/// <summary>
		/// Pending
		/// </summary>
		public static string Pending => GetString(PendingKey);

		/// <summary>
		/// Order not passed.
		/// </summary>
		public const string OrderNotPassedKey = nameof(OrderNotPassed);

		/// <summary>
		/// Order not passed.
		/// </summary>
		public static string OrderNotPassed => GetString(OrderNotPassedKey);

		/// <summary>
		/// Time out
		/// </summary>
		public const string TimeOutKey = nameof(TimeOut);

		/// <summary>
		/// Time out
		/// </summary>
		public static string TimeOut => GetString(TimeOutKey);

		/// <summary>
		/// Sign in
		/// </summary>
		public const string SignInKey = nameof(SignIn);

		/// <summary>
		/// Sign in
		/// </summary>
		public static string SignIn => GetString(SignInKey);

		/// <summary>
		/// Copyright
		/// </summary>
		public const string CopyrightKey = nameof(Copyright);

		/// <summary>
		/// Copyright
		/// </summary>
		public static string Copyright => GetString(CopyrightKey);

		/// <summary>
		/// Subscription '{0}' not supported by established connection.
		/// </summary>
		public const string SubscriptionNotSupportedKey = nameof(SubscriptionNotSupported);

		/// <summary>
		/// Subscription '{0}' not supported by established connection.
		/// </summary>
		public static string SubscriptionNotSupported => GetString(SubscriptionNotSupportedKey);

		/// <summary>
		/// Codes mapping
		/// </summary>
		public const string CodesMappingKey = nameof(CodesMapping);

		/// <summary>
		/// Codes mapping
		/// </summary>
		public static string CodesMapping => GetString(CodesMappingKey);

		/// <summary>
		/// Extra conditions
		/// </summary>
		public const string ExtraConditionsKey = nameof(ExtraConditions);

		/// <summary>
		/// Extra conditions
		/// </summary>
		public static string ExtraConditions => GetString(ExtraConditionsKey);

		/// <summary>
		/// Suspicious action.
		/// </summary>
		public const string SuspiciousActionKey = nameof(SuspiciousAction);

		/// <summary>
		/// Suspicious action.
		/// </summary>
		public static string SuspiciousAction => GetString(SuspiciousActionKey);

		/// <summary>
		/// Cont-ue
		/// </summary>
		public const string Continue2Key = nameof(Continue2);

		/// <summary>
		/// Cont-ue
		/// </summary>
		public static string Continue2 => GetString(Continue2Key);

		/// <summary>
		/// Overflow
		/// </summary>
		public const string OverflowKey = nameof(Overflow);

		/// <summary>
		/// Overflow
		/// </summary>
		public static string Overflow => GetString(OverflowKey);

		/// <summary>
		/// Max allowed elements per iteration to prevent stack overflow.
		/// </summary>
		public const string OverflowLimitKey = nameof(OverflowLimit);

		/// <summary>
		/// Max allowed elements per iteration to prevent stack overflow.
		/// </summary>
		public static string OverflowLimit => GetString(OverflowLimitKey);

		/// <summary>
		/// Input as trigger
		/// </summary>
		public const string InputAsTriggerKey = nameof(InputAsTrigger);

		/// <summary>
		/// Input as trigger
		/// </summary>
		public static string InputAsTrigger => GetString(InputAsTriggerKey);

		/// <summary>
		/// Raise output value when input updated.
		/// </summary>
		public const string InputAsTriggerDescKey = nameof(InputAsTriggerDesc);

		/// <summary>
		/// Raise output value when input updated.
		/// </summary>
		public static string InputAsTriggerDesc => GetString(InputAsTriggerDescKey);

		/// <summary>
		/// NOT
		/// </summary>
		public const string NOTKey = nameof(NOT);

		/// <summary>
		/// NOT
		/// </summary>
		public static string NOT => GetString(NOTKey);

		/// <summary>
		/// Value for '{0}' wasn't passed.
		/// </summary>
		public const string ValueForWasNotPassedKey = nameof(ValueForWasNotPassed);

		/// <summary>
		/// Value for '{0}' wasn't passed.
		/// </summary>
		public static string ValueForWasNotPassed => GetString(ValueForWasNotPassedKey);

		/// <summary>
		/// Sova Capital
		/// </summary>
		public const string SovaCapitalKey = nameof(SovaCapital);

		/// <summary>
		/// Sova Capital
		/// </summary>
		public static string SovaCapital => GetString(SovaCapitalKey);

		/// <summary>
		/// ETF
		/// </summary>
		public const string EtfKey = nameof(Etf);

		/// <summary>
		/// ETF
		/// </summary>
		public static string Etf => GetString(EtfKey);

		/// <summary>
		/// Test Exchange
		/// </summary>
		public const string TestExchangeKey = nameof(TestExchange);

		/// <summary>
		/// Test Exchange
		/// </summary>
		public static string TestExchange => GetString(TestExchangeKey);

		/// <summary>
		/// Moscow Exchange
		/// </summary>
		public const string MoscowExchangeKey = nameof(MoscowExchange);

		/// <summary>
		/// Moscow Exchange
		/// </summary>
		public static string MoscowExchange => GetString(MoscowExchangeKey);

		/// <summary>
		/// Saint-Petersburg Exchange
		/// </summary>
		public const string SaintPetersburgExchangeKey = nameof(SaintPetersburgExchange);

		/// <summary>
		/// Saint-Petersburg Exchange
		/// </summary>
		public static string SaintPetersburgExchange => GetString(SaintPetersburgExchangeKey);

		/// <summary>
		/// Ukrain Exchange
		/// </summary>
		public const string UkrainExchangeKey = nameof(UkrainExchange);

		/// <summary>
		/// Ukrain Exchange
		/// </summary>
		public static string UkrainExchange => GetString(UkrainExchangeKey);

		/// <summary>
		/// American Stock Exchange
		/// </summary>
		public const string AmericanStockExchangeKey = nameof(AmericanStockExchange);

		/// <summary>
		/// American Stock Exchange
		/// </summary>
		public static string AmericanStockExchange => GetString(AmericanStockExchangeKey);

		/// <summary>
		/// Chicago Mercantile Exchange
		/// </summary>
		public const string ChicagoMercantileExchangeKey = nameof(ChicagoMercantileExchange);

		/// <summary>
		/// Chicago Mercantile Exchange
		/// </summary>
		public static string ChicagoMercantileExchange => GetString(ChicagoMercantileExchangeKey);

		/// <summary>
		/// Chicago Board of Trade
		/// </summary>
		public const string ChicagoBoardofTradeKey = nameof(ChicagoBoardofTrade);

		/// <summary>
		/// Chicago Board of Trade
		/// </summary>
		public static string ChicagoBoardofTrade => GetString(ChicagoBoardofTradeKey);

		/// <summary>
		/// Chicago Climate Exchange
		/// </summary>
		public const string ChicagoClimateExchangeKey = nameof(ChicagoClimateExchange);

		/// <summary>
		/// Chicago Climate Exchange
		/// </summary>
		public static string ChicagoClimateExchange => GetString(ChicagoClimateExchangeKey);

		/// <summary>
		/// New York Mercantile Exchange
		/// </summary>
		public const string NewYorkMercantileExchangeKey = nameof(NewYorkMercantileExchange);

		/// <summary>
		/// New York Mercantile Exchange
		/// </summary>
		public static string NewYorkMercantileExchange => GetString(NewYorkMercantileExchangeKey);

		/// <summary>
		/// New York Stock Exchange
		/// </summary>
		public const string NewYorkStockExchangeKey = nameof(NewYorkStockExchange);

		/// <summary>
		/// New York Stock Exchange
		/// </summary>
		public static string NewYorkStockExchange => GetString(NewYorkStockExchangeKey);

		/// <summary>
		/// NASDAQ
		/// </summary>
		public const string NASDAQKey = nameof(NASDAQ);

		/// <summary>
		/// NASDAQ
		/// </summary>
		public static string NASDAQ => GetString(NASDAQKey);

		/// <summary>
		/// Nasdaq-Liffe Markets
		/// </summary>
		public const string NasdaqLiffeMarketsKey = nameof(NasdaqLiffeMarkets);

		/// <summary>
		/// Nasdaq-Liffe Markets
		/// </summary>
		public static string NasdaqLiffeMarkets => GetString(NasdaqLiffeMarketsKey);

		/// <summary>
		/// London Stock Exchange
		/// </summary>
		public const string LondonStockExchangeKey = nameof(LondonStockExchange);

		/// <summary>
		/// London Stock Exchange
		/// </summary>
		public static string LondonStockExchange => GetString(LondonStockExchangeKey);

		/// <summary>
		/// London Metal Exchange
		/// </summary>
		public const string LondonMetalExchangeKey = nameof(LondonMetalExchange);

		/// <summary>
		/// London Metal Exchange
		/// </summary>
		public static string LondonMetalExchange => GetString(LondonMetalExchangeKey);

		/// <summary>
		/// Tokyo Stock Exchange
		/// </summary>
		public const string TokyoStockExchangeKey = nameof(TokyoStockExchange);

		/// <summary>
		/// Tokyo Stock Exchange
		/// </summary>
		public static string TokyoStockExchange => GetString(TokyoStockExchangeKey);

		/// <summary>
		/// Hong Kong Stock Exchange
		/// </summary>
		public const string HongKongStockExchangeKey = nameof(HongKongStockExchange);

		/// <summary>
		/// Hong Kong Stock Exchange
		/// </summary>
		public static string HongKongStockExchange => GetString(HongKongStockExchangeKey);

		/// <summary>
		/// Hong Kong Futures Exchange
		/// </summary>
		public const string HongKongFuturesExchangeKey = nameof(HongKongFuturesExchange);

		/// <summary>
		/// Hong Kong Futures Exchange
		/// </summary>
		public static string HongKongFuturesExchange => GetString(HongKongFuturesExchangeKey);

		/// <summary>
		/// Shanghai Stock Exchange
		/// </summary>
		public const string ShanghaiStockExchangeKey = nameof(ShanghaiStockExchange);

		/// <summary>
		/// Shanghai Stock Exchange
		/// </summary>
		public static string ShanghaiStockExchange => GetString(ShanghaiStockExchangeKey);

		/// <summary>
		/// Shenzhen Stock Exchange
		/// </summary>
		public const string ShenzhenStockExchangeKey = nameof(ShenzhenStockExchange);

		/// <summary>
		/// Shenzhen Stock Exchange
		/// </summary>
		public static string ShenzhenStockExchange => GetString(ShenzhenStockExchangeKey);

		/// <summary>
		/// Toronto Stock Exchange
		/// </summary>
		public const string TorontoStockExchangeKey = nameof(TorontoStockExchange);

		/// <summary>
		/// Toronto Stock Exchange
		/// </summary>
		public static string TorontoStockExchange => GetString(TorontoStockExchangeKey);

		/// <summary>
		/// Frankfurt Stock Exchange
		/// </summary>
		public const string FrankfurtStockExchangeKey = nameof(FrankfurtStockExchange);

		/// <summary>
		/// Frankfurt Stock Exchange
		/// </summary>
		public static string FrankfurtStockExchange => GetString(FrankfurtStockExchangeKey);

		/// <summary>
		/// Australian Securities Exchange
		/// </summary>
		public const string AustralianSecuritiesExchangeKey = nameof(AustralianSecuritiesExchange);

		/// <summary>
		/// Australian Securities Exchange
		/// </summary>
		public static string AustralianSecuritiesExchange => GetString(AustralianSecuritiesExchangeKey);

		/// <summary>
		/// New Zealand Exchange
		/// </summary>
		public const string NewZealandExchangeKey = nameof(NewZealandExchange);

		/// <summary>
		/// New Zealand Exchange
		/// </summary>
		public static string NewZealandExchange => GetString(NewZealandExchangeKey);

		/// <summary>
		/// Bombay Stock Exchange
		/// </summary>
		public const string BombayStockExchangeKey = nameof(BombayStockExchange);

		/// <summary>
		/// Bombay Stock Exchange
		/// </summary>
		public static string BombayStockExchange => GetString(BombayStockExchangeKey);

		/// <summary>
		/// National Stock Exchange of India
		/// </summary>
		public const string NationalStockExchangeofIndiaKey = nameof(NationalStockExchangeofIndia);

		/// <summary>
		/// National Stock Exchange of India
		/// </summary>
		public static string NationalStockExchangeofIndia => GetString(NationalStockExchangeofIndiaKey);

		/// <summary>
		/// Swiss Exchange
		/// </summary>
		public const string SwissExchangeKey = nameof(SwissExchange);

		/// <summary>
		/// Swiss Exchange
		/// </summary>
		public static string SwissExchange => GetString(SwissExchangeKey);

		/// <summary>
		/// Korea Exchange
		/// </summary>
		public const string KoreaExchangeKey = nameof(KoreaExchange);

		/// <summary>
		/// Korea Exchange
		/// </summary>
		public static string KoreaExchange => GetString(KoreaExchangeKey);

		/// <summary>
		/// Madrid Stock Exchange
		/// </summary>
		public const string MadridStockExchangeKey = nameof(MadridStockExchange);

		/// <summary>
		/// Madrid Stock Exchange
		/// </summary>
		public static string MadridStockExchange => GetString(MadridStockExchangeKey);

		/// <summary>
		/// Johannesburg Stock Exchange
		/// </summary>
		public const string JohannesburgStockExchangeKey = nameof(JohannesburgStockExchange);

		/// <summary>
		/// Johannesburg Stock Exchange
		/// </summary>
		public static string JohannesburgStockExchange => GetString(JohannesburgStockExchangeKey);

		/// <summary>
		/// Singapore Exchange
		/// </summary>
		public const string SingaporeExchangeKey = nameof(SingaporeExchange);

		/// <summary>
		/// Singapore Exchange
		/// </summary>
		public static string SingaporeExchange => GetString(SingaporeExchangeKey);

		/// <summary>
		/// Taiwan Stock Exchange
		/// </summary>
		public const string TaiwanStockExchangeKey = nameof(TaiwanStockExchange);

		/// <summary>
		/// Taiwan Stock Exchange
		/// </summary>
		public static string TaiwanStockExchange => GetString(TaiwanStockExchangeKey);

		/// <summary>
		/// Philippine Stock Exchange
		/// </summary>
		public const string PhilippineStockExchangeKey = nameof(PhilippineStockExchange);

		/// <summary>
		/// Philippine Stock Exchange
		/// </summary>
		public static string PhilippineStockExchange => GetString(PhilippineStockExchangeKey);

		/// <summary>
		/// Bursa Malaysia
		/// </summary>
		public const string BursaMalaysiaKey = nameof(BursaMalaysia);

		/// <summary>
		/// Bursa Malaysia
		/// </summary>
		public static string BursaMalaysia => GetString(BursaMalaysiaKey);

		/// <summary>
		/// Indonesia Stock Exchange
		/// </summary>
		public const string IndonesiaStockExchangeKey = nameof(IndonesiaStockExchange);

		/// <summary>
		/// Indonesia Stock Exchange
		/// </summary>
		public static string IndonesiaStockExchange => GetString(IndonesiaStockExchangeKey);

		/// <summary>
		/// Stock Exchange of Thailand
		/// </summary>
		public const string StockExchangeofThailandKey = nameof(StockExchangeofThailand);

		/// <summary>
		/// Stock Exchange of Thailand
		/// </summary>
		public static string StockExchangeofThailand => GetString(StockExchangeofThailandKey);

		/// <summary>
		/// Colombo Stock Exchange
		/// </summary>
		public const string ColomboStockExchangeKey = nameof(ColomboStockExchange);

		/// <summary>
		/// Colombo Stock Exchange
		/// </summary>
		public static string ColomboStockExchange => GetString(ColomboStockExchangeKey);

		/// <summary>
		/// Tel Aviv Stock Exchange
		/// </summary>
		public const string TelAvivStockExchangeKey = nameof(TelAvivStockExchange);

		/// <summary>
		/// Tel Aviv Stock Exchange
		/// </summary>
		public static string TelAvivStockExchange => GetString(TelAvivStockExchangeKey);

		/// <summary>
		/// Integral
		/// </summary>
		public const string IntegralKey = nameof(Integral);

		/// <summary>
		/// Integral
		/// </summary>
		public static string Integral => GetString(IntegralKey);

		/// <summary>
		/// BTCChina
		/// </summary>
		public const string BtcChinaKey = nameof(BtcChina);

		/// <summary>
		/// BTCChina
		/// </summary>
		public static string BtcChina => GetString(BtcChinaKey);

		/// <summary>
		/// iCBIT
		/// </summary>
		public const string IcBitKey = nameof(IcBit);

		/// <summary>
		/// iCBIT
		/// </summary>
		public static string IcBit => GetString(IcBitKey);

		/// <summary>
		/// Currenex
		/// </summary>
		public const string CurrenexKey = nameof(Currenex);

		/// <summary>
		/// Currenex
		/// </summary>
		public static string Currenex => GetString(CurrenexKey);

		/// <summary>
		/// WIKI
		/// </summary>
		public const string WIKIKey = nameof(WIKI);

		/// <summary>
		/// WIKI
		/// </summary>
		public static string WIKI => GetString(WIKIKey);

		/// <summary>
		/// StockSharp
		/// </summary>
		public const string StockSharpKey = nameof(StockSharp);

		/// <summary>
		/// StockSharp
		/// </summary>
		public static string StockSharp => GetString(StockSharpKey);

		/// <summary>
		/// Upbit
		/// </summary>
		public const string UpbitKey = nameof(Upbit);

		/// <summary>
		/// Upbit
		/// </summary>
		public static string Upbit => GetString(UpbitKey);

		/// <summary>
		/// Selected strategies
		/// </summary>
		public const string SelectedStrategiesKey = nameof(SelectedStrategies);

		/// <summary>
		/// Selected strategies
		/// </summary>
		public static string SelectedStrategies => GetString(SelectedStrategiesKey);

		/// <summary>
		/// Pips
		/// </summary>
		public const string PipsKey = nameof(Pips);

		/// <summary>
		/// Pips
		/// </summary>
		public static string Pips => GetString(PipsKey);

		/// <summary>
		/// Points
		/// </summary>
		public const string PointsKey = nameof(Points);

		/// <summary>
		/// Points
		/// </summary>
		public static string Points => GetString(PointsKey);

		/// <summary>
		/// Show quick orders panel.
		/// </summary>
		public const string ShowQuickOrdersPanelKey = nameof(ShowQuickOrdersPanel);

		/// <summary>
		/// Show quick orders panel.
		/// </summary>
		public static string ShowQuickOrdersPanel => GetString(ShowQuickOrdersPanelKey);

		/// <summary>
		/// Size
		/// </summary>
		public const string SizeKey = nameof(Size);

		/// <summary>
		/// Size
		/// </summary>
		public static string Size => GetString(SizeKey);

		/// <summary>
		/// Rev
		/// </summary>
		public const string RevKey = nameof(Rev);

		/// <summary>
		/// Rev
		/// </summary>
		public static string Rev => GetString(RevKey);

		/// <summary>
		/// FatBTC
		/// </summary>
		public const string FatBtcKey = nameof(FatBtc);

		/// <summary>
		/// FatBTC
		/// </summary>
		public static string FatBtc => GetString(FatBtcKey);

		/// <summary>
		/// LATOKEN
		/// </summary>
		public const string LatokenKey = nameof(Latoken);

		/// <summary>
		/// LATOKEN
		/// </summary>
		public static string Latoken => GetString(LatokenKey);

		/// <summary>
		/// CoinEx
		/// </summary>
		public const string CoinExKey = nameof(CoinEx);

		/// <summary>
		/// CoinEx
		/// </summary>
		public static string CoinEx => GetString(CoinExKey);

		/// <summary>
		/// By days
		/// </summary>
		public const string ByDaysKey = nameof(ByDays);

		/// <summary>
		/// By days
		/// </summary>
		public static string ByDays => GetString(ByDaysKey);

		/// <summary>
		/// By months
		/// </summary>
		public const string ByMonthsKey = nameof(ByMonths);

		/// <summary>
		/// By months
		/// </summary>
		public static string ByMonths => GetString(ByMonthsKey);

		/// <summary>
		/// By years
		/// </summary>
		public const string ByYearsKey = nameof(ByYears);

		/// <summary>
		/// By years
		/// </summary>
		public static string ByYears => GetString(ByYearsKey);

		/// <summary>
		/// Gopax
		/// </summary>
		public const string GopaxKey = nameof(Gopax);

		/// <summary>
		/// Gopax
		/// </summary>
		public static string Gopax => GetString(GopaxKey);

		/// <summary>
		/// CoinHub
		/// </summary>
		public const string CoinHubKey = nameof(CoinHub);

		/// <summary>
		/// CoinHub
		/// </summary>
		public static string CoinHub => GetString(CoinHubKey);

		/// <summary>
		/// Hotbit
		/// </summary>
		public const string HotbitKey = nameof(Hotbit);

		/// <summary>
		/// Hotbit
		/// </summary>
		public static string Hotbit => GetString(HotbitKey);

		/// <summary>
		/// Brasil Bolsa
		/// </summary>
		public const string BrasilBolsaKey = nameof(BrasilBolsa);

		/// <summary>
		/// Brasil Bolsa
		/// </summary>
		public static string BrasilBolsa => GetString(BrasilBolsaKey);

		/// <summary>
		/// Unknown transaction id {0}.
		/// </summary>
		public const string UnknownTransactionIdKey = nameof(UnknownTransactionId);

		/// <summary>
		/// Unknown transaction id {0}.
		/// </summary>
		public static string UnknownTransactionId => GetString(UnknownTransactionIdKey);

		/// <summary>
		/// Bitalong
		/// </summary>
		public const string BitalongKey = nameof(Bitalong);

		/// <summary>
		/// Bitalong
		/// </summary>
		public static string Bitalong => GetString(BitalongKey);

		/// <summary>
		/// Random
		/// </summary>
		public const string RandomKey = nameof(Random);

		/// <summary>
		/// Random
		/// </summary>
		public static string Random => GetString(RandomKey);

		/// <summary>
		/// Connection '{0}' is not connected.
		/// </summary>
		public const string ConnectionIsNotConnectedKey = nameof(ConnectionIsNotConnected);

		/// <summary>
		/// Connection '{0}' is not connected.
		/// </summary>
		public static string ConnectionIsNotConnected => GetString(ConnectionIsNotConnectedKey);

		/// <summary>
		/// CBOE
		/// </summary>
		public const string CboeKey = nameof(Cboe);

		/// <summary>
		/// CBOE
		/// </summary>
		public static string Cboe => GetString(CboeKey);

		/// <summary>
		/// ICE
		/// </summary>
		public const string IceKey = nameof(Ice);

		/// <summary>
		/// ICE
		/// </summary>
		public static string Ice => GetString(IceKey);

		/// <summary>
		/// UDP A
		/// </summary>
		public const string UdpAKey = nameof(UdpA);

		/// <summary>
		/// UDP A
		/// </summary>
		public static string UdpA => GetString(UdpAKey);

		/// <summary>
		/// UDP B
		/// </summary>
		public const string UdpBKey = nameof(UdpB);

		/// <summary>
		/// UDP B
		/// </summary>
		public static string UdpB => GetString(UdpBKey);

		/// <summary>
		/// UDP C
		/// </summary>
		public const string UdpCKey = nameof(UdpC);

		/// <summary>
		/// UDP C
		/// </summary>
		public static string UdpC => GetString(UdpCKey);

		/// <summary>
		/// Market By Order.
		/// </summary>
		public const string MarketByOrderKey = nameof(MarketByOrder);

		/// <summary>
		/// Market By Order.
		/// </summary>
		public static string MarketByOrder => GetString(MarketByOrderKey);

		/// <summary>
		/// Market By Price.
		/// </summary>
		public const string MarketByPriceKey = nameof(MarketByPrice);

		/// <summary>
		/// Market By Price.
		/// </summary>
		public static string MarketByPrice => GetString(MarketByPriceKey);

		/// <summary>
		/// Top Of Book.
		/// </summary>
		public const string TopOfBookKey = nameof(TopOfBook);

		/// <summary>
		/// Top Of Book.
		/// </summary>
		public static string TopOfBook => GetString(TopOfBookKey);

		/// <summary>
		/// MBO
		/// </summary>
		public const string MboKey = nameof(Mbo);

		/// <summary>
		/// MBO
		/// </summary>
		public static string Mbo => GetString(MboKey);

		/// <summary>
		/// MBP
		/// </summary>
		public const string MbpKey = nameof(Mbp);

		/// <summary>
		/// MBP
		/// </summary>
		public static string Mbp => GetString(MbpKey);

		/// <summary>
		/// TOB
		/// </summary>
		public const string TobKey = nameof(Tob);

		/// <summary>
		/// TOB
		/// </summary>
		public static string Tob => GetString(TobKey);

		/// <summary>
		/// Receipt
		/// </summary>
		public const string ReceiptKey = nameof(Receipt);

		/// <summary>
		/// Receipt
		/// </summary>
		public static string Receipt => GetString(ReceiptKey);

		/// <summary>
		/// GDR
		/// </summary>
		public const string GdrKey = nameof(Gdr);

		/// <summary>
		/// GDR
		/// </summary>
		public static string Gdr => GetString(GdrKey);

		/// <summary>
		/// Loan
		/// </summary>
		public const string LoanKey = nameof(Loan);

		/// <summary>
		/// Loan
		/// </summary>
		public static string Loan => GetString(LoanKey);

		/// <summary>
		/// Imbalance
		/// </summary>
		public const string ImbalanceKey = nameof(Imbalance);

		/// <summary>
		/// Imbalance
		/// </summary>
		public static string Imbalance => GetString(ImbalanceKey);

		/// <summary>
		/// Orders (bids)
		/// </summary>
		public const string OrdersBidsKey = nameof(OrdersBids);

		/// <summary>
		/// Orders (bids)
		/// </summary>
		public static string OrdersBids => GetString(OrdersBidsKey);

		/// <summary>
		/// Orders (asks)
		/// </summary>
		public const string OrdersAsksKey = nameof(OrdersAsks);

		/// <summary>
		/// Orders (asks)
		/// </summary>
		public static string OrdersAsks => GetString(OrdersAsksKey);

		/// <summary>
		/// Error unsubscription market-data.
		/// </summary>
		public const string UnsubscribeErrorKey = nameof(UnsubscribeError);

		/// <summary>
		/// Error unsubscription market-data.
		/// </summary>
		public static string UnsubscribeError => GetString(UnsubscribeErrorKey);

		/// <summary>
		/// The storage '{0}' has version {1} is newer than the app {2}.
		/// </summary>
		public const string StorageVersionNewerKey = nameof(StorageVersionNewer);

		/// <summary>
		/// The storage '{0}' has version {1} is newer than the app {2}.
		/// </summary>
		public static string StorageVersionNewer => GetString(StorageVersionNewerKey);

		/// <summary>
		/// oneZERO
		/// </summary>
		public const string OneZeroKey = nameof(OneZero);

		/// <summary>
		/// oneZERO
		/// </summary>
		public static string OneZero => GetString(OneZeroKey);

		/// <summary>
		/// Indicative
		/// </summary>
		public const string IndicativeKey = nameof(Indicative);

		/// <summary>
		/// Indicative
		/// </summary>
		public static string Indicative => GetString(IndicativeKey);

		/// <summary>
		/// I
		/// </summary>
		public const string IndicativeCharKey = nameof(IndicativeChar);

		/// <summary>
		/// I
		/// </summary>
		public static string IndicativeChar => GetString(IndicativeCharKey);

		/// <summary>
		/// Quote condition.
		/// </summary>
		public const string QuoteConditionKey = nameof(QuoteCondition);

		/// <summary>
		/// Quote condition.
		/// </summary>
		public static string QuoteCondition => GetString(QuoteConditionKey);

		/// <summary>
		/// Margin section.
		/// </summary>
		public const string MarginSectionKey = nameof(MarginSection);

		/// <summary>
		/// Margin section.
		/// </summary>
		public static string MarginSection => GetString(MarginSectionKey);

		/// <summary>
		/// PrizmBit
		/// </summary>
		public const string PrizmBitKey = nameof(PrizmBit);

		/// <summary>
		/// PrizmBit
		/// </summary>
		public static string PrizmBit => GetString(PrizmBitKey);

		/// <summary>
		/// Downloaded hash '{0}' not match with calculated '{1}'.
		/// </summary>
		public const string FileHashNotMatchKey = nameof(FileHashNotMatch);

		/// <summary>
		/// Downloaded hash '{0}' not match with calculated '{1}'.
		/// </summary>
		public static string FileHashNotMatch => GetString(FileHashNotMatchKey);

		/// <summary>
		/// File hash
		/// </summary>
		public const string FileHashKey = nameof(FileHash);

		/// <summary>
		/// File hash
		/// </summary>
		public static string FileHash => GetString(FileHashKey);

		/// <summary>
		/// Low bid
		/// </summary>
		public const string LowBidPriceKey = nameof(LowBidPrice);

		/// <summary>
		/// Low bid
		/// </summary>
		public static string LowBidPrice => GetString(LowBidPriceKey);

		/// <summary>
		/// Lowest bid during the session.
		/// </summary>
		public const string LowBidPriceDescKey = nameof(LowBidPriceDesc);

		/// <summary>
		/// Lowest bid during the session.
		/// </summary>
		public static string LowBidPriceDesc => GetString(LowBidPriceDescKey);

		/// <summary>
		/// High ask
		/// </summary>
		public const string HighAskPriceKey = nameof(HighAskPrice);

		/// <summary>
		/// High ask
		/// </summary>
		public static string HighAskPrice => GetString(HighAskPriceKey);

		/// <summary>
		/// Highest ask during the session.
		/// </summary>
		public const string HighAskPriceDescKey = nameof(HighAskPriceDesc);

		/// <summary>
		/// Highest ask during the session.
		/// </summary>
		public static string HighAskPriceDesc => GetString(HighAskPriceDescKey);

		/// <summary>
		/// Low trade vol
		/// </summary>
		public const string LastTradeVolumeLowKey = nameof(LastTradeVolumeLow);

		/// <summary>
		/// Low trade vol
		/// </summary>
		public static string LastTradeVolumeLow => GetString(LastTradeVolumeLowKey);

		/// <summary>
		/// Lowest last trade volume.
		/// </summary>
		public const string LastTradeVolumeLowDescKey = nameof(LastTradeVolumeLowDesc);

		/// <summary>
		/// Lowest last trade volume.
		/// </summary>
		public static string LastTradeVolumeLowDesc => GetString(LastTradeVolumeLowDescKey);

		/// <summary>
		/// High trade vol
		/// </summary>
		public const string LastTradeVolumeHighKey = nameof(LastTradeVolumeHigh);

		/// <summary>
		/// High trade vol
		/// </summary>
		public static string LastTradeVolumeHigh => GetString(LastTradeVolumeHighKey);

		/// <summary>
		/// Highest last trade volume.
		/// </summary>
		public const string LastTradeVolumeHighDescKey = nameof(LastTradeVolumeHighDesc);

		/// <summary>
		/// Highest last trade volume.
		/// </summary>
		public static string LastTradeVolumeHighDesc => GetString(LastTradeVolumeHighDescKey);

		/// <summary>
		/// Max support version.
		/// </summary>
		public const string MaxSupportVersionKey = nameof(MaxSupportVersion);

		/// <summary>
		/// Max support version.
		/// </summary>
		public static string MaxSupportVersion => GetString(MaxSupportVersionKey);

		/// <summary>
		/// Gaps
		/// </summary>
		public const string GapsKey = nameof(Gaps);

		/// <summary>
		/// Gaps
		/// </summary>
		public static string Gaps => GetString(GapsKey);

		/// <summary>
		/// Make gap in incremental messages for test purpose.
		/// </summary>
		public const string GapsDescKey = nameof(GapsDesc);

		/// <summary>
		/// Make gap in incremental messages for test purpose.
		/// </summary>
		public static string GapsDesc => GetString(GapsDescKey);

		/// <summary>
		/// Try fill gaps.
		/// </summary>
		public const string FillGapsKey = nameof(FillGaps);

		/// <summary>
		/// Try fill gaps.
		/// </summary>
		public static string FillGaps => GetString(FillGapsKey);

		/// <summary>
		/// Heikin Ashi
		/// </summary>
		public const string HeikinAshiKey = nameof(HeikinAshi);

		/// <summary>
		/// Heikin Ashi
		/// </summary>
		public static string HeikinAshi => GetString(HeikinAshiKey);

		/// <summary>
		/// Subscription {0} in state {1} and cannot be stopped.
		/// </summary>
		public const string SubscriptionInStateKey = nameof(SubscriptionInState);

		/// <summary>
		/// Subscription {0} in state {1} and cannot be stopped.
		/// </summary>
		public static string SubscriptionInState => GetString(SubscriptionInStateKey);

		/// <summary>
		/// Subscription {0} notify subscriber {1}.
		/// </summary>
		public const string SubscriptionNotifySubscriberKey = nameof(SubscriptionNotifySubscriber);

		/// <summary>
		/// Subscription {0} notify subscriber {1}.
		/// </summary>
		public static string SubscriptionNotifySubscriber => GetString(SubscriptionNotifySubscriberKey);

		/// <summary>
		/// Subscription {0} removed.
		/// </summary>
		public const string SubscriptionRemovedKey = nameof(SubscriptionRemoved);

		/// <summary>
		/// Subscription {0} removed.
		/// </summary>
		public static string SubscriptionRemoved => GetString(SubscriptionRemovedKey);

		/// <summary>
		/// Digitex Futures
		/// </summary>
		public const string DigitexFuturesKey = nameof(DigitexFutures);

		/// <summary>
		/// Digitex Futures
		/// </summary>
		public static string DigitexFutures => GetString(DigitexFuturesKey);

		/// <summary>
		/// Orders (margin)
		/// </summary>
		public const string OrdersMarginKey = nameof(OrdersMargin);

		/// <summary>
		/// Orders (margin)
		/// </summary>
		public static string OrdersMargin => GetString(OrdersMarginKey);

		/// <summary>
		/// License N{0} is not support on current platform.
		/// </summary>
		public const string LicenseNotSupportPlatformKey = nameof(LicenseNotSupportPlatform);

		/// <summary>
		/// License N{0} is not support on current platform.
		/// </summary>
		public static string LicenseNotSupportPlatform => GetString(LicenseNotSupportPlatformKey);

		/// <summary>
		/// OS
		/// </summary>
		public const string OSKey = nameof(OS);

		/// <summary>
		/// OS
		/// </summary>
		public static string OS => GetString(OSKey);

		/// <summary>
		/// UDP Dumper
		/// </summary>
		public const string UdpDumperKey = nameof(UdpDumper);

		/// <summary>
		/// UDP Dumper
		/// </summary>
		public static string UdpDumper => GetString(UdpDumperKey);

		/// <summary>
		/// Option margin
		/// </summary>
		public const string OptionMarginKey = nameof(OptionMargin);

		/// <summary>
		/// Option margin
		/// </summary>
		public static string OptionMargin => GetString(OptionMarginKey);

		/// <summary>
		/// Option margin leverage.
		/// </summary>
		public const string OptionMarginDescKey = nameof(OptionMarginDesc);

		/// <summary>
		/// Option margin leverage.
		/// </summary>
		public static string OptionMarginDesc => GetString(OptionMarginDescKey);

		/// <summary>
		/// Option (synthetic)
		/// </summary>
		public const string OptionSyntheticMarginKey = nameof(OptionSyntheticMargin);

		/// <summary>
		/// Option (synthetic)
		/// </summary>
		public static string OptionSyntheticMargin => GetString(OptionSyntheticMarginKey);

		/// <summary>
		/// Synthetic option position margin leverage.
		/// </summary>
		public const string OptionSyntheticMarginDescKey = nameof(OptionSyntheticMarginDesc);

		/// <summary>
		/// Synthetic option position margin leverage.
		/// </summary>
		public static string OptionSyntheticMarginDesc => GetString(OptionSyntheticMarginDescKey);

		/// <summary>
		/// Security '{0}' is no tradable.
		/// </summary>
		public const string SecurityNonTradableKey = nameof(SecurityNonTradable);

		/// <summary>
		/// Security '{0}' is no tradable.
		/// </summary>
		public static string SecurityNonTradable => GetString(SecurityNonTradableKey);

		/// <summary>
		/// Primary id
		/// </summary>
		public const string PrimaryIdKey = nameof(PrimaryId);

		/// <summary>
		/// Primary id
		/// </summary>
		public static string PrimaryId => GetString(PrimaryIdKey);

		/// <summary>
		/// Identifier on primary exchange.
		/// </summary>
		public const string PrimaryIdDescKey = nameof(PrimaryIdDesc);

		/// <summary>
		/// Identifier on primary exchange.
		/// </summary>
		public static string PrimaryIdDesc => GetString(PrimaryIdDescKey);

		/// <summary>
		/// Soft Dollar Tier
		/// </summary>
		public const string SoftDollarTierKey = nameof(SoftDollarTier);

		/// <summary>
		/// Soft Dollar Tier
		/// </summary>
		public static string SoftDollarTier => GetString(SoftDollarTierKey);

		/// <summary>
		/// Do not send Account field.
		/// </summary>
		public const string DoNotSendAccountKey = nameof(DoNotSendAccount);

		/// <summary>
		/// Do not send Account field.
		/// </summary>
		public static string DoNotSendAccount => GetString(DoNotSendAccountKey);

		/// <summary>
		/// Windows
		/// </summary>
		public const string WindowsKey = nameof(Windows);

		/// <summary>
		/// Windows
		/// </summary>
		public static string Windows => GetString(WindowsKey);

		/// <summary>
		/// Enqueue subscriptions
		/// </summary>
		public const string EnqueueSubscriptionsKey = nameof(EnqueueSubscriptions);

		/// <summary>
		/// Enqueue subscriptions
		/// </summary>
		public static string EnqueueSubscriptions => GetString(EnqueueSubscriptionsKey);

		/// <summary>
		/// Do not send new request before received confirmation for previous.
		/// </summary>
		public const string EnqueueSubscriptionsDescKey = nameof(EnqueueSubscriptionsDesc);

		/// <summary>
		/// Do not send new request before received confirmation for previous.
		/// </summary>
		public static string EnqueueSubscriptionsDesc => GetString(EnqueueSubscriptionsDescKey);

		/// <summary>
		/// Position effect
		/// </summary>
		public const string PositionEffectKey = nameof(PositionEffect);

		/// <summary>
		/// Position effect
		/// </summary>
		public static string PositionEffect => GetString(PositionEffectKey);

		/// <summary>
		/// Indicates whether the resulting position after a trade should be an opening position or closing position.
		/// </summary>
		public const string PositionEffectDescKey = nameof(PositionEffectDesc);

		/// <summary>
		/// Indicates whether the resulting position after a trade should be an opening position or closing position.
		/// </summary>
		public static string PositionEffectDesc => GetString(PositionEffectDescKey);

		/// <summary>
		/// Default behaviour.
		/// </summary>
		public const string DefaultBehaviourKey = nameof(DefaultBehaviour);

		/// <summary>
		/// Default behaviour.
		/// </summary>
		public static string DefaultBehaviour => GetString(DefaultBehaviourKey);

		/// <summary>
		/// Open only
		/// </summary>
		public const string OpenOnlyKey = nameof(OpenOnly);

		/// <summary>
		/// Open only
		/// </summary>
		public static string OpenOnly => GetString(OpenOnlyKey);

		/// <summary>
		/// A trade should open a position.
		/// </summary>
		public const string PositionEffectOpenOnlyKey = nameof(PositionEffectOpenOnly);

		/// <summary>
		/// A trade should open a position.
		/// </summary>
		public static string PositionEffectOpenOnly => GetString(PositionEffectOpenOnlyKey);

		/// <summary>
		/// Close only
		/// </summary>
		public const string CloseOnlyKey = nameof(CloseOnly);

		/// <summary>
		/// Close only
		/// </summary>
		public static string CloseOnly => GetString(CloseOnlyKey);

		/// <summary>
		/// A trade should bring the position towards zero, i.e. close as much as possible of any existing position and open an opposite position for any remainder.
		/// </summary>
		public const string PositionEffectCloseOnlyKey = nameof(PositionEffectCloseOnly);

		/// <summary>
		/// A trade should bring the position towards zero, i.e. close as much as possible of any existing position and open an opposite position for any remainder.
		/// </summary>
		public static string PositionEffectCloseOnly => GetString(PositionEffectCloseOnlyKey);

		/// <summary>
		/// Initiator
		/// </summary>
		public const string InitiatorKey = nameof(Initiator);

		/// <summary>
		/// Initiator
		/// </summary>
		public static string Initiator => GetString(InitiatorKey);

		/// <summary>
		/// Used to identify whether the order initiator is an aggressor or not in the trade.
		/// </summary>
		public const string InitiatorTradeKey = nameof(InitiatorTrade);

		/// <summary>
		/// Used to identify whether the order initiator is an aggressor or not in the trade.
		/// </summary>
		public static string InitiatorTrade => GetString(InitiatorTradeKey);

		/// <summary>
		/// Dark
		/// </summary>
		public const string DarkKey = nameof(Dark);

		/// <summary>
		/// Dark
		/// </summary>
		public static string Dark => GetString(DarkKey);

		/// <summary>
		/// Dark theme.
		/// </summary>
		public const string DarkThemeKey = nameof(DarkTheme);

		/// <summary>
		/// Dark theme.
		/// </summary>
		public static string DarkTheme => GetString(DarkThemeKey);

		/// <summary>
		/// Sequence number.
		/// </summary>
		public const string SequenceNumberKey = nameof(SequenceNumber);

		/// <summary>
		/// Sequence number.
		/// </summary>
		public static string SequenceNumber => GetString(SequenceNumberKey);

		/// <summary>
		/// Will be available soon.
		/// </summary>
		public const string AvailableSoonKey = nameof(AvailableSoon);

		/// <summary>
		/// Will be available soon.
		/// </summary>
		public static string AvailableSoon => GetString(AvailableSoonKey);

		/// <summary>
		/// Edition
		/// </summary>
		public const string EditionKey = nameof(Edition);

		/// <summary>
		/// Edition
		/// </summary>
		public static string Edition => GetString(EditionKey);

		/// <summary>
		/// Time taken to edit an order.
		/// </summary>
		public const string EditionLatencyKey = nameof(EditionLatency);

		/// <summary>
		/// Time taken to edit an order.
		/// </summary>
		public static string EditionLatency => GetString(EditionLatencyKey);

		/// <summary>
		/// Filtered book
		/// </summary>
		public const string FilteredBookKey = nameof(FilteredBook);

		/// <summary>
		/// Filtered book
		/// </summary>
		public static string FilteredBook => GetString(FilteredBookKey);

		/// <summary>
		/// Status (sys)
		/// </summary>
		public const string SystemStatusKey = nameof(SystemStatus);

		/// <summary>
		/// Status (sys)
		/// </summary>
		public static string SystemStatus => GetString(SystemStatusKey);

		/// <summary>
		/// Max reg error
		/// </summary>
		public const string MaxOrderRegisterErrorCountKey = nameof(MaxOrderRegisterErrorCount);

		/// <summary>
		/// Max reg error
		/// </summary>
		public static string MaxOrderRegisterErrorCount => GetString(MaxOrderRegisterErrorCountKey);

		/// <summary>
		/// The maximum number of order registration errors above which the algorithm will be stopped
		/// </summary>
		public const string MaxOrderRegisterErrorCountDescKey = nameof(MaxOrderRegisterErrorCountDesc);

		/// <summary>
		/// The maximum number of order registration errors above which the algorithm will be stopped
		/// </summary>
		public static string MaxOrderRegisterErrorCountDesc => GetString(MaxOrderRegisterErrorCountDescKey);

		/// <summary>
		/// Cannot convert {0} to {1}.
		/// </summary>
		public const string CannotConvertKey = nameof(CannotConvert);

		/// <summary>
		/// Cannot convert {0} to {1}.
		/// </summary>
		public static string CannotConvert => GetString(CannotConvertKey);

		/// <summary>
		/// Sections
		/// </summary>
		public const string SectionsKey = nameof(Sections);

		/// <summary>
		/// Sections
		/// </summary>
		public static string Sections => GetString(SectionsKey);

		/// <summary>
		/// Available for trading sections.
		/// </summary>
		public const string SectionsDescKey = nameof(SectionsDesc);

		/// <summary>
		/// Available for trading sections.
		/// </summary>
		public static string SectionsDesc => GetString(SectionsDescKey);

		/// <summary>
		/// Split
		/// </summary>
		public const string SplitKey = nameof(Split);

		/// <summary>
		/// Split
		/// </summary>
		public static string Split => GetString(SplitKey);

		/// <summary>
		/// Split type.
		/// </summary>
		public const string SplitTypeKey = nameof(SplitType);

		/// <summary>
		/// Split type.
		/// </summary>
		public static string SplitType => GetString(SplitTypeKey);

		/// <summary>
		/// Exec ID
		/// </summary>
		public const string ExecIdKey = nameof(ExecId);

		/// <summary>
		/// Exec ID
		/// </summary>
		public static string ExecId => GetString(ExecIdKey);

		/// <summary>
		/// Override exec id by native identifier (if present in FIX message).
		/// </summary>
		public const string OverrideExecIdByNativeKey = nameof(OverrideExecIdByNative);

		/// <summary>
		/// Override exec id by native identifier (if present in FIX message).
		/// </summary>
		public static string OverrideExecIdByNative => GetString(OverrideExecIdByNativeKey);

		/// <summary>
		/// Security mapping
		/// </summary>
		public const string SecurityMappingKey = nameof(SecurityMapping);

		/// <summary>
		/// Security mapping
		/// </summary>
		public static string SecurityMapping => GetString(SecurityMappingKey);

		/// <summary>
		/// Supports only mapped securities.
		/// </summary>
		public const string OnlyMappedSecuritiesKey = nameof(OnlyMappedSecurities);

		/// <summary>
		/// Supports only mapped securities.
		/// </summary>
		public static string OnlyMappedSecurities => GetString(OnlyMappedSecuritiesKey);

		/// <summary>
		/// Received
		/// </summary>
		public const string ReceivedKey = nameof(Received);

		/// <summary>
		/// Received
		/// </summary>
		public static string Received => GetString(ReceivedKey);

		/// <summary>
		/// Sent
		/// </summary>
		public const string SentKey = nameof(Sent);

		/// <summary>
		/// Sent
		/// </summary>
		public static string Sent => GetString(SentKey);

		/// <summary>
		/// Crypto
		/// </summary>
		public const string CryptoKey = nameof(Crypto);

		/// <summary>
		/// Crypto
		/// </summary>
		public static string Crypto => GetString(CryptoKey);

		/// <summary>
		/// The day {0:d} isn't working.
		/// </summary>
		public const string NotWorkingDayKey = nameof(NotWorkingDay);

		/// <summary>
		/// The day {0:d} isn't working.
		/// </summary>
		public static string NotWorkingDay => GetString(NotWorkingDayKey);

		/// <summary>
		/// Storage required incremental={0} book only.
		/// </summary>
		public const string StorageRequiredIncrementalKey = nameof(StorageRequiredIncremental);

		/// <summary>
		/// Storage required incremental={0} book only.
		/// </summary>
		public static string StorageRequiredIncremental => GetString(StorageRequiredIncrementalKey);

		/// <summary>
		/// {0} snapshot {1} formed.
		/// </summary>
		public const string SnapshotFormedKey = nameof(SnapshotFormed);

		/// <summary>
		/// {0} snapshot {1} formed.
		/// </summary>
		public static string SnapshotFormed => GetString(SnapshotFormedKey);

		/// <summary>
		/// Message '{0}' caused an error.
		/// </summary>
		public const string MessageWithErrorKey = nameof(MessageWithError);

		/// <summary>
		/// Message '{0}' caused an error.
		/// </summary>
		public static string MessageWithError => GetString(MessageWithErrorKey);

		/// <summary>
		/// Snapshot building {0} turned off. Error count {1}/{2}.
		/// </summary>
		public const string SnapshotTurnedOffKey = nameof(SnapshotTurnedOff);

		/// <summary>
		/// Snapshot building {0} turned off. Error count {1}/{2}.
		/// </summary>
		public static string SnapshotTurnedOff => GetString(SnapshotTurnedOffKey);

		/// <summary>
		/// Position for {0} can be '{1}' by order {2}.
		/// </summary>
		public const string PositionCanBeActionOnlyKey = nameof(PositionCanBeActionOnly);

		/// <summary>
		/// Position for {0} can be '{1}' by order {2}.
		/// </summary>
		public static string PositionCanBeActionOnly => GetString(PositionCanBeActionOnlyKey);

		/// <summary>
		/// Session '{0}' no information in permission storage.
		/// </summary>
		public const string SessionNoPermissionStorageKey = nameof(SessionNoPermissionStorage);

		/// <summary>
		/// Session '{0}' no information in permission storage.
		/// </summary>
		public static string SessionNoPermissionStorage => GetString(SessionNoPermissionStorageKey);

		/// <summary>
		/// Session '{0}' no have permission for the action {1}.
		/// </summary>
		public const string SessionNoPermissionKey = nameof(SessionNoPermission);

		/// <summary>
		/// Session '{0}' no have permission for the action {1}.
		/// </summary>
		public static string SessionNoPermission => nameof(SessionNoPermissionKey);

		/// <summary>
		/// Max allowed items is {0}.
		/// </summary>
		public const string MaxAllowedItemsKey = nameof(MaxAllowedItems);

		/// <summary>
		/// Max allowed items is {0}.
		/// </summary>
		public static string MaxAllowedItems => GetString(MaxAllowedItemsKey);

		/// <summary>
		/// Anonymous session '{0}' cannot perform the action {1}.
		/// </summary>
		public const string AnonymousCannotActionKey = nameof(AnonymousCannotAction);

		/// <summary>
		/// Anonymous session '{0}' cannot perform the action {1}.
		/// </summary>
		public static string AnonymousCannotAction => GetString(AnonymousCannotActionKey);

		/// <summary>
		/// History is disabled.
		/// </summary>
		public const string HistoryDisabledKey = nameof(HistoryDisabled);

		/// <summary>
		/// History is disabled.
		/// </summary>
		public static string HistoryDisabled => GetString(HistoryDisabledKey);

		/// <summary>
		/// Trading is disabled.
		/// </summary>
		public const string TradingDisabledKey = nameof(TradingDisabled);

		/// <summary>
		/// Trading is disabled.
		/// </summary>
		public static string TradingDisabled => GetString(TradingDisabledKey);

		/// <summary>
		/// Channels
		/// </summary>
		public const string ChannelsKey = nameof(Channels);

		/// <summary>
		/// Channels
		/// </summary>
		public static string Channels => GetString(ChannelsKey);

		/// <summary>
		/// Use channels for in and out messages.
		/// </summary>
		public const string UseChannelsKey = nameof(UseChannels);

		/// <summary>
		/// Use channels for in and out messages.
		/// </summary>
		public static string UseChannels => GetString(UseChannelsKey);

		/// <summary>
		/// Iterations
		/// </summary>
		public const string IterationsKey = nameof(Iterations);

		/// <summary>
		/// Iterations
		/// </summary>
		public static string Iterations => GetString(IterationsKey);

		/// <summary>
		/// Interval between iterations.
		/// </summary>
		public const string IterationIntervalKey = nameof(IterationInterval);

		/// <summary>
		/// Interval between iterations.
		/// </summary>
		public static string IterationInterval => GetString(IterationIntervalKey);

		/// <summary>
		/// Order id (buy).
		/// </summary>
		public const string OrderBuyIdKey = nameof(OrderBuyId);

		/// <summary>
		/// Order id (buy).
		/// </summary>
		public static string OrderBuyId => GetString(OrderBuyIdKey);

		/// <summary>
		/// Order id (sell).
		/// </summary>
		public const string OrderSellIdKey = nameof(OrderSellId);

		/// <summary>
		/// Order id (sell).
		/// </summary>
		public static string OrderSellId => GetString(OrderSellIdKey);

		/// <summary>
		/// Low bid (vol)
		/// </summary>
		public const string LowBidVolumeKey = nameof(LowBidVolume);

		/// <summary>
		/// Low bid (vol)
		/// </summary>
		public static string LowBidVolume => GetString(LowBidVolumeKey);

		/// <summary>
		/// Volume of the lowest bid.
		/// </summary>
		public const string LowBidVolumeDescKey = nameof(LowBidVolumeDesc);

		/// <summary>
		/// Volume of the lowest bid.
		/// </summary>
		public static string LowBidVolumeDesc => GetString(LowBidVolumeDescKey);

		/// <summary>
		/// High ask (vol)
		/// </summary>
		public const string HighAskVolumeKey = nameof(HighAskVolume);

		/// <summary>
		/// High ask (vol)
		/// </summary>
		public static string HighAskVolume => GetString(HighAskVolumeKey);

		/// <summary>
		/// Volume of the highest ask.
		/// </summary>
		public const string HighAskVolumeDescKey = nameof(HighAskVolumeDesc);

		/// <summary>
		/// Volume of the highest ask.
		/// </summary>
		public static string HighAskVolumeDesc => GetString(HighAskVolumeDescKey);

		/// <summary>
		/// Under (bid)
		/// </summary>
		public const string UnderlyingBestBidPriceKey = nameof(UnderlyingBestBidPrice);

		/// <summary>
		/// Under (bid)
		/// </summary>
		public static string UnderlyingBestBidPrice => GetString(UnderlyingBestBidPriceKey);

		/// <summary>
		/// Underlying asset best bid price.
		/// </summary>
		public const string UnderlyingBestBidPriceDescKey = nameof(UnderlyingBestBidPriceDesc);

		/// <summary>
		/// Underlying asset best bid price.
		/// </summary>
		public static string UnderlyingBestBidPriceDesc => GetString(UnderlyingBestBidPriceDescKey);

		/// <summary>
		/// Under (ask)
		/// </summary>
		public const string UnderlyingBestAskPriceKey = nameof(UnderlyingBestAskPrice);

		/// <summary>
		/// Under (ask)
		/// </summary>
		public static string UnderlyingBestAskPrice => GetString(UnderlyingBestAskPriceKey);

		/// <summary>
		/// Underlying asset best ask price.
		/// </summary>
		public const string UnderlyingBestAskPriceDescKey = nameof(UnderlyingBestAskPriceDesc);

		/// <summary>
		/// Underlying asset best ask price.
		/// </summary>
		public static string UnderlyingBestAskPriceDesc => GetString(UnderlyingBestAskPriceDescKey);

		/// <summary>
		/// Median
		/// </summary>
		public const string MedianKey = nameof(Median);

		/// <summary>
		/// Median
		/// </summary>
		public static string Median => GetString(MedianKey);

		/// <summary>
		/// High (52 week)
		/// </summary>
		public const string HighPrice52WeekKey = nameof(HighPrice52Week);

		/// <summary>
		/// High (52 week)
		/// </summary>
		public static string HighPrice52Week => GetString(HighPrice52WeekKey);

		/// <summary>
		/// The highest price for 52 weeks.
		/// </summary>
		public const string HighPrice52WeekDescKey = nameof(HighPrice52WeekDesc);

		/// <summary>
		/// The highest price for 52 weeks.
		/// </summary>
		public static string HighPrice52WeekDesc => GetString(HighPrice52WeekDescKey);

		/// <summary>
		/// Low (52 week)
		/// </summary>
		public const string LowPrice52WeekKey = nameof(LowPrice52Week);

		/// <summary>
		/// Low (52 week)
		/// </summary>
		public static string LowPrice52Week => GetString(LowPrice52WeekKey);

		/// <summary>
		/// The lowest price for 52 weeks.
		/// </summary>
		public const string LowPrice52WeekDescKey = nameof(LowPrice52WeekDesc);

		/// <summary>
		/// The lowest price for 52 weeks.
		/// </summary>
		public static string LowPrice52WeekDesc => GetString(LowPrice52WeekDescKey);

		/// <summary>
		/// Last ID (str)
		/// </summary>
		public const string LastTradeStringIdKey = nameof(LastTradeStringId);

		/// <summary>
		/// Last ID (str)
		/// </summary>
		public static string LastTradeStringId => GetString(LastTradeStringIdKey);

		/// <summary>
		/// Last trade ID (string).
		/// </summary>
		public const string LastTradeStringIdDescKey = nameof(LastTradeStringIdDesc);

		/// <summary>
		/// Last trade ID (string).
		/// </summary>
		public static string LastTradeStringIdDesc => GetString(LastTradeStringIdDescKey);

		/// <summary>
		/// Appearance
		/// </summary>
		public const string AppearanceKey = nameof(Appearance);

		/// <summary>
		/// Appearance
		/// </summary>
		public static string Appearance => GetString(AppearanceKey);

		/// <summary>
		/// The diagram element
		/// </summary>
		public const string DiagramElementKey = nameof(DiagramElement);

		/// <summary>
		/// The diagram element
		/// </summary>
		public static string DiagramElement => GetString(DiagramElementKey);

		/// <summary>
		/// Client app version.
		/// </summary>
		public const string ClientVersionKey = nameof(ClientVersion);

		/// <summary>
		/// Client app version.
		/// </summary>
		public static string ClientVersion => GetString(ClientVersionKey);

		/// <summary>
		/// Unsubscribe all active subscription while strategy become stopping.
		/// </summary>
		public const string UnsubscribeOnStopKey = nameof(UnsubscribeOnStop);

		/// <summary>
		/// Unsubscribe all active subscription while strategy become stopping.
		/// </summary>
		public static string UnsubscribeOnStop => GetString(UnsubscribeOnStopKey);

		/// <summary>
		/// Max registrations
		/// </summary>
		public const string MaxRegisterCountKey = nameof(MaxRegisterCount);

		/// <summary>
		/// Max registrations
		/// </summary>
		public static string MaxRegisterCount => GetString(MaxRegisterCountKey);

		/// <summary>
		/// The maximum number of orders above which the algorithm will be stopped.
		/// </summary>
		public const string MaxRegisterCountDescKey = nameof(MaxRegisterCountDesc);

		/// <summary>
		/// The maximum number of orders above which the algorithm will be stopped.
		/// </summary>
		public static string MaxRegisterCountDesc => GetString(MaxRegisterCountDescKey);

		/// <summary>
		/// Register interval
		/// </summary>
		public const string RegisterIntervalKey = nameof(RegisterInterval);

		/// <summary>
		/// Register interval
		/// </summary>
		public static string RegisterInterval => GetString(RegisterIntervalKey);

		/// <summary>
		/// The order registration interval above which the new order would not be registered.
		/// </summary>
		public const string RegisterIntervalDescKey = nameof(RegisterIntervalDesc);

		/// <summary>
		/// The order registration interval above which the new order would not be registered.
		/// </summary>
		public static string RegisterIntervalDesc => GetString(RegisterIntervalDescKey);

		/// <summary>
		/// Video
		/// </summary>
		public const string VideoKey = nameof(Video);

		/// <summary>
		/// Video
		/// </summary>
		public static string Video => GetString(VideoKey);

		/// <summary>
		/// Support
		/// </summary>
		public const string SupportKey = nameof(Support);

		/// <summary>
		/// Support
		/// </summary>
		public static string Support => GetString(SupportKey);

		/// <summary>
		/// Development
		/// </summary>
		public const string DevelopmentKey = nameof(Development);

		/// <summary>
		/// Development
		/// </summary>
		public static string Development => GetString(DevelopmentKey);

		/// <summary>
		/// Wall Street Horizon meta data
		/// </summary>
		public const string WshMetaKey = nameof(WshMeta);

		/// <summary>
		/// Wall Street Horizon meta data
		/// </summary>
		public static string WshMeta => GetString(WshMetaKey);

		/// <summary>
		/// Wall Street Horizon event data
		/// </summary>
		public const string WshEventKey = nameof(WshEvent);

		/// <summary>
		/// Wall Street Horizon event data
		/// </summary>
		public static string WshEvent => GetString(WshEventKey);

		/// <summary>
		/// Private
		/// </summary>
		public const string PrivateKey = nameof(Private);

		/// <summary>
		/// Private
		/// </summary>
		public static string Private => GetString(PrivateKey);

		/// <summary>
		/// Manager
		/// </summary>
		public const string ManagerKey = nameof(Manager);

		/// <summary>
		/// Manager
		/// </summary>
		public static string Manager => GetString(ManagerKey);

		/// <summary>
		/// Provider
		/// </summary>
		public const string ProviderKey = nameof(Provider);

		/// <summary>
		/// Provider
		/// </summary>
		public static string Provider => GetString(ProviderKey);

		/// <summary>
		/// Integrated security
		/// </summary>
		public const string IntegratedSecurityKey = nameof(IntegratedSecurity);

		/// <summary>
		/// Integrated security
		/// </summary>
		public static string IntegratedSecurity => GetString(IntegratedSecurityKey);

		/// <summary>
		/// DDE settings
		/// </summary>
		public const string DDESettingsKey = nameof(DDESettings);

		/// <summary>
		/// DDE settings
		/// </summary>
		public static string DDESettings => GetString(DDESettingsKey);

		/// <summary>
		/// Flush (one time)
		/// </summary>
		public const string FlushOneTimeKey = nameof(FlushOneTime);

		/// <summary>
		/// Flush (one time)
		/// </summary>
		public static string FlushOneTime => GetString(FlushOneTimeKey);

		/// <summary>
		/// Invalid folder path.
		/// </summary>
		public const string InvalidFolderPathKey = nameof(InvalidFolderPath);

		/// <summary>
		/// Invalid folder path.
		/// </summary>
		public static string InvalidFolderPath => GetString(InvalidFolderPathKey);

		/// <summary>
		/// Invalid file path.
		/// </summary>
		public const string InvalidFilePathKey = nameof(InvalidFilePath);

		/// <summary>
		/// Invalid file path.
		/// </summary>
		public static string InvalidFilePath => GetString(InvalidFilePathKey);

		/// <summary>
		/// Database connection string settings.
		/// </summary>
		public const string StringDescriptionKey = nameof(StringDescription);

		/// <summary>
		/// Database connection string settings.
		/// </summary>
		public static string StringDescription => GetString(StringDescriptionKey);

		/// <summary>
		/// Login. Not used in anonymous mode.
		/// </summary>
		public const string LoginDescriptionKey = nameof(LoginDescription);

		/// <summary>
		/// Login. Not used in anonymous mode.
		/// </summary>
		public static string LoginDescription => GetString(LoginDescriptionKey);

		/// <summary>
		/// Password. Not used in anonymous mode.
		/// </summary>
		public const string PasswordDescriptionKey = nameof(PasswordDescription);

		/// <summary>
		/// Password. Not used in anonymous mode.
		/// </summary>
		public static string PasswordDescription => GetString(PasswordDescriptionKey);

		/// <summary>
		/// Network address or path to file.
		/// </summary>
		public const string ServerDescriptionKey = nameof(ServerDescription);

		/// <summary>
		/// Network address or path to file.
		/// </summary>
		public static string ServerDescription => GetString(ServerDescriptionKey);

		/// <summary>
		/// Name of database. Not used in SQLite.
		/// </summary>
		public const string DatabaseDescriptionKey = nameof(DatabaseDescription);

		/// <summary>
		/// Name of database. Not used in SQLite.
		/// </summary>
		public static string DatabaseDescription => GetString(DatabaseDescriptionKey);

		/// <summary>
		/// Use integrated security (like Windows accounts).
		/// </summary>
		public const string SecurityDescriptionKey = nameof(SecurityDescription);

		/// <summary>
		/// Use integrated security (like Windows accounts).
		/// </summary>
		public static string SecurityDescription => GetString(SecurityDescriptionKey);

		/// <summary>
		/// Final connection string.
		/// </summary>
		public const string ConnectionStringDescriptionKey = nameof(ConnectionStringDescription);

		/// <summary>
		/// Final connection string.
		/// </summary>
		public static string ConnectionStringDescription => GetString(ConnectionStringDescriptionKey);

		/// <summary>
		/// Provider settings.
		/// </summary>
		public const string ProviderSettingsKey = nameof(ProviderSettings);

		/// <summary>
		/// Provider settings.
		/// </summary>
		public static string ProviderSettings => GetString(ProviderSettingsKey);
	}
}
